{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2f8c44da-b450-4524-9b99-556845927e9e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6c017525-bd86-4b31-b585-22e2ef3b8b81",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "652ba493-59e5-4284-898b-2955a869af34",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "18bcddf8-9cf5-444e-a287-81536348c4ce"
                }
              }
            ]
          },
          {
            "id": "883a9ac3-a473-499d-a1c0-2e302189bce4",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0677a5d4-d6fb-44dd-bb4a-d3800c0f42e7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1cd7b708-e825-4b7b-8dec-f93b474236ad"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "de0691f6-fc49-4deb-8c93-53a6ee7dabb7",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9c512cc5-e336-4a49-be5e-7d2d3ecc703b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cbae9e25-8d60-4331-9b58-5bb163e8fd5e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f56d35f-1974-4d9c-93aa-6d6682905858",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "578fd06c-c907-4f2f-baa6-83510efcf098"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "96c6ac64-3d03-4f2b-b079-43f7be9e8ba3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "50303c93-1bf6-4497-b704-00f38cdd4365"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fcc325bf-ee69-42d0-967b-a0fea7a82d01",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4f37a4d5-fade-4f13-8c3d-81fb5ac87d74"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "127a96c5-f4c8-4eef-89c1-466721dfafe4",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "0b37e58e-defd-4be5-bc71-94ad023b8a44"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "feb4fd9f-e95a-4651-93b0-1178b76a7884",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "80abeca7-0bf3-4b02-b4d2-4556db1a251e"
            }
          }
        ]
      },
      {
        "id": "6d128067-edd0-4ec8-b704-133ac0bd24e0",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "587c113c-dde6-40dd-830f-2ff388f24b95",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ac0ee282-edee-4c00-bcd9-78a4eb4ca514",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4adc2a9d-6a51-487a-9a40-428bce72fd5e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc41d081-5507-476c-b57c-c38957df220d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6cc7a614-c91c-4ea7-9814-c65f9f655091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d78de826-33d2-4ade-ad98-935495c5fd84",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8faba7b1-a0d1-4f72-bd1b-9f45af3cfc5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9def132c-a2da-4305-acf6-eeb021a78ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d1b988-349f-4031-bd17-26cc04888d4c",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6abd0845-62e9-44b9-b4dc-962b38da7176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "83d420a9-2e11-4b4c-ace7-d3a742f4ef33"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d6b6bd7f-db8c-402a-aeac-6bc1c99af96a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eedf35d9-f7f0-4131-a69e-ec9341ab9e26",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21995ba1-57c3-4ff6-819e-d28d0694e5af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bb6e092d-4cab-436d-82b6-772919a88a7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "504b7cc8-9772-402b-b485-2cd38a7da74f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d79d02fa-8f92-4155-9c86-6baa1e1b14c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33868e6d-9c06-409b-9074-d2933d86ac63",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "636a8873-b6c5-484f-882d-29817845c9cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a4415861-f050-4ea9-af9b-1d7e42d2d7ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c5b4643-b64a-481f-8f5d-f620b87a4b4c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "d3104116-115b-406b-a3f7-0c97775d2099"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8372dc8d-aa9f-448e-8473-7698103dce22",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5f5e2d7c-2efb-4b85-a7f3-cfa25804a6c4",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f3507f31-a055-4e1e-b6d5-439f13a9c9b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "411f4603-6e8a-4c9b-90c8-bdd18174ac31"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4c08c82d-43d0-42e9-94cb-fe33b3ebedd1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "ed0eeaff-92a7-4034-a949-97976e5af3c3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "093b704e-a453-4e8c-b9cc-5f10d580e3f0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c78da8f5-63e6-434b-b151-df7c9bb9ea78"
            }
          }
        ]
      },
      {
        "id": "ae8e87a7-26c8-440a-865d-7be5622ea8d3",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e693a0eb-e5dd-468a-9756-00bcbe77c654",
            "name": "Negative Testing",
            "item": [
              {
                "id": "06a15e31-8407-4dc3-a568-f56bf4249667",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "343770ec-c2d4-4025-9533-28390349a162",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed627694-ca58-4282-acfa-9edeeb10635d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae4ecb10-e6c3-4c25-b772-672e4012c20b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d0cc684-25df-4b92-a9a8-8b1accbded6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "898807a0-af6e-49b9-89b9-1d127584ffc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9204b06e-71d6-484d-b03c-7e9203d12040",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0e351a9-0b97-497e-aa28-6b5b6575e815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05356ac8-8995-4c11-b63c-3f6a36857f78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd6acf72-7f44-44eb-baf8-5da63fc94b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "960674ae-4ea9-4be2-b88b-01719eefb032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4161993-dce4-4ec7-8497-e40f13feef21",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37093c14-6c79-4b1b-b341-7efe893219df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a77fb333-4cef-4a79-8dd6-bba66a27f8cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34ad6375-02ad-4682-8577-37d86853fb16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "238658ff-8107-4939-8a29-f8af95284243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a69e4fa-dfd3-465a-8467-951574928958",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca43642-f3aa-40dc-ac93-114bf046985a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af6be676-28fd-4a2c-91bb-05c39aa69bdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6e51b50-6527-4666-8c79-7a2ff7fa3c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc76235e-b2e1-4066-b29e-e43dc6028590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5cd9a35-c0d5-4867-b350-ded12f3ab10c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d65d545-d1e9-419b-bb99-408f986dfeb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5d7b6d1-6c6f-48e4-9eca-43edc8160c41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a56901c-fe7e-4ef2-a851-8d1907272da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37dc4c76-b20a-4413-a599-c9866b786cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37fe4d53-cb43-4d87-ae05-7d122823f7f5",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d97ef478-28f4-440f-8de2-8e039a5248c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a36b004-60fd-4c60-b8a5-222a676b06a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca96ce88-7642-4617-afcb-5795c6121c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21b2885e-fbeb-4825-bc2d-f8a90cd85241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ff0db2-6deb-4d79-9753-dda8961971cd",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "963b6c09-2a4f-40ef-b652-601b53d42b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0540caf2-606f-4b6e-aab3-9078daeb3eed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e212cf-a047-4b9b-bd2a-8a258ffe5d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0fd35b19-1686-4152-93cc-53a1be03b81c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7e12c13-fc85-4eb0-9e90-2e56665445b1",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac75cadb-09ff-4639-8536-38757be19c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a000bbba-5a57-4447-a4f0-b9540c412236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f4e2a35-141f-4511-905a-20b89895f82a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6b78d00-08eb-42cc-a545-ec93b105b424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba47aef-ec60-440a-9a01-ea3a13869faa",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e643a2-a7e9-409a-89c7-343f8b6d8ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0977291-fe72-4d3d-bc2a-b57c9b4058c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0773d205-6a7b-4782-8ccf-24e7b32a8e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0732caa2-f0ea-4343-8e76-72e0e3070188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b2f78ca-5b5a-434a-a7dd-eda88893eb10",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b453b1-da87-491f-b2f0-8c4382088018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6c5aa20-35b5-4f7b-ade2-c02914ed4215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1523c085-63ac-40ba-af0e-fcaebfca6476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73817c43-83f2-4445-8a63-799ddcc0b0d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca3c477c-bcf1-4748-ae12-3672300e116a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9332384-34f8-4a06-8de0-69eecb3dda36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e84fbdba-1dfd-4de2-876e-8e2fc8cfbf2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62826b88-9c6d-4523-a161-39f23cb49ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12b23514-c6d9-4932-959d-a17fe97038dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f165de-3104-4a24-aef3-00ab4aef01f3",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c314ee8-2fbc-4c67-b20c-4e316199251f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "364ef9a7-6189-4446-b5a5-6d3277a899d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1382944a-02a7-41c8-a5ee-b3ea090bd3e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5642431-07c7-4f94-95a9-80e07eaa558d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6119d9ba-e7ba-468a-bbb9-2e6188889d0e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b0cc7a-8fa7-4d9f-a3c5-d0104701d91c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "805c672b-95ff-4f44-bb7d-a253b0fddcca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df8f0cf4-1e07-4dc3-a027-913663db6e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2744a543-d4ac-41d0-b16b-6084b7f3619c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05bf839c-f90a-46c3-b29e-b79d83cfe4c8",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52fd8a8e-ceeb-4a6c-a412-63e2df3d0c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "285d194d-458d-47d1-980f-cd547c6c0c6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29cd3bec-85b4-45cd-973a-338e04fed861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a743714c-8404-4ddb-b9b5-25dc963a59c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fed88f8-2d19-4783-88b2-3d59663c5f31",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e7a1b2e-0875-4fd9-b895-2f23ef432f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b689e71-a343-4f30-81f6-799d1386051a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e64ce5b-e71c-4058-bfc6-6ae769533016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "818c2ef4-b496-4f3e-8a27-6fc8243d0836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00b15179-2d02-4b0d-85f4-fb8769c4f829",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e29c11-d315-4da0-9248-41625a8f13ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a564249c-cc97-4c59-b227-aeb3c3cd7f2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "321a7440-13de-4e6d-af97-fd5ca71ae204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c73c52d1-8c31-4f45-9eac-e160dfa6414f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf97461f-8997-4baf-b18a-33f34303f6b4",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40453b0d-e8fe-41d9-826a-629dbe825099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ba66861-eeb7-4e39-8442-4ff545fc9655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "080fdb7a-f0f5-4c70-a600-3ed215ca46ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4c239c3-f0ee-46e3-afce-5a1e49d46173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d619b4f5-515e-48d6-adf2-c868106a0d0e",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "531bb1c9-7354-42fb-a4f7-2abb3dfce55f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc291363-1b8e-4443-80fc-f4ee3740364a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82b41dcc-9e3e-4669-a999-ab5ac478c2e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4be7aeb8-4a12-49f1-9fb5-7b8028249b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5594f16-f849-43c1-a8e3-6e63757f86f3",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "427608ef-0416-4dc4-8975-6fd6ce024612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4afee61e-473a-4c22-9b86-13736810701f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8483c4e-83e0-4e96-a174-5b2605192fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eacabfcd-fc5f-410a-84f3-b9f73566388f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51512361-3cd8-494c-b686-271253492f41",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b96347a5-7709-46a9-952e-7bce47ffcc36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b1a14a7-0c13-43a7-ba1f-030606bb6676"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e70ea8-c947-477f-9817-8691435a1235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "14690146-0531-4939-bb6d-a1a0b647912d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "995a2e3d-fa14-4611-88ae-727a8414bcf7",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af684d8e-cc9b-4e54-a3eb-57cfd4cf0d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1026b08-1ece-4e9a-a0ba-7e844d20ca53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c50fe4-ae43-4108-ba33-7fbc8a67bf21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "184b0069-f9c6-4702-8864-9a811024135f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "595baeb2-b0ea-46bf-b8a2-296720cfea84",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0630b74-9b2d-4c65-9151-3e792fe65ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8421f09-0258-4ae8-911d-41ccc0bdde67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea4c1249-6042-45f0-b07e-9af79ea66940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e9f8cdc-e059-4b9f-a557-6daf32687205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e54379f-a5b1-4f21-b92e-c8552114508f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b9d3b3-50de-431a-a1d8-4f5ec345332a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cd9d37d-cc57-4129-a745-275b8e8bbc5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02afcd9c-fefa-42d0-aa0b-dc6869904d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b39f7fe4-155a-48b9-b499-1988e5344377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83ef516e-f6d1-46f5-8c35-95e3a001b18c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c907799c-9c91-4cbc-ae49-c5850dd90a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b76c17e-7453-4620-a003-43dc991fbd94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba76437-d6af-4340-946f-f8d68e388855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c0416c0-8ff4-453f-97d1-83dab899b446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b68c10-1b02-48af-899a-277757dd025b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee05060a-5a77-41b4-b6ca-ec7b27e10aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb9a40fa-0aae-4270-9cc0-53a733b4db03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a7dc40f-805b-4648-9b84-f62f3cc06d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "862de5b5-d876-4f68-b7f5-7a993a50d5b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65bf8233-49d3-499b-b77c-e3fbf9efa902",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67bcf147-29f5-4fad-ae70-d5a45deda670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5378c27d-a20c-44f2-a75e-10095c903dec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "901ea78f-0826-4390-907f-80e96cf1c2bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5213f32d-9232-47db-b78c-d2fbf708ec06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e2da8d-d98a-41bc-964e-2fc455da3b0a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ae78933-e565-4c82-b607-73f892ebaafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c5c05b0-dc0d-4fa7-82c7-f7f8702d6b28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f26c9f7e-9f94-4b4f-8eb2-8976bd2a97c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b02c2cc6-6362-4269-ae5f-96d71ead016d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "841e1958-bb6c-48e0-b412-92e1f5eed6ef",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c499cbad-3484-4251-9c33-57005d40a392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "379fad19-5e44-43e5-907b-3ec6308b233e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed2f15f-4bbc-4845-9a17-c94cb87bf3f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "91d7b7d0-ebe2-4469-859d-7b8d0b78c240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35fb681f-c58a-4f37-aa4a-c2a6514f2fee",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f511b2-dc2c-44d8-b7fb-ca89219f641e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4efa17a0-70fa-4ef4-ab10-8e41807dfdec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "131a5a57-104a-4b4a-a827-3e9be75d2d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cadd598c-93a8-4adf-a3d9-135eb5fa8fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc4a13e-1d0f-4760-9c0f-65a0943341a2",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e51ee22-f979-4a50-ac5f-460b3ee31286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b3854a6-0a16-400a-9881-bbd9e95244f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b1800dc-b212-4e6a-9803-fbb61197c11c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca977f06-846d-435e-820b-8a309ff003ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ea582b-6948-4f5b-b053-594c5e0bcbe3",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcdf0d0c-aacc-4345-a06c-2b8b1e40bb84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05f58838-0df2-4cba-b81d-6689070d5eb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f367c2-4031-4c86-b279-b449e4e7bc9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a6d190b-edc1-4f56-95b6-e565b386a723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e040e63a-5b20-4505-9144-5d00b3af91d0",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42fdcfaf-c0d6-4397-adc2-6761a37165a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cbcf41b-ceba-4f6e-85b0-f6cdf1f6b608"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4de360ed-c46d-4dbf-8bb5-1b05b97dc578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "719c0d86-4b3a-4b2a-a369-55c534743b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf248c7-2f13-42ba-8dff-e61552246d40",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "514c195a-1536-44f8-882f-fb83c9a4479b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b27bd90-12f1-4fd3-849d-4ab3d0bcc76e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d366c39-6ffb-40b8-a2d5-08608158f73f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d4ea3e3-46c7-4682-b97f-3f271adae4de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01054de5-1255-4313-b0d7-c8e3f13085ec",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "635e1331-f948-4b64-b8b0-f7adf1fbb7b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43f3f009-8bb8-44c4-9149-218ea1ed60cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e7c7b4c-9652-4ac7-9edc-524984bb10a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c877846-1752-4319-a836-0e3aadbdfa74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baf2cea3-5630-4523-901d-094305126141",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "804011af-b4d9-4e55-8ee6-5b4cb804cdc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ef8b435-f5bf-4a1e-b7ca-c7b09e41b3d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf98b88-d637-4c13-ba37-54e4daa2ece0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "d65c0708-dcc8-4bba-861d-81e50f326453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053a5f9b-e329-481e-86af-96cf6720ceeb",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c032b75a-1df0-4f45-867f-2265f5cf0782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5fcfc595-b4ea-4eb1-8ce8-ed14da2164ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b85a00-2de6-407f-87ef-f2d2a0469d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e3d9c748-9cc2-470f-a7f8-4287c2a0dcb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71fb8f1c-d8d9-4394-963a-2caa8462c472",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f86845-d8f7-4309-9eeb-045eb190cd58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c70135ab-f1a2-4f71-b810-5dcb4010f49e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4bf1bdb-66c7-4876-b49a-c631ecd9a471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae12f221-af6e-42c1-adf3-0a1796a83424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1befda77-8217-42ba-bc49-e3e19d26cb53",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dee661c3-182b-43f0-9850-2b3abc5fa06a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c16683c-c456-40b4-8d39-c227c7ffafc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "374f4e98-56dd-4bb5-a081-0bf1572ecdf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8cd9dd1b-6d9a-4eb7-a8f9-93933e6bb500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eee947f-647b-48fd-9014-0d59720d76e2",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9330d50-9d87-4b44-ba1b-7962998a9e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43d897e5-5d9e-4b54-a4ab-11e766e650b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb9752c4-f9ae-4682-a625-f6ac02e627e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "49012d6c-fe44-4b60-bd70-658c4e54b041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d6e51f-bc76-4798-8f43-d15269378ff9",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4699db77-8089-470a-ab59-6bb6431dad9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83cc1abe-ca45-4a71-84a8-7727538b6b37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75448fb0-271f-4be3-8142-895d67066cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d578a419-7956-4e5d-a62d-9c13450a5d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6796888-e8ea-45fe-9386-09ba71fc2bc7",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fbcd589-2798-4a5c-99de-666f22c015f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62ec989d-b64e-496d-9132-3e0cc30290f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "148330e8-bdad-447a-8204-633b40cfb05d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9be92379-358c-4eda-83ee-31cf36ab0fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e1ce2b0-7f08-429e-b323-a28c196cd9ff",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a7b0d2-1f8a-4e23-a194-aceaffe64c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "096f5946-525c-4381-a93e-9e66fa132065"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1dc1400-5215-4cae-92ef-9757b2f15a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "06ca4e68-6a20-45c3-bb5b-18fdc2984825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a9c4632-db14-4d51-9e41-cc8de8e2eb42",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f0a0e6-1ba8-4a28-9376-13db96b350ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c05521d0-a74d-44cb-bfc5-7d14c8b4a05f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2733634-e9a2-4687-9c85-140e4fb7aa99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9ca846f-a161-4cb2-958b-f4bfd542b09e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e72ca7-264c-4539-83ba-bc476d4892f2",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c2c014-7d77-4919-be9b-67e28fcad57e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93ad25b0-2484-4e38-be80-8ae69cd05d18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47aa91d4-51d7-46c8-8391-66fe72b2b854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "1587c02c-d0c9-44ae-a10d-48c860e89889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d3d4e77-b5ce-423c-b075-1046266fc767",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a078db98-ca6b-4798-9d81-ae745a51090e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9520ced5-330b-4dae-a490-57db1b7caf5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e0ef43-70fe-49a3-b47d-c7028484432e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "33e6e980-260d-42b6-bfdd-e17a46648bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9938dcce-d0f6-4f78-9c3d-23d265b4ee48",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "162c8da1-61f5-4e1d-9df5-2ee97d7844b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c69d63f-98d6-42c6-9785-365e08aff2b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03e175e8-74f7-4125-9256-17cc927dc2e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ae534c5-f8bb-49f2-8854-3b417945fe85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f681f5d1-5fdf-4bc3-92f1-b6fb58894454",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afbb820a-ddd6-4529-8672-fff10f93328c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56246145-c83c-4ec3-b652-a1ecc9486e85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ee6e5a0-386b-4ab1-ba09-4db84390d780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "60102c0b-4d21-4612-8822-a06b25c952d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b0bb57e-7ee8-413b-9888-3cd37d22e19c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be92ab7-5310-4580-a696-a2c9b6af41b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9db8cdb4-1b4a-48de-b3d3-fe4e93127c10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84bdef22-ed3c-44f5-b530-a7eb841d25a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a47196d8-02ae-4a19-8d30-ba4a0d5e1eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78cea2e5-7b3d-4845-8bd4-bc94c173ff6b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c4bda98-4bb3-45fc-b911-1112631608b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0813976-6f5d-43f2-9036-aa00204ab3df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f9303e5-3cc8-44ea-803e-ad1cf5db6314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa18641a-e3e4-46d2-9f64-1abc66a8d64f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a42fd9fd-0fd9-4056-8327-a7ba55154550",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "836d7734-c2a5-4c3c-bc89-da5d6729e139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5100d1e-4e3d-43a4-b140-3563d2dca817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00326f9f-275d-4955-a17f-f1fea2cab766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8a34c90f-e196-4ea5-a3bd-0cf7e0647f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c4d7a12-167d-4f06-ac3d-b20407faa14c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de47e06e-e7c7-425f-a80c-b71f27d76ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d21efa52-c15e-498a-ad86-76c86f078dd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7adc6a2d-4e75-435d-93e0-876cf95cc99d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5fb0363-6e30-44ce-9705-1dfe18f531c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa683190-cf78-465e-81b7-64de4226c619",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab1cb4e0-393f-45aa-b555-2c3606bfc074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bda2e7b-598b-4b3e-bb7a-ab30e8c5b611"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c750881-3300-4cd7-a05b-4af8ad19bdde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d91315b-d4a1-41f9-ac25-e8ee94bfc32d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcdbddee-6127-486f-991e-ff8b03e8f1ec",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c443ba18-84a4-4e3d-b9c4-ddf8d173ec4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e365a644-44d2-4c47-893d-41eeef2d8cab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48066e41-1cc3-4895-bcb3-2a61da97b045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cb0e43d-3580-40fa-842a-28bbaabd3c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee15336-4c36-4dec-8640-058de19a6679",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1674cb3-b6ee-4016-ba8b-16b04e208daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "310f46bc-01b4-4263-a3f1-087cb2f37b74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca81d1e7-f040-4eff-9b5d-b725c1aa2578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb257275-cfc0-40a4-a63b-fef350e16dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddd9f355-dafb-465c-9131-869a50024b66",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30daec3a-b1b5-470b-8d88-8806f9d3c13d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc1c5311-86b0-4a61-8a3b-c20224087bc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0138c322-e951-4e8b-961b-fa0596589283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1b49e74-533e-460f-a819-aa1af7eb653f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4c27321-caad-4679-af5d-45d97861ff15",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee1344ac-6083-4f79-ad7f-71c360ce7ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1b3c56e-61f7-4180-afd4-fa2621dcce24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d81c6fd7-2124-48ab-bd29-051c61ed47f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "0f9d713c-7ef7-43e2-bd5a-e8a3c9c99a7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f4846b4-d3ea-4417-b7d0-8c077c224400",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3c616d6-dba8-46c4-8f5d-cbc7029f7707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00e54587-6dac-4118-8845-48b7c72aa566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1824a6e7-4dbd-435b-9a92-f1822494a904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8312c86-36ae-4683-8b59-9f7f834e5018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c1650d1-08a1-4690-afcb-046531d34801",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38769a07-2c77-4e89-9c40-6ee3860f35e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a458308f-bb36-4a19-89cd-339b5728dfcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb890c51-2b5d-45ca-b2ab-785d776c2505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "79554349-6302-483f-a861-fce54634809e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c623f3ec-8f16-4b50-ad04-d08ebfb9faa2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9278598-faa0-4f2f-8070-fc957c543b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ee7dc5c-6dee-4d03-ad0c-013a7cadda97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc07e2c-59f3-45db-a160-45e25a212260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "efd8b8fe-ccdf-4d88-92a4-f34eab191893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d38f456-86c2-4d6e-81c0-c997af7e0a7d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62429145-aefc-4891-9e1a-0a7b4d6062c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f8ae131-8cb0-4277-81c1-7025c5267c18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d141c6c-2510-45a4-9f87-12e1b02c55ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5231a3f5-2a07-4a6e-ab73-c9e807546ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fcd90b7-3c65-4b96-b873-a4d2a0678aa9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd81c855-4456-4047-b200-6394e51e542a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdaead03-d71c-4151-855a-c558979d59e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e5ae7b-5771-443b-9df0-ac7c8f5f888e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6571b281-f7ba-48d4-bd80-dfd4922ea373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c228dea7-d030-4570-8782-39b8a799f468",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc1401a-f907-4624-85c9-d95893a9fe70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f9197dc-53ae-4b86-8eb3-7ed610bd2d70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe73a24c-0338-4722-afa2-a42180f21786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "8416349a-5950-427a-93ff-5fb4bed1cc07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9dc971b-694f-436c-9e3f-e52a4773bc90",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a263d5-34d6-4e63-bbb6-eea059c37b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eff048cc-a605-484f-964c-849c1ea6d320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab509a81-72af-4505-8a63-c9c9f385f328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "783fd4c4-cebc-42c9-a215-c4765771f5f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3d1dd9d-ebe3-44a8-a7d6-77e22e80aa81",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c35c2262-b755-450d-8daa-d8d7b083f6e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fd8b55f-9675-48a1-874c-5ae0c027cac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a984c544-0f8a-4b83-8066-4d0a58b33d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "48bf232d-8f13-41c7-a252-9b558fca386a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b480c108-dd52-4053-8162-9f415cd57587",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "071cea9f-c9c3-4af6-94b3-9be8b103f666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0931981a-e3d2-426f-8f03-c4f170f71f2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8e96aaf-43be-46e7-9aa6-486d3ac4a537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7ed61c2-f32c-48e6-8585-53c738c8f8e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5686668-2565-47ec-ad28-e9024e57a9a7",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b93c55-446e-43c9-9dd7-329bae3c7de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c690ea0-fee6-4b5b-b00b-8be443c41651"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed36746-8c21-4c3a-a354-29f90e3df2bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a7471fd-14cd-4a08-94bf-f761d7b54230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "199fe700-b0a8-4738-9ffe-9b26bb478244",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f64bad-9638-482e-9fbb-3a19f881aad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe479a22-1c16-44f1-915e-111a4cd2b6d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96347d1-699c-448e-8021-645c5ba289b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "25c5b437-cb4f-4b43-a972-1553559e8b6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a1ff35a-3cca-42dd-9ac6-8ec4d427e09c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "314da0f8-e108-4085-8ef3-45830a66dfe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7edb19a-d840-4256-ab9c-8b169c3eb2b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb00c02c-0659-4a9d-9488-dad13e6a6d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a72bf19f-09c2-44f3-b73b-ea74e86b8987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b7fc81a-5dbf-40ec-a2da-6ea41691ac4f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d04b2c6-67a9-4f87-a51d-c353827b5b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0e336d2-b538-43e9-b6f1-3cf11e44c18d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f0aef3a-b06e-4534-b676-d5b9a7f24af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "011b7dd1-2537-484d-87cc-8cca4f3ae043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca85619b-de5b-49ea-bdc0-b423f0f8baf3",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddc4a955-ea6b-466f-ac2a-aeae80e6b260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6e6a029-ed3d-49ab-a241-d9dacec309fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "067d6f22-a0af-40a0-81ea-70a59bf98762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "23ff4807-9e70-4a23-bf52-4cfd8b3f061f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b847fca3-3b4f-4ac8-b023-f0e7832783c6",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc10f3e-e2e7-41f9-b859-1b0b7ba4a39d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c875283b-531a-46f0-82aa-5bd5a1c5c34a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc019ec-8efc-40e9-937d-5231f32a3f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "34ff86d0-36f5-49ad-8bca-cd751a0cb11b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b4c532-ce7b-44f1-b42d-7b1cb0277e32",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "683c1b36-a0df-4c68-a987-1d9a8641457d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "652b2f54-2dcf-4e6b-9b1d-6e2a313d77ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "948af2c5-f9c3-4f37-a2c9-7b442d7a0fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bf8c950-0a2a-4b04-9cd8-bbaa82f008c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd5137d2-cc3e-4b25-98b7-73037d6cc9e6",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f18932e-b858-4745-b80e-e9b5e94da941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0650f40-0eee-4054-a9da-d044ad02958f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1070bf59-5be6-4c96-a7bf-45875f4b2a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "972d1c01-db6c-4994-9f88-f8fbf7a7fac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "741a5d76-4335-486a-92d0-a6d44bf480b2",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01eb8172-2a78-4e3a-8eaf-4d86392097fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b9d0118-de6f-4543-82f2-abd0ab4d6342"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b028a23-05a5-4a24-b559-f021cb83c6d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c67623ec-9d5d-492e-a80d-24ba2a65b82c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "759ae139-1517-4738-b895-08bf575dd492",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee4ef7e9-5f34-415c-a767-482e5c19ad34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1225d90a-23ac-4142-905e-40b436348ae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b25d483-6ec0-4fb2-a0fd-2045ab3bd24a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7beed76-8e8f-4e83-a965-51c01418e974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae669ec-6261-4de4-9c32-461d5d3e19af",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e45bf3a8-8fad-45b7-9ad0-d023498078a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e0b208d-a700-446a-ab32-9de79489d1fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "688e9a55-423d-4719-8e8b-ae0e8a547ce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b6ffb7a-ed7d-4611-ab89-e6ff1b8ec74f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85873413-af5d-465a-b979-857f156757d6",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9761f53-44ae-4aca-a92e-cc85dd7d4b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c6035a0-2952-4f92-ae4c-baa9ce266d08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b817ed36-7a68-4ec0-ac3b-345a85b80568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "14717512-a657-424e-8555-8e60bfb5e0e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51cb3e6d-636c-4ed8-bf62-69c3b427eb3e",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b36543-a172-4c81-a2a0-6dd02eba59b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54d7230f-6515-4b05-a813-0413baa4f191"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea84635-6126-40ae-b882-f7a946f8de3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "27eb102e-0eae-4431-8ef8-9960d00335c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "346ab8b5-0c44-4daf-aea5-d3b5c0abca8a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a45389e8-14a4-4477-a1cc-71a86b0c8b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc8ff67e-f1bd-40c8-befd-ac1a0e315247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b5d33d3-cd52-4272-bfe9-2475752310a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c54fa38-4806-40a0-9efe-b887a1a6daf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73756adc-690f-49ef-9161-55e97e47a310",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "859ecd31-7e23-476a-abdd-2f409977e79a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e65caf66-1b41-4cd5-be59-b101b79eb4cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6ec9f88-da48-49da-b180-c7b92fbcc52d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "37369a39-bd93-4f3c-bf76-3c3cad4395e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81e155e2-a19c-4739-a299-3c35a3e3019c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8197993-730e-4a4a-a1ba-d1383ab706fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8926fb26-da9b-4647-be2f-65f9a7ce6cd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd1b1900-6e6a-48a1-80f4-06c7e2be1bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "586e9d7b-945e-4923-a706-df47dd1a6fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d268b1-bfab-43e5-91df-88c7bd8f1367",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad9d449f-2ae5-467d-9e50-5110bb30c52c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97449b19-a31b-426a-be8e-8fcfcf19255c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "032f3417-54fe-4040-a75f-901ba8b81977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f37efcfb-f824-499c-b505-d9c572ce1fac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c6d30ad-5df9-4ba0-9a3c-6cfe45831802",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e2d887-52d2-4601-a77a-508ca5c8c8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fdac31a-6778-4b9c-921f-763b38659486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc05e82-d6ab-4e62-8644-cd0ec790047f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ea482f3-aabe-462e-9bbb-aef70375536d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47fb93c8-eaa7-4d8d-919d-fcba53c84d9e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d291091-e1db-4c3d-9da4-58baf7f346c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9840a8be-9619-466a-a711-866fd6f85bac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e239dea-41c2-44c3-8994-d00d1eb373a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7379c87-f356-4c13-b785-e7df943dad15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c707ec-c6b5-4bf0-bb4d-8412ac737e95",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fc0e1df-5982-4003-90b3-fe911df802ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d9a74b7-7c1e-4176-b2f1-b8059dd5e55c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9be06ef-391f-4e0a-820a-e335151473c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "42f386bc-dba5-4215-98e9-f0bf518ac6e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d587f76-aa07-4cdb-be69-c66a20493fa1",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73ed595-3221-4fc1-a2d1-699132d654fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2066163c-e60c-42d2-9c88-c037b2053a3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9accb7c-69a6-4efb-8e74-f278d45083cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "03695195-b131-4aad-87e6-a4132995aef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e765f7ac-1a29-48e0-b171-978eae2a0953",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d43cd526-5e03-4329-8a28-280c8eb80b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f326652-e016-4573-97f5-63a13987b70c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d79d84d-7073-4b4c-bcf1-45e2b1f5f27c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8bf8667c-afa9-4a8c-8dd6-3e890b64f462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a19d3ee0-39a6-48d3-a656-b854b011f1ed",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e5b1283-9d70-4997-91ca-98492424bf2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "771111c7-018a-4a44-8032-a684bb460676"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8febce1-1d72-4aef-beec-2e85b2235da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "883773ae-3b93-4cfd-9319-5afd0a07f2c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca67f2bd-15a8-4938-ba09-414041410c64",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d550be4c-70d8-452d-9b0c-b91ecc028773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87d63999-1553-4303-8d9a-506ceaa115f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef8bc49-7b3e-4a1a-bb2c-5d6b5a66680a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b365b3e-2af0-4abd-a6c4-f361cb6ae281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eab75138-aa6c-4da2-a145-e6aba2ab45c4",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7979440-7db3-4b0f-9e1e-eede0bf5c10d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b3c3dd6-976f-4bef-be5e-e418c4a0b208"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bbb045d-ef19-4eb1-93fe-fc52fa6bf129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "148a9a21-2773-4a33-81cf-29e91997e283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7602bef4-e43e-4c8f-9058-1dfa23e7dff2",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1bc55ed-a573-42eb-9d23-5aaa9c9b7ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76706a6c-6502-4574-a46b-b1509f8d1b4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf3bf1d2-ce0f-47ed-9683-06f0223a95df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "451485a4-24ed-46f4-9e86-2291aa738dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e0ff8a-75bd-4395-a30d-28d18a7a7cb8",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9907b218-6e97-4209-8323-a87b07a494ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b3f6f1f2-2250-4c9b-a4e8-fc974a87ed40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec13e1e7-0125-4843-ada9-db0fc893de38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0f541a2-2227-4b37-9449-677491f002d5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "88154373-4457-47ed-a74d-18e725230ac9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c9ee9c21-e272-4fa7-aea3-c0c0d122fb9f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a09f64b-54eb-4834-96bb-906824c9854a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "babea0db-ed1a-4e75-9272-9c7d2a68cd34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "499719b1-812a-452c-8c1d-df8c89b7b0d1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca751f19-9151-4c3d-9516-4b658e4a0e60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1240430-3ca4-4e9e-9fa0-2725a37a62ac",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3efbef23-e571-40ef-afdc-e39c07126871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "99a378a4-4549-49f8-a9f9-6751b1e53623"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad840c1-e7c4-47f9-aeb5-1cab6b2ec1a8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a1e7942-45b9-475a-b9b3-14bb15ba66b0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3b76a83-f305-4805-a89e-6c7c952d3c3d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d712bf17-9488-4ef7-be46-53cb5e04d948"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae14f019-9a5f-4b16-9d44-cea6b9fce0e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef8c5d55-79cc-4171-9ea8-0117c71d883b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3340b890-6cbf-4241-b8f8-5de563a8feda",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "de599fdf-7407-4571-a9dc-4314b76e5af1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "72fbd159-d8d4-49f1-b458-d138d1812f35",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a4392d89-f230-4c47-9afd-57f7cf3baa5b"
                }
              }
            ]
          },
          {
            "id": "a92be190-a56a-46f0-90cd-e9438849650f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b3869bcf-eb5c-483f-94bb-24eeb239b9c3",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1a9d166-3b55-4d45-8796-661c59dd0d9d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "de68b0b9-b922-40e7-a658-908b608a1cb3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f470b7f3-3ea1-43cb-a0b9-b94c92111f81",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a62a0746-b494-4439-a83d-eb3854b789df"
                    }
                  }
                ]
              },
              {
                "id": "121bc779-d16e-404f-b5d5-5cf6a9db411c",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9331d969-0355-4250-9a57-47d2549054ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2aa11ec4-3717-48f7-9d16-8bc7136d40d3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8378dfe4-1ed4-4d11-8133-a8aedb680c59",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f60d9541-f8d2-46ed-a77a-0726ce85b31e"
                    }
                  }
                ]
              },
              {
                "id": "f088cf30-a46f-4c38-8ae5-671ef9c21964",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5fad7f1f-2805-4434-aaed-8a342314fbb3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2b3e789c-b5f5-42f0-a9f9-9e9f0c09ea90"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "26357538-436e-43c0-84a9-998bd3e79519",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e77aeb69-8172-4c98-a57b-0bbdab14d345"
                    }
                  }
                ]
              },
              {
                "id": "a0214bba-f440-40bf-9a3f-f225423c4934",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac45ac47-7553-4f4f-8abc-e1fc6b79123f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1b7995b4-d795-46d0-b8b7-687e6691ccd9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84ec3e2d-91a4-4437-9337-364db7084eb9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "48231551-b0f2-4b86-b2c5-a68cc751d867"
                    }
                  }
                ]
              },
              {
                "id": "48e7e231-003a-4ed8-b7bf-757219300faa",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cdb6eea0-2a3c-4f59-8b62-464f7e484d59",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a0f47202-b3d8-48de-90e7-8b5ecb91ad06"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a2684f8-b94a-4d89-a94b-1f72c2f3ed91",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "094132e3-d61a-4f0d-b410-57c06c3e5e7b"
                    }
                  }
                ]
              },
              {
                "id": "64d8069b-9f0d-4568-bb47-7161f072fc09",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "68e2a47b-9535-4a00-8dcc-fe51a9dd6ab2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "edad52a7-a719-4dd1-aa54-67313fb189e3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be1e4ded-8933-4997-9435-36383b296158",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a6cfbe7a-4651-4411-a928-97445b5f12fc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "51e788ca-280c-436d-b2cd-0ea98b64143b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "19e1856b-ca89-496e-aa37-2244ac5e8cac"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "707c974f-2c81-4e1b-b857-f8ba6e512dc1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1de97d47-0435-4523-9cf6-dcb3c00f5a22"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a37cb21e-fa2f-42ac-96a0-a94137cc3b9f",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "24560e49-5afb-4b52-a66e-da2464f68b00"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1c25b3b1-0e50-4344-9b1d-ab5ad8cecd7c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fa841418-1d15-4104-a70b-d297307e0744"
            }
          }
        ]
      },
      {
        "id": "d394eee5-7097-4e68-b980-71854a716758",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "6789ae0e-494b-43c8-a5c6-f3f15f3dcd79",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5f3288f4-8e3c-49fb-805f-7db236be2a79",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "faa44c76-72ac-4a0b-817b-e67497d1f13a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7951fbb3-2ece-417a-8ce1-f0761dd921f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ded0e54-ff48-46fb-9d19-c347e2a5a5c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4645eba-312e-4900-a5c4-aee50abc749f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1c4dbf5-42e0-4eec-8148-136f9a31f354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1924cd80-4b78-4171-81b6-bfa5cdbf2ec8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc8ea95-23bb-4246-bb3c-77859af65860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90b848da-a0e8-4cac-96eb-411bf3ed938a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7abe00a2-fa43-4ca8-8dc8-28e4766c3004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a24d084-a53b-44f3-a3ff-c373515cc86e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c942318-da77-4e7f-8cb3-762a0cb93e1f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4bee81c-46d3-4d7b-93d5-c505e043472b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9226266-9a47-4f1d-828e-b4c5517914b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2db14199-ab55-40ce-a9fb-68671ec25a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "78cae9e0-af87-4dfe-a3bb-1acaeed84cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff4e61f-fd23-4297-81ec-b36b10ae1e62",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fddecd4b-5814-4cef-95a5-6164f91adec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd593086-8d4a-40cc-8189-52e1cb6464d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c3b651-838a-4e31-9c06-d73ecf6cdeb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "59166be5-7cdf-48cb-96bd-8efa16632f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02142aca-3ac4-4b02-a73d-c61d29deff8a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba0258c-fc68-409d-a993-9093716458a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79c2e88a-e660-4f9a-8681-0b3a87f1c49a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1495468f-438a-45eb-b9a5-caba30835f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "732cab21-7481-47ca-8e67-876c25826202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0039af6c-8e6a-4925-9325-f74a88fe9ce7",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3455f6a-f39c-44fb-b2ee-0cef99de5954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e5fc57e-07aa-4fe3-91ce-b33e2d6ea78c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ec2886-5170-417e-95cf-fe2f0471349d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f19c0ef-701f-48c6-80b7-62d051a7c94b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fdfca06-179b-45a9-82cb-9f679aba49dc",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "779dc89f-65dc-4419-853d-433f5236aed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c05acec-c457-466b-968a-3190c72eb005"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1066c7-5ab6-43ae-865d-7dbbb8b02e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb0531a6-e3e5-41f2-bc6c-70e75c263088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf5a4b3a-72a2-4b7f-829a-67957d19efe5",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d10b6a25-64e6-4757-aa20-16a838120a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "489b9405-b45a-4fe3-84b8-7e5d214da72c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a75071b3-2f99-4b46-ad33-0bdb8b0c918f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4e3dd8a-4ef6-41eb-8373-84dacda3c5cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8935918-73da-4fad-a98a-af71770dcbab",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1fbbb40-d0f2-4fd1-acb2-177dcbdf72da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2012897b-3bc8-47ff-8438-2e1c05f0de99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f96f067-bc47-4b8b-9d82-462cf4fc250a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "503f4f30-c419-4dc1-ba97-b32ae85d9334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9370dfcb-4e3e-41e5-8b6a-74eb1d36aa0f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c04267-4a0d-4fc9-a43b-f01df59c5352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fbf7bb7-2668-409f-8054-6170e25e05f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c9b924f-0a97-47a4-b0a8-932e57ece26c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "181a9e40-2272-4578-af1c-1e4f9a19839a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b59e5a0-8f55-4965-9eab-26837338e568",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f7a9af-7ebd-44e5-b6f3-79006f342e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8401854a-777a-4955-b615-79c445e807fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f1fc1da-1be4-4269-a729-3d4f29d5f9f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c14927a8-5080-4403-8eb6-1fea11f3f1a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50d6ea67-6666-4e2c-b670-32fd82cf15e7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f5e8de-f405-4bab-aaef-bfef59f9e368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ff4cfcb-30bb-42ff-9ba8-6e8e400fb2a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b79c43ba-0120-410d-a4cf-32c669067aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "69cc534c-ca88-491b-b6c3-df712c80b7bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9683f047-48f0-4200-a2c1-11b2ccf05266",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5555b39e-a6f1-41d3-bbcc-91dcdd1d0893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "163818db-0c19-45c3-8090-b152751ec06e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfdc0069-02d4-4696-a53a-0305d62eba12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ab50e25-2912-48a9-bca0-e899b2fedf3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee6a5459-26a1-4510-8626-3e9f7c839a58",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a92238c-05a0-4159-97df-087c5763936f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adeb3b5b-b365-4154-8e59-f37d53c54d3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd1e821-c79f-49a4-9d83-57fed014d778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6169a67-aeff-4c86-ae95-d79cdce04374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adbbbd98-ba5f-4f15-8654-62b551427adb",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bef1f23-250b-4719-bfbe-04a97238b386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91627007-f826-4677-bc97-3f83d834fe03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e009a807-4e41-48c6-bbba-bc6e3667b111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdf1ca1a-ee7c-496e-a418-547b76ba6b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec3998d-d74c-4471-a506-d384df7185a9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61e61d8-8fdb-4b3d-b367-11d6fe6a7014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba7a2f67-fe5e-45d8-bf0b-21e306358f5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe8d4a1-2b19-41db-b29e-e605ed26c17d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b5b52b7-ffa3-43d4-8654-0ebc279a510f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca69da6f-bc8e-4d8d-9d82-0eab21e57a89",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31318275-b5cb-434c-bb1f-aadb6b36c0e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c575255a-229d-4f5c-a527-25071a75378a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e000f9-d187-4259-9548-1169bdb48d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1318a27-c791-4c11-9e2e-9c8dd138681c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80f007f1-d760-4b86-bb7f-d2c6832ebcd2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac6bdeec-6045-402e-bfc7-6369cc6dbb36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67b1fab9-900e-45a3-93e6-6158808c8b3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3753ac9d-4b86-4aeb-afa0-847b1e84bd18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "908a518b-7df9-4448-8063-f328aa6602d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd6594b-ea91-4a0a-8873-0b256f6c7c14",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c2c202-e2a4-438b-9791-16932f602d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5399af7d-cbe9-4187-a8f7-eeeb18b81718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ed18cf-e130-4b89-b506-14f1feed6023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "796f0eeb-8ffd-4601-af0f-8614636a3b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed86db1d-ec51-42df-9109-839bef93120d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f95d7c0a-3331-495b-a80b-37dfbcbb17a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc468086-6647-4925-a3d2-696d4060540c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f563c3c9-cf0c-4603-8d49-6fa8c4d25a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e16b0c0f-82ee-4b51-955a-4f2b0f6a0adf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7045f42a-4714-4c21-aeef-4fc7e29906d5",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e228ed6-1e80-4a6e-a6bb-5c734fbd981b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "571b6e19-78fe-4a2a-85e7-46994ed6c830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcb18911-7020-480b-b868-054ba4967bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e1d8d79-d3e6-4bb0-a776-c87d229340d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "621fc23c-8ef9-4ca1-8e60-1e47b1b5f237",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c5adfc5-2bac-471f-a22a-e4e0ef7daca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36050613-1199-4969-aa57-916166666eb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69729ae7-dd39-4be0-9407-21804f6eccea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9254c93-8d9c-4a27-9ffe-c172f5780adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c538e7b-7740-4fce-9335-b39716dd8779",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abefb1e3-c20e-448b-bf51-d1f5e46b7c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7e77dce-ace9-40e1-b289-f9aed0c0ae54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89075aaf-078d-4a38-b3c4-425a2a4454d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "742c2158-47f6-48c2-badf-ad99d1f65fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cc49ca1-1c25-4dcc-94ba-64f30e7a58fb",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be5d5a01-3fba-4407-a158-f599ab2c0f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7df6b6e9-2f89-42d4-8f61-e71488152fe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cca14de-f5b3-4adf-9abb-97183765e3c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd364312-06d3-4022-ac14-099748b285b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c1b1a0-accc-4d16-866a-16e21254fe83",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c43a703-620f-4162-8ec2-86e23705d57c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "399223e4-47a5-425f-a2db-c098fbd84688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b1d0c50-975d-4d4a-95cd-c1c37a2151b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a301f27-74fa-4aa5-bafc-47550993e0a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "933c4941-21e3-4341-9bda-de8cb1190600",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3249d082-0ae3-4823-9f4b-f664eda6a25e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe4cfcdc-27b2-4c4d-89c1-4441c17cb928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c9f3ee-3644-4690-818c-1cb314b529ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08b22dd0-2126-474a-b4be-63a890ee7d24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbae6dda-60d3-4db5-9fc5-3fee0a565d2b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb2b8fb8-55e4-4143-bda0-aef3f010df28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6f6dcd0-862b-4dd2-bd63-b30e733faf67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bba59af-9eb8-43d2-a29c-1e9ed1ce3740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38b5e71d-0749-493e-99d6-68d7d1bb4fd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35224a92-08a0-4d90-811b-64f433cf8665",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91a393f5-f819-4866-89ad-3cdb84c7c276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66502f0f-a2dc-4698-9b76-1757d3591fae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fba3e59-8527-46cb-9c06-be47a3fb23b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a23abace-f3dc-4643-86da-9c699b997525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "960a7332-ef48-458f-b42b-ec936432aa04",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "116fad72-85a2-4b01-8b48-c187f2b3491a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0941ecb7-1777-4fe9-b475-810d86456362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa7a0c25-7031-4560-a19b-b4d8d2964803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c75f2bd-95fe-4d83-880c-be1a5ffff7fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adee1b7d-ffd4-4416-a131-7c72d891cabe",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb8dcc6-c49c-4d60-b056-f007f62de568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f530a09f-fa29-4ed6-97a0-0f0f5941f689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6080eb3e-6b94-47cf-ac00-de0bb58eeab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "179954c7-ec4d-461b-8a3b-25333976762c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd60fadd-5fe2-47e7-a540-c31b81f8acb5",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9077027-2942-477f-bd78-82943adab599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7248485e-8dd2-47de-b98f-62cfe6c04e8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e4f2ef-1ed9-444c-87e2-6106075ce041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3eb3788-e29b-43ce-987e-0cb5c57497fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8710b7cc-ff7d-41f4-9aed-0b39bb5fb4c6",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "412700f7-faba-4524-b3e1-ab81e5f890b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf9ca3d9-867b-4047-a289-d7e9028968af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "376f54f4-24f2-47d3-ac73-32725158baa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7abfbb22-a793-422a-b2e8-4e4bebcdbc82"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4ad06681-e3b3-4c1d-823c-134593028c0c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a25296ab-56b6-4504-b713-3a404f688a77",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f80ad1c-35a6-4366-b89d-6a498b05046d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b28fd295-8b4b-4a9a-8281-3b7657881c00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c28fd40-0ffc-477e-88bf-b183607aed6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed41d06a-6d7c-4063-b4ae-5017097b8994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3493b3c7-62d0-48d3-8927-d12402af9062",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da5ef95c-abc8-43f7-a6f1-b4d02e43e6b7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f236455a-52eb-4082-acc9-c57efb95bb2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0418ee2-feac-4ce5-93b8-04ac50709a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "05c55708-eca8-4616-a867-c51f0be2c51e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ceabae53-bbae-4e31-ae55-2b27446c1c49",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a570d0d6-14b4-4631-bb0e-eb74141c99a2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "55afd768-d659-4374-bf35-ed8fa6578491",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96689be6-957d-473f-9e08-f57d63383408"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "14baa08b-bae7-42d7-9b84-7cc68f8957b0",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a8fe1110-f071-4bd3-baa1-3872e51f5410"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2d5fea8c-8595-46ea-8842-069e2678b81d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ef27d9ca-d98a-44ee-ae78-c8ef40ca6541"
            }
          }
        ]
      },
      {
        "id": "0da9a17d-26f0-467a-8e9f-b8ba0f4d24f6",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6fe5b8c2-d9a8-49cb-bc88-bb5e528a0175",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e1f019cf-64ee-4440-8e9b-f732c942ffba",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "34a4e8d3-b3dd-4c8d-ab53-db28daf9f5d3",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e37972d7-ed30-46e8-8f90-4a536b8ade1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "773b06b1-86db-41bb-af99-aaf2ba14d0c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db0b75f-2387-43e0-8f7f-9aeb3c9a38da",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e0fcf9e-0a56-4752-b327-2de89e3cbc77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01d98c59-0a0e-4815-8685-d8b14e6a2c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b8833c4-2132-4580-a011-079159e22174",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a248b23-976e-4c53-bd05-a3e1c6c90b33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7895526f-37ae-4039-83cf-09969e9271c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78bbd160-bffa-4adb-a4e4-2c053b932eb5",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e6189f-f47b-4c13-81b4-184e82cbe7b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ebac7d1-727e-48c3-9fcd-bb9a2c9f9a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f6d1e5-0f39-4be1-bfc9-25afe33236a8",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7619c8d5-8d5a-425e-ac7f-9b97a6a4b4d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddf7f6cd-4b13-4f4d-a0ec-14897c59d080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe1e26be-4427-4c81-acfa-0fb5cda9ffd5",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad2039c0-a0f2-4a0a-bfaa-441a1426c926",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fcd9895-cf19-4b6f-8eda-09ab32938f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f69196c-a14b-4963-87dd-11870ef5b53f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3284af68-b277-47df-92a1-c0becae45957",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d5f71f2-37ff-47a5-ae01-022a1e6cc52a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b322e1-f7e0-47ca-9d4b-61dcbf48b297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da42b1a4-e36b-459a-ab9d-12ee7f990e26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b075108-6df1-4948-a21f-a98515332ea0",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7925b29a-289f-425a-b360-959dc4184ce1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ca101ee-da95-455a-a0fb-65ebeb8f92e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3be274c6-635a-4b8d-8b16-72cb1e3a3d2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21120887-5dfc-44a9-ae1b-026fc6ca6218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b04176-405b-44c7-818e-70c1cda29af6",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f66049cc-32bc-4965-829f-f4ef2eb564c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0a876a4-1af4-445e-a76d-95668f71539b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "241e930a-8217-4913-a920-493b05f6a410",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6138de72-fc12-4c02-af5d-a6aeb9dc6a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "573c299e-dc79-4a46-a1cb-07e48af46bca",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cd9dd95-8940-44db-a4e9-99cb8b54758c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "199eddc4-4608-4688-bc43-d9ac9a564bf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c6c53c-5e89-4255-9445-556107828d7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35e04afb-5f97-4ece-a8e4-19dbecbe6aa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9afe10b8-09d1-42ed-a1b9-33082416827b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba701db1-6fb3-4a80-9855-4bcdc5a69eb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3200078-4a43-4504-a989-a05399aacadd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "679367e7-6bac-4a6d-9e26-6ba642726c1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd022032-a987-4f41-8ade-d09360c86555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "046a9f67-5da8-44c9-a75b-a9f0bd962317",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b35071-36f1-4d8a-9bf4-bfed313dce7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f8f7c41-965b-4519-8e45-988b079f931a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0309b006-5fd7-4acf-8c4f-2ad7ab2e4587",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de0d3500-e596-4e69-9b18-f564412b2ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c74876dd-b827-4dd7-b95f-4e3263f11f46",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197c4f2e-3457-41ac-be6a-e3a971f910f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbfcd870-d20e-4012-ab44-76fa123e5d8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f9dec3-c180-4bf8-92f9-59176d13c885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d46a6a8-7ad8-47e1-8daa-71bb6e707c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef8ee2a8-1cdc-4340-aa1d-2de307d43a83",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24c86fe6-5d24-45d9-82ce-2a910247cc44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38a78e62-1b71-4d9a-a8da-22a79565cce7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd69b7e-e4e2-4d83-bc78-d2ade57e138e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09444e6b-d567-4b6e-895b-0b362857e25b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da75284-e3b4-4a7c-9b1a-10ef4e20bf70",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "531f8adf-8d55-4b76-b027-6b1df8abf0af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "681530ad-cbd0-4dee-a08d-c754b0a165d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f947b481-49dc-4012-bebb-1c0eee1cfa51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f61e1005-ca7c-4199-be8f-9c2ba96545f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e914aab-e809-4435-a0c0-367b285e421e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce6d0ef-0ad7-49ba-9391-df5f2f0b3493",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd51de72-38fe-412c-afa8-517e5300a5b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d6ed8a-b973-4465-abe8-04d65e19bf0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e74e2662-b520-4e67-9940-b7a592c36552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d2575f-7333-4f05-9137-4f8d02325d37",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a605242a-16c3-48ac-95b8-757a38b466c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66e6570b-17f8-4c90-a2f4-2ee364c6d457"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d9a51f-2615-4dda-a4e5-9ed88d552814",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9944e2e7-399e-4532-a796-805ad5e89559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34ec4d41-cd84-4255-bf9e-f5ef4372f5ee",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e6033b8-95ff-4e2c-8453-15d1fbaeb158",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "100df760-16d8-4f34-a716-6758fa1f27a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a41d2b98-733a-4aed-a7a3-c9a24d866bee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92223f98-5389-4c13-9c1a-1a70d409e8af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4891e01-08d6-42b3-986d-6b5091a1c1ff",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34ce58ef-4f19-4a97-a4c6-7e3120aded8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff59e24b-65da-4b27-9a80-30f34db91add"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a54ae99-1404-4258-97f3-c21729bbc40d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2880cdd6-6da0-4da8-b21a-a64ba2a8bff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0188329-5b86-4f1a-b0ce-014ab170b372",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66552b0b-c306-45e4-a92d-9d15a905cacd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfb8022e-239a-40b2-ac8f-04db0ce59360"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad20ca2-dcb8-4f83-b97d-ba77a651ead4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d03a7266-374b-45f2-8b25-f20dbd1d6976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cacc53f-3478-4b6c-a97b-0012f363054d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7382ebb-5790-43b3-b087-7efd8e434c1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89f507f1-e0f8-4de2-9b73-c11cef5c4b00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d785575f-2a7a-410f-a82d-1f4fb0198b41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4b4fefc-2010-4674-87a6-5f0e5cd7e634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "831b8be3-0f81-4327-ae59-eaadfa03d950",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baaff183-36a9-4f31-a714-7b1a0154801d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a041cf21-8939-4d47-8991-a4e3197ecc69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6afef04-497e-4f89-9dcd-dc1b94cc8819",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b092e0d4-8a6d-4957-b07c-c9df658134ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d8e072-1a01-47e9-af8a-0b95fbbc329e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8172094c-f668-4461-9c2c-a2cc6a452ed8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b523724-1294-40cd-8ae3-cd43fdd0fd3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc1e610-b705-4c4a-be42-16a0648fe76f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81dea579-b7cc-4eae-b0c1-58a5b6574e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1ef1729-cb60-4864-86ca-8f51f655cc0e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d43841-58ac-4db1-a4d7-af5109c07c78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "324d9f73-d616-423c-9b60-78d7c7eac2a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3197e19-2a10-4acd-9fa5-06e681f192c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daf25efa-4608-4e3e-9429-7e45b6272335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "410d39d5-29ba-4c20-888f-1a711a91717b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27cc7219-c168-4c75-bf52-ae628a06b5d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1820692-5f6b-496d-9b4c-ceaf637418b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ddf4ae-44a6-459b-bdf5-c3aa3a7022ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aac8c70-7c1b-4016-a46b-ffe78d9b2be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c656c07c-8339-4ded-ae8c-28de1dc37eaa",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e3591c2-60ea-4a26-8c79-116f3c6cd6d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1c9a0d4-3fa2-48ed-8ba0-5ba05aa6982f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "651a85b8-43c8-4324-baf9-f2d0b26e8185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7cf1a43-dce6-47c7-9840-64de5358ce7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8fb1714-7134-41c2-afe7-c84cca6365e5",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5120e9d-a405-4de8-82e8-c0ed60c28b05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da50ca2f-06b5-4300-b825-98d6cdd19d92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "171d20e5-ab0e-4b6f-9d90-d5b4a138d030",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "025d63c3-213f-43cd-8112-d67a39c58ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52fcd6e2-e56e-4e47-8b95-a7d16a931e40",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a613bc8-c69e-4b41-8abd-6358541def34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14391694-fb5b-45ac-9705-6547258ceb7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc7e517e-d139-47af-9ff4-fb7ca8d7b518",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cace719d-d508-4b77-9cd0-ab31abd90c42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb1cba3-b06d-486f-b616-43abb0c12fa8",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af1a0b8f-8e83-4f11-8866-d2a47a2b6fd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6063c5af-5303-4065-8b8e-a90afde961de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7e8473d-f87a-425a-83bf-8cd1dab6517e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05082117-72b6-423c-b525-3f0a6e8a69e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fb98189-5e49-48e9-9d9b-34163999afdb",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1847c04-7417-4186-9abc-3b0afaba519f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a822581-11fb-4b92-93b4-0bf11c31e97f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa2a4e0e-34eb-4d22-b61b-d41b38d5b8dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16f384ac-4e83-4e2f-83bd-352a7326498d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a54d422-7574-4dfc-9e31-96648fd529be",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884e9df6-2faa-456d-8a63-0a1ab9385da8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43dedfc0-b255-41e5-a691-519d0ac81a79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a8b4338-b0a0-4ec7-b51a-33de0069c26f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "799587e8-2d29-4090-a65b-1e22df0b40fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "029c342a-39ac-471b-bd27-ee73ba90755e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c8add3f-47cd-4804-a1b9-5cb4048bcd70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7da860e3-7d59-4e25-b10b-33888e4a898c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f7e02d1-6aec-4c7e-b6ee-bf6358d9bd0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca867ad8-686f-4169-945b-4e366ac23525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27ef93a6-6c71-4490-9495-851c1079ddd9",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d8c5636-4b28-4274-a030-03b229aa2d5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9aac2cd4-a3e7-436d-a3b8-4bdcb40ea791"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c713fed-a7a0-4042-83d9-848453e44ac2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c705e2a4-dce8-4bf6-9189-aed6d4994d7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab6955a5-3e8d-4d42-aa61-b07a3c71abac",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d88955-f29a-447b-928d-cc68087ce8bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "407bd1f2-83ba-4762-9af3-66e958b1d9aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e75ff9-f01f-49a9-94a5-5898bb60de12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bdd1ee2-64f0-4aa3-b483-9b4faca7ace0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec24f51-f6d7-4b9b-90e8-9e8cc9d7825d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c3f8dca-1e17-4030-9287-a508308c0d94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "925e4a59-33f3-4c1d-9754-a0d854858727"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a0fe2e-b8c7-40c4-be7d-6c4e12e75780",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1d7dd1b-c0d9-4abc-97a3-c0ebee92e305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab6d7f4-b48e-4e45-bacc-61f91475be44",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dde073b-e56e-46f0-ad0b-8cd5005f502f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4cf490a-abaa-4e74-8283-652aa7e10e1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf4f90e-2478-443a-83da-79f278447469",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a8c4f76-a948-49b8-ad98-26d3318b4c45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b97a88e-6150-4475-8e9d-c278ef650936",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70385988-871f-4e8a-ab37-2dab57624733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "236cd8ef-a607-4cae-9bf2-50aed0d4489d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54fd8e2-dd68-4fbf-9fd3-5d0779220cfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c52a1a2-97ae-4221-8abe-36716f078ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0702209-1967-4a54-b47a-8680e45a1336",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a12772e-10e7-44bd-a4f5-5a342a7465a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29fc6c15-e452-4963-8395-ea8b040219b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a376befd-2d69-4183-86b5-e910aa711330",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41c203fe-cfd7-45a9-b0b0-bc2abaaf77c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6267b0ac-eebd-4edb-bd6d-0036690a2ee8",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc047c6-151d-4bb6-92eb-86651bccbba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e16ac656-0aa0-4163-8179-f1e52a72e53c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "840cd547-0461-4e4f-a438-dc46e5252fc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e6158a0-cdc7-4ab8-bbcb-c264ebbafabd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "446f4c4d-ad68-46af-83c5-b27b9c4a1fae",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae2da155-9657-4d76-8c17-0c4112f08cf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0787ff6-7dc4-4f8c-9653-116e3124edb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e9c9fb7-f85f-4c76-bf50-c0e4b22efa13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2db1302e-6873-47fc-8142-e88e730f86bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a18adcd7-1c5b-4c9d-a061-45b5f41f68bc",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2610ecf1-6c73-4701-a392-003cdc2c4b1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c22c47fd-2f22-40cc-84fb-da6f82b958d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "205dfe5e-0d96-4019-a415-fb53b6850468",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "373bbd40-710b-40ba-9c17-5ef1a4d2db0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e023cd-0676-424b-a65c-626487e7b5ce",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dce3b78b-83fa-4df6-ad75-f045fafa7729",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72081dc0-640a-4891-9005-f171bc046c83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b253bb30-9c22-4e7b-9f40-b7678fc0a04d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8259fa00-c966-4e13-8751-96ad3d38c96c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fa80faf-aefb-4c49-8fc6-04afd1a63788",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ddbed03-9744-42cb-b115-209e8b323908",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5055f109-3087-4189-a345-79a49bae4588"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d94967-a0c7-4508-85cf-2116a1e4d572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c17cdfa-be0c-4247-9abe-d3293779bddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fff98ce-c5e7-47dd-b0df-f665bd81ae5a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ab398c4-78cb-486a-98c7-b181f928d90f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cbdfed0-8385-4098-91f7-2fbbeddbd27f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e70bd65f-5d2e-4480-a77b-17a650cf133d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8771338-0b67-4eb5-9457-00a8855fba76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3fe5617-0e3a-4eeb-b253-8127c956e204",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "552c6102-bc83-4725-b4d7-5b5ae9927b47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3cd79ed-f32b-4250-a7ce-a408ac786728"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e58678-5173-4404-adb9-84b39ef9c614",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51ad5d7a-17eb-4c12-bda5-9382a549d445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b282bf0-bdf5-44e0-b758-9d739ee1778b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57b95772-d3e7-45de-bba7-8a615dbdda94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7cdfe9a-6e76-414c-9f33-d0c1c98490a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96fdb70e-e64d-4cdc-bb8e-a113767fcbf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "259951cf-090a-4294-9b94-711da11a0dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22eef2c8-3c9b-43ff-b991-27a32cd731bc",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9323277-2079-4a3c-98b1-c7f32e32b08e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d42a119c-f0d8-4403-9663-7195fcd634e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a00e3660-4859-4dee-8d9e-dcbd301712c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b48573c2-8391-4794-8b44-71dfbf675e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ec7639-dc4e-4105-8f9e-a8935da3b370",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19083f94-cd4b-44b2-9cd6-767b1e3c770c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4238c2b7-5d96-4c25-a177-c5fd312b2ea6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a1ea12c-5ef5-41c6-8f93-66c10b18b09b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91b86994-c328-4c32-8286-bfde03ff966d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec328f5f-d48b-4a01-8cfe-c1578724c5a7",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "624b7c84-a504-4d44-bdc3-9fe37b4aae89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1310c7f-05b6-4230-bbe2-00ab5267d5f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf78bc27-be95-40cf-a478-b6e3ce8635b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5f0ca4b-0590-4b47-af8a-869d9ecf6328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab310b83-63fa-484a-869d-c8ad0c4f8c46",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86a80eca-26fa-4a62-8b1c-b23db5382697",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3606ca4a-33b7-48b1-8c29-6d727febfbe2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24e96989-033b-48bb-a7d4-189bc27680ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fff5eafc-5e69-4618-aeaf-bdd36432fdd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c32d4b1-a689-4dd3-8e7b-9f569bddbcdc",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef353eda-3560-40e5-8923-a8045b780109",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efc7b6de-2267-4c3b-8415-d30d86cd36cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ea14c41-f15d-4d53-9872-efb151f67f40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9f19782-717f-4e79-9aef-eb01d9c72ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc2981e-f138-4f75-8cf6-b2c46726ea61",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d57c9857-a0e6-4bab-97ff-6aea6cf61457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf826d69-0f34-40c7-8a8a-c83d608b5f7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "918842db-3f6f-4baa-845e-a646a1e15f90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "821d8c53-284c-491b-8d13-8fe0124876c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e1abed-e96f-4928-adfa-c4921551db8f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6251187c-0bc8-4d03-a907-52568cc2148a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "470705ae-c7e3-4644-97df-22e2e95fcf80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "786d405b-7906-46d7-8d8e-ac8eff6b2fef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae926cc1-8e01-4d76-93c5-73a46442f8b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b2563f2-74a0-4dee-9026-0eedff8147a8",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecdd7f79-bc65-46f8-8959-d9f7791fe161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8713ffbc-e345-4048-9cc3-3863352718b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e7105db-be4f-4252-8ac9-e63dad158567",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18064cdc-245a-4f42-b44e-35bca456d5b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae897de0-6c20-4bd4-9b87-da5203846a34",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "790ef1b4-dea5-442c-b99e-982c3886e2a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86a35c91-177a-42f2-86d6-678de8942360"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e456a44e-0d15-4f06-8e63-a5b69e8092cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c355a766-6492-4cdd-9fd6-def55592f133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b05ce6c8-0fcf-4aa9-ad21-05b224577e3d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e7fa5ab-6208-4dc0-ade5-20217b63b75a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0fbdada-203b-4559-b9cc-89ab94f29bf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f17050f-d782-485a-8a2a-d939a66c0caa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5729f1e-3129-43db-816e-54ba4199d4d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7863425-872c-45ef-be43-cce835f8c9af",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f77f15-f03f-40d3-8630-ef6e2965ec19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79c98c02-bd1f-4da5-a479-d0885b20325e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7660e8b-de04-4dbe-a245-dd108bdeb467",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c10b4bfd-201f-4a30-b9ac-408b5a1ef4f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f38526fc-fa99-4984-90b4-d1290e01ac4b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c432778d-d153-4ac4-906b-6ce8d7bc0aae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03a60ffa-2add-4cd0-851e-ee8126755539"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e998f1-f851-4e84-88a9-f72acf216b31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9cd53f7-97a9-4087-a4cd-9d8b7bff737b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7b07caf-ab1f-467c-a877-bc24ecbb40bf",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dadc6675-4004-4050-965f-417aaedefbab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79f06224-3c97-49f9-bffc-e93905e4327b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de2317d0-a8fe-460e-a474-17e9dc14840b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17d0e1aa-dadb-4faf-b820-2b01c930a209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cdfeeea-8b2c-4a85-bbd3-9a896ca9d443",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48bceea9-e352-4eff-9111-40817c1e4203",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f089183-2211-40dc-acb7-3db8f3a83839"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "707d31cd-8a02-4110-b6c0-01d6688a680c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fd8bda2-8bf0-414a-8534-298ddc0feb5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0212767-b100-4ca7-8c6e-3d735743ac76",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "305aaa11-ed20-4546-95db-4fa4281ad1db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdb802b2-152f-4e9a-9515-2ec158fa7e0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d59b18-0611-4ea9-8730-c246ee084d22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1f3d564-b827-416b-9c47-0f5a52f737de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f0ab3a-2742-42e5-a42f-48a2ed483fb3",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b6c264-8da5-4736-a3a2-02661b0cbf44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f5846ef-5f29-4406-8e56-084d7fb4c112"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2bf15c-9769-462f-85aa-e0b29859477d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acc8ec2d-b979-44a5-874e-47cb59588f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df2d14e7-12c4-49a0-9c8b-9579c9ad7295",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ae88e5-b15f-425a-8a67-44596d5d7a26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ba39793-069b-40c1-8d2f-3275f6084d6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4feb0443-5e96-4b0b-99f8-b8fd970f5806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a531b333-ff3a-41ad-9bbc-31d7dfe401d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e3a4b9-808a-4081-838d-772ab9e61e98",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b9be69f-b6b1-4b41-a176-2ac6d3b1717d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6492b5c7-7813-42fe-945b-eb8a866989dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a628c4c7-7db7-4ae7-ab06-c257452878a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "802a8bbc-e5c6-4f80-aeb4-0c2445eaf22b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13bb5906-f19d-47fa-89b3-b7743bb998dd",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a83a3a6-2112-4708-94c3-a3f6beb3ce21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3d045e1-db69-4786-83dd-fb93b5f4edd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f590a756-4c42-4889-8295-04c46a95fae1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b95a2ff-3b81-465b-b997-d88c1cc138c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f1b0dcf-0c3f-4bd1-bc7b-8876206d8f56",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfbf5b56-9f70-4bcf-b7d7-2866150b865f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e4ee7a9-cd40-4298-872c-1fa831f7f2c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b5a833e-513d-4a7a-80bb-4401df056aca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "898cdb12-8152-4934-8c29-d7d2ec5da42d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de1a4ae-0dec-47b1-a32c-7c997180ffc0",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd43e7f4-56e0-43a8-a9e5-779c6fd80762",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2fa1788-5c3c-4103-aa50-dd840f06fcb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7291cccb-cb1d-472e-9984-3df45d44c836",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2031a7bd-88a5-4c73-a8f9-1d54989cb3b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e0681ec-ed4a-433c-91af-497941701c0b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f69515d-a80f-49e0-bf4f-20bc2523adc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e304c8d-d405-4865-a99f-b33b0a6a9714"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b89c81d5-4e18-4f9d-81d3-104f9e5a7b32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbcc9344-2c77-45f9-b30a-fc2a113ec959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9db51d6-a7f9-4c93-9104-f748a2155d0b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a4bff0-f800-4500-b301-8cab1c4c7a8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d226df15-0fa6-4b39-9d01-53cb33a6bae2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4232e2b-84b2-47ed-9487-0b628b95244a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08091dc9-db93-4b1e-97fb-442c9660530a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fc31f57-f0e6-48f5-bf8c-0d6d1a7ffd8a",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b329783-dd01-44fb-a2c3-11b386577bd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9eadc16-b4ff-4f4a-80a2-8ab09d688759"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "629e894f-d339-4798-9da2-93f1f958a51c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f02d1273-71f0-4a9c-8444-22cebac0873f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65a10fd-259a-4ecb-bd38-d314f7fb76e3",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b4d3f3-4d71-45b0-a0b2-391a95689dc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4aaeeeaa-9cff-4e9a-9119-c81a24f33323"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e7e4b86-69f5-4d09-87ca-0c622e17e78b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3152cd4-f664-4e1b-884e-b174fcd32c07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9737119d-a75d-4166-8ff7-c3e8c043e0a8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b6e4333-1c63-486b-9893-4662f8895f44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ad78e23-b65c-4372-9bc1-8bcd5f0faf9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c580d427-5171-49f1-8da8-f1e39729570e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4abc1448-f27b-4715-a7a0-5221ab84a0b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "821e7788-2fec-4ba4-b35a-8e364d48fe58",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c061467e-0cf8-484e-b545-0e2259286b9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30563e25-f9a1-402e-8454-9e252e61c73e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a02bdd-9f70-4266-bcae-e586b54c17f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8246356-21bb-4156-9990-e2e0934d6d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a81bae91-0d97-4432-82ab-d080dfecbe3d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a0c981-736a-40ca-8a32-c21ffd48be2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0190f93-c83f-40c8-adda-0e61a048e440"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3958691e-9919-4e39-8db9-90c49391a16b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "284bf797-c278-469d-a157-e55b635fef5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf57d3b-4cf7-4a07-aad3-b22498534b3e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0861930-23e3-43b3-953b-c359db5a3a91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dddb2a2-e2fa-4db1-89ca-0444a1ec3d0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c772a8a7-31ec-4894-b1cf-1f2c9d160dfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1021787a-dbac-475d-8287-df6050fe9f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "740f0a06-a86d-4f9f-ac46-10d09453bedc",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b355994e-d06e-4ee5-957c-3c09c541978a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f954f7d-5743-4013-85ea-567b1d7cc8ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee9a514-ac66-427b-8d6b-5171b5b80a67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd8e5343-9488-4bec-870f-182321ff6338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ecf8d5c-2fca-4143-934d-f88ac6f4e9cc",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86853f88-3eb3-4bb8-b04e-333c5173a63d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a5f0b04-6905-42e4-bb25-57043cf850b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0089ac17-44a8-437e-b25b-3a6fa568b538",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29571a00-6532-4944-a126-a9dc3539e804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3128e8f-b794-4996-990d-890a23318e7b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e80707b7-2916-43c3-adfd-4cddd16db386",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ba12dbf-4a1f-4f07-beac-b47a25475aab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "058f3519-3fd9-4c8a-86cf-f7bd4338e1f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38160d12-bf02-4d88-a122-4fc16c35b4b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d0fa38b-fd46-4593-b0d1-e02cd68d72f0",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e28433f-4917-428a-af2a-cc31b4df8cff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b44863ca-6dcb-4161-a938-53990db20cc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f5725b6-e49d-4446-b115-2d95f58bd561",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b53ee239-2d52-4b5c-aa8c-781b1d5c63c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d9ba8a-bc9f-4eda-a42a-720fced3b2cb",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "572a2c9f-044d-4273-a11f-32747c5de0d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "966bc743-b321-486c-b33b-e7efe99caf3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "629831b6-2e62-4205-ab7d-624d9d08dcfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a13bb9b-f6e1-4564-9211-dfbac78c30fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da9e89aa-33cb-445f-b230-551b0cc6009f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13bb671e-a0aa-4af3-a6cb-8089bb423e1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68d9f817-f29d-4833-bfeb-6e19968cfef1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada85998-a571-47bc-aa34-2e13ee77f168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d77c7c7e-6c7d-4a3f-ba1c-57a0d79152dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feadffa6-fbe3-4a90-a97b-7e0818fd29d0",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c01ca403-fea1-48ce-8382-4d8540a5b477",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa071d75-8729-4f1c-8baa-c1ae63e525d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf6d871-4ec6-4e02-b740-c69270d2c641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "137fa951-89ee-4bcf-8455-5f5a50b4045a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa663ba5-8551-40ea-96fa-f4b4d4985e68",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54aceab9-d21e-476c-8344-8d0d99335af1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c878041-b070-40bd-8ac3-f0ced44139b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "413bef56-98fc-46d0-afa6-8d1e29d47673",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db2b631a-9f2a-4bec-98b8-8cab842be8b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef1f13b-3579-4e58-900c-aa0e931ad308",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c92ce61-12a5-414e-87c8-3f5d890c588a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8013fa4-0e1e-464f-83c5-c02bcf11ae58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d585c42-8eab-4897-98f9-08486735640a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e15d7405-2941-46df-9bcf-2d0ec429ef7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9337eb6e-0e98-4c7c-84af-da788f42cf40",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a7219b-ce52-4b27-b967-93159e61ecd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "425ed8eb-0d43-4617-9854-2f4b5b5b8205"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc857bef-355a-4fd7-b883-aaefa2536121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51dd46d0-c023-483e-8d70-24d9e2a89bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36c49d8e-e420-4972-a3e4-51d689d82060",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c72968b7-11a1-411f-8d11-feaa904fc2a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bbdd500-6053-44df-ae63-2200b7ac870c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "628d91a4-e8be-4728-ac19-df3e4dbb70fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57bff4ab-acdf-430b-8ad8-cf21278d16d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4259c6fd-b81a-420a-bcc7-3cad325c00cc",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48990267-adca-4b05-b2c2-9b8bc1268e60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b6b8443-69eb-4a69-a62f-15a29d253242"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e73d484-9482-427d-97a5-81e8cfab592c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b21cf344-e0d6-4be8-ab1f-38174c4b0a7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de45a50b-3c1f-4814-bf17-48e4db4566ed",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f9cdda-6b32-4b34-bb99-9027d692f4b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c37c1ae-ae09-4463-b261-68efd8d6fe1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4972ea7a-d360-41b7-a47f-292cb3cc46d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05527f30-3729-4cce-b6f7-9de8d5f0a9eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "072e728c-cfe3-4e74-af70-4f7a1e64879c",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e93861eb-6e1c-44c5-8679-c7b401c8b9b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de13e8b6-370f-4b19-8b10-c14e0cc1ba08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e154a34e-0a45-410e-b4dc-9abc09c20448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "128fa65a-b112-4ef8-a0dc-9bda79af34b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb22a705-3b87-4ab9-9288-428e83a670cb",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e79c82-d841-4ab4-88a8-248beeab83db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "279acec7-b86f-4b43-abb3-9480022bcdf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba89f6cb-7a4f-4eb3-a10b-d766ef1e4637",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4646edc4-e12e-403a-9e37-013357d1dcef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16477c5f-61ca-40ae-8c6a-040ae5933acd",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aacdb898-93f9-469b-bb1b-56331ae06f7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4504944-1c15-4da0-ae22-f2907da95e82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0bf15a-d91e-4feb-98ad-b3784d03c0f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e55d9099-0200-46d1-a930-c0f3493cdd35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab2409f-0b85-44c6-83b2-92a58ae3709b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5cce3a2-02d8-4f64-997c-53e2d49b778f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0eeed523-a2e3-45e9-b962-a654a00fbc81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95aedfd5-35a5-4118-af5e-70833e4759db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46be34e8-5734-4a61-a6d9-fe42affe3c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45e24cdc-b132-4ec4-adc7-3c542c0ad390",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9023bbad-caa1-4b93-92a2-9e5f0006d456",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dfeb71f-946d-49f5-866d-78b5058f8c74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a94b4f99-d37e-4d04-aebc-4d4eaa608100",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5fe1ef5-644b-4af1-aa41-a550b36ecd7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a548d6-1c2d-429a-b43e-99e807568d9c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db9c3e1-40aa-4c4e-8873-64485ae36248",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e72a44ed-2f63-468d-b4d5-e613b19e3858"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38aa566c-2886-4d97-ae18-30ff309207f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "621d0adf-f37f-4978-ae11-b6ab87532154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b2da7d5-d63f-452f-a2e4-c7a4cae38dc5",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce881fe8-e68e-4940-b338-9e17e5876c8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0f1acbc-1575-4960-bb1d-e65c8a9b398f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4acdf23e-3511-406e-a3c3-aac2ac52ab62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2273ef1b-3c00-4945-8a88-8c8715952dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5957ed43-64ab-4fb5-82b5-6f6f15bb31e5",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b7dd3b-68d3-4af4-b80f-e337ded68af6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d238f97-b20d-4908-b1d3-81c2dd0e9879"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d3e8efe-8a9b-4a30-9936-17939e29535c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "095d3801-c357-4c11-aa1e-6090cab24fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca15f0e-7dd2-4d12-8f1f-b3a3f482aa06",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af0bcf7-8f30-49af-9364-e09984e6cbc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "884bb698-3898-407a-a872-6731cc6d0ce1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49bec80c-563a-461c-a8c6-9b1fe1ce412c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1d65eeb-69dd-47e3-89a4-c7c794d033a3"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "504b8f26-9f5b-414c-b625-489b713b1258",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c68902ab-bc97-45d7-85fd-debf4bc14ff3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "06e73ceb-48a6-4f49-8965-70354e53f866",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "70911863-9812-45c4-b439-c9e244f3ee52"
                    }
                  }
                ]
              },
              {
                "id": "a0a0c1c0-4947-42f2-8407-0b730f7b749b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "26f82a37-ce7a-4ce3-a7bc-6d97ff67da96",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0549ae9-f61a-48e1-ac40-7def07b1ff42",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "80a566ea-37cd-4445-8c54-93f9d59397a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a1965db-17b7-4890-985d-52635d4f86cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "883fd99e-2f4f-49e7-9424-8547c630d0cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e69707b7-2355-4933-8cd2-a916085aac34",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57fbc9b7-436a-4e97-984b-0254b9555549",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "51620fa5-d5f0-4a2b-9736-89c75f0e3bc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5457561a-68fb-4574-bc69-21e922d6e049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a9a5f18-7d73-4490-9e3b-0368db0ed838"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b4fe47e3-4ce5-4c0e-af3e-fead2ae855ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2fe2a371-46ba-4bcb-881e-bc5415bae5d8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9aaa7cc1-9dc5-4d71-bd87-ff11910b48b1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "03c4ac6c-a98e-400d-af9d-f45d7ee53c28"
                    }
                  }
                ]
              },
              {
                "id": "fa5dc184-abdd-459b-bff5-8d3471179f42",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c5ccc650-6a2f-47f6-80e5-0eb5056ab1a1",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e621a55d-2bf7-4299-896c-810231c321f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "60ec3f49-1edf-497a-bcbd-36545c936b02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f5178bd-42c2-49e2-804c-b3628c804e0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c283d877-694b-4a3f-af9b-bcaf26fdb15a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f2572d5c-d8b3-43cc-aee8-8f81f0865c05",
            "name": "Positive Testing",
            "item": [
              {
                "id": "23db0627-0b7d-430d-882a-fd81e33e36e9",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9acfe0cc-1585-418c-b7fb-fef1faa6bc76",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "53e82045-b1b0-47e6-8689-4c89f240eb92"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16de8474-70e1-4075-a627-878258bd1cca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "45641ca0-ef00-4667-b718-aacba43a6c67"
                    }
                  }
                ]
              },
              {
                "id": "6e622902-2282-4d46-85f6-41cf2e8773f2",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b3fb715-74f9-4ad5-a0df-afbf842338d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2c5c4a16-2845-4f5c-9c70-f578ea9081ce"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "70b09996-2052-44f5-98d5-d9560b5db33c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed4c6c72-3862-4f5b-91ff-f324658c09cc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d2e9ddac-d4e4-40d8-99b5-c3a880b1e36e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7ab48dcc-bc38-4ec3-a868-631bfe0dc758"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9c86336b-c691-4722-90e2-7091af8ac94b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "63d93037-049d-49c7-9865-c215b1d9a3db"
            }
          }
        ]
      },
      {
        "id": "e1faf0a2-e355-46f2-85fa-c18267a03b0a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "7f698a99-fec0-4855-b4c0-f4e3c9b7b2ee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5b169d22-ced5-4db1-8462-73c5c3bea60b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4d13045d-7c11-49bb-808a-d1745a511253",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acef365f-a648-4449-b4ff-2e0f7e47d9a4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "982d41bd-e88d-454d-93fb-a076e6469d8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd6d28d-e04c-4b04-acae-f8fa5bdd2ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36cb61b2-3e72-4494-ac2f-7f448dc2f00b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d69e8cec-63e5-4d1e-bdf5-02ef5856331f",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "721418c8-0582-4c2e-bf08-dad3903ceb7c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d24f0be8-9bcc-431f-a093-0deb9c18a623"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b86a9fcf-f35e-490d-b4a8-f4b23cd74531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "722aa7f4-4888-45b9-aa5c-1e5a66480d12"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "02be3ecd-688a-4f48-8e3d-e40c71a4e823",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9212155f-bb03-42be-9325-566d7693b8c4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b7a9106-0e1e-4e06-bf6f-189bc4daec7a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c88eb136-9bad-4312-b0c0-626be1c44e19"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "91315abb-3797-449f-9cda-923921de5e9c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "fb8cd874-0d77-42e5-b961-376aaa51be3e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5546bc99-3a40-44a8-bd0f-5d2c7e29d551",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f1bb8e67-d247-44c3-bf73-bf952f62d53f"
            }
          }
        ]
      },
      {
        "id": "881a3bda-d84d-47be-8046-09d13bfef942",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "88b709de-ef41-4f10-b7a3-d23f9c223376",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6588bba0-b55f-4630-b27b-713aed26aba1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e682456e-c5e1-48a6-9555-307b8ddd904d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5374564a-c275-48cf-94cc-fc70f1de6735",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45e00ddd-37de-4234-ae0a-7d2d7ae62b83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9481619-bc82-4623-9d45-db3ab88125f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eca67cdd-150d-4d0b-8e4d-55fd7dfe0457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bbc141e-9d56-4e4d-89dd-52828b84eb15",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eca8da8-0a7a-4e08-bf76-ea721838556f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7d4dd28a-67c6-4539-9204-e2866a302c9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f94999e7-26fb-4473-a1e1-672bb7fccdba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "da7f57b4-9ff1-48aa-a508-c379858e8db7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d8ab4360-ed39-4953-a7aa-34f37d56e932",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c68d3210-3f28-4e19-bb3a-eb34ddf7a4d7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "87155c8d-8f8f-418e-95eb-137308239664",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a67f863-95f2-43f1-af67-4df1281040c0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0a9c24e7-f576-432d-b456-9787967fb195",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "134b25bc-33a2-48f0-b6b3-0cb5e0a6e911"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7aad7c1a-1237-4472-a66b-23c91a97040a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "03ccd64b-9e40-40cb-8b7a-8a5ee5857390"
            }
          }
        ]
      },
      {
        "id": "81cca361-7bc8-446c-8506-05e83a24df7a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "170a18ef-4943-433c-9b7e-31cc3eec20b3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ce84c5a8-4a8a-48e6-8199-f77f009feb39",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "16b701d9-f786-498b-9364-98293f1a6add",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c00eea8c-2f6b-4b01-8262-41037eb76078",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73022661-622a-4bd5-8499-2301925bfd20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f47471-59b4-4c12-9f06-aa95d010f140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e7d83058-6ac8-4ff5-84a5-afab7ec7835e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db33a656-1bb8-4e5a-b09b-cda63e17de8e",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97665152-2a1f-493d-a01c-17dc46ca2abc",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "be5f8541-211b-41b2-925d-94cea5f1e91e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5940b7bc-6222-41ec-a2c3-92ab0295b1f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe35b612-8f77-41e9-a048-7d6abc61999a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc3dc2e9-f332-4a13-9c12-4fa3c2d2f2fe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dcb276d4-ca7f-4cc9-ba96-98b9a827eedd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ff9b589-2f88-43e5-8555-75cb1c596d6c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "22e68f5b-e77c-44d0-88e7-862866a85d3b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d9b7a963-5ca8-47a6-a999-8106ea0793aa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "12af6149-3f0e-49d1-a5a6-28349b8ef4cb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e4aecf6-49f8-46be-acf5-8d49a156b0e6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1514631d-3ce1-4456-a119-a1e508d02e26"
            }
          }
        ]
      },
      {
        "id": "7e5eba46-224a-4b5d-a74e-c773bf3e6e39",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4d11c85e-d881-4575-ac40-1956dcc2dc66",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "40713a81-05a9-40eb-82bd-487a95c3bc75",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "188d33c7-8294-451a-aae8-2320ac1f8f86",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b84a8cf-ae99-4569-8b4a-34ec0cabb67a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "76a67aba-ff66-4ef8-b17c-473defd155ec",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 787.9269230769231,
      "responseMin": 13,
      "responseMax": 8584,
      "responseSd": 1048.4357865438958,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1680395985832,
      "completed": 1680396204119
    },
    "executions": [
      {
        "id": "6c017525-bd86-4b31-b585-22e2ef3b8b81",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "5df115fd-5b05-4ae1-b029-a671d639cd3c",
          "httpRequestId": "0a618787-d595-4712-8d17-04645816bcd3"
        },
        "item": {
          "id": "6c017525-bd86-4b31-b585-22e2ef3b8b81",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ba14a4b4-7fbc-4a56-b13f-ea5c39221f6c",
          "status": "OK",
          "code": 200,
          "responseTime": 99,
          "responseSize": 0
        }
      },
      {
        "id": "883a9ac3-a473-499d-a1c0-2e302189bce4",
        "cursor": {
          "ref": "822080a9-b9ac-4ef8-a4bd-bc6d31135110",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c154afd9-b76b-4267-ad69-4857b1099522"
        },
        "item": {
          "id": "883a9ac3-a473-499d-a1c0-2e302189bce4",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "94b176f6-faae-47bd-b169-8defa5b8a4f0",
          "status": "OK",
          "code": 200,
          "responseTime": 13,
          "responseSize": 0
        }
      },
      {
        "id": "cbae9e25-8d60-4331-9b58-5bb163e8fd5e",
        "cursor": {
          "ref": "4bc9f448-1cd3-40e4-906c-5c654cdbb88f",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b5f65e97-ea46-44ff-89e6-41b574ebd750"
        },
        "item": {
          "id": "cbae9e25-8d60-4331-9b58-5bb163e8fd5e",
          "name": "did_json"
        },
        "response": {
          "id": "9bd9eb90-6d13-4721-875a-2d08512f1dad",
          "status": "OK",
          "code": 200,
          "responseTime": 1134,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4adc2a9d-6a51-487a-9a40-428bce72fd5e",
        "cursor": {
          "ref": "02c2cab1-e2ae-45f6-8786-053c49e465e9",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0e6f7ff5-2a64-44cf-8caf-ea108ec90bf7"
        },
        "item": {
          "id": "4adc2a9d-6a51-487a-9a40-428bce72fd5e",
          "name": "did:invalid"
        },
        "response": {
          "id": "2131d564-7cdf-4fe3-902a-efc5dd9ac3ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1929,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4adc2a9d-6a51-487a-9a40-428bce72fd5e",
        "cursor": {
          "ref": "02c2cab1-e2ae-45f6-8786-053c49e465e9",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0e6f7ff5-2a64-44cf-8caf-ea108ec90bf7"
        },
        "item": {
          "id": "4adc2a9d-6a51-487a-9a40-428bce72fd5e",
          "name": "did:invalid"
        },
        "response": {
          "id": "2131d564-7cdf-4fe3-902a-efc5dd9ac3ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1929,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d78de826-33d2-4ade-ad98-935495c5fd84",
        "cursor": {
          "ref": "f6c710ec-8af9-4223-a98c-240e4846bc1a",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a1af437e-ee98-4a06-b4f0-fb1441a4e3dc"
        },
        "item": {
          "id": "d78de826-33d2-4ade-ad98-935495c5fd84",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "bd0f8165-40a3-4038-909c-bd8f93abcbc9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1224,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d1b988-349f-4031-bd17-26cc04888d4c",
        "cursor": {
          "ref": "9162cf67-9efe-486b-8ff0-493e2c77521d",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "67aaab4f-3e72-44f3-a806-d3851a088324"
        },
        "item": {
          "id": "89d1b988-349f-4031-bd17-26cc04888d4c",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "b2e5bf6e-723e-4004-b1ea-2d2f1f1b5378",
          "status": "Not Found",
          "code": 404,
          "responseTime": 646,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eedf35d9-f7f0-4131-a69e-ec9341ab9e26",
        "cursor": {
          "ref": "2fca5d64-d301-4547-82ad-1548a52daa9d",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f7a213e7-fa82-4bce-9ecd-79dd1ec36813"
        },
        "item": {
          "id": "eedf35d9-f7f0-4131-a69e-ec9341ab9e26",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "792717bb-5e1d-4e33-95e5-a7f071b0a318",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33868e6d-9c06-409b-9074-d2933d86ac63",
        "cursor": {
          "ref": "6446293d-6e1a-4409-b914-953440ea56fc",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "83ec288d-aa41-4d09-b263-2293d0ab0e54"
        },
        "item": {
          "id": "33868e6d-9c06-409b-9074-d2933d86ac63",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "2a482559-1da1-41ac-aabb-79dddf236d49",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 702,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33868e6d-9c06-409b-9074-d2933d86ac63",
        "cursor": {
          "ref": "6446293d-6e1a-4409-b914-953440ea56fc",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "83ec288d-aa41-4d09-b263-2293d0ab0e54"
        },
        "item": {
          "id": "33868e6d-9c06-409b-9074-d2933d86ac63",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "2a482559-1da1-41ac-aabb-79dddf236d49",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 702,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f5e2d7c-2efb-4b85-a7f3-cfa25804a6c4",
        "cursor": {
          "ref": "fc1bb6b0-2859-436f-8fa5-4f3919d90fa8",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "be4185a6-d86b-495a-a756-e292699b32c2"
        },
        "item": {
          "id": "5f5e2d7c-2efb-4b85-a7f3-cfa25804a6c4",
          "name": "identifiers"
        },
        "response": {
          "id": "b3bcef0f-e1fc-442e-b91a-6b061dd8eaaf",
          "status": "OK",
          "code": 200,
          "responseTime": 1193,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "343770ec-c2d4-4025-9533-28390349a162",
        "cursor": {
          "ref": "b7f71d2f-3e48-447f-980c-a67c60abdb5f",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "621dc869-a372-426b-847a-216287c7454d"
        },
        "item": {
          "id": "343770ec-c2d4-4025-9533-28390349a162",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "576b7b0a-2fa1-4fef-8727-a8a0db75d794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "343770ec-c2d4-4025-9533-28390349a162",
        "cursor": {
          "ref": "b7f71d2f-3e48-447f-980c-a67c60abdb5f",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "621dc869-a372-426b-847a-216287c7454d"
        },
        "item": {
          "id": "343770ec-c2d4-4025-9533-28390349a162",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "576b7b0a-2fa1-4fef-8727-a8a0db75d794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9204b06e-71d6-484d-b03c-7e9203d12040",
        "cursor": {
          "ref": "0a1ae443-37ce-4185-b4ea-4699fa37c97d",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "34c951f0-502d-41bb-9687-460b29ecd040"
        },
        "item": {
          "id": "9204b06e-71d6-484d-b03c-7e9203d12040",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f9968e6c-6405-4ae3-9495-b5ca4885f820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4161993-dce4-4ec7-8497-e40f13feef21",
        "cursor": {
          "ref": "f3d3bd64-93e0-4354-a430-908bd55de799",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "3792629f-1dbb-498b-92d8-3edc7dc9d077"
        },
        "item": {
          "id": "e4161993-dce4-4ec7-8497-e40f13feef21",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ad66e04b-d0db-4255-83dc-0f1db5286452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a69e4fa-dfd3-465a-8467-951574928958",
        "cursor": {
          "ref": "3963b777-f7c2-461f-9d11-7ecbb0e0f382",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "71164412-b4c6-4f51-ab10-5932eaeb074a"
        },
        "item": {
          "id": "9a69e4fa-dfd3-465a-8467-951574928958",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ec94fcfa-c065-44b9-b7a2-01213a1c6ebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5cd9a35-c0d5-4867-b350-ded12f3ab10c",
        "cursor": {
          "ref": "3764072c-80b1-42b7-a62c-4824b46dcd84",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b9317b0e-e23c-402e-b7a1-9042cd0af2c8"
        },
        "item": {
          "id": "e5cd9a35-c0d5-4867-b350-ded12f3ab10c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a0c03b40-48b8-454e-b1ee-14f9128e4393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37fe4d53-cb43-4d87-ae05-7d122823f7f5",
        "cursor": {
          "ref": "b392aced-9883-4516-870f-2b794cbee2c1",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "97627a8d-04d1-4702-902a-de331e4fef13"
        },
        "item": {
          "id": "37fe4d53-cb43-4d87-ae05-7d122823f7f5",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "7f7c943d-54ad-43e1-bb93-8507607cfff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ff0db2-6deb-4d79-9753-dda8961971cd",
        "cursor": {
          "ref": "67de9e85-526c-40e6-a831-9a63db33e14e",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "04eed999-5a50-4d8d-9125-0390d8a50c24"
        },
        "item": {
          "id": "f7ff0db2-6deb-4d79-9753-dda8961971cd",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "ffc66ed1-8365-416d-a85c-fa0ead1aee44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e12c13-fc85-4eb0-9e90-2e56665445b1",
        "cursor": {
          "ref": "f6e2e7ab-70f2-4cef-b5b6-bfec17541d75",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "318f4f2f-2c57-4f37-9af2-c3a1b40dc636"
        },
        "item": {
          "id": "b7e12c13-fc85-4eb0-9e90-2e56665445b1",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "0363748f-fb8c-45b2-aa9e-e2e77fc606bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba47aef-ec60-440a-9a01-ea3a13869faa",
        "cursor": {
          "ref": "20814e02-2f6c-4475-8e95-929ea835c655",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "acf5c0b2-3d49-45a4-8296-111864f4aa2b"
        },
        "item": {
          "id": "6ba47aef-ec60-440a-9a01-ea3a13869faa",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "aff028e2-bef3-4f3e-aaf6-53166ebc3da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b2f78ca-5b5a-434a-a7dd-eda88893eb10",
        "cursor": {
          "ref": "cd5d2274-7065-40ba-b8dd-0cf6eaee2a4f",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3f0ac221-a0fa-4286-b68b-b8934d0a3a27"
        },
        "item": {
          "id": "6b2f78ca-5b5a-434a-a7dd-eda88893eb10",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a3ad8586-9277-4ed6-97dd-9f112f971b1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3c477c-bcf1-4748-ae12-3672300e116a",
        "cursor": {
          "ref": "6132b417-2ae8-456c-9b1b-274e0fd5df8a",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "3883e1da-bc53-4260-b493-930f8ad7cfb8"
        },
        "item": {
          "id": "ca3c477c-bcf1-4748-ae12-3672300e116a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "82e5dc8b-9885-4393-8f3f-a1a3934b97df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f165de-3104-4a24-aef3-00ab4aef01f3",
        "cursor": {
          "ref": "17f2502a-470f-4092-ae9f-2d14c459df2e",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "aaba06ee-cd1b-4b15-895e-744812e59338"
        },
        "item": {
          "id": "85f165de-3104-4a24-aef3-00ab4aef01f3",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "88b982fe-ecc3-489f-b03f-2a7a3afa3742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6119d9ba-e7ba-468a-bbb9-2e6188889d0e",
        "cursor": {
          "ref": "865279cc-65ba-47b2-a085-6fff89e94ae4",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "6e13ae79-ef75-4fd4-9c70-7f2d30865bec"
        },
        "item": {
          "id": "6119d9ba-e7ba-468a-bbb9-2e6188889d0e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "a6bea6e5-3a9f-44ec-a953-0e435ae15272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 884,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05bf839c-f90a-46c3-b29e-b79d83cfe4c8",
        "cursor": {
          "ref": "cad483d2-43f6-427b-9da8-231f81463135",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "217406f0-b4b6-46c0-ba8c-89eb17a98e5c"
        },
        "item": {
          "id": "05bf839c-f90a-46c3-b29e-b79d83cfe4c8",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "9f5cf451-467b-4211-ba11-fa682d227f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1344,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fed88f8-2d19-4783-88b2-3d59663c5f31",
        "cursor": {
          "ref": "077f9663-d706-4b37-93b0-3766e1a9f498",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "35921c21-3da7-4b09-b6ac-7549a73a727b"
        },
        "item": {
          "id": "5fed88f8-2d19-4783-88b2-3d59663c5f31",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "86b8823b-0ed8-4f82-94c0-f6c5bce4905d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1571,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00b15179-2d02-4b0d-85f4-fb8769c4f829",
        "cursor": {
          "ref": "f5fda716-7519-4a1c-9f90-0befb8096636",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "2fdb5c47-5a17-4227-ac0c-25b67feb2888"
        },
        "item": {
          "id": "00b15179-2d02-4b0d-85f4-fb8769c4f829",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "023f5c54-d2ff-4949-8e20-b949acb67879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1974,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf97461f-8997-4baf-b18a-33f34303f6b4",
        "cursor": {
          "ref": "047655c0-46d6-43a8-a9f4-b47a32d2999a",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "9225c7d6-fcc3-4389-b013-96425fa38693"
        },
        "item": {
          "id": "cf97461f-8997-4baf-b18a-33f34303f6b4",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "17226eed-2737-4b9c-8def-5cc36d86ff8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 967,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d619b4f5-515e-48d6-adf2-c868106a0d0e",
        "cursor": {
          "ref": "9f73d396-ef68-4947-804b-54ab057e2507",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "346e88f1-c24c-4cab-9514-5a81e12c8759"
        },
        "item": {
          "id": "d619b4f5-515e-48d6-adf2-c868106a0d0e",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ffdf1819-5476-43da-9576-bbcb236fc78b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1157,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5594f16-f849-43c1-a8e3-6e63757f86f3",
        "cursor": {
          "ref": "d883575d-56ea-4007-b0bb-42dcacad7b89",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "dcec3ee8-1b90-410a-8283-9e659e847a57"
        },
        "item": {
          "id": "c5594f16-f849-43c1-a8e3-6e63757f86f3",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "4fa4cf76-0da0-4754-91dc-516b4ef90a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51512361-3cd8-494c-b686-271253492f41",
        "cursor": {
          "ref": "44d69d04-73f0-414e-a3ea-f8a9a974f392",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ebbed02f-5edb-4094-ad2c-e9562f6af114"
        },
        "item": {
          "id": "51512361-3cd8-494c-b686-271253492f41",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "2306a074-5e67-45ff-bfb2-09f3e5ce83e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "995a2e3d-fa14-4611-88ae-727a8414bcf7",
        "cursor": {
          "ref": "b104385b-6973-4e30-8464-6c6637b2653a",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9926bc61-cce7-4127-9781-4ef8b2e922d5"
        },
        "item": {
          "id": "995a2e3d-fa14-4611-88ae-727a8414bcf7",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "c92c74f9-feb2-45c6-b77d-cb4987bdd3f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "595baeb2-b0ea-46bf-b8a2-296720cfea84",
        "cursor": {
          "ref": "251e00d1-e5ef-4afb-bd3b-6d24052cc035",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "62345689-1947-4e7e-8eb3-9ee421797d97"
        },
        "item": {
          "id": "595baeb2-b0ea-46bf-b8a2-296720cfea84",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "bbb27e49-4f76-4c0b-8577-c0e3a16ab08f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e54379f-a5b1-4f21-b92e-c8552114508f",
        "cursor": {
          "ref": "7235c907-b02a-4dc7-95d7-dd28a8f2a716",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "4e414451-1e22-4d98-8629-f66c8d1150eb"
        },
        "item": {
          "id": "2e54379f-a5b1-4f21-b92e-c8552114508f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "fa983868-d806-4e91-9302-eb5aa0cc6b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83ef516e-f6d1-46f5-8c35-95e3a001b18c",
        "cursor": {
          "ref": "0aef65cc-b7dc-49d3-9c15-38e2abaae2f8",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7b759208-5fed-4cb8-ac17-09d6798a08de"
        },
        "item": {
          "id": "83ef516e-f6d1-46f5-8c35-95e3a001b18c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "b622d7fa-1522-47a9-8bfd-93eb50af9a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b68c10-1b02-48af-899a-277757dd025b",
        "cursor": {
          "ref": "395a447f-82fb-4cab-a71a-9f6fd5d4df23",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4484919e-a960-4773-8eda-a154fe7462c6"
        },
        "item": {
          "id": "a2b68c10-1b02-48af-899a-277757dd025b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a0901175-52b8-4ce4-bd7b-1e959218f24c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65bf8233-49d3-499b-b77c-e3fbf9efa902",
        "cursor": {
          "ref": "0bcf16f2-1d2b-4bfa-bc9c-21a44e53f101",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "fbf590bd-6792-49c2-8a12-050dae40e126"
        },
        "item": {
          "id": "65bf8233-49d3-499b-b77c-e3fbf9efa902",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c9090215-0794-47b0-8788-55a96e02d8ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e2da8d-d98a-41bc-964e-2fc455da3b0a",
        "cursor": {
          "ref": "13d1f42f-a504-48ee-b36b-c5eee7efbb89",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f4f54373-e86a-4755-84e6-127e4cac7916"
        },
        "item": {
          "id": "b1e2da8d-d98a-41bc-964e-2fc455da3b0a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "1d07af2d-2e6b-4f5a-8782-b6bc7e116cac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "841e1958-bb6c-48e0-b412-92e1f5eed6ef",
        "cursor": {
          "ref": "ae29699a-0a5b-439f-a4d4-8f162ee99d32",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "8cd705fa-d46d-4ff6-8c0a-de5c2894f2f2"
        },
        "item": {
          "id": "841e1958-bb6c-48e0-b412-92e1f5eed6ef",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "07e29f5f-8dc9-44a7-b5c9-2d214fc3ef1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35fb681f-c58a-4f37-aa4a-c2a6514f2fee",
        "cursor": {
          "ref": "52c4f164-0e89-4cfb-b01b-e070cd29a442",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "cd233d2a-647a-424e-b127-feb977375085"
        },
        "item": {
          "id": "35fb681f-c58a-4f37-aa4a-c2a6514f2fee",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "69348022-bc25-4675-80b7-fb2f66014fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc4a13e-1d0f-4760-9c0f-65a0943341a2",
        "cursor": {
          "ref": "42471b27-b5e9-4352-9430-7ecbaea4ac3a",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "da1248b7-f009-4690-b418-8366fb71e593"
        },
        "item": {
          "id": "2bc4a13e-1d0f-4760-9c0f-65a0943341a2",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "59809d20-637c-4484-b65a-e4a93f3381ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ea582b-6948-4f5b-b053-594c5e0bcbe3",
        "cursor": {
          "ref": "328574f6-27db-466d-8ba0-d6e5e9850b6c",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "4929ecf5-6983-4745-9aec-7fc2e5c6c4b4"
        },
        "item": {
          "id": "12ea582b-6948-4f5b-b053-594c5e0bcbe3",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "0f9da5f0-2df3-4c75-8dce-b81d19e00f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e040e63a-5b20-4505-9144-5d00b3af91d0",
        "cursor": {
          "ref": "0c1ade8c-e8d2-4c12-a072-53f720595e97",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "67f675e2-5a03-4f0b-82ef-24d35b1b05fb"
        },
        "item": {
          "id": "e040e63a-5b20-4505-9144-5d00b3af91d0",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "8f7a37bb-66d8-4313-9a4d-3b5441230f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 765,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf248c7-2f13-42ba-8dff-e61552246d40",
        "cursor": {
          "ref": "75d7071c-fab2-4d5e-9ec8-cef41807fc62",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c7ae88e5-8d5c-47da-92fe-d97b5fa6519a"
        },
        "item": {
          "id": "7cf248c7-2f13-42ba-8dff-e61552246d40",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "476f8c39-e85d-430a-8007-ab92cc65adf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01054de5-1255-4313-b0d7-c8e3f13085ec",
        "cursor": {
          "ref": "267dd504-03f4-4256-ba35-ec69009fecb5",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "bc71bbbe-0a8a-4973-8023-75b4956dbf2c"
        },
        "item": {
          "id": "01054de5-1255-4313-b0d7-c8e3f13085ec",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "bde49fa6-e61a-4b66-8162-d996350f061d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf2cea3-5630-4523-901d-094305126141",
        "cursor": {
          "ref": "9cc50345-dbb1-4629-b99d-46910808364a",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b8becf11-c7bc-4d3c-8e81-5717f64ee028"
        },
        "item": {
          "id": "baf2cea3-5630-4523-901d-094305126141",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "6d29d3bb-f21f-4c8f-9e61-68bfc1e9cd0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053a5f9b-e329-481e-86af-96cf6720ceeb",
        "cursor": {
          "ref": "35438ec9-a5d9-4102-b06c-a25a828429d3",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "46c10ff7-16a4-462b-8c8a-fde80fd6a408"
        },
        "item": {
          "id": "053a5f9b-e329-481e-86af-96cf6720ceeb",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c092c4e4-63b9-47de-8a4a-be654be77d0e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 798,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71fb8f1c-d8d9-4394-963a-2caa8462c472",
        "cursor": {
          "ref": "fb954608-e9b9-48b5-90b4-2d57dc3e174f",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "3e16a807-a175-4a09-9d9d-7c4f7e725d1d"
        },
        "item": {
          "id": "71fb8f1c-d8d9-4394-963a-2caa8462c472",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "76598e78-b053-4051-9142-25a19c736581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1befda77-8217-42ba-bc49-e3e19d26cb53",
        "cursor": {
          "ref": "310f376a-1c3f-4e16-a685-5cf3b49bdc53",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "df32cf41-dc50-4018-b8b5-42763095e3b2"
        },
        "item": {
          "id": "1befda77-8217-42ba-bc49-e3e19d26cb53",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b887cfe7-0e38-45c6-9ecf-bcb2ab283dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eee947f-647b-48fd-9014-0d59720d76e2",
        "cursor": {
          "ref": "2a177933-323d-43b4-a2f3-187f81f25bf5",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ffde9ccb-b884-4d53-b94d-046743421c03"
        },
        "item": {
          "id": "6eee947f-647b-48fd-9014-0d59720d76e2",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "5f69356a-9f78-4531-8c51-1c28a75d3dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d6e51f-bc76-4798-8f43-d15269378ff9",
        "cursor": {
          "ref": "d3c3fd48-ee70-45ad-a89d-513f6a6c428d",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "8a3c5a73-4298-4311-98ce-738d8e06d9fb"
        },
        "item": {
          "id": "77d6e51f-bc76-4798-8f43-d15269378ff9",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "2c7398c7-06ca-4b32-8fe8-574d2321c0a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6796888-e8ea-45fe-9386-09ba71fc2bc7",
        "cursor": {
          "ref": "e50ecced-c542-42eb-a257-c88d74b882da",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "734158bd-12ff-455b-ba93-d1268bd6f10c"
        },
        "item": {
          "id": "f6796888-e8ea-45fe-9386-09ba71fc2bc7",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "790dcac7-aa87-40a3-9928-579175e52842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e1ce2b0-7f08-429e-b323-a28c196cd9ff",
        "cursor": {
          "ref": "efb10393-cb6f-4b29-9179-c3b374dc4226",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "76471f74-2f60-442d-a4c5-d4e8305680e7"
        },
        "item": {
          "id": "5e1ce2b0-7f08-429e-b323-a28c196cd9ff",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "0389ce82-b91d-4f04-8fce-c730cb6131ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a9c4632-db14-4d51-9e41-cc8de8e2eb42",
        "cursor": {
          "ref": "d0b3ff6a-e049-49c1-952c-00efbe56a145",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "12984b74-0e14-45fb-b233-fa778abe05be"
        },
        "item": {
          "id": "4a9c4632-db14-4d51-9e41-cc8de8e2eb42",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "cde07a5f-d35d-4e19-bebc-f380c720ee5e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 744,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e72ca7-264c-4539-83ba-bc476d4892f2",
        "cursor": {
          "ref": "be9d805b-5a99-492d-8204-b247e613ffa4",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "584cf1e8-f250-48d2-9ec0-186a16f68e3d"
        },
        "item": {
          "id": "98e72ca7-264c-4539-83ba-bc476d4892f2",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "a45eef4c-399c-4c88-8bf8-93214e3132b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d3d4e77-b5ce-423c-b075-1046266fc767",
        "cursor": {
          "ref": "903b52b6-3a42-4ea1-8dd1-6051605edd1d",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9ff04b1e-17f5-42b8-83eb-f7a079a5d835"
        },
        "item": {
          "id": "8d3d4e77-b5ce-423c-b075-1046266fc767",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "1535b608-ac48-4266-b43a-134c6a63cf23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9938dcce-d0f6-4f78-9c3d-23d265b4ee48",
        "cursor": {
          "ref": "2b2ea0fd-d294-4fad-a02d-3b4b9a730f85",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "6fc7fb72-349c-4375-8040-468b82826de2"
        },
        "item": {
          "id": "9938dcce-d0f6-4f78-9c3d-23d265b4ee48",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "851b21ab-b42e-441b-9dd0-4573b7ca87e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f681f5d1-5fdf-4bc3-92f1-b6fb58894454",
        "cursor": {
          "ref": "9baf975a-05d9-45fc-a928-88774fc9a48f",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "9ae74f0b-1f45-436c-a39c-b9e057e8b10a"
        },
        "item": {
          "id": "f681f5d1-5fdf-4bc3-92f1-b6fb58894454",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "0c66eb95-a015-48fc-a901-cabc2cc47ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b0bb57e-7ee8-413b-9888-3cd37d22e19c",
        "cursor": {
          "ref": "dfab89aa-df85-4604-ba8e-fb42ca483a54",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "07535741-c204-4f84-aee6-8e3282209375"
        },
        "item": {
          "id": "4b0bb57e-7ee8-413b-9888-3cd37d22e19c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "f3dc1a9a-0e23-4448-86d9-ae327af6b087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78cea2e5-7b3d-4845-8bd4-bc94c173ff6b",
        "cursor": {
          "ref": "08a21cbc-e759-4b39-a05a-69e13cdfcef9",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "5c6cd651-e2a3-4da9-9380-5d7963024f3e"
        },
        "item": {
          "id": "78cea2e5-7b3d-4845-8bd4-bc94c173ff6b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "3109ac95-4b20-4995-9474-1d1a2e387b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a42fd9fd-0fd9-4056-8327-a7ba55154550",
        "cursor": {
          "ref": "4ff1c92c-fe63-4102-99f4-62c237134c19",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a2b0e381-2d2a-4798-9371-1c37a658200d"
        },
        "item": {
          "id": "a42fd9fd-0fd9-4056-8327-a7ba55154550",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f9ba87c1-3b79-4416-b2a5-75cdad6f08bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 736,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c4d7a12-167d-4f06-ac3d-b20407faa14c",
        "cursor": {
          "ref": "4a3fffbd-3327-49c1-97b7-0d63010db6f1",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "1279f112-e564-4e3d-a679-0f6b30f57a70"
        },
        "item": {
          "id": "4c4d7a12-167d-4f06-ac3d-b20407faa14c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c9996671-e1cc-46ba-bffa-6d16eab23f76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa683190-cf78-465e-81b7-64de4226c619",
        "cursor": {
          "ref": "50eea403-5655-475f-8a31-bacc20cfdffd",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "30826d8b-c414-47da-bb7e-bce8777b3c6e"
        },
        "item": {
          "id": "aa683190-cf78-465e-81b7-64de4226c619",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b05a585a-10b2-4590-9e56-f689f1d7d795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcdbddee-6127-486f-991e-ff8b03e8f1ec",
        "cursor": {
          "ref": "97ca2eab-b008-4e82-80a7-7e170137b782",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ba3f3973-f420-4a69-b705-667c2522030a"
        },
        "item": {
          "id": "bcdbddee-6127-486f-991e-ff8b03e8f1ec",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ee0a98d8-e29b-4ad5-a579-4b28bad6cca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee15336-4c36-4dec-8640-058de19a6679",
        "cursor": {
          "ref": "b1b4d504-10f4-4dbd-bb71-05798f4210e7",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "34d086b1-d7c5-4774-a411-db79785df59d"
        },
        "item": {
          "id": "cee15336-4c36-4dec-8640-058de19a6679",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "55e6c219-ffe6-4a17-9a3a-2c334011f79b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd9f355-dafb-465c-9131-869a50024b66",
        "cursor": {
          "ref": "fcd97765-64ec-4918-9b42-da4a2db1f031",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "0308250d-9a42-4da5-a1a2-cb44b22c7c74"
        },
        "item": {
          "id": "ddd9f355-dafb-465c-9131-869a50024b66",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "415ab1c4-9bbf-47dc-b4c3-7720e665830a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c27321-caad-4679-af5d-45d97861ff15",
        "cursor": {
          "ref": "e562dfa7-d2aa-419e-ac1a-8cef552632e0",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e72ab10c-5f33-4289-898c-08c4d68a1c63"
        },
        "item": {
          "id": "b4c27321-caad-4679-af5d-45d97861ff15",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8ab730d5-0cf5-4d3f-89b7-6f929a7b580e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f4846b4-d3ea-4417-b7d0-8c077c224400",
        "cursor": {
          "ref": "916c94f3-e97c-4257-8ef2-cd243489afb1",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f9977d83-eba7-4165-aadc-2286313eea56"
        },
        "item": {
          "id": "7f4846b4-d3ea-4417-b7d0-8c077c224400",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f9e08d05-9dc4-4cde-b799-3b8bd81c26d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c1650d1-08a1-4690-afcb-046531d34801",
        "cursor": {
          "ref": "9f9452fa-1c3e-42a8-a257-ca9d64f42b2e",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d5b51a8b-dbb2-4b3c-94ff-c71b4979b5b6"
        },
        "item": {
          "id": "6c1650d1-08a1-4690-afcb-046531d34801",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "9e7b25c8-a9f5-4058-9207-b852f44cdd1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c623f3ec-8f16-4b50-ad04-d08ebfb9faa2",
        "cursor": {
          "ref": "adf28964-60d2-4f0e-a15d-938f2d37c23f",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "7997b089-3a67-47fa-b7a4-cbec50fdd7ba"
        },
        "item": {
          "id": "c623f3ec-8f16-4b50-ad04-d08ebfb9faa2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "6e8fec28-c42f-4b6a-88ac-0daad3ceb665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d38f456-86c2-4d6e-81c0-c997af7e0a7d",
        "cursor": {
          "ref": "0543aac4-6fe9-48d3-8cc6-37116c8f4669",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "5d708a29-691a-446a-8fd1-d9ce4ae45056"
        },
        "item": {
          "id": "6d38f456-86c2-4d6e-81c0-c997af7e0a7d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "88216702-aa13-495d-b83b-461756098b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fcd90b7-3c65-4b96-b873-a4d2a0678aa9",
        "cursor": {
          "ref": "44041332-1cdf-4ab3-bd7c-21c83c416ec3",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "fce30a19-a7a9-41f1-b2b4-017cf41bc95d"
        },
        "item": {
          "id": "2fcd90b7-3c65-4b96-b873-a4d2a0678aa9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6cca24e5-9542-4f4c-b09c-4cc06ad1ab2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c228dea7-d030-4570-8782-39b8a799f468",
        "cursor": {
          "ref": "01ab3470-14cf-4f2b-92e0-168172dc2212",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "bc669a5a-53ce-4942-8e1c-c79861dfa9cf"
        },
        "item": {
          "id": "c228dea7-d030-4570-8782-39b8a799f468",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "3f19f790-55f8-4451-a820-29587a3143fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9dc971b-694f-436c-9e3f-e52a4773bc90",
        "cursor": {
          "ref": "c8270318-ec9c-49dd-86e3-fd6acad99532",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "bbf98b23-b0c3-45e2-87b9-e1aa8f1f795f"
        },
        "item": {
          "id": "b9dc971b-694f-436c-9e3f-e52a4773bc90",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "766ecdd7-c95f-4e30-a079-8fd2cb76fff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3d1dd9d-ebe3-44a8-a7d6-77e22e80aa81",
        "cursor": {
          "ref": "6dce0073-8499-4cb5-8330-7dc322334e20",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d2be5b18-7cf7-49c6-9dc0-723bd302ecf9"
        },
        "item": {
          "id": "e3d1dd9d-ebe3-44a8-a7d6-77e22e80aa81",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "299b6716-ef9f-4dad-9488-08a69010d3b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b480c108-dd52-4053-8162-9f415cd57587",
        "cursor": {
          "ref": "900071b6-9b4e-46e2-adca-95fe5c89ccf7",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6edb1455-7115-4e14-867f-f39e148e8b07"
        },
        "item": {
          "id": "b480c108-dd52-4053-8162-9f415cd57587",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e217f7a2-1c2b-402b-9587-82dc1808fd67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5686668-2565-47ec-ad28-e9024e57a9a7",
        "cursor": {
          "ref": "0a1c79da-82a2-44bd-b6e9-26b1698b11f1",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "6bf2d00a-fbf9-4a46-a3f4-5b72f56da997"
        },
        "item": {
          "id": "f5686668-2565-47ec-ad28-e9024e57a9a7",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "5ab1269a-4efc-4e16-949e-88e2c21ebf8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "199fe700-b0a8-4738-9ffe-9b26bb478244",
        "cursor": {
          "ref": "d90226e3-cd0b-46a0-84a2-753f0c94e93e",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "3ba1d995-4d4d-4c0a-8a39-acd552443f58"
        },
        "item": {
          "id": "199fe700-b0a8-4738-9ffe-9b26bb478244",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f602136d-f2f3-41aa-88b3-ad6143244c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a1ff35a-3cca-42dd-9ac6-8ec4d427e09c",
        "cursor": {
          "ref": "2b0923cc-b995-46be-a70a-4caa396f0cb1",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "8b5c6023-76f1-44bc-865c-1f3ddbc3fdc7"
        },
        "item": {
          "id": "5a1ff35a-3cca-42dd-9ac6-8ec4d427e09c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b77ed28d-bae0-408e-aba6-143bfb70f0a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b7fc81a-5dbf-40ec-a2da-6ea41691ac4f",
        "cursor": {
          "ref": "d877f1b1-d11a-4b14-8519-0a2f41430287",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "88a93c88-9123-4f43-827e-292ad38e4a60"
        },
        "item": {
          "id": "2b7fc81a-5dbf-40ec-a2da-6ea41691ac4f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "833a5f28-9513-46d9-9e69-c37d365c0f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca85619b-de5b-49ea-bdc0-b423f0f8baf3",
        "cursor": {
          "ref": "29a8fa55-d5c2-4a95-8a11-e42ea8c70064",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "943f7469-b351-47b4-929b-b8e6ffb99f08"
        },
        "item": {
          "id": "ca85619b-de5b-49ea-bdc0-b423f0f8baf3",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "81e276f8-27fe-4b6a-b8fe-9c0c6361c54d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b847fca3-3b4f-4ac8-b023-f0e7832783c6",
        "cursor": {
          "ref": "2dfb8098-154e-447b-9c5e-56f08a809f3f",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "33895fa1-f501-47bd-8243-6f4549d843f1"
        },
        "item": {
          "id": "b847fca3-3b4f-4ac8-b023-f0e7832783c6",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "294ce377-730e-42d7-a585-b2881115447f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b4c532-ce7b-44f1-b42d-7b1cb0277e32",
        "cursor": {
          "ref": "4d82eac9-c0c3-4204-9fd6-1c6f7699c797",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9d1756d8-11d2-4843-9ba4-2dbd637f94f8"
        },
        "item": {
          "id": "23b4c532-ce7b-44f1-b42d-7b1cb0277e32",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a3e61404-9b98-4301-8d78-6abf96998851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd5137d2-cc3e-4b25-98b7-73037d6cc9e6",
        "cursor": {
          "ref": "e40142af-f63e-453f-9b95-74f8d489f859",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a27b48e9-5b40-46eb-9bf0-76825f1e9cbd"
        },
        "item": {
          "id": "bd5137d2-cc3e-4b25-98b7-73037d6cc9e6",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "3b846916-6253-43a1-bdcf-92b279c60753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "741a5d76-4335-486a-92d0-a6d44bf480b2",
        "cursor": {
          "ref": "76ec6b46-a59d-4c62-8e92-8b5b8c0d5bd2",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e7c17031-0734-4f31-b69f-7b9cfacc2e25"
        },
        "item": {
          "id": "741a5d76-4335-486a-92d0-a6d44bf480b2",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "935072b9-0431-41f0-bd9e-6d3a482a07cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "759ae139-1517-4738-b895-08bf575dd492",
        "cursor": {
          "ref": "1bf17bc1-4695-47ab-b0e9-4eff2c7932a1",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d3c1e46b-dc7a-4e8e-b9fa-04c34847c931"
        },
        "item": {
          "id": "759ae139-1517-4738-b895-08bf575dd492",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "4f1debf2-ae2f-4762-9ac3-b27113bda3fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae669ec-6261-4de4-9c32-461d5d3e19af",
        "cursor": {
          "ref": "1a85e2eb-4b32-4cc0-984c-2737eb8e714f",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "6aed6349-c15a-477f-9eb0-7b34699692ee"
        },
        "item": {
          "id": "5ae669ec-6261-4de4-9c32-461d5d3e19af",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0d75fc58-eeba-4ef9-b4a9-4fe9ecb2a780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85873413-af5d-465a-b979-857f156757d6",
        "cursor": {
          "ref": "12d05652-0bde-45aa-9d37-e73154ac15ab",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "070d0561-909a-4591-98dc-e6fbb85d5f43"
        },
        "item": {
          "id": "85873413-af5d-465a-b979-857f156757d6",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "5cf80297-b68f-49ca-90a1-a76a37d1398b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51cb3e6d-636c-4ed8-bf62-69c3b427eb3e",
        "cursor": {
          "ref": "c94fa27e-465f-4c83-b402-45c773cb6b0f",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d8150bc4-3053-45bd-8312-23d0a75cf406"
        },
        "item": {
          "id": "51cb3e6d-636c-4ed8-bf62-69c3b427eb3e",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "7088d915-e783-41a5-b8ca-83f4ee30a972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "346ab8b5-0c44-4daf-aea5-d3b5c0abca8a",
        "cursor": {
          "ref": "d7e9a504-5488-4abd-9218-54efbd54c06f",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6cf5c32a-3fdb-4d06-812d-81e7ae714b30"
        },
        "item": {
          "id": "346ab8b5-0c44-4daf-aea5-d3b5c0abca8a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ff4fff11-084d-4f03-9cf5-213973626f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73756adc-690f-49ef-9161-55e97e47a310",
        "cursor": {
          "ref": "24b072c5-2e6f-492e-aa45-c1f2440a2ac5",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "97f537fa-9288-464e-8c79-6c057969e5e3"
        },
        "item": {
          "id": "73756adc-690f-49ef-9161-55e97e47a310",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "6f73243a-286f-431f-b1b0-13c313bd8e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e155e2-a19c-4739-a299-3c35a3e3019c",
        "cursor": {
          "ref": "c6028e5c-3f4e-4c84-b329-1a09cb16acd5",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "cd421915-1bfa-470c-a575-be240868ba84"
        },
        "item": {
          "id": "81e155e2-a19c-4739-a299-3c35a3e3019c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "decd27af-0516-487d-b900-e425e387a295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d268b1-bfab-43e5-91df-88c7bd8f1367",
        "cursor": {
          "ref": "3ff0f55e-4b6a-4ccb-8f02-75ce794ab402",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a4960881-c17b-47a1-9997-f711dd82970c"
        },
        "item": {
          "id": "44d268b1-bfab-43e5-91df-88c7bd8f1367",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b230fe8e-899a-49d8-a557-7a894cebbb3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c6d30ad-5df9-4ba0-9a3c-6cfe45831802",
        "cursor": {
          "ref": "d11b4a92-ed87-45fd-879a-99e79236111d",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "6b438a96-aad1-465a-a1a7-5e9048538573"
        },
        "item": {
          "id": "4c6d30ad-5df9-4ba0-9a3c-6cfe45831802",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3d73209d-5c8e-4d1b-977e-dc519be63cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47fb93c8-eaa7-4d8d-919d-fcba53c84d9e",
        "cursor": {
          "ref": "df4540d7-c7b3-47fc-a2bc-8bae351bce65",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b3cbe009-9359-4a16-833f-68508fff5ff6"
        },
        "item": {
          "id": "47fb93c8-eaa7-4d8d-919d-fcba53c84d9e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "7d5849c1-12da-4f5d-a899-e5ffd3e352b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c707ec-c6b5-4bf0-bb4d-8412ac737e95",
        "cursor": {
          "ref": "fc35fe15-54cb-4893-8c08-faee398c8ec8",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d3408c39-5bc3-439a-864d-405acc33c1fb"
        },
        "item": {
          "id": "a6c707ec-c6b5-4bf0-bb4d-8412ac737e95",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b1c2a974-e1de-4ac9-8619-6f3bc9df513c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d587f76-aa07-4cdb-be69-c66a20493fa1",
        "cursor": {
          "ref": "0bd88fe6-4551-4be7-8f3f-8ea78809c4ce",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "6d9c5bf6-16ac-481d-8a6b-006756ee5533"
        },
        "item": {
          "id": "2d587f76-aa07-4cdb-be69-c66a20493fa1",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "6b30ddf3-b0ac-4324-8d11-b6f20873d03e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1114,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e765f7ac-1a29-48e0-b171-978eae2a0953",
        "cursor": {
          "ref": "317dda9c-fb48-4737-8a74-ea3b70e59f5f",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e138fe50-87b1-4978-ba50-71de655eb539"
        },
        "item": {
          "id": "e765f7ac-1a29-48e0-b171-978eae2a0953",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "2d64912e-3bb0-4950-8b4d-012371d1d97f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1315,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a19d3ee0-39a6-48d3-a656-b854b011f1ed",
        "cursor": {
          "ref": "003a65a7-63ef-4867-87a2-c0dd114e4ba3",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "18bb006d-a858-43f7-9b37-2b7bb52ac5e6"
        },
        "item": {
          "id": "a19d3ee0-39a6-48d3-a656-b854b011f1ed",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f5f81ce7-fe3e-438f-a507-ff4bb978312b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1598,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca67f2bd-15a8-4938-ba09-414041410c64",
        "cursor": {
          "ref": "7fc8ce15-c228-4cec-91ca-6ec2581d643e",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "b959713b-ad7b-4a97-9cec-ec8caf8cbba7"
        },
        "item": {
          "id": "ca67f2bd-15a8-4938-ba09-414041410c64",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4396a80b-2558-4ae4-955f-fe6a387f8a9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1820,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eab75138-aa6c-4da2-a145-e6aba2ab45c4",
        "cursor": {
          "ref": "3740e9ba-71af-4e90-9e9b-a059097dd8e0",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "34fd167c-cbd5-4c20-906a-d2858d88bf6e"
        },
        "item": {
          "id": "eab75138-aa6c-4da2-a145-e6aba2ab45c4",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "c2f5770c-169b-468f-90d1-3f8a7dc10638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1713,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7602bef4-e43e-4c8f-9058-1dfa23e7dff2",
        "cursor": {
          "ref": "166227fd-998f-4aa2-a680-b595a48fa9d0",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "9801fbd9-c717-4c68-be86-b45df063be66"
        },
        "item": {
          "id": "7602bef4-e43e-4c8f-9058-1dfa23e7dff2",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b04d88c2-1f7f-41a0-ad16-80e5b0d79ddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1709,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e0ff8a-75bd-4395-a30d-28d18a7a7cb8",
        "cursor": {
          "ref": "b8da83dc-7be4-4deb-90ef-c0c93af42f14",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "89df513f-4b0f-4c6c-943a-8898dfa3c4ba"
        },
        "item": {
          "id": "19e0ff8a-75bd-4395-a30d-28d18a7a7cb8",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0f4bb56b-4658-42c2-8cb0-f068cf02578b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1158,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ee9c21-e272-4fa7-aea3-c0c0d122fb9f",
        "cursor": {
          "ref": "88acd25d-4dfe-4841-a1fa-ad334092e13f",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "508d0761-3fca-45b1-81cb-2af4dd36384c"
        },
        "item": {
          "id": "c9ee9c21-e272-4fa7-aea3-c0c0d122fb9f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "9ac55ccd-22ad-42b6-8505-20f2ff355f79",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1240430-3ca4-4e9e-9fa0-2725a37a62ac",
        "cursor": {
          "ref": "9ce6663c-033d-41ed-987d-5f4e2836dc04",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "45bca450-9c51-49bd-a2a5-f8e1e0cc9fab"
        },
        "item": {
          "id": "d1240430-3ca4-4e9e-9fa0-2725a37a62ac",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "f6fbb128-c60c-48b8-9158-7efc98a4f3d9",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 825,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3869bcf-eb5c-483f-94bb-24eeb239b9c3",
        "cursor": {
          "ref": "976f4af7-7cb8-4c79-bbb3-dd641bf404a9",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "3189909d-fc89-4148-83c1-850d62b5ee36"
        },
        "item": {
          "id": "b3869bcf-eb5c-483f-94bb-24eeb239b9c3",
          "name": "credentials_issue"
        },
        "response": {
          "id": "cf8ac8b4-a8ab-4b83-a8b7-9dba27a5c10d",
          "status": "Created",
          "code": 201,
          "responseTime": 8323,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "121bc779-d16e-404f-b5d5-5cf6a9db411c",
        "cursor": {
          "ref": "e7b1d615-4c75-42e5-a229-8a2724cef818",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a932fa91-912e-47e9-91ce-50acc633bcf3"
        },
        "item": {
          "id": "121bc779-d16e-404f-b5d5-5cf6a9db411c",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "73cb5aec-de5b-447f-9341-7b492ddb83b1",
          "status": "Created",
          "code": 201,
          "responseTime": 8584,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f088cf30-a46f-4c38-8ae5-671ef9c21964",
        "cursor": {
          "ref": "7edfb151-8b54-408f-85cb-6548d19e993f",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "29363f70-506d-47da-8570-0ef754546031"
        },
        "item": {
          "id": "f088cf30-a46f-4c38-8ae5-671ef9c21964",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "76f279e9-32ee-4448-bdc6-53590b05964c",
          "status": "Created",
          "code": 201,
          "responseTime": 6458,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0214bba-f440-40bf-9a3f-f225423c4934",
        "cursor": {
          "ref": "8659497f-bd64-485a-a55b-d2d854afda0f",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "56b89a61-6bba-4207-ad35-9cee0695e88e"
        },
        "item": {
          "id": "a0214bba-f440-40bf-9a3f-f225423c4934",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "f6809f84-bf0e-40e2-98c0-dc328bd14c58",
          "status": "Created",
          "code": 201,
          "responseTime": 7213,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e7e231-003a-4ed8-b7bf-757219300faa",
        "cursor": {
          "ref": "76f76dac-5e63-4365-9420-be357b89ce38",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e7d8165b-3e89-4501-b8f3-442f9c5eb254"
        },
        "item": {
          "id": "48e7e231-003a-4ed8-b7bf-757219300faa",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "244a2af5-e012-4f26-8d32-c1abd60a2a38",
          "status": "Created",
          "code": 201,
          "responseTime": 5974,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d8069b-9f0d-4568-bb47-7161f072fc09",
        "cursor": {
          "ref": "d085a30e-a63a-4e92-9d9f-8c13b7436bf3",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "889b717c-823b-438a-9820-17b7745b5b5e"
        },
        "item": {
          "id": "64d8069b-9f0d-4568-bb47-7161f072fc09",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "2a584695-e2a0-4bef-8541-ab5995e06e9d",
          "status": "Created",
          "code": 201,
          "responseTime": 6941,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa44c76-72ac-4a0b-817b-e67497d1f13a",
        "cursor": {
          "ref": "22baaf36-757a-458b-a429-3aa04aded8c8",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6a15aaf1-55b4-4ee8-b146-59d18428e31c"
        },
        "item": {
          "id": "faa44c76-72ac-4a0b-817b-e67497d1f13a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "dcdb190d-9a30-46fd-874b-e255038fd84d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa44c76-72ac-4a0b-817b-e67497d1f13a",
        "cursor": {
          "ref": "22baaf36-757a-458b-a429-3aa04aded8c8",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6a15aaf1-55b4-4ee8-b146-59d18428e31c"
        },
        "item": {
          "id": "faa44c76-72ac-4a0b-817b-e67497d1f13a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "dcdb190d-9a30-46fd-874b-e255038fd84d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1924cd80-4b78-4171-81b6-bfa5cdbf2ec8",
        "cursor": {
          "ref": "ddae0642-f2cf-4c85-b77c-bda3894fd2c8",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "37029f32-6ff1-4b03-9626-4d50083d2505"
        },
        "item": {
          "id": "1924cd80-4b78-4171-81b6-bfa5cdbf2ec8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5ec8f362-1fae-4053-ad61-de3ce3a88369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c942318-da77-4e7f-8cb3-762a0cb93e1f",
        "cursor": {
          "ref": "6cb32e53-e003-46be-8845-a53cf2e8a27d",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "599e797c-97ea-4f20-96c1-179f62ba1b53"
        },
        "item": {
          "id": "0c942318-da77-4e7f-8cb3-762a0cb93e1f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6663c756-190f-4cc1-9e60-a3988e6bcdc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff4e61f-fd23-4297-81ec-b36b10ae1e62",
        "cursor": {
          "ref": "4d673c7b-56ff-41a1-b2a2-326c1869a219",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f18b3d52-697b-4c7b-953c-2a47aecaec7b"
        },
        "item": {
          "id": "bff4e61f-fd23-4297-81ec-b36b10ae1e62",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1f3e28ed-a42b-4f7f-9da4-198f49ee36a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02142aca-3ac4-4b02-a73d-c61d29deff8a",
        "cursor": {
          "ref": "834a9fc6-601d-4bea-8c2e-d6d644381091",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "96f20703-c607-4c87-97e4-da2fd1871eae"
        },
        "item": {
          "id": "02142aca-3ac4-4b02-a73d-c61d29deff8a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c70c03a9-5380-4c35-9066-d977845f728d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0039af6c-8e6a-4925-9325-f74a88fe9ce7",
        "cursor": {
          "ref": "59248178-aba2-4a34-8289-4980df34df45",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "06e84a9f-98f5-42b7-aeb4-75f9b3ee09ab"
        },
        "item": {
          "id": "0039af6c-8e6a-4925-9325-f74a88fe9ce7",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9f8582fb-2b3a-43d2-9bf9-82775d246a04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fdfca06-179b-45a9-82cb-9f679aba49dc",
        "cursor": {
          "ref": "f161d967-da75-4f2d-8255-e0888e31116f",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "89f07e91-473f-4342-857e-1a48dbab606b"
        },
        "item": {
          "id": "0fdfca06-179b-45a9-82cb-9f679aba49dc",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f3be89fb-82ff-4bd6-b866-e44d2441253a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf5a4b3a-72a2-4b7f-829a-67957d19efe5",
        "cursor": {
          "ref": "a6a12378-d48f-4d78-8f33-1e617c794af1",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "9ce58eb0-ca6c-4744-b6d0-df33644e4e61"
        },
        "item": {
          "id": "bf5a4b3a-72a2-4b7f-829a-67957d19efe5",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f6e431de-7723-4a17-ba1e-a8e1e3fe3595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8935918-73da-4fad-a98a-af71770dcbab",
        "cursor": {
          "ref": "80d95ffc-8ea3-4ca1-a22f-b786fdaa150f",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "6759cb4b-2c5f-4284-a563-a2e4ff0256e5"
        },
        "item": {
          "id": "b8935918-73da-4fad-a98a-af71770dcbab",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6520f7e9-3822-4585-935e-bc1a4694c46d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9370dfcb-4e3e-41e5-8b6a-74eb1d36aa0f",
        "cursor": {
          "ref": "f33ff371-5c0d-43e3-9a91-a60d244b5633",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "bdb5d5e1-0add-4727-aceb-ce7979bf24be"
        },
        "item": {
          "id": "9370dfcb-4e3e-41e5-8b6a-74eb1d36aa0f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6fa7e40c-6895-4cae-a007-0185ea8adf21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b59e5a0-8f55-4965-9eab-26837338e568",
        "cursor": {
          "ref": "ab2f028b-83fc-4296-96c5-43fa7ba969eb",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "23c49ddb-a18b-4fe2-a76c-afa09863861b"
        },
        "item": {
          "id": "3b59e5a0-8f55-4965-9eab-26837338e568",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "672511c7-74f5-4ff3-8f8f-e4c462ad68c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50d6ea67-6666-4e2c-b670-32fd82cf15e7",
        "cursor": {
          "ref": "351c26b4-9edd-41fa-afc0-8a577d5b5585",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "83301418-686c-454c-9e2a-66c0ff8755b8"
        },
        "item": {
          "id": "50d6ea67-6666-4e2c-b670-32fd82cf15e7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "329fc4a5-bf03-43a9-8e6f-98a2b8b8aa42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9683f047-48f0-4200-a2c1-11b2ccf05266",
        "cursor": {
          "ref": "c1708a7b-9d5c-4948-8cfb-054e78fa86da",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "5ca4f6fb-28d4-41bd-94e1-c94b3ef8623a"
        },
        "item": {
          "id": "9683f047-48f0-4200-a2c1-11b2ccf05266",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "daccbc00-155a-4417-96fa-55cfb7a68527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee6a5459-26a1-4510-8626-3e9f7c839a58",
        "cursor": {
          "ref": "a4e18601-3667-4c67-b485-94a4cc500a39",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "499860ca-78a4-4d01-b1da-9a4689a67daf"
        },
        "item": {
          "id": "ee6a5459-26a1-4510-8626-3e9f7c839a58",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "382a8385-1b3e-476e-b84d-786ae4645d3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adbbbd98-ba5f-4f15-8654-62b551427adb",
        "cursor": {
          "ref": "c341a9c2-2261-40bd-9f12-91c69523b191",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6a8685ac-0caa-44d4-bb69-6e81b16d13e6"
        },
        "item": {
          "id": "adbbbd98-ba5f-4f15-8654-62b551427adb",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7400e4d7-4716-46f0-905d-b5d1866d33e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1069,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec3998d-d74c-4471-a506-d384df7185a9",
        "cursor": {
          "ref": "3b9b41ca-4124-41c6-b5f7-81cccd3bf850",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "f98e494b-80a3-46e8-b6b5-3cd3ab7104b4"
        },
        "item": {
          "id": "eec3998d-d74c-4471-a506-d384df7185a9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a1847bbb-f417-4b45-89ae-ae98445e04c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1197,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca69da6f-bc8e-4d8d-9d82-0eab21e57a89",
        "cursor": {
          "ref": "10c65b47-b33b-4e4f-8e10-c4388d2f682e",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b9f3016f-2afe-4dd3-8dc3-1322296220b8"
        },
        "item": {
          "id": "ca69da6f-bc8e-4d8d-9d82-0eab21e57a89",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "569d6f5c-2883-43ef-b8a8-5ba04378f36c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1218,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f007f1-d760-4b86-bb7f-d2c6832ebcd2",
        "cursor": {
          "ref": "b8974ed4-d7aa-4763-869e-c1980f881eed",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "5d2c3922-b0ba-45ff-8b9e-33214d84bc7e"
        },
        "item": {
          "id": "80f007f1-d760-4b86-bb7f-d2c6832ebcd2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5a05b11a-41f3-4508-8c03-2be7ebb17e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1057,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd6594b-ea91-4a0a-8873-0b256f6c7c14",
        "cursor": {
          "ref": "c9576d84-9485-4f7f-aea9-8182b42fe36f",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a49c28d7-01ae-4121-96f3-74846d611187"
        },
        "item": {
          "id": "ccd6594b-ea91-4a0a-8873-0b256f6c7c14",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "28d9b798-eabb-4e47-8778-da43f88ff8c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed86db1d-ec51-42df-9109-839bef93120d",
        "cursor": {
          "ref": "2844e498-00ad-4a62-8f88-b1078b21b94e",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "1a340c8f-f70c-410b-bc8b-747c09164d2a"
        },
        "item": {
          "id": "ed86db1d-ec51-42df-9109-839bef93120d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "256e4e55-f4da-4cc8-a2ca-b0b75fe139dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7045f42a-4714-4c21-aeef-4fc7e29906d5",
        "cursor": {
          "ref": "10bc78d3-c2e8-46f9-9aad-e2d1c664e6e5",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "3d1a542e-a5b6-457e-b39f-e8e0ad7bcba0"
        },
        "item": {
          "id": "7045f42a-4714-4c21-aeef-4fc7e29906d5",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "64d3448b-307a-4224-bfff-e5c813f9f926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "621fc23c-8ef9-4ca1-8e60-1e47b1b5f237",
        "cursor": {
          "ref": "86282a9a-514c-49cc-b08a-c81ef630019d",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a09c3af9-5390-4697-ad8a-7ef88752d971"
        },
        "item": {
          "id": "621fc23c-8ef9-4ca1-8e60-1e47b1b5f237",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e0106474-ebbd-4806-9058-2c40f2fe734a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c538e7b-7740-4fce-9335-b39716dd8779",
        "cursor": {
          "ref": "76a62266-7fd8-4bd0-8a38-498516d9415b",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "afe95ef3-2e0f-4e53-9230-260c05dcd986"
        },
        "item": {
          "id": "9c538e7b-7740-4fce-9335-b39716dd8779",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6a890434-87bb-4439-988d-f16dac41d66c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 898,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc49ca1-1c25-4dcc-94ba-64f30e7a58fb",
        "cursor": {
          "ref": "a4c3b966-7d4a-4fa9-b85b-607b7c993f12",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "efa296f8-da41-41d1-9247-425dc144ad1a"
        },
        "item": {
          "id": "1cc49ca1-1c25-4dcc-94ba-64f30e7a58fb",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "caa78c98-dac0-462d-8311-80fbcf73bc63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1145,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c1b1a0-accc-4d16-866a-16e21254fe83",
        "cursor": {
          "ref": "47289a07-8516-42a7-905e-5165da35aa9a",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "baf3b2bb-3d32-42ae-99ab-cb2e2de8bcd6"
        },
        "item": {
          "id": "c0c1b1a0-accc-4d16-866a-16e21254fe83",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5a9b4aa6-1723-464b-aaf7-6318d56e978c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 984,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "933c4941-21e3-4341-9bda-de8cb1190600",
        "cursor": {
          "ref": "9d6721b5-331a-4563-a37d-202334789c97",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "430696ea-9424-4eba-95c7-c0fd4498c66c"
        },
        "item": {
          "id": "933c4941-21e3-4341-9bda-de8cb1190600",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6b19a5df-94ca-40ba-943e-e09edf2a8eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1078,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbae6dda-60d3-4db5-9fc5-3fee0a565d2b",
        "cursor": {
          "ref": "df7ccffd-032a-4ac0-a00e-8a59af0587fe",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a7ea4ba7-888b-447b-b0fa-1cf6db8f6b15"
        },
        "item": {
          "id": "fbae6dda-60d3-4db5-9fc5-3fee0a565d2b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "170950c2-903a-4099-981f-510a334b6279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 735,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35224a92-08a0-4d90-811b-64f433cf8665",
        "cursor": {
          "ref": "26955950-1f11-47ac-ae24-0f45167eab32",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "8c51b16f-5ab0-420f-82a6-30aa4b904844"
        },
        "item": {
          "id": "35224a92-08a0-4d90-811b-64f433cf8665",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b562a2f1-2c8c-4500-ba18-64df9ab8312b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "960a7332-ef48-458f-b42b-ec936432aa04",
        "cursor": {
          "ref": "c5e659dc-47ea-4bc7-9a3e-7abe4d88cd19",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "4895d26f-3842-44b5-86f3-8b3850ac1f98"
        },
        "item": {
          "id": "960a7332-ef48-458f-b42b-ec936432aa04",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b316a4e8-fef3-4b84-ab22-b9e7c31bd26d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adee1b7d-ffd4-4416-a131-7c72d891cabe",
        "cursor": {
          "ref": "4c723d4b-95e1-456e-a9b6-27f66dd15dd9",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "8635d850-dacd-4209-ad0e-2eba751666c9"
        },
        "item": {
          "id": "adee1b7d-ffd4-4416-a131-7c72d891cabe",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6c1930c4-7814-4ee4-a550-08969818ea41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 729,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd60fadd-5fe2-47e7-a540-c31b81f8acb5",
        "cursor": {
          "ref": "3a9ed7a2-fe4d-46b5-ad4f-f4e2080225b4",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "becea951-380c-4b22-a3a7-27b222d7b2d8"
        },
        "item": {
          "id": "dd60fadd-5fe2-47e7-a540-c31b81f8acb5",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "db3ab580-f935-45c5-93e9-dacffdfce266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8710b7cc-ff7d-41f4-9aed-0b39bb5fb4c6",
        "cursor": {
          "ref": "5572d2fc-51bc-442c-b195-5d1e2486b5b4",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "6d85fc5e-00ff-47b6-9c6f-704f2ed968ac"
        },
        "item": {
          "id": "8710b7cc-ff7d-41f4-9aed-0b39bb5fb4c6",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "fdb33322-5965-448c-a467-aa2ec02eb57d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a25296ab-56b6-4504-b713-3a404f688a77",
        "cursor": {
          "ref": "1813f371-7c85-40f8-a87d-dacc0085ee55",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f8aacf3a-91bb-410a-bfc9-407ca9986c06"
        },
        "item": {
          "id": "a25296ab-56b6-4504-b713-3a404f688a77",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6961382c-7822-4085-a02c-af31ef6e4cdd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3493b3c7-62d0-48d3-8927-d12402af9062",
        "cursor": {
          "ref": "a71763ed-b31d-4f68-b122-67792eae0695",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e982ade4-4b34-4bc7-903d-402fa5f4e02e"
        },
        "item": {
          "id": "3493b3c7-62d0-48d3-8927-d12402af9062",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "759f87a7-56c8-480e-be79-b8d85de6f442",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 660,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a4e8d3-b3dd-4c8d-ab53-db28daf9f5d3",
        "cursor": {
          "ref": "368ca030-f342-4f8c-8f62-aed44cba2eb8",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "dc9ea545-bdeb-44eb-a8f9-c01f5ecf6be8"
        },
        "item": {
          "id": "34a4e8d3-b3dd-4c8d-ab53-db28daf9f5d3",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "efb345c3-263d-4d74-92d6-5f48e30658d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a4e8d3-b3dd-4c8d-ab53-db28daf9f5d3",
        "cursor": {
          "ref": "368ca030-f342-4f8c-8f62-aed44cba2eb8",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "dc9ea545-bdeb-44eb-a8f9-c01f5ecf6be8"
        },
        "item": {
          "id": "34a4e8d3-b3dd-4c8d-ab53-db28daf9f5d3",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "efb345c3-263d-4d74-92d6-5f48e30658d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db0b75f-2387-43e0-8f7f-9aeb3c9a38da",
        "cursor": {
          "ref": "a2487860-57ab-4755-8954-b9bb21637f25",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a8e486f3-eb94-4a9a-bf71-1e3591a94822"
        },
        "item": {
          "id": "5db0b75f-2387-43e0-8f7f-9aeb3c9a38da",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "654c46c9-7201-4bb4-a31c-2e830fa71b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8833c4-2132-4580-a011-079159e22174",
        "cursor": {
          "ref": "ad16568b-fbf7-4430-b5e9-4dc958fde3b9",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ae5de2f5-fb2a-4c5e-9b51-a3c5ac73abdc"
        },
        "item": {
          "id": "6b8833c4-2132-4580-a011-079159e22174",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "394d498a-3abe-4ed6-9f77-8111952342ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78bbd160-bffa-4adb-a4e4-2c053b932eb5",
        "cursor": {
          "ref": "879b80e0-01c0-4071-9db3-587f46af3530",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "34578f74-abd1-4c44-932f-9fcc1376ef41"
        },
        "item": {
          "id": "78bbd160-bffa-4adb-a4e4-2c053b932eb5",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "0595de09-4723-49bf-b636-5e5f428bd8d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 428,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f6d1e5-0f39-4be1-bfc9-25afe33236a8",
        "cursor": {
          "ref": "1cd2f3ae-bc0a-434b-af45-e679e942cc82",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "29c52187-c50c-4e5a-9825-383270bcdd0f"
        },
        "item": {
          "id": "85f6d1e5-0f39-4be1-bfc9-25afe33236a8",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7b23e9fb-acfa-41d1-8b4d-498193b87161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1e26be-4427-4c81-acfa-0fb5cda9ffd5",
        "cursor": {
          "ref": "33bbc716-aa6e-416e-ad25-ae1692a74ae2",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "daed8d4b-ce1e-40c3-b0e5-195b6248faf7"
        },
        "item": {
          "id": "fe1e26be-4427-4c81-acfa-0fb5cda9ffd5",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c22f5cfb-38fe-494f-a7e9-5ab5f0f0271c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f69196c-a14b-4963-87dd-11870ef5b53f",
        "cursor": {
          "ref": "5573ab7a-e8e5-4560-af3c-a96557e68cf3",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e2f7d4b9-7d87-49ed-a2e3-f0f2687a5cdf"
        },
        "item": {
          "id": "5f69196c-a14b-4963-87dd-11870ef5b53f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "95190483-0845-4640-bdec-d996263f06b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b075108-6df1-4948-a21f-a98515332ea0",
        "cursor": {
          "ref": "86ccc31e-d010-4ea7-9843-1164a0ddbbfe",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "8fa7bfd7-a3cd-4325-a9e4-5c7f0c0d504f"
        },
        "item": {
          "id": "8b075108-6df1-4948-a21f-a98515332ea0",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "73a7a71c-eec1-4a8f-ab9d-d6aab8dec4b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b04176-405b-44c7-818e-70c1cda29af6",
        "cursor": {
          "ref": "e5a22610-fb8c-4ea1-8f13-182911957061",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "80c3b679-7816-4e9b-98f8-bee37f89ae4c"
        },
        "item": {
          "id": "f8b04176-405b-44c7-818e-70c1cda29af6",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e445272f-d0d8-49ba-a78d-f300c8be8767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "573c299e-dc79-4a46-a1cb-07e48af46bca",
        "cursor": {
          "ref": "94ec37d3-0fe3-4be2-ac8c-1331ccc91265",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "cd6aefee-da14-4ad7-a361-ec2e70c05dd7"
        },
        "item": {
          "id": "573c299e-dc79-4a46-a1cb-07e48af46bca",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "595ed1bc-782b-42cb-b06c-ccb0bb941528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9afe10b8-09d1-42ed-a1b9-33082416827b",
        "cursor": {
          "ref": "5babcbda-60f6-46a5-877e-9b8021b95585",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "6fa91987-b707-4eba-9e4d-04ca532ebdf5"
        },
        "item": {
          "id": "9afe10b8-09d1-42ed-a1b9-33082416827b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "00c1b019-3f60-449d-8252-cda3168b6aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "046a9f67-5da8-44c9-a75b-a9f0bd962317",
        "cursor": {
          "ref": "0c9bdd22-1f34-421e-9749-f6838acfcaf6",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "c57b42e4-bdab-4129-a6fe-05e50620384e"
        },
        "item": {
          "id": "046a9f67-5da8-44c9-a75b-a9f0bd962317",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "1f2ac731-725c-4b26-a9c4-510c7a0864c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c74876dd-b827-4dd7-b95f-4e3263f11f46",
        "cursor": {
          "ref": "30c5824e-99e5-418d-a394-4a91b81fc41e",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "06a8cc18-b0ee-4014-9386-f27ff0bd95de"
        },
        "item": {
          "id": "c74876dd-b827-4dd7-b95f-4e3263f11f46",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "9d24ee20-adbb-443d-9809-bf9cf0c8bfa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef8ee2a8-1cdc-4340-aa1d-2de307d43a83",
        "cursor": {
          "ref": "920fb8fa-0f4f-4619-bce9-357fc51449f8",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "11700b41-500f-4c4d-92db-21ff8c8e0d1d"
        },
        "item": {
          "id": "ef8ee2a8-1cdc-4340-aa1d-2de307d43a83",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "23cd84c1-f165-4cf3-86a6-78a7fb3a0eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da75284-e3b4-4a7c-9b1a-10ef4e20bf70",
        "cursor": {
          "ref": "e717e96e-c65a-44b5-b374-cc771557bfc0",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "db2b1749-b719-40c1-97e4-5a8b1a590d88"
        },
        "item": {
          "id": "6da75284-e3b4-4a7c-9b1a-10ef4e20bf70",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "74218744-0414-4672-9926-89913409c866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e914aab-e809-4435-a0c0-367b285e421e",
        "cursor": {
          "ref": "3c23f4ff-4542-4a52-be6f-2c42c4c5f695",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "251dffff-492b-444e-91ad-80116261a0ff"
        },
        "item": {
          "id": "4e914aab-e809-4435-a0c0-367b285e421e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b1e9ed61-60e1-4151-8912-d5d4438e9a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d2575f-7333-4f05-9137-4f8d02325d37",
        "cursor": {
          "ref": "7cb96f88-bcde-443b-84c2-c5680447c7cb",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "fb9a0dd8-f785-4a1b-8201-8e3da70f4871"
        },
        "item": {
          "id": "d9d2575f-7333-4f05-9137-4f8d02325d37",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "32e941da-5522-41d6-b13a-26df3aa588e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ec4d41-cd84-4255-bf9e-f5ef4372f5ee",
        "cursor": {
          "ref": "cc9840c8-6f9a-4cfb-ac1a-00f0a82d8c32",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "9da7d03c-ddae-404b-b02d-04c9c7789a3d"
        },
        "item": {
          "id": "34ec4d41-cd84-4255-bf9e-f5ef4372f5ee",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a8c52ecc-8f5b-45ca-a15b-38a522259475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4891e01-08d6-42b3-986d-6b5091a1c1ff",
        "cursor": {
          "ref": "d262ae41-ef8f-4d61-a2e2-7da143ac114c",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "fe73492e-b306-40c0-83ae-6dafdb3132aa"
        },
        "item": {
          "id": "e4891e01-08d6-42b3-986d-6b5091a1c1ff",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "62c5d85f-2821-497a-8203-b54217206c57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 884,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0188329-5b86-4f1a-b0ce-014ab170b372",
        "cursor": {
          "ref": "9809d701-54bf-41ea-8749-bfbcde6ff81b",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "af90216b-b9b5-494f-8099-087961635974"
        },
        "item": {
          "id": "c0188329-5b86-4f1a-b0ce-014ab170b372",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "ccf0e77f-d9ed-4045-8a9c-9b314c637c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 751,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cacc53f-3478-4b6c-a97b-0012f363054d",
        "cursor": {
          "ref": "f3739730-dcd3-438f-b365-d8ca222fd121",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3e44898e-fe52-444c-b56a-41e14a2b800f"
        },
        "item": {
          "id": "6cacc53f-3478-4b6c-a97b-0012f363054d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f752d083-729f-4e2d-a9aa-90cebb696866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 993,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "831b8be3-0f81-4327-ae59-eaadfa03d950",
        "cursor": {
          "ref": "730cd268-a43c-4fa5-b67f-1e6e544232db",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f2f675e3-2a70-4d72-a6a4-937fe6d0eafd"
        },
        "item": {
          "id": "831b8be3-0f81-4327-ae59-eaadfa03d950",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "8fa4afc8-0da1-4faf-a262-428f1c2babde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d8e072-1a01-47e9-af8a-0b95fbbc329e",
        "cursor": {
          "ref": "27c74f1d-e0d9-4a74-8135-0f75e7708ed4",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f3003401-9b50-4ad4-a467-f36cc00e6409"
        },
        "item": {
          "id": "89d8e072-1a01-47e9-af8a-0b95fbbc329e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f206f375-05fd-4953-bcd5-3ff11afec6f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1ef1729-cb60-4864-86ca-8f51f655cc0e",
        "cursor": {
          "ref": "56621a88-8360-40dd-96ba-3996743b9cca",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e918f4c4-22c6-4772-b86c-4b1528732edb"
        },
        "item": {
          "id": "c1ef1729-cb60-4864-86ca-8f51f655cc0e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "2b1efed9-f07b-4319-9894-495ab464108a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "410d39d5-29ba-4c20-888f-1a711a91717b",
        "cursor": {
          "ref": "e2c167c6-2373-457c-b16d-40c930979657",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "dcb8af5e-94d6-4a7e-9b20-f258df1cd3bf"
        },
        "item": {
          "id": "410d39d5-29ba-4c20-888f-1a711a91717b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8f15e6e4-a427-4c15-a85f-6326596f2ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c656c07c-8339-4ded-ae8c-28de1dc37eaa",
        "cursor": {
          "ref": "c722345c-a977-4a5c-96fb-b6587b3951c5",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "748a2e2b-cb18-4dfa-b86d-fb4bc1b2e370"
        },
        "item": {
          "id": "c656c07c-8339-4ded-ae8c-28de1dc37eaa",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "aecaba0f-9475-46bf-a47e-ee5777c9247e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8fb1714-7134-41c2-afe7-c84cca6365e5",
        "cursor": {
          "ref": "22756131-432e-4d9f-aa18-3cdf63ad8493",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "f5b31e40-8f1b-4073-915f-f0071c7a2a79"
        },
        "item": {
          "id": "f8fb1714-7134-41c2-afe7-c84cca6365e5",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2886e14b-2c41-47b2-b436-c44580a99e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52fcd6e2-e56e-4e47-8b95-a7d16a931e40",
        "cursor": {
          "ref": "09a197c3-6480-434c-a3af-7c02836964b1",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "3bd91982-9499-406a-900e-0a9f4f2aca33"
        },
        "item": {
          "id": "52fcd6e2-e56e-4e47-8b95-a7d16a931e40",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "49118e04-8253-460c-ade5-238d6153cbc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 422,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb1cba3-b06d-486f-b616-43abb0c12fa8",
        "cursor": {
          "ref": "f1512fe7-53e8-4cae-9ebd-af90ad9dda82",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "f9ab991e-cd38-469d-b21d-e69a0dd4e1a7"
        },
        "item": {
          "id": "adb1cba3-b06d-486f-b616-43abb0c12fa8",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "64fd9796-dc23-4033-88ad-149f57ac4db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb98189-5e49-48e9-9d9b-34163999afdb",
        "cursor": {
          "ref": "33f79ebd-ac33-479e-aec4-96fb10156d76",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "21fc436e-1ed4-48e4-a8e4-1b8210c92da3"
        },
        "item": {
          "id": "3fb98189-5e49-48e9-9d9b-34163999afdb",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b8ab6e97-1789-4d59-b1ed-0637c0e1853e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a54d422-7574-4dfc-9e31-96648fd529be",
        "cursor": {
          "ref": "e129630f-c81a-4af2-9932-523e66e640f7",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "54d89829-47de-46db-b32b-83e58fdebc6a"
        },
        "item": {
          "id": "4a54d422-7574-4dfc-9e31-96648fd529be",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e6e4d107-9d6e-4379-81fa-af7b2c1ad411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "029c342a-39ac-471b-bd27-ee73ba90755e",
        "cursor": {
          "ref": "d989b784-5ae3-470e-ba39-099903c95967",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "f05a9a3f-956f-4399-b7f5-ba45feb63410"
        },
        "item": {
          "id": "029c342a-39ac-471b-bd27-ee73ba90755e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b78ba831-e521-4d5e-8fd0-e1393948830e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 902,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ef93a6-6c71-4490-9495-851c1079ddd9",
        "cursor": {
          "ref": "6cecbb63-256f-4355-accd-ca9e9fc47b41",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "804c7ee6-51cb-4130-a929-7e63d4a94bb8"
        },
        "item": {
          "id": "27ef93a6-6c71-4490-9495-851c1079ddd9",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "60c8415e-1e08-4aed-80b1-8e4b280a8f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab6955a5-3e8d-4d42-aa61-b07a3c71abac",
        "cursor": {
          "ref": "142d38af-3011-4ee1-b0c5-118a7873b54f",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "6c473169-df60-40bc-be86-e237c00e707a"
        },
        "item": {
          "id": "ab6955a5-3e8d-4d42-aa61-b07a3c71abac",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "6f736401-19ad-4e63-a9be-76b2116fb042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec24f51-f6d7-4b9b-90e8-9e8cc9d7825d",
        "cursor": {
          "ref": "bc899b78-705a-45c7-a4d2-a5c0c5266ed4",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "04ca84d1-f9cf-40d9-8d9b-a500693a543e"
        },
        "item": {
          "id": "eec24f51-f6d7-4b9b-90e8-9e8cc9d7825d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "57050dec-4eaa-4673-b155-c5541b9e3903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 747,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab6d7f4-b48e-4e45-bacc-61f91475be44",
        "cursor": {
          "ref": "8353294e-9d7b-400a-9880-9237f7b5e201",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "305785e4-2e3a-403c-80ab-20aa5ffd6306"
        },
        "item": {
          "id": "3ab6d7f4-b48e-4e45-bacc-61f91475be44",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "6b977a29-f2d7-4c4e-9a9f-9067e1fa6845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 712,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b97a88e-6150-4475-8e9d-c278ef650936",
        "cursor": {
          "ref": "5e125b89-7430-4157-ab75-96fec341130a",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "09b46ca3-798d-4a3f-9cc2-f2299eaed026"
        },
        "item": {
          "id": "0b97a88e-6150-4475-8e9d-c278ef650936",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b293d7cd-663f-4e8b-9ad3-3b31f56ce41c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0702209-1967-4a54-b47a-8680e45a1336",
        "cursor": {
          "ref": "c32cf6e2-0798-4fbb-826b-bcf98c545d3e",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "fde61564-5b85-4ff2-8349-52da4fec4f7b"
        },
        "item": {
          "id": "f0702209-1967-4a54-b47a-8680e45a1336",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b8af36d6-33a1-4dd2-86e4-35dc073911ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6267b0ac-eebd-4edb-bd6d-0036690a2ee8",
        "cursor": {
          "ref": "46979b2f-8a04-447c-85e5-3d9080ff1be7",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "719d1807-19e1-48e3-b647-8347c43bb040"
        },
        "item": {
          "id": "6267b0ac-eebd-4edb-bd6d-0036690a2ee8",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "9196e1d0-377f-4de8-8abe-30a2bb68e1b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "446f4c4d-ad68-46af-83c5-b27b9c4a1fae",
        "cursor": {
          "ref": "7dd93e11-f011-4422-9f62-d7802f6efac2",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1e181888-6383-45f2-9c2b-e8e9f1074a3c"
        },
        "item": {
          "id": "446f4c4d-ad68-46af-83c5-b27b9c4a1fae",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e7715b1a-e74d-4e64-b29c-430cfa0d1809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a18adcd7-1c5b-4c9d-a061-45b5f41f68bc",
        "cursor": {
          "ref": "0285adc7-c569-4cd6-a111-9d2d7a76d42a",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "1122b4b6-2fec-4c52-9002-150d2b27d90e"
        },
        "item": {
          "id": "a18adcd7-1c5b-4c9d-a061-45b5f41f68bc",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "39449872-d494-4dca-887a-e8f620ffa582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e023cd-0676-424b-a65c-626487e7b5ce",
        "cursor": {
          "ref": "22ba8752-ca4b-4470-bff8-e26cc55128f7",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "cee93cb6-3bc9-4df1-a7f7-e713051adbd5"
        },
        "item": {
          "id": "69e023cd-0676-424b-a65c-626487e7b5ce",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "1ef6d191-70b5-4361-b03d-439c2e76314d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa80faf-aefb-4c49-8fc6-04afd1a63788",
        "cursor": {
          "ref": "e0c70176-28c3-4155-bb95-f902a2a1c33e",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d1ca77af-f1eb-493d-bbcb-9763f629789e"
        },
        "item": {
          "id": "5fa80faf-aefb-4c49-8fc6-04afd1a63788",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "8c72e07f-9a23-4951-84e1-23ef891c1354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fff98ce-c5e7-47dd-b0df-f665bd81ae5a",
        "cursor": {
          "ref": "5194d1db-7a14-447f-95d3-52ce1b26ba84",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "ca7df7e8-6c2e-4e93-90ea-5f6f67e58b86"
        },
        "item": {
          "id": "3fff98ce-c5e7-47dd-b0df-f665bd81ae5a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "44fdf768-4993-4a28-9cbd-a47bcceb862c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3fe5617-0e3a-4eeb-b253-8127c956e204",
        "cursor": {
          "ref": "4872bb57-7150-421f-b2be-0fcbbdd9852a",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "fba5ecb4-ee0b-4ae2-9e6a-ff64ebc0376c"
        },
        "item": {
          "id": "e3fe5617-0e3a-4eeb-b253-8127c956e204",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "54533184-d530-41ff-83fc-55895393f253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b282bf0-bdf5-44e0-b758-9d739ee1778b",
        "cursor": {
          "ref": "7b42d97b-4157-4654-b506-d018e4d405d3",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "557e7074-af4e-4879-8643-3e8ba19376c3"
        },
        "item": {
          "id": "2b282bf0-bdf5-44e0-b758-9d739ee1778b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "cbaf956f-b99f-4693-a987-a806ed9a588c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22eef2c8-3c9b-43ff-b991-27a32cd731bc",
        "cursor": {
          "ref": "9acd67d5-1312-49a1-b045-6aca562d89b4",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b5103928-1d2a-47c3-a3c6-68a4829a0a61"
        },
        "item": {
          "id": "22eef2c8-3c9b-43ff-b991-27a32cd731bc",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "447c2aec-078f-491c-bac5-2ae32d5ae9ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ec7639-dc4e-4105-8f9e-a8935da3b370",
        "cursor": {
          "ref": "7a1103b9-e18a-4740-8f8b-d1faa33afa91",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "6fc8cbce-5ce1-4d2f-a268-6328a6ec91a9"
        },
        "item": {
          "id": "c6ec7639-dc4e-4105-8f9e-a8935da3b370",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d5f50764-0042-4b2c-92b4-8a134e6da4f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec328f5f-d48b-4a01-8cfe-c1578724c5a7",
        "cursor": {
          "ref": "9cba014f-de3b-455d-ac00-afc0dcc5bf62",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "40b530ab-8a57-488d-ab3e-a4763035544c"
        },
        "item": {
          "id": "ec328f5f-d48b-4a01-8cfe-c1578724c5a7",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "782e2247-f364-430b-864f-3b947311ae4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab310b83-63fa-484a-869d-c8ad0c4f8c46",
        "cursor": {
          "ref": "ccddb039-2685-4e76-ab92-822e36f89df2",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "3da41777-aadf-4b6d-a9d6-f1e0fafe84c7"
        },
        "item": {
          "id": "ab310b83-63fa-484a-869d-c8ad0c4f8c46",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "58326e94-dd8e-4705-8140-230f7f7f667a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c32d4b1-a689-4dd3-8e7b-9f569bddbcdc",
        "cursor": {
          "ref": "9b69daf1-31ea-42b6-b118-50596cb67d0f",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8674e41b-9942-48cb-9a75-685b7a5793a7"
        },
        "item": {
          "id": "2c32d4b1-a689-4dd3-8e7b-9f569bddbcdc",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "45c0201f-bcbc-498a-a107-e0ae971a2efc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc2981e-f138-4f75-8cf6-b2c46726ea61",
        "cursor": {
          "ref": "8e2e2d4c-09b6-4855-bd68-a71c67eed1df",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "22f74f9a-923e-4dbb-ab02-5c3e50fed8aa"
        },
        "item": {
          "id": "0fc2981e-f138-4f75-8cf6-b2c46726ea61",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b21df23c-05a8-4ffd-b240-97f54145da75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e1abed-e96f-4928-adfa-c4921551db8f",
        "cursor": {
          "ref": "d9ba14d0-7b55-4042-ad48-778fa1792b3c",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f7215c40-fb08-42ef-9c73-45930c5f96b6"
        },
        "item": {
          "id": "a0e1abed-e96f-4928-adfa-c4921551db8f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "42bf8cf7-e1e5-46d2-ba12-9e9ff1fecdcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b2563f2-74a0-4dee-9026-0eedff8147a8",
        "cursor": {
          "ref": "08c9de9f-0d24-4903-a1f3-674b14a19947",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a1f75f7e-5820-4444-9569-6da67a5ce42f"
        },
        "item": {
          "id": "8b2563f2-74a0-4dee-9026-0eedff8147a8",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b43d2b3d-3b96-4a58-aa41-b777dc96cb58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae897de0-6c20-4bd4-9b87-da5203846a34",
        "cursor": {
          "ref": "d5004b8d-3c70-4297-8d2a-1d44d9bd4864",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "edf69648-1d2a-40ba-be7d-db372e56fb98"
        },
        "item": {
          "id": "ae897de0-6c20-4bd4-9b87-da5203846a34",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "809f5cf5-f043-4b34-a28d-47e4eba26237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b05ce6c8-0fcf-4aa9-ad21-05b224577e3d",
        "cursor": {
          "ref": "883d2544-a6c1-48e8-a8d7-8044c2888296",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "ce702327-7ab0-4886-afc4-f53024dc23a6"
        },
        "item": {
          "id": "b05ce6c8-0fcf-4aa9-ad21-05b224577e3d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e81d06aa-dfd2-46e4-8614-97eda368ae47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7863425-872c-45ef-be43-cce835f8c9af",
        "cursor": {
          "ref": "141b48c6-1b3a-4d7b-8915-d6a570f04a98",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "facc2f46-9c2a-4784-8435-f7cada969857"
        },
        "item": {
          "id": "b7863425-872c-45ef-be43-cce835f8c9af",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0c2c7287-eb80-47b6-8791-9e060324f63c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f38526fc-fa99-4984-90b4-d1290e01ac4b",
        "cursor": {
          "ref": "9811c0e2-e10b-447e-a5d0-9ded98c87b95",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "880e3f61-56b8-4f13-9406-49fedaa91482"
        },
        "item": {
          "id": "f38526fc-fa99-4984-90b4-d1290e01ac4b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "59194c43-93de-4118-a72e-6fbcef1c15e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7b07caf-ab1f-467c-a877-bc24ecbb40bf",
        "cursor": {
          "ref": "38a2c44d-5b59-4933-ae40-9a8ea67801d0",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "8268b6ca-fe09-4594-bf50-95d39fd02240"
        },
        "item": {
          "id": "a7b07caf-ab1f-467c-a877-bc24ecbb40bf",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "71f4279d-8857-427e-a825-fe3de186f174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cdfeeea-8b2c-4a85-bbd3-9a896ca9d443",
        "cursor": {
          "ref": "73384a5b-ae5b-4c58-ba8d-e1b95d838465",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2095ddce-00ee-4f7e-ad51-03e78dea8bf4"
        },
        "item": {
          "id": "6cdfeeea-8b2c-4a85-bbd3-9a896ca9d443",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7285ebd3-09e8-4f9d-99c3-0ee27f885b65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0212767-b100-4ca7-8c6e-3d735743ac76",
        "cursor": {
          "ref": "c975966c-6905-4652-9a4d-f90cb6432efd",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "078d33a1-a89e-45b9-904f-45c4086b8082"
        },
        "item": {
          "id": "a0212767-b100-4ca7-8c6e-3d735743ac76",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ee69024c-98de-4ab0-868b-3315da7dde32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f0ab3a-2742-42e5-a42f-48a2ed483fb3",
        "cursor": {
          "ref": "e42eb899-6723-4639-b4c8-0a4ff0f29e49",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "18531d44-8e30-4a60-9cc4-e2e850535a76"
        },
        "item": {
          "id": "10f0ab3a-2742-42e5-a42f-48a2ed483fb3",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "a4a239ba-48f7-4c67-9bbe-8df34666b176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df2d14e7-12c4-49a0-9c8b-9579c9ad7295",
        "cursor": {
          "ref": "2ef4e7de-ad83-478e-8d8f-9b8cb17a17e4",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "3ff997a2-5e6e-4e99-9422-bca8dd17e7d8"
        },
        "item": {
          "id": "df2d14e7-12c4-49a0-9c8b-9579c9ad7295",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9e6d6181-e6bd-42c5-9908-cff46bf05383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e3a4b9-808a-4081-838d-772ab9e61e98",
        "cursor": {
          "ref": "d70c058a-e895-4029-bf70-1b270ef70074",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0ad35a38-a466-44d5-9b9f-caf24d6ec6e3"
        },
        "item": {
          "id": "a9e3a4b9-808a-4081-838d-772ab9e61e98",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "63f4791e-06f2-4531-94e9-b625010060e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13bb5906-f19d-47fa-89b3-b7743bb998dd",
        "cursor": {
          "ref": "04fc6b48-d798-4c2d-b47b-ddcc835cfb7e",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "4a1d96d5-d5cb-4a1c-a3ba-b0a7872be1e8"
        },
        "item": {
          "id": "13bb5906-f19d-47fa-89b3-b7743bb998dd",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "1512f66c-8a7a-4697-b75d-a74edb1802e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f1b0dcf-0c3f-4bd1-bc7b-8876206d8f56",
        "cursor": {
          "ref": "2566f62d-c907-422f-9066-8afca6c18fcf",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c5f8a6c4-66d1-4808-ba26-86162d7493c1"
        },
        "item": {
          "id": "9f1b0dcf-0c3f-4bd1-bc7b-8876206d8f56",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "2b8d5f44-75fe-418a-a149-735fb5be41a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de1a4ae-0dec-47b1-a32c-7c997180ffc0",
        "cursor": {
          "ref": "bee645fd-46a6-4567-b83f-3e6fecb75df3",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "bc8671af-2fbb-4e33-8534-46526734f02f"
        },
        "item": {
          "id": "8de1a4ae-0dec-47b1-a32c-7c997180ffc0",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "91aafd01-9d88-4ec2-b236-bf62a22e8d67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e0681ec-ed4a-433c-91af-497941701c0b",
        "cursor": {
          "ref": "4e5aea87-d08b-4bd3-ad48-0e5790341a51",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "11ddf7ff-d2e0-4846-8b55-6dd306b0bf3e"
        },
        "item": {
          "id": "4e0681ec-ed4a-433c-91af-497941701c0b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "777b9b7c-3cbc-4a16-b8a0-96856c77398e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9db51d6-a7f9-4c93-9104-f748a2155d0b",
        "cursor": {
          "ref": "b3895d26-9279-4f31-8840-af19070979f5",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0732dea3-acab-46a4-948a-e6f3cc532078"
        },
        "item": {
          "id": "d9db51d6-a7f9-4c93-9104-f748a2155d0b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "34bb630d-4f1c-480b-8d97-b92d4563a4f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 422,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc31f57-f0e6-48f5-bf8c-0d6d1a7ffd8a",
        "cursor": {
          "ref": "65309951-3498-4ec4-b8c3-f8290fe7e02b",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ee5800c3-42b8-4b79-89da-c1924e207db5"
        },
        "item": {
          "id": "9fc31f57-f0e6-48f5-bf8c-0d6d1a7ffd8a",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "d8896b26-d32a-470f-8d07-f141adcd72b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65a10fd-259a-4ecb-bd38-d314f7fb76e3",
        "cursor": {
          "ref": "07f0bd08-bd57-47cf-95d7-3a88380f84c7",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "2d6c3f49-1e73-45ac-88ae-e01fca9e5a6f"
        },
        "item": {
          "id": "f65a10fd-259a-4ecb-bd38-d314f7fb76e3",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "bd7753a0-5135-4769-b9a0-8946b4dd9ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9737119d-a75d-4166-8ff7-c3e8c043e0a8",
        "cursor": {
          "ref": "6d45ca83-ec79-4d2b-9822-74d532d9450a",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "79a62c82-3f20-476c-a961-f95e3747cb3c"
        },
        "item": {
          "id": "9737119d-a75d-4166-8ff7-c3e8c043e0a8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "11c31aef-dff5-4a39-8b0b-195e35d3c845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "821e7788-2fec-4ba4-b35a-8e364d48fe58",
        "cursor": {
          "ref": "d9d8b187-a04f-4a25-8ffe-3c40b18eb40c",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "8305ac64-edfa-464d-8fc7-e7eb24fc7213"
        },
        "item": {
          "id": "821e7788-2fec-4ba4-b35a-8e364d48fe58",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "bc5396e6-7a6c-4e5b-9e44-c4aa9f4d6eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81bae91-0d97-4432-82ab-d080dfecbe3d",
        "cursor": {
          "ref": "b8e3b350-6820-4f89-911d-3dc288344d25",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "8940842d-c26e-410d-a941-2f26e749d74f"
        },
        "item": {
          "id": "a81bae91-0d97-4432-82ab-d080dfecbe3d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "789cff37-0a2a-479e-88b7-9d3abcf153d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf57d3b-4cf7-4a07-aad3-b22498534b3e",
        "cursor": {
          "ref": "617f2ac3-1ff4-44ef-b82e-ae744cb64a63",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "060a2e20-0be6-4f79-be21-28edcb41e5c3"
        },
        "item": {
          "id": "2bf57d3b-4cf7-4a07-aad3-b22498534b3e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "2ea9dcc5-6da7-46b4-a2a1-be14267f46a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "740f0a06-a86d-4f9f-ac46-10d09453bedc",
        "cursor": {
          "ref": "34b3bb14-3c45-4440-8945-287ce7af24cb",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "78b11eb3-a784-4351-8abd-aee479935435"
        },
        "item": {
          "id": "740f0a06-a86d-4f9f-ac46-10d09453bedc",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "370d1c6a-8f10-4ddf-a499-533ac858b7e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ecf8d5c-2fca-4143-934d-f88ac6f4e9cc",
        "cursor": {
          "ref": "d8d4d8f1-8199-4d4d-a687-6d8e58f815a4",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7b319f0f-17d0-45b0-9e26-7654e6073ff1"
        },
        "item": {
          "id": "3ecf8d5c-2fca-4143-934d-f88ac6f4e9cc",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "1ae96fdd-59be-49b9-9b7c-cb6a271ef729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3128e8f-b794-4996-990d-890a23318e7b",
        "cursor": {
          "ref": "0d11a8b9-6732-4912-8d94-4cca4e9d6f97",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "667e5fd9-e139-4a2c-a0d3-e3693e97c601"
        },
        "item": {
          "id": "b3128e8f-b794-4996-990d-890a23318e7b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d0d429dd-4f0f-4b66-980d-bc5b6c2fa9c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d0fa38b-fd46-4593-b0d1-e02cd68d72f0",
        "cursor": {
          "ref": "ff8ff834-c060-4a3c-b91c-e7c5ac072845",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b3c0d239-7a77-4f40-9bc9-822fbdca5798"
        },
        "item": {
          "id": "9d0fa38b-fd46-4593-b0d1-e02cd68d72f0",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "16dbac29-7b9e-4240-8a48-5049a728b878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d9ba8a-bc9f-4eda-a42a-720fced3b2cb",
        "cursor": {
          "ref": "1cd73006-3aee-4c6e-b7ca-b45f6886ebb6",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "fe12dac6-928b-444a-a0ff-8b4b4a926128"
        },
        "item": {
          "id": "24d9ba8a-bc9f-4eda-a42a-720fced3b2cb",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "05647ac8-4928-44b5-9210-2b98370203e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da9e89aa-33cb-445f-b230-551b0cc6009f",
        "cursor": {
          "ref": "d01cb144-1e62-447f-b507-adefd4e091ea",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e65b89b5-12a1-4156-b72b-21e14a951a3f"
        },
        "item": {
          "id": "da9e89aa-33cb-445f-b230-551b0cc6009f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7b0244ea-934d-4342-8e36-8ff8915d8ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feadffa6-fbe3-4a90-a97b-7e0818fd29d0",
        "cursor": {
          "ref": "74d1043b-f9c2-4b6d-85b4-3a44c185527f",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "6a751f3f-167c-44f0-ae8c-ac828d525249"
        },
        "item": {
          "id": "feadffa6-fbe3-4a90-a97b-7e0818fd29d0",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b841029f-e86d-4dfe-81c4-163e0eda8010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa663ba5-8551-40ea-96fa-f4b4d4985e68",
        "cursor": {
          "ref": "9bc0b9da-0e25-470f-836b-7bb36933b91e",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "493bd6ff-ab4b-452d-8b56-2dd039f4f601"
        },
        "item": {
          "id": "fa663ba5-8551-40ea-96fa-f4b4d4985e68",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "9601877e-dc91-4864-88e3-c0335cff50cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 900,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef1f13b-3579-4e58-900c-aa0e931ad308",
        "cursor": {
          "ref": "c6379cca-0de3-4d6e-946c-8ddd736cad8a",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b2e46a22-8bba-47af-993c-0f1282ba42c6"
        },
        "item": {
          "id": "4ef1f13b-3579-4e58-900c-aa0e931ad308",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "7bd18f56-94f7-4c74-a793-8dfab53f38a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 788,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9337eb6e-0e98-4c7c-84af-da788f42cf40",
        "cursor": {
          "ref": "d0356c03-3f26-42ac-99aa-a24036d5af2a",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e9b38088-8baa-4312-acca-8937d2aa15ff"
        },
        "item": {
          "id": "9337eb6e-0e98-4c7c-84af-da788f42cf40",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "0ee064a1-d783-483f-bc17-7ec2b7f3322f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 755,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36c49d8e-e420-4972-a3e4-51d689d82060",
        "cursor": {
          "ref": "e5e84c41-77fc-43b3-9cbe-c0e0fa626c0d",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8760011d-3035-4a97-98e3-4818a3b6fe9c"
        },
        "item": {
          "id": "36c49d8e-e420-4972-a3e4-51d689d82060",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "666efcb2-49c8-4ed0-80b4-192d1a1ef202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 928,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4259c6fd-b81a-420a-bcc7-3cad325c00cc",
        "cursor": {
          "ref": "9570b8ea-e75f-409b-8f01-16225a8e0ccf",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "8aae88c9-6d47-4bf1-bbc3-e9c128a80000"
        },
        "item": {
          "id": "4259c6fd-b81a-420a-bcc7-3cad325c00cc",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "fdf4ed4f-6f1f-4ab4-930b-8957d822173f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de45a50b-3c1f-4814-bf17-48e4db4566ed",
        "cursor": {
          "ref": "fbb3609a-61ae-40a5-a2ca-51e5566701ee",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "9b9940f9-3147-4c5b-b1d5-e0263c592eb2"
        },
        "item": {
          "id": "de45a50b-3c1f-4814-bf17-48e4db4566ed",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "96d599af-c8ff-49ad-ae23-635c64d45f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "072e728c-cfe3-4e74-af70-4f7a1e64879c",
        "cursor": {
          "ref": "d409d551-ed3f-4911-9541-fc95f61d57b4",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b57d8457-cf7f-41d7-a315-2b9f52f05323"
        },
        "item": {
          "id": "072e728c-cfe3-4e74-af70-4f7a1e64879c",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "04eb063e-3d17-4fd0-9360-e58410b98469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb22a705-3b87-4ab9-9288-428e83a670cb",
        "cursor": {
          "ref": "b01779ea-2911-4ab1-876f-1464f8f6d71d",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d9a2988f-482f-41ac-ac86-a1d7c59d24ed"
        },
        "item": {
          "id": "cb22a705-3b87-4ab9-9288-428e83a670cb",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "946dc8ba-79ab-4eb5-a91a-8dc8a0df9ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16477c5f-61ca-40ae-8c6a-040ae5933acd",
        "cursor": {
          "ref": "2e6d6792-44b2-4730-93ec-66d1e672a900",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "8e29b5e8-2d83-492b-8bbc-fa55a2e40f2e"
        },
        "item": {
          "id": "16477c5f-61ca-40ae-8c6a-040ae5933acd",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6707e57e-c2e0-4c9f-bb6c-38626c1c2465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab2409f-0b85-44c6-83b2-92a58ae3709b",
        "cursor": {
          "ref": "a90dffea-af85-4b5c-a5e5-6aafa74c7dd5",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "25dff011-470d-45ad-a917-f69ce9de462b"
        },
        "item": {
          "id": "1ab2409f-0b85-44c6-83b2-92a58ae3709b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "2f440212-9436-4e33-b234-1e28d9d4499a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45e24cdc-b132-4ec4-adc7-3c542c0ad390",
        "cursor": {
          "ref": "93c0c2ac-e253-48e7-8630-a06b50f9f16f",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "0bba51a8-2b2a-484f-8a39-74a2e1166731"
        },
        "item": {
          "id": "45e24cdc-b132-4ec4-adc7-3c542c0ad390",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "982c35e5-4b05-413c-9e02-b9ae1744d2cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a548d6-1c2d-429a-b43e-99e807568d9c",
        "cursor": {
          "ref": "28de8751-7131-4489-8fdb-f1d0b7b4c69d",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f810c119-3311-4696-8570-ce91e99542e3"
        },
        "item": {
          "id": "f5a548d6-1c2d-429a-b43e-99e807568d9c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ae7a0007-9e17-4b89-a4aa-5d0a708972a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b2da7d5-d63f-452f-a2e4-c7a4cae38dc5",
        "cursor": {
          "ref": "826e7b6a-870f-4a8b-9990-dda835da67b0",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "3dac5aa0-ccd9-4b0c-9d9c-764a746f5ba1"
        },
        "item": {
          "id": "9b2da7d5-d63f-452f-a2e4-c7a4cae38dc5",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "5721c110-d3eb-4fa9-a7f1-bfd2c7fed140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5957ed43-64ab-4fb5-82b5-6f6f15bb31e5",
        "cursor": {
          "ref": "2d77b031-3b44-4d27-9bba-a79c2cbe7a41",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "2c3ff9cb-6259-47fd-951f-d98a7fd7e834"
        },
        "item": {
          "id": "5957ed43-64ab-4fb5-82b5-6f6f15bb31e5",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "7c49343f-2d8d-40ee-b929-ed461dfb3700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca15f0e-7dd2-4d12-8f1f-b3a3f482aa06",
        "cursor": {
          "ref": "4c6e142b-2586-4509-9a0c-9a034a24c3b8",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "835a89be-ac19-4c49-a364-1095f1ee874c"
        },
        "item": {
          "id": "aca15f0e-7dd2-4d12-8f1f-b3a3f482aa06",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6d1d5745-d202-4d39-861c-784484f84923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f82a37-ce7a-4ce3-a7bc-6d97ff67da96",
        "cursor": {
          "ref": "545b9981-5e99-45f5-83ea-dc30ee968c9b",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "819d8151-fea5-453f-ae70-6f4485f1f437"
        },
        "item": {
          "id": "26f82a37-ce7a-4ce3-a7bc-6d97ff67da96",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "3ef5196d-d144-4532-8aa7-45c77a9eef44",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e69707b7-2355-4933-8cd2-a916085aac34",
        "cursor": {
          "ref": "cdc45a3b-3ec7-4e96-b52e-659c83c06de8",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b1c4e678-d6c4-4b59-a783-67837e08a9e4"
        },
        "item": {
          "id": "e69707b7-2355-4933-8cd2-a916085aac34",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "bfd17da7-a351-4586-917f-36814b92cf82",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 421,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5ccc650-6a2f-47f6-80e5-0eb5056ab1a1",
        "cursor": {
          "ref": "d8d650cc-cb74-4bf8-9cc1-2f504ac4c4b0",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "2a4f6604-8dc6-4a16-a3e5-74deb50ae62e"
        },
        "item": {
          "id": "c5ccc650-6a2f-47f6-80e5-0eb5056ab1a1",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "7596fd7e-4f92-46ff-b5ac-1df136936ccd",
          "status": "OK",
          "code": 200,
          "responseTime": 510,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "23db0627-0b7d-430d-882a-fd81e33e36e9",
        "cursor": {
          "ref": "d404f1c6-122a-48ae-b90e-a6087381b690",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "4cf0f0f9-1abd-4fda-8d89-7e93e99e8afe"
        },
        "item": {
          "id": "23db0627-0b7d-430d-882a-fd81e33e36e9",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ba90bcd9-45e3-4463-8938-f7ae9ef06487",
          "status": "OK",
          "code": 200,
          "responseTime": 2014,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e622902-2282-4d46-85f6-41cf2e8773f2",
        "cursor": {
          "ref": "397e1768-29db-436e-a896-f560b125a744",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "fd5344b9-33f0-4568-a57c-0a9b673744e8"
        },
        "item": {
          "id": "6e622902-2282-4d46-85f6-41cf2e8773f2",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "93498646-f1ab-415c-8fd6-9235023596f3",
          "status": "OK",
          "code": 200,
          "responseTime": 1740,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d13045d-7c11-49bb-808a-d1745a511253",
        "cursor": {
          "ref": "ee162197-ffa6-4ab6-8f67-d01ae9e8bb4f",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "56c31930-5215-4b5d-8c2d-bd885962130e"
        },
        "item": {
          "id": "4d13045d-7c11-49bb-808a-d1745a511253",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ec840a7b-ddaa-4ec8-ab5d-05fa0e578c81",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d13045d-7c11-49bb-808a-d1745a511253",
        "cursor": {
          "ref": "ee162197-ffa6-4ab6-8f67-d01ae9e8bb4f",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "56c31930-5215-4b5d-8c2d-bd885962130e"
        },
        "item": {
          "id": "4d13045d-7c11-49bb-808a-d1745a511253",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ec840a7b-ddaa-4ec8-ab5d-05fa0e578c81",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d13045d-7c11-49bb-808a-d1745a511253",
        "cursor": {
          "ref": "ee162197-ffa6-4ab6-8f67-d01ae9e8bb4f",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "56c31930-5215-4b5d-8c2d-bd885962130e"
        },
        "item": {
          "id": "4d13045d-7c11-49bb-808a-d1745a511253",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ec840a7b-ddaa-4ec8-ab5d-05fa0e578c81",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d69e8cec-63e5-4d1e-bdf5-02ef5856331f",
        "cursor": {
          "ref": "a40380cb-f101-4107-b621-420da6f85a69",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "13ea2c1c-4fe0-4354-bf94-e333a6a5c188"
        },
        "item": {
          "id": "d69e8cec-63e5-4d1e-bdf5-02ef5856331f",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "a4239aed-0da2-4b17-86aa-60d5d786df50",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 426,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e682456e-c5e1-48a6-9555-307b8ddd904d",
        "cursor": {
          "ref": "6133b541-8e31-464c-b777-d9ec9b090955",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5692d6e3-5edf-4a76-b93e-4e0e8eb37dd3"
        },
        "item": {
          "id": "e682456e-c5e1-48a6-9555-307b8ddd904d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "61ba8558-7690-4693-bad4-7256c933a1d1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e682456e-c5e1-48a6-9555-307b8ddd904d",
        "cursor": {
          "ref": "6133b541-8e31-464c-b777-d9ec9b090955",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5692d6e3-5edf-4a76-b93e-4e0e8eb37dd3"
        },
        "item": {
          "id": "e682456e-c5e1-48a6-9555-307b8ddd904d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "61ba8558-7690-4693-bad4-7256c933a1d1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bbc141e-9d56-4e4d-89dd-52828b84eb15",
        "cursor": {
          "ref": "21e45f5f-e18a-4897-86dd-8c4538e744f0",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "0403898b-c894-4978-9451-7bb1e9556d28"
        },
        "item": {
          "id": "2bbc141e-9d56-4e4d-89dd-52828b84eb15",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "a20a5d08-35b9-4861-9077-8b43a8a64af7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 665,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b701d9-f786-498b-9364-98293f1a6add",
        "cursor": {
          "ref": "1c60e1c0-3f1c-4362-bbe2-2172d49d85b3",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "dc4c4a12-25c2-4ffc-a252-45a2b3570103"
        },
        "item": {
          "id": "16b701d9-f786-498b-9364-98293f1a6add",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3a4e0177-80ce-4e12-ba0b-029774c6227f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b701d9-f786-498b-9364-98293f1a6add",
        "cursor": {
          "ref": "1c60e1c0-3f1c-4362-bbe2-2172d49d85b3",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "dc4c4a12-25c2-4ffc-a252-45a2b3570103"
        },
        "item": {
          "id": "16b701d9-f786-498b-9364-98293f1a6add",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3a4e0177-80ce-4e12-ba0b-029774c6227f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db33a656-1bb8-4e5a-b09b-cda63e17de8e",
        "cursor": {
          "ref": "9dfbf4a2-bd93-447b-8adc-27518dc5b0d2",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "3745f07e-2c17-4de0-9c1c-c129ee57e3ce"
        },
        "item": {
          "id": "db33a656-1bb8-4e5a-b09b-cda63e17de8e",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "4c5c8bee-ab9d-4feb-ab3c-06ba78426549",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 629,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}