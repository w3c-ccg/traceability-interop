{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e03c6092-4d82-4534-a409-04bb9dbe12c0",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e03cb75f-c8a0-40ad-84de-4f44cc4cd287",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4970fb69-329e-4900-82fc-d68853751915",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f30bebb6-f3ad-473b-9b81-492667d96e46"
                }
              }
            ]
          },
          {
            "id": "e8f2d344-4857-48e6-8b84-f49a37d7291b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e071eca9-4767-416c-a664-cdde88f98ece",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "cf689536-0ca2-4c8b-88bd-3795be7ffe5a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "cc18f929-f7da-4286-b510-7dc7b41c1d80",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "47b78498-8c63-43b1-91fa-3b7034c49ad2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "887a3e8a-30cd-46c5-8d63-4147cc3c76a0",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ccd6519b-843a-4fcd-ab66-6313353b4e58",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4189794d-9072-44f4-aa75-efdc292d5afb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5b13ba3b-2926-441f-9414-2283025c2d90",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "14c67733-6df3-4ea5-a29c-e4a35c9353d6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8dff4452-3db2-40de-89df-d2d1002abd64",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4f598c1e-e293-4537-a190-d4287031105c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f6c4112f-5432-45f8-a0b4-790a9ebcd0c2",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "13595bcf-7dcd-4fb9-b6b6-f89328f6dfb4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5a0a0e9a-08df-472a-83b0-465eaf5f749f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "41880ac5-d7f2-4872-afc0-0a4a61efe1d0"
            }
          }
        ]
      },
      {
        "id": "7d45d0b1-4c0b-4d03-9981-30935a3c80ab",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "2b369e0a-2a45-4b06-9879-d21848887c42",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c9bcf3eb-a206-442d-a158-7f275f12e82a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "937461e1-6306-40a6-8c76-a9bcad14358e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfbef150-d510-418f-a50a-b97708d010f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4190e22d-0ab1-476d-b463-dd65690aa1c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b7bb59-0f25-4e00-80ba-cdd64a824c0d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d09cefe-78f5-4db6-8aff-718ffa37b16c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0ce6032f-478c-414b-b04b-65d6753f854d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c6c8580-8e33-4e47-b844-9fb6da2b45f9",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "433eb0b7-572e-48ce-b297-92d25b937696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fed2610e-f715-4c10-beac-bdbb11adb8f5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e077a89f-265f-4c65-beb5-6ee04a438fb1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d3729066-5f2b-406e-b204-e2f13d7fa13d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e54850e0-418e-4d2b-b9a3-40e967adb054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f6d190f8-c4f7-4093-8097-185b86b0daaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22fe26d1-c00b-437b-b5d4-a14e13de294d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c7aa86e-2052-4b7e-8b7c-2341369d0c65"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "310bdd64-3bf2-43cd-af16-93bf37dde18e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e3aac4f8-6fbe-42ee-9a4e-1575fa68b342",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf215996-c44e-4e44-8329-be512d518360",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ef47933d-27ba-4111-8513-8c728260e2ae"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ad280efa-317f-4fbf-97da-5725102a575a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "693d30ae-0e09-4290-b8f6-6ed56463e854"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1c8c7806-6a91-4901-830e-04425e6f29a0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2f4a0b0f-59be-4feb-92f1-f56c7b5dfc60"
            }
          }
        ]
      },
      {
        "id": "83fad1f6-3ef5-4280-abc6-ddb97dd28d83",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "bd493bec-582b-4d10-9d53-7a4a05299e85",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e095a8de-d907-4d41-8775-0fec92f68dc9",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0b0df071-8796-4be0-8937-624e9a210440",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca0c70a-2a1d-402f-a3d7-84042cfbe781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2678b638-86cf-4a4d-bcf1-bc1913856bd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c737a24f-8f95-4427-bb6f-c733126b8309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29bd36ed-9bdd-4dd5-8ab3-6b31f4f09fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63cc6ec0-16b1-4121-8802-740192eae54a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a2e036-f906-4019-96a5-c223114a890e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b20e704f-0d0a-4e45-a558-4b2344b8178a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4863fd3a-a658-466e-aea3-0c9a615202e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d676b19-2482-4a48-ac87-8814f8a66410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0911f0a3-3f5b-48f3-94e4-d9aafc2323e8",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf12cf98-6307-40d0-b7d5-ce4cc8a0e7dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b696fef9-4b68-4182-a34a-34fe9ec0e4bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1823593-2eaa-43d0-8433-0d6295af046e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65aa2692-cbe3-406a-9cec-909216616948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ae0d27b-de8a-4e57-a0f9-b61c9d9d9e93",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "921da6aa-327e-4c80-a00f-cefa706a2279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12af1b22-1afc-4f8d-a91a-d0adff9ecc2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1978af8-cb33-4bc0-9c2b-659e08e3613a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab10bb72-f4e8-4bf0-8a9f-7b6f828e5907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a67e32-4f8c-4930-8652-3bec534fb571",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e75b5b2-3ec5-448c-81d1-4787af8b0f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3015d152-5e57-492a-a2b8-e135f7459bc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df2ee6cb-45b6-42fe-81ee-9e3ab4f635aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01ffa321-39eb-4536-84cc-2a4f03bb7837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44505376-a208-4333-b5db-e34e877e13cb",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6215f8f3-8c54-42a1-ba8e-4afdd8ac1acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "800ff549-a29c-4686-805c-999100a810bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c680f6-0c43-4688-8897-56e03819c291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c779ad68-79f4-40b7-896e-d82cc8100e05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d1c7751-cce2-4ec3-9c8b-078325b8a7e0",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b3ccdd4-184e-4066-9f44-6040aa8b6659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79875ce7-11ab-4245-a577-19f1cfb34fbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df5d61c-5a52-4c01-8db5-63495eca546f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1ef071a-ae60-418b-9e0d-5fd313a90c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78624c31-05ab-4d12-8504-3164b7f32e49",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c07c9d88-da46-4c70-a579-f67c1f773d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2214b900-070e-4bd3-9f64-016d9c8cc446"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81758ca8-e3f7-456d-9c5b-2d6fd8089fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e21cd3b3-a2ef-4c1a-8634-5dcb344552c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6aaa441-7907-41fa-bb19-66f29f261e23",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3305f13-7b16-47fe-916c-5e6ff7dc0aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce514fc5-4c41-4560-b96e-80d25ffd7071"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e8ad56-7a13-47e6-97ee-55e439edd722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e6a6d56-bda7-431e-b53c-d24ff4f07be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3ef421b-5136-436f-9e10-9affb602b47e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8552bcb-e150-4bc3-8704-ae8a2d15d6b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50e52411-8650-4846-bb28-c17395c4f626"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d8d3f0-e5f6-438a-b209-c8008b8f8cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e819f783-20c6-4f60-b900-36545eb94f15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edabd136-22d0-4801-991f-4cdcd80816ab",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f686c719-0ea8-4d89-a924-d4e3b6a4eda7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39071d3d-6a3a-4ef2-a132-a7eae1dd804e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "657db922-6eb6-400c-8211-36f1e4e5b587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f958f7e8-2b0d-482d-b799-fb951eeb9323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81d13ed7-509b-4c87-a3ff-39d3da158904",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4120fa8-5431-4d68-b2ec-dc012144cf29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54501acc-23b6-4ef6-b6c6-2f029a36ca0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca4c9a5-2d4a-4f72-9a98-6eebcbe6b3cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9e2cae2-2642-445e-a890-e69b5c353a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6aaafe4-d693-448f-9625-99f08565cc81",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01664789-8711-4e04-9ea6-3621acc900a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1287a033-2f78-4f60-b4f1-18b67a6eef92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeeedbac-9a30-4c6e-9ba8-cde2a6eadc70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e182f0cb-1d18-434d-b7c8-3d2c1c67e6bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48066883-588b-4941-8779-3c92e53fccfb",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a9c202c-3970-479c-98f6-ecbee0b0c89b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "138e03bc-9ee8-4c72-b612-d6ac4c233f3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b27143ad-dcb5-4094-9609-45d6e88ce178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc21d3e6-82bb-4a46-969c-b124fc62b0f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6585bcc-46bb-4e08-9bc2-e6270f2bd72f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26f3896a-810e-4990-9d8c-ac1cddc34ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d473a25-3ac8-4ed1-a199-d85e18014218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c96629e-1f5a-407f-847e-c0cfa3287059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9987c8ea-747a-45eb-a4ce-cb6581911f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c40f26d-7857-4331-aaf4-434cea236531",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "224b1b65-b5d5-4197-a70d-be2480fff3a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "096b39cc-74ec-4522-8a47-823af7f1eb17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49a37870-a031-4723-956a-66818a67b7e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5ed2e2e-c74c-415c-acc6-6b6dfa149d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2552b734-32fa-4213-9958-cc3494ddeafe",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8be0ab0-0f0b-4ab9-a844-767d22e7481f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f9a2b02-173b-49d2-97a8-c569be5d0da7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a54a4934-c895-4214-873f-baacc365c2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2bbae071-8398-4796-ada9-5fca6dcb5cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "265a7779-e5a5-4b6a-bae6-fbc890309d16",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "182c4ab8-c3bd-40ec-879c-248c996fcebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "175e33b9-cf68-412d-8deb-124f2fefab78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d84da073-d3a6-4c3b-b557-716dbfd80d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "74dbc45c-0a61-4fa1-b362-2517b757b4d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a848431-06c3-4ab0-9f49-0abe4e64d20a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a41b80a2-0521-4bdf-9ee3-cc67f19bc0b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12b4afec-c723-4634-a015-44ecaaab8ffc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78585857-05f3-4667-b622-c8512ee1084f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4faf6684-f5e3-42d3-8220-545408a16f0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dcfbadc-6673-4ddc-b205-81c49950a452",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e922c434-413c-4934-b501-3028be05a5b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ded6bbb-f987-42e8-a824-d872ee04c0e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f38e93-2142-4463-8ad1-9b6376119f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "197a69b1-a306-44f2-bd20-a965b4621af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "600763d5-f9fb-4455-b8b8-d60139c23d5a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d453789a-f38e-40ef-bf4e-3f996be5f879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "585c7a4c-573b-4567-a53c-b0c4c0c52f5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1300f24-e146-4dd8-a65d-669be78e00d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3148eeda-817b-4474-b389-45ca3d659131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39b6b4d-820d-4a43-88d6-0770a12bd6c6",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4296761b-214f-4184-9571-ec4e9f38ac49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8164d9ef-128a-4068-a298-b9609a858e1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a4c382d-996b-4f02-9c78-cf5564c4c774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "00c20b11-4bc4-4f65-b62f-c695fec675ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe0a46c-5069-4372-a000-c1cc9aebaa43",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a15f97fb-54e0-4742-b88a-f81283b4d4e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "607464c0-d1f0-4648-8515-2c387a77877c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f50726-069f-428c-b3d1-94fe22040568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2d976bcc-9eeb-4ba7-9f22-905a05c60c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab16e3a4-b1c9-48f2-97fc-6bdd20ceed2c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ae92fc-6ec3-400a-840b-44908437d56c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c762342-d252-497c-a6c0-d5f046052b11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18496b8e-5efc-4345-b0d1-b84dc7ce218c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "99893504-6ac4-4fd0-9c9c-430fc65ffe64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e409630-3658-41bc-95b9-f208ea4ef6ab",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f46e8d-9f30-4808-a5c3-687125cfe7f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "110167b7-68a0-4ae1-ad8d-9a8d5c4e2287"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd95dcd5-1386-4772-adee-d74a5dba9fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5aeb0b0-e6bf-4b73-88ba-5bceb4d036fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25247eda-b9d6-4f84-8f81-6badacdab140",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d22bc24-86e2-4469-9119-ce8637ce4829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "318687ef-b8e7-4435-8929-5cf2dd174bc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0bfde8-9457-411c-8ddc-0cb120045f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9d0100a-a9a9-4a1d-acac-58dd49535a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d1842a-40cf-4e19-8bb1-17254d859ae7",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eedbd50-4384-4f8b-a66c-071e8bd4e24f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ab4dcc6-b7c2-476b-9b6c-fe50934d3460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d7065a5-98c1-4140-94ec-07d0fab80597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "19d293bf-099e-4f2f-af75-2bf8f8656a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f696686-8499-4c99-a916-dc077e9f4177",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa842e56-0583-43cd-ae0d-ebe76b82e096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bb9282f-0a0d-43da-beef-3004d5914c85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce38000-e6b3-4e19-b0b9-105711bec1c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf4586fb-cca8-47c8-9f69-f1026fb39210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c81f6fde-1e98-40e3-87eb-e50cd0f1fc97",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa3e5b0f-0dc8-48ef-8ae4-6a682e8af000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c9a4357-c153-4ce3-8577-5684ae99041f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e46190d7-bd1f-4df7-b38d-b6c03e83422c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2a5d29b-2804-4c06-a69d-d89c157ca7fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c56ecfe-c33c-4702-9180-b1ee70ed7c9b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66166947-3666-4682-b451-00c5392b39e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b55ad13-86fc-46e1-b439-c553596a3101"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4ff1b63-fbda-494c-bfee-f5f6f0b229b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c954c6c0-ad04-4e2b-b79e-e7b10609a886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86204ccb-d9f5-4db4-8a17-1176820a05c7",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8493adcb-f037-40c3-bfab-2a812e12ad2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "030c9824-456a-481f-8180-74786c5154c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f54a21-f423-4805-a7b8-e2be3a411752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d4beedf-7f03-471c-a31a-88cffdbea160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53fac791-554a-498a-ae17-caf15d4fe001",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d1ddf2-866a-4f58-b16a-4282d2e5bfff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e855e806-7224-49ab-bbec-7d7936ced654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f9de33-d0ef-4983-b57e-25ab1356c24f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "09cec18f-17ca-4f3a-a47c-4458f9436f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aeccdf6-4b11-4036-b31e-4940c3ecee17",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a6ea76-477a-4d9f-b0f1-8709f7a96766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d772f26b-e479-4a22-b397-f2829ec4f776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead350d5-db80-4c8d-8e53-11dac8aac05c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "38a9cb14-ed49-43fc-b635-d3d4e1a31660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "031ede49-d42c-48a5-8898-59316148a8f8",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc1e657c-9171-455f-b7f8-ef13e4e0a0e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3555525d-9ca7-4fc7-ac1b-f26b9a5b8f98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248f980f-a2be-4214-8dfa-82d5a89813b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cae04143-5e0c-429d-a813-d668f664e253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e80ffefc-2e51-4b98-894f-dab430f7f882",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4c6072-9413-4da9-9155-f0bb0fe54b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96b013a9-ef89-4591-97c3-19cc67855fdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb6e297-c36f-40a5-8714-669de6c6407b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "58442c44-e107-43f6-bd7d-9c2d4e711f6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5713cd3f-d8b7-4231-8435-8f288925cbbe",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef451ded-16da-43ff-b873-f42880188b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0ff15e90-c90f-4dd4-a1c4-950d2910c31e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0107f5a0-15fd-4c44-81de-84c656f92d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "82744a48-e408-420c-b0af-99935f4c8e1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "622cb798-7ca7-4776-8602-8423a371a4f7",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e03cb62f-f5d0-4c9c-aeea-7542de34ab32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3d5bf2e-21d0-4145-877c-a1a6a5528c53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc03229f-e574-49a7-887b-7be73fc7cfa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ffc9c0e5-7cfa-47b8-aefa-e5eded463967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "367c4081-5b52-41ac-9b76-dfd7144105ab",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc5d2c1-2387-4cbb-8393-8e8f87ae7418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06dae31e-62b1-4367-80b5-6baa03a4c9ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "765d8615-68ae-4824-ad0a-1b008a56b57c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "eac9fec0-775c-403e-b5f4-880ead4331a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e1304bf-13a1-4fad-a347-7928910fb3e2",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eddb31b-e66d-4231-8762-059a47cb0d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2db0a796-50d2-42e2-9566-bf176a53ccd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e60d0e87-b74f-4458-ac9c-85ef48bab680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c45677b0-3ef6-403b-99c1-a47f3054ccb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d939f5b-e18b-47f4-a117-b2976ae0d93e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fea28a3-f4f3-4ab4-919c-de6ee9c4c98c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94904ec7-45af-4008-ab6d-90cfffc41eab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "112df77c-6467-4fc7-9f2a-2b75b2ba9cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "27c952a3-25ed-45f5-a70c-ddffa157171f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b82d1b-2386-4844-85ad-76ac28ba6f12",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40fb547c-707f-44a4-87c3-42da1e908288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb182860-4510-4ad6-a744-32ba313ca763"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa0922c-124e-4013-8b34-9f7b5609d849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd2e2ed6-ba52-4740-bfd0-833690de651a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c967408-48cf-43b8-ad62-bb29de04cbaa",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb8550fe-00d9-49aa-8c18-f95466bc3ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48af02cb-469d-490c-a026-123d3344b746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4254a63b-720a-4aa5-b72e-e56711f527ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "a8c1f354-16f8-4e70-91d4-2a4b0775d14e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b081721e-c3d2-4aa9-8232-026c0512314d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "447d0c51-e7e4-47d1-8ad4-027c5e0deace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a67c3a5-5a09-45b4-ab14-6c19296fabba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "655b5cdb-dcbf-4523-8b28-219a419a0180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a7974f8-0775-4eac-90a8-44546b1c6c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce91e3f-a412-4f31-983f-4964a8c5e6a7",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8908c7ad-0b16-4789-9dac-900c540f8ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffa72145-cba4-4811-acdd-c674ca9024a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2578cc0-e77c-4d93-b80f-2381a4401f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a6f34ae-c875-40ef-8ee9-491a660f1865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38b1e7bf-dedd-4b5c-9415-0694865f0edf",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "482b181b-1f69-4335-a568-a33576e06f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eff030ed-f5ff-4ee0-9a73-d72c793c72cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bdfb99b-58f8-4990-ac94-5ad772c9afee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac5d6128-d932-46d5-bdf1-e746eed279d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89849d57-7f09-44b4-9d64-37b0fb40c7f4",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8283fea7-3ca1-41cb-94f9-cd788396c393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aff1235e-aa07-4f6c-a208-b6364fba04e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45415555-50b5-4da7-82c3-26eaf6c7a0ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bdb0b08-73ba-448c-b153-e1738431551e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce67f2ae-a7ef-4bdd-bb68-9136deafa1e4",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e43bc709-7ce5-4619-a5fb-14f8e31e2468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25165636-2d9a-49d8-90ed-b720e6029251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c81772-c568-40a4-970f-3888747753ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a34d325-6b7f-40ed-80a2-6983fd17d587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49947d2f-62ac-4606-9d50-942da83f2758",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85bc11cb-a235-4e25-a670-c6d87f00f46b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98bdc55a-b6da-436b-96c9-fed375eaca5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf3b38c5-9974-4976-8800-97561a21ed77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2416eca-b9d9-497a-b396-582ce181dccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ebc3873-da39-420a-b88c-5ad21ca22280",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eed69cc-aecc-4fb6-942f-1fa82b03ee9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba7fdcc1-07f2-4335-a1ae-3112aa28350a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37835f4c-59d0-4576-9f68-b77c75791b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ecf2798d-01ca-428a-92a4-4af6acdfd78b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68414549-e4f4-48ef-a1ba-2123b3613e8f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e1bfbb0-73b1-4ed9-945c-0a4abb125e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8ac420d-216b-4d79-87a8-a1274e2074c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f49066ff-50f2-4e02-bdff-09f498c8bc2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "46cbf9f4-7a90-41e4-9586-7cda1238d40d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab9fd0c-257c-4585-95d1-e0ae38a5abdb",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "848150de-dd2a-4d80-9a1c-345ea9d2c7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d102ca7-e4bd-4954-bdfb-64b615609925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76daaadb-2a6d-4d2b-827c-cca73c91ef40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "858548b1-2d1c-4340-8245-e81622f3d643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da14a1ce-51ae-4512-b32b-66e333828539",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "420e47c4-3063-45ae-91a8-a6d7472cd7c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ae1d29a-7c3c-477b-ab31-b933e1d64e3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a259287-da3d-49a9-a981-7ca7a3fa48ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "56c2721a-05b5-42f7-911f-3aa281cc5c73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5daf2613-004a-4f4a-bbe7-fba032c92a89",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb22c8a2-6c0b-4176-9467-262dc8938ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "098c05fe-78a4-45a7-90b0-21ca0614e50a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a17b231d-61db-44c4-96e3-f3c340c00b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "28a82b35-471c-4b21-9118-ed9cc15e12f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b47b86-0a7c-4193-923d-bfe9a9a80322",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12301c14-9a4a-4ef5-aeb8-a5eb9a04c856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "331d9738-2a3c-4793-8826-0235b1dac1dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3926fbb-081d-4fac-beb2-2bb0ebd5d4e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c7eef45-f25e-4fdf-bef6-effae2664a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1061f4a9-7dfc-40e3-bae3-d3ad2fe7b800",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5178b93c-3bab-4bba-889f-d879bb52f21a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b04dc6a-4917-46c0-87f5-dbaff5c4681d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b48b1f1-6d48-46a4-8392-7283c0f7dc32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "85333b50-fed7-4dc1-bcfa-88a6c4a01f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dee516bf-fbc8-4b5d-92bf-631c3ea608fd",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d8d1027-9ad0-4d9f-8c70-c8bf783ee425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9894ee00-62a1-4970-a2d2-8e46ef46784c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6427cccc-b5e8-4a68-a894-e0eecb42f1b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "c6c4daab-b374-457d-8e51-f397f895dbce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c4966f7-8f34-4121-a4e2-559506b4339b",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3567b0cf-0ac5-45ba-a907-85cbbf455750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18a2d3e9-05d6-4db5-a980-bfb09234fc5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33636a5d-80fc-4f48-9c83-93bd691623c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d747cb6a-2b6d-4185-9e77-2b9420f42318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fecb95be-d8cb-467c-8324-d1fdddf3a0e8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf1091ec-1e66-4fb4-b941-b4a17fc28764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0649aca-7cff-4302-a238-c5596d11bde6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c524cb1-7cba-410c-b2cf-e25f7ab9319f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "397982b4-4a8e-49b7-81ad-dfd2995a5322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad5789ab-f570-4827-bc56-9d8610d086dc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24be434f-0837-4118-9e1d-d430b94b067e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e46adf4a-139f-4706-bd23-a05ee6d48cb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "542474af-5afc-46f9-a10c-0772cdf0d909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2cb910c9-ca39-4f8b-863b-5a63368d9c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141ce4bc-194a-4f49-af30-bd02f1ed271d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94597f77-1845-4d7b-8b69-9206e35a8347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f16286d5-e95c-4ed6-9b5a-671f5bc22766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff9ef84-a265-44fb-b581-303d9ad2eac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f662243-bbf1-4240-aeec-ab6c244aae7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f1c5093-269d-4d23-b296-8ce5fddc4a2c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45fe4a90-a93f-44f0-9bd9-82f767edfc84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0ebc521-0c78-4513-a885-f72baad20e6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf2387a-82fd-4ae8-9027-0f6d5d5d70b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e303564f-37c2-4a86-aa04-dff4fa7ad780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f1dc9c4-4b64-4a43-9c02-63eeef75cf58",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03618246-381e-4947-9c38-468d8655e695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6eaa1b9-baf9-4e7e-905e-9718f39dd0c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1084362d-0bc1-4f00-bc3e-2412a6329b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "46268227-079f-4bbd-a54a-f014229fbcba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa7a7a8-1783-4e8e-bf52-ba18de7bf58d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc70562-0128-47ac-ba1c-20851fc74ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2a15e8f-f0d3-4f8a-8a90-03150840bb69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c2bcd3f-1800-4d65-bd8c-ed3eded375ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c48108a-d42c-436c-aba2-3c5949acbdd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0450218-8c8b-4357-a11f-6a0a57a7035a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d814b3e-277a-47d4-b9a8-c86ef902be5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78d88e63-e80a-40ae-8373-49317e3f9761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08c034f-760c-42ce-85e9-cf6878154e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6382b152-680f-44c4-9f49-4698205c24b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35082543-60d5-4ba8-a8de-ecfdccd72579",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "345b4d5a-7f11-4e04-b51f-db932206d562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dedf7f5e-a4fc-428d-bc54-154250c0858b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d5d696-250c-4f56-8c1d-77e3bc634658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b92ac2e7-4fa1-45ae-8164-db329fe521e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bfa1a71-d743-4952-849b-11b7d1202071",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef49bd58-ed32-4c78-95b4-ddd929090ff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2daddb30-885a-490f-96db-36305d6fda2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9185070-a86e-4b08-a378-a228f3a81db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "61a82492-8621-4920-a8bc-1347a335eaee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af56c73-e8af-4b36-8bf0-2fd55e3327cf",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "795749b2-2795-4f35-b047-02b028e6d741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3c644a9-8c70-4307-8ba9-1dee43426036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c6b28c-70f3-4a2a-9192-39a8ae13cf83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9e8e00cd-a87b-4027-850d-2ea6566c8df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc896007-3604-4839-9392-837fcc797972",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f46ed896-57dc-4d95-b241-e0c367e6b46d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb35803a-85a9-44b5-9448-99d9dd8c6fd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20bdbb60-b99a-4fce-a313-a198928492d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f770e52a-53b5-4bcb-a7ab-ab4c6b18632b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb37e305-00d3-445b-a875-d4b5c02d2e2e",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc4525d7-7844-4d1b-8da5-84936386574a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "991a31e3-dd4a-46be-971e-b929a620b1bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0f589a-e1b8-4c9d-842f-b98aaf1a4af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "22806ec1-1844-45e3-ae0e-f36902863be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4861263-82af-404c-8546-9a88c1c148f9",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94bf5af5-06e1-403b-9c58-2c0bb5cfe407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89ad9314-0c46-4807-b748-e0d522e60806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "218ab74e-541b-4c9e-ad4a-485084c39472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb9bee9b-b41c-4553-bbd6-f04c6aa00e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a16e2df-4803-437d-8241-e7d3ba6b0467",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12af0560-3b76-40ef-9792-59da94c02896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b90eb21-097a-4fcf-960d-f3bc5834c33d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c041094c-7828-4fc2-88bf-c595689196fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "34465803-e44b-4158-9a1a-8b6025125027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ab49de-818e-406f-ab25-a2b94905b8ca",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da39777d-16a7-44d3-bcca-e9d2b6fd3dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d04d574-c5b6-4c5d-9d8c-f74b69bda58f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1059819c-db77-4807-8e01-423bae738d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2194d86-5273-4922-ad17-1fa65dfc6a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acfee25e-25ba-4ea2-9356-29e2682ae9b6",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "113d0662-54b2-42f8-b5b1-f187ee83a007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5e1a70f-fb81-41b7-a54e-eb273cccba8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "712782a9-5da1-4288-a621-b6a05e7b76da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "52a10c47-d75a-4a14-b99c-9db0283775b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20a8e94b-cadb-4c46-967b-7962204790fa",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0754b2f8-a274-4778-bb0d-47fb78a0754f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e7d75a4-b26a-435b-ac28-24895f321e63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12031502-c46b-4e67-a1af-eca5479ad339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8ee5a818-3239-45f4-b987-f543132a8ab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9d56926-8eb1-425e-b918-d98708888026",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d6d0f3-3c67-4315-8cdf-d1670884dac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33176e84-7920-4e1d-a19d-9e8f337b24b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608a85e4-7089-4372-8d4a-e02ea9ffb613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4fb511a-b771-4e89-910f-03239c84c876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65f61b2a-4a7d-4395-a3b7-005723069a9c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a93ef8d2-2eb1-4113-886a-3268930d3d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d5b1bba-7d50-40bb-a641-979422f23651"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "725db6f7-2dbe-4fda-9eb6-1bb3a7bb3037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef47967c-59b2-4731-91c2-d8be35486d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce1eb3f2-3947-4953-b59c-3d7882b41a22",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6409d25-6bbc-4e98-af25-e698c68777a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20cc8a4b-1b07-422f-a46e-d274751823f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff6fc1b4-3a11-430a-9371-22dd63019661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "75b4fd07-a319-461d-895f-8ea6dc53fd43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d2deaf6-8c5e-42fa-b45a-c0ef77a2512c",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f144498e-343f-4d06-ac62-7b0ee295b639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82817222-57a5-40f8-92ef-d96820188677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88cfef0a-d929-4324-b5d9-d399da52a3a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "341d8c87-78b7-4393-a7c1-394b9b81959f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b175d1b-857f-4cc1-93fe-c0f5942c8661",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b96bbc7a-b2cb-4f75-8ac1-856c37abbec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e116bd2-f145-409f-8c0b-4859e9bd3a30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5febd978-a1a9-46a5-9e02-23c2bd692b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "38db5537-3686-4115-b877-d08bf6d27f2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58fc956a-0fd9-4d70-8c13-bb143c9608af",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40cb80cc-742e-4f71-8c17-8eb99675c77b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da28be5b-c909-4317-88c7-5e904dacfbd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a243839f-eca6-44d5-9ff7-d0e1ac25c9fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6c923ecd-5131-480f-92cb-2bb5d56d5b17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c3c11a-14b5-4f68-b871-202967835717",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a700f33-8b16-4de8-a903-2d7c9ba833e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fe3046f-cb4d-47c1-833b-924aaac61fe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18598353-0457-45fc-95ef-dd9081e5e8db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccebc93c-ed38-4585-97c8-4471db7c1537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16dfe486-cdf0-4b35-9811-99ab0cf21689",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b83033-e3eb-4b45-8608-d5191555db53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56686c21-dbe1-42e9-86d4-a1a23ec27a22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59edcd2a-c461-4220-8976-3a7a78682382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "028fdaf3-1efb-4c5b-8b3f-668cfb02c006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5beac4c2-4a7c-4098-8ec2-a6d6515cc9c4",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e1c800-0f2e-43fa-8f57-1b1e0e995725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ca89010-ca77-49f4-94e6-08476f65ed83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20e7ac38-da91-4fc4-9989-7a0b038a0594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9afa60ba-17f5-4093-b890-b0e609c8235e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e30a9fe-3a92-447a-a9e9-1d9d7ba1e52d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4253de60-5bb7-4f3b-b159-88f0a3262140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b16c527-51d2-417a-819d-57a47ff5650c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "004d56be-7cff-4f52-930c-643834bcd062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c426025e-3fb4-4851-a541-1227c08af71a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef39ee62-3b4d-4bef-aa95-d5b47827920e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a243f49-85ab-4f61-b373-f4a4645b6026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d96af735-a786-4aef-ad26-d2b8e8eba656"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b18f3a-ca55-4b88-ad20-11591c87a510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "97234fd4-55ab-4565-b434-16e4467ee220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "723c21bf-587f-457f-a24d-696c843b2cbf",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44aafcf1-3d15-4d4c-a566-e65b844a2c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d155999-3435-475b-8bcc-cf991fe1f18f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e44e959-095f-409d-b742-a180840ce51d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aab5c527-25e6-4dc8-bbcf-039129f5d194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db2f1d2-1b8d-4832-99d9-b563ff24897d",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef1a4286-4a34-4f02-a71b-a5472c19ade5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98d9373f-b8cc-48f1-8636-607876ed60d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c502a788-9ed7-4e0d-a003-7b0adf154b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9389c170-db4e-4996-9fda-0761bb17dd39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ac3415a-ea0e-400b-9f04-171c3d57c162",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eadaac4b-dd79-46e3-a4db-dfe9ecc80c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c704d5c6-b5c7-412b-8a39-e692aacdac01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ff7500-d3a7-481e-b18c-80138c46c561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a7d1b4c-c32e-4f15-a704-b33de51bb65f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4838ca26-2ca3-4bda-a958-7c7b2bb9baaf",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe5f77e0-7128-4d8c-a190-47531f3e449a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a91b5549-ea12-4eba-8b45-d3972f9de56e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4368b6ae-6098-49b4-a115-a8152be3d20e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f6a56e3-da6c-4270-ae4b-62ffccfe3518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac0f794-390f-45cd-b6d1-ad6ea2d3b334",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b85cba05-cb64-4b10-aadf-5ce34ee3a629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31adfd29-386b-46ca-8405-21dc95d879b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de02f0bb-5c5b-4c84-917c-338c0986373c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f695ac9-8b14-4f38-a953-40c6d7e3ac89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c024833b-4d98-4776-a484-f208789d74db",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "864c1faa-7603-4259-b089-770b4c68035c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb957715-cc2f-4a84-9540-1522514835a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b14d14-2a41-423a-b646-ee8c9e92904f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "54e512f7-6957-4e39-8bab-52708ebadaf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64186b00-42d5-4ef6-b3c3-1ca37e908f5d",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af759cff-12df-4460-9052-1b639cd20682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a74c9101-8256-49de-9873-5880cb98b855"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e346badf-af8d-43ce-ae79-051242a9c8d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4982d1e9-9d51-487f-8e58-7446cf386a0c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ca37c2cc-9103-4abb-929e-d1774bf009e3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f50f4ac3-e336-40ad-ae63-581b174464b5",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fea1697-8838-4584-8b0c-f24d45d20186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "513e59ea-83b4-47ca-a607-2d1f3aecb78e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f35ad8d7-a9c8-4c7e-b4ec-3c577b3f7939",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "396ad97e-18f0-4875-94aa-533762a5c2ba"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c448c87d-dde7-4e8d-bf00-28b128c95a28",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb3493ed-134c-480f-9088-ea13ca57348c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "48a16632-dd83-4c07-9af8-b45ccd0e1001",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2930dad1-559b-4192-b0a5-e05abbc24be5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a60899d1-96da-4aff-84db-2e80e99f4f55",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "df557993-580f-4ae5-8b0c-f73c9277515e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b82029ac-e05e-4f6e-ae44-796ef2d1bef0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "24aafc5d-7ebc-4f72-9e34-cd3b3af4b088"
                }
              }
            ]
          },
          {
            "id": "32a0d59c-1f7d-428f-8317-3fb48e12f56d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6ee0a132-a983-4bb3-9278-54cc6b27ed93",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "aae20922-ef15-4e87-9826-ed2a2a3fa30b",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a29552cf-67e3-4495-b93c-5ca83acf7196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "bd0ef52f-a752-4e05-87be-97269c23a1da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb4b890-0acb-40ea-bc16-674367c38519",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78590732-396a-40d5-b7bb-5c8843da6d7c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1bcc0599-d297-40c5-94d7-33f6a248c460",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b350156-2f53-4184-a3fc-683af02b10d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "57301a10-2606-4dea-8be0-682351b8ffd3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "48e00a0e-2ace-4402-b6f6-505f38045c75",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9a0492b0-e7e1-4464-98cd-f2be8029c2a2"
                    }
                  }
                ]
              },
              {
                "id": "9a8f8b78-4188-4e39-b1f3-0c5424225c12",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1ab5346-7125-4b02-9eeb-855b79e7c1ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a651dfcf-3621-4e78-931f-840611ab8107"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1744757-86b1-456d-a4c7-3950f459bd1d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a94487db-0bf6-4b66-8ea1-1e98c71fa223"
                    }
                  }
                ]
              },
              {
                "id": "17026bc5-c73b-4bf9-8590-60d4c3a8acfe",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "994a1cf4-bf2c-4d05-bace-daca60a7fef7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0922b7f2-6f3a-43a9-a70b-e66c15b75bcb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f63ba9ac-9e34-4c64-a3b2-f35082537d83",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ad3faafc-5b58-49ec-85fb-12796132b29e"
                    }
                  }
                ]
              },
              {
                "id": "67666032-bdb0-4861-b122-6c279acd039d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d83d5d4d-1671-452f-8d1f-43c1978ddeb1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fca392c5-70b1-4bb0-ad7d-7d920350c122"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b136a60-1c4f-4a52-b325-5deccfe506f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c5b9a7d6-3ff5-43d2-aab7-7e3aff5aae67"
                    }
                  }
                ]
              },
              {
                "id": "582fb013-c12c-4330-a745-e04bd1ebc23f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "830c29fb-16da-4c33-a0c1-11bce7f6031a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "166e041f-20ea-46ee-9b5f-b05450a85e6c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23c2a014-581a-42c0-a4af-6aed4beea411",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "fc21a872-5545-4131-915c-ed8a9567ac55"
                    }
                  }
                ]
              },
              {
                "id": "b7e1d842-2cc4-44bd-a140-a5c4cbd06a13",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c252a83b-2336-418c-95ca-a61b5718b590",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "88b94cd9-1eb5-48b0-8f75-43b6ba3ecf0d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "944fbc4f-3ea3-4711-b0fb-04e8f7c5714d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f5de0746-236c-4783-8ca2-40da829e0219"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2fe15d06-7469-4451-a88e-04234136d0d0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ec86a9ed-5f2e-4138-9e1a-897d2d99c607"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2b6bb617-ce5b-40f2-8abb-a107f1855066",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "25c336a7-3484-4a28-8835-d9479f9d4a46"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "88445256-f8cb-42a7-889e-99fe17a2c6b9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5f766657-7ccc-4575-8a8e-3b36b090cc9d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "10a71967-40f4-49fe-adf4-00bd15cba451",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c5bd4544-68f3-4bbe-be66-1e997d542e42"
            }
          }
        ]
      },
      {
        "id": "0d2fdb9d-be0c-4a04-9620-c92e88b57733",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "3e85039f-bbd4-4b36-91fa-9c458e8a74bc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1aaf1f6e-a54c-4b58-b4ed-1d40b8682eba",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d9dc0a8a-f773-491d-93a7-4aabdd8dee96",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a224655-7f2c-410f-b79b-d2209c92ff05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fac9e4b-f54a-49b2-ab0b-edb9e6fe2844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e01027-8929-4a4d-bf9e-c687dde66cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2340ab4d-1617-4ea9-b119-06546a063d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f49b3c27-f8fe-4ed3-8564-e3730b71aa69",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c1330e9-d86c-4bfc-95d5-932a4eb3e1a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67b16d99-25e2-4617-a643-56852da776d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec0be33-cec4-451e-942f-57c1590a6c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bccf8da8-755c-4ff6-ab39-4fce8a3ffb55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cb015ae-f492-4f0a-8c55-765e13ba522c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca2f6c9-7405-4eb7-9213-dfcb2e3ca639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4118f495-0e5d-46e4-8eff-8fc5c25447e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b9e4617-b22a-4058-b6d1-1ce0bdbc628f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7252201f-bfbb-4ff5-85bb-eae253a803ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c9a984-97e7-4062-9116-39f3e66326ba",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e4a288-48c5-40ce-b539-34ab40cdf0f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4f1166d-7a54-48fd-bd52-0432dde9a4e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a859bd59-ae5d-49a0-8504-f13a340a22f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d53f6d09-fd55-4fc2-b360-7a0aa817ea69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d2761b-bae5-4e15-a9d1-9536090ad609",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e9adeb-9db0-4ef4-8ea4-ace12b7c4eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fcbca85-ca7e-49f3-a0e2-608c4ee38eb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1738c917-5296-42ef-8b6b-fa74af4f24ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f9b8537-531d-4992-a2b0-dfed41be3466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea5761d-6f3f-496e-9056-4e3c8ee4967d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b78c9f72-1722-4bde-9c1a-f5d870f47ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee981b6c-e5c8-4865-b351-6da2b17f6c3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ec1bd9-4575-407a-b498-c3f819e988c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4657e7b-7259-4bdc-bbd4-d35291f6f099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b66d4696-322e-4d47-891e-2473513b1d88",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d264a3d4-5e2a-46eb-9213-d1b0c756d351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7afd2d96-f435-4e74-a228-c55dea212189"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e9b73c0-bd54-41de-abd0-00945e969715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fbdd68c-1798-48c6-a90e-118e7aaf73b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf4e77a-86fd-43f5-bce4-861769442e61",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a2717ee-cb97-4963-80cb-e2d8e040840e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06c726b2-915d-4266-93ed-cdde6cc3aefa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b9fbeac-3c2e-4896-bccd-c07d1cf887fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a0fb4e5-0b4f-4b0f-b135-9f8fc9c793bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b5d7359-172a-48c1-ad44-af4c47cf3eb9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b9aba6-e943-4120-be09-0b8f2aa44c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74a957e1-6f73-41b0-b767-aa88362185cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0812adf-f392-4691-b3d9-eb717132ffe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "edbe73b1-1985-4a78-824e-d9c98cd4e14e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9135ab87-d518-43f3-a35d-615b5b947e5d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a91de8d6-06fc-482b-b6da-b2fd0fa4a6d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c1903d8-aef2-48ba-bd89-e8fcc3fae045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86027efb-dc4d-4081-b0e6-b1af048eb277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "484996b2-b95a-4cf4-bdba-da2bc919e505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63b6f30a-3cde-4763-88ca-df278a00ab7a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24138a7b-9afb-4cf5-85cd-58fbdcefb6bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46525f3b-0e14-4496-a73d-b46dbac27352"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ec46a58-3b94-405f-9a34-932d1a846aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a790a96a-7f54-442a-93e3-94994231890a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46731e5d-d71d-4ddb-985c-78663595ef94",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eb13e18-7e4c-466f-8f75-ec9f42fd5f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b48df84-86f4-4fa2-823d-90e5d3985d7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89dd3e44-8d89-481b-ada3-6ff8fc32adad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1efc3d87-e24f-4fcb-b397-738292803e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f3015e-fba9-49a0-aa11-16296e3ea827",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78eb69d7-4ff2-4d22-8909-96f953574b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5dec1da-4e98-4335-8e89-52470e12c4ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b5bb59-2429-4af0-b950-37dbdb7e8213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d30f971-2512-4f97-ab35-cf6c58293d30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6505299e-e8be-4405-85a2-52a352169a87",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9717f322-70f4-43e3-bf6e-f9b4c5ce85b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "443b1119-8541-4bf0-abc6-0e1aff159439"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61378ec0-c918-4d04-b533-029560683b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba91f640-9951-495d-a7b9-7fb67d475bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcdd9fdc-55cd-4e07-b843-346d8d0af35e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1adcd46b-d51c-4cd6-9414-8019a9eb362a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "864fffce-e794-483a-9213-c4d2c87a9c1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12cc6f87-b3d8-4572-a385-a12d25c80d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "de6008ca-4c9b-484d-b276-4ccec8b845cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe18f7de-e3df-415b-ad19-51131c00a0e9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f91f10-52fd-444f-9320-453b8af90bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e092b44-513b-4afe-8597-b9bd52fa7f53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c57e21f1-0da9-4b36-844a-0ebec7d3f0e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f3641c5-3ee5-495b-b115-3d34e65d7b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8def9473-7f8c-481e-bd09-6de36473035d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b5c077-c255-40da-854f-bb730d3acb8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa490128-088f-444c-8e9a-56d317f25c37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b62c0c2a-6a29-4910-b5c2-1744d26de5ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd6e09e9-f305-4905-a6d3-368873df0e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f319f8-f301-4aad-8445-5bcd1e98b961",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0bfd67f-9ef4-4ba2-af79-1219f98c1732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e444f548-95cb-4d5d-aa92-9fcb52b88cdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89131a0f-dfe6-414e-8723-ec5806609e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "47903512-6fa2-446c-81e9-116a57e6aa5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1af79368-af61-4c14-bc8a-7e96250b8cb1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ed82b6c-3b8b-4187-8161-3ef64463c877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be005f43-5809-4ccf-b670-9728b7ef05ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "886c9512-c6ef-4c6d-add2-2dc7639a869a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "193a4206-b107-4f81-822d-af131a7552b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1720a687-a546-4a2e-b864-831c07f98196",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f32a20f-60fc-4021-b6f5-c82f12528831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44037ad7-fa92-4d47-a2b7-5e53ed3f8d86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "775167a2-9b7f-442f-928d-9228329e5beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcc74c1e-160c-4807-8fcf-838a4db26d30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e02c4ee-acc1-45ae-8327-c915f05d9427",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff9c4c19-1859-43b8-b9ab-c341d9c20aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e9aba4f-147a-44d5-aaf3-3ab0cba0333c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd7219c-dd20-44ac-89e0-f2178ed4f382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "704e3d38-5c2f-4c8e-a6c9-47be47941fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0080df8a-b845-45bc-bd22-874a34010d3b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10200c3a-3186-464f-87de-b417aac4b4a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "315a120c-8ad2-4492-a187-d4ff4db67f7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb59e4a1-92ee-42e4-b5df-a59f943043ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b63c4a6a-528c-4878-9e17-ac37958da950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb91004b-05a0-4473-9b4f-111ac4facf31",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d91792c-eb55-45b1-86c6-6ad3c862985d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4127cdb1-d406-4f1f-8764-395b3284f5ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0dcb96a-5225-4c47-8fa6-8b30a642161f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cec169e0-47b7-4e14-bb91-4df11309cb7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c7cc24e-d90a-4ada-bd7b-a0aa699215c7",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c276ca1-07d4-4482-bd20-0f3b9e6de64d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e876e4d8-9675-4be2-84bc-122ac8e429de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c45cc3e1-9398-4873-b1ef-e18bb988b1c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "abb87816-09f1-4811-90cc-b86b311641e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa2dfe5d-b95d-4518-bf04-d79161f9a83c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ea2c49-371f-4ee4-978a-a8cb830e547e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "740fbd5c-ef10-47ee-b876-d010b5bbc8e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e32fa94c-84d2-4c2f-8e7e-2fcfec749cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbac6875-fba4-4831-8b7b-22f2349dde1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51053bff-f51e-4ef1-b0b5-f540bf91b608",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d4bf094-a0c2-44d0-a171-e7db96f186c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0f4ff49-bc63-4bf3-97fb-028a7fe939e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97ff8778-7355-41e7-931b-64dd4778c38d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6cbc1fc-1d79-41ba-9edc-24ff13fb0b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f05a45ff-a2e5-4a6b-ae28-d646b4baf973",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f8752d-520b-47d6-8432-7341a1a2c3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0d8d902-68f2-456d-b170-656b674d6983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c1bc6e-d29d-44dc-ae6b-6eb76ed2f141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f0813bc-8559-4082-acd9-7d24e8dd54e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b90602b-4104-45c5-adf3-26b4f5b398c9",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c15c6ac-5307-4b9a-9300-8231b305e5a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e56493de-e036-46f1-8664-67117e5f7899"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f133680-0e28-4be2-9d5b-3f8b9782594f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "664268c3-a852-4af9-aafe-3f9095849484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78830e47-30e8-4d24-9a32-f5c342e26a94",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5641101-00e0-45ad-add7-d4dd2a38bc20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1419f032-e646-469d-bd21-6c603f09fcde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d636324-1d5b-46ea-b08c-ad840de1e480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df608602-d31f-4091-83a9-db768817167f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa7d448-209c-477c-aa5b-3cb6eef4c724",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f29bbc-9bd5-4043-ba51-6162c285c564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76f92e2f-9c2c-484b-828c-ec6a5336084b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee3601b-1a12-464a-bb76-40858833e94b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05cb1027-0612-4f7b-a720-eceb791df702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b53ebd61-24b5-4a8b-b72b-cfb53ac4862c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d81067-ce7f-4d26-9fbd-febb599d0c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85b166b7-ba85-4625-bb58-3204d079d4c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b41ab1d-ae15-4a2c-9843-a275a7cae122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b3ce176-3f9a-4ba2-b238-246b6f27e930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e68ef7c7-2119-4528-9b34-172ba7a6e3a6",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcfb77db-7d4f-41fa-83d5-2b62255decc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "938335fb-f80e-4d8f-8357-983b6340a404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dee9080-8757-4957-a7e6-7680b5d1c119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc4bf6db-a28e-453b-b0e6-d4aed576fc4f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "00b4cad2-f885-4a17-911e-049a1eb7de73",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1d0c7528-e93a-42cb-a2ac-837193041108",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b79b7627-5555-495c-be3e-3985001628bd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8245b3dc-7605-4093-a086-93214d8b5216"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a28f186-b518-415d-96b8-68b0b8ca725a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df145d3d-01a4-41c0-8784-86b6f90ec0d3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75f370ab-2759-4751-ba1a-94600cd101ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "282da180-8032-4c27-a7ae-c7996ec33421"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "429ee7ae-0de7-4b96-846c-3aafcc63d33a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cda13ea5-8357-4602-b60d-abc496025d2e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c4e7fcda-ed56-4950-8bbe-e055e4d558cb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "673a3049-79b7-4687-ba95-d4eb75d91965"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7fc69bd7-bca9-4343-b377-94326914b50f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dae84e1b-5cc5-486f-b6ee-3c4c7a6406d2"
            }
          }
        ]
      },
      {
        "id": "aa399169-61e2-4ce7-9938-7958569d73bb",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "9e1f1b75-90c1-42bb-8ec2-bd18437f41d8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "39e730c9-5857-48d1-b8d3-c8a48d116998",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2d0f9e3f-0ff4-4125-b3d3-6a5821bab380",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d668672-f43d-4a12-afee-740569aaadd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c848c11d-ef05-4bcb-a8ff-933c555669ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e57fcf6-e25c-4a90-a0d1-c38166aed1ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e3bb789-e9b6-45c6-baaf-2ecc00bd4fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea0e6d78-bca5-4543-9674-1ba86e89fb66",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d015c2e3-98d7-41b6-8ba4-5ca528010e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "189702de-ae9f-4bda-87d4-e991cbd1f608"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6ba9559-4ed6-47e7-92e6-387011110420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "281a1bfd-be79-4ada-b239-2ca1fc0ddff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae70b9fe-033f-46a2-8da4-10f23c65b22b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce63322-9d27-4580-8da5-460c82423f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67988279-3cfc-41ba-a3bf-fe4b76f774be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27cce557-24c9-4c40-9c98-352b65a70217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbee8eb0-e47d-4a3d-8db7-a4dc2f2fdaad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "079e01e3-9d2e-4968-897b-aa20e2232449",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ff4e61-c9ee-48ca-8071-bee58e102a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84a55b46-e453-4750-a8e1-f938927fea85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9708aa7-714d-48b3-8485-c596350e84d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bc22a2a-8abb-4b91-ac27-3b3021572d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0894ed4-9a4b-408c-9551-9702e1d35cdb",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "120c57ef-c7fd-4af0-bd97-4f82b375bc41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0c21377-51f0-4b0d-9b51-c8d616480287"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c732d72-9757-49e0-88b1-b9fb6e5d8434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4dd50017-ed4f-4315-adfc-acdc73ae173d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cda66c2a-9241-47c6-aece-69bf0682b92a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a83fc9c-2f0c-44b3-a386-f55a8b426b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49a1af66-dfd1-484b-a6b2-64da391929f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a5593bf-d816-4585-8919-0127128b3249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4f74ea4-766d-4c2e-af5b-438e6b0e5300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72fd5d75-a413-4552-a113-7ae267b98da9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ab29d9-bfcb-45c4-96a7-9e9fca16b88b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cec1291-69e3-4d69-aa86-f6b52cd045ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "817ecc2f-febc-48c5-b2f5-3b3dacbfd062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "62a0f0e7-1810-47cb-8902-f010d8a4a41c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf22735-e702-4025-925a-79161dd0713b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f6070d-a5a6-4543-9e96-67d80e7ab09a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48adc059-10a2-4618-9365-8d59adadd81a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a32944f-41bd-4c00-a77e-92584ec8ea9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "689f4069-a264-43b2-8057-93c14f10bca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "661b98a3-4b5b-4cf3-86b1-48493bb89306",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28def8c4-247d-4c48-abab-6408ad2a1476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df3665d1-8be1-4887-a42d-c46b3edf78cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e6c3407-2d01-4221-b1ba-dd819ebda370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "faa4206c-098d-44b1-a887-20f2f8004e91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5101a7a-e477-4c22-beea-d8cafac27f11",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d55c481-aeda-482a-9980-20ea3def39c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "142afbcf-b3e6-4e55-adcc-dca6eb1e170a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f90fc7-576d-4b6b-ad46-b2d00010328e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "57b2fb62-877d-4f59-acc4-6a7409176105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af4a0c95-a619-4703-aaa1-68a601bd31ca",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea1aca67-dcdc-489b-be89-c9d37361cc17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65c6c06e-8905-4c14-9b70-ba8007b807ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab91383-e28d-4b86-8ed4-8659ff167ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4d49ee83-485a-4afc-b57f-fafbf4c70374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3879fb5d-4cc4-4ca2-ab7b-4cdabc0bef53",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e178b76-54d1-4c39-a30c-0b855761de46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88ca05de-c3eb-4538-966b-30048e370835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f3d7863-034c-4869-acaf-bba55b29c0c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c7263850-5b29-4899-83a4-4e1ade8a3b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed1776a9-9e57-4e61-a2f0-01c78b3d9956",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55fa166-7e7b-4ab8-a128-1ba6bcfba1d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cabf398-8b99-4b00-a555-7d8a81a18b3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2094236-0138-40bc-ad36-95b3afba6b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "66295649-7ef5-48ba-a81a-f9546f14db35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2378ea99-4e1d-4cad-9ec6-d38858da487c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac585a4-c909-43a9-8a74-90a383cffd19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9330b81a-693e-43f4-b141-3190406f416c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb63c14d-4697-42ee-8c35-ba47a3945963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6434c1b-4df2-4981-97a6-4788443058e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff6fb14-6990-43a0-94b7-12719b400850",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fae1c29-d660-415b-a491-ffa20dd34fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de39f0a3-476b-4377-87d6-955f56692398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d5acdb-be7f-45a5-9000-72a5982e2c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "27073041-520d-473c-9a87-2b5e1f140836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71ce33d8-4b0d-4bdb-bf78-88abec655502",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69152d40-4f5e-4572-a5b8-521b26f668a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86ab6f60-f314-4cbf-ae49-a698134faeff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf7a8f62-53a7-43d6-ab81-0d16721b17c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a6c3634-ebd0-421a-8a9f-b940c64ea06c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21614b7d-d1bf-43b3-b2e7-f53f06c6c473",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "615fbdea-a68a-48ae-9543-86837e58701f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d244064c-7d70-44ef-ab92-92a1cf1a2a9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61fa4883-95a2-4e46-be4c-68eecafddca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "04bdd750-a49f-49fb-bee3-089999fdcf65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d46ef1e-ebf9-4218-83de-ae42d2d03646",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f42e6d-2dcc-4651-9545-a2bf37a59fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c8528f4-4ec0-4757-8f08-3e049dcb04a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b9c2666-80aa-4eae-94f0-f0948fc3dac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "70950307-69e6-4a8c-a5b1-7e43f7ff45b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "368c4296-773a-484a-ab06-fd32d9f4ed71",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52014287-b2b0-4a67-a817-085df26a7cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcb11f50-05f9-4c6e-a136-7d86a4933521"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f8a2b4-fe01-4d81-860d-3c9c6bfb1731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff5db0d4-eb57-453f-aa56-58d993aff7a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad0c48a-d641-42ea-a87e-5ea04d429667",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2a94075-34be-4f0c-af1d-ea631193766c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c2371dd-3c55-4166-b473-61b6a54321e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5e23f31-415a-4478-b032-9b72beb39000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "777571b5-5b13-44cb-b45c-c59ee0fb44b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f69c26-c05f-4eee-aca2-60b429a75050",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb6be68-2dc9-453f-ae94-94c8e2e7b493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bfd8288-f6a8-4d19-a11f-c8ed9dbdd464"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f3e5bb-d99d-4337-bf56-ce2583107b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b93cb0e-5695-4e27-b4f8-057bfb18589d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a90d63e2-0ae8-47e4-9942-74d8ddbeabb7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc299c51-631b-4227-8fac-bfd4a5651365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66a4e736-9c8e-4dfb-ba1b-f4153d2ad854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a1cced6-665c-477b-a556-0ea1b69de3d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "026611ec-0ad5-4729-8f40-37bc8ddb71d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5690299c-9cee-4b63-a780-f7ae391cc084",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17e88964-3a00-49c4-b46c-b22ad63b3f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c374e27-0d92-4ebf-8cb5-cb0e7977f71d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fcdf2d6-a635-4164-8018-2a96c341b2fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "970813b1-1645-4d68-8d5f-e5900b70df80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5274ddd-5db6-458a-b3bf-825d578f93e9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc020c8-b36e-4904-830d-03256df7b476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf958ba7-a543-4042-8052-293d0dcd9bc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1645022-9bdf-4eea-a9e9-59dcd0ecceca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a65dd884-a391-4a3a-986b-ac76e35eab25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd32d074-93d1-4215-afe9-15c1b524d071",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a938ab9-aa27-4a8b-8f56-bac654a0260c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5a2544c-46dd-4fc6-a01b-0d9980a71517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6733b9bf-c34a-4fda-815b-484cdffc61d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1de9fd6-2e89-470d-8207-b97f73d80b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b3e2e29-7c95-47dd-982d-c72240f78695",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f2f2c2d-882e-40c4-b1d7-a27e94ec9651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6bdad57-f878-49d3-8f96-440c0dde239a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "474585ef-a3d6-4a32-a465-0f956b323ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f05d5f3-79e6-4fab-a7d7-8d5899563186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48604560-7fdf-4374-8930-22762952b58f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "736efd71-5cd3-466c-b16e-10e2cab4a419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05c431bc-be21-4ec4-898c-748474a015bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c178db0b-334d-4001-9c31-aa76156f2f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60910b2b-c2a2-4cb5-b420-4f30cbdc6828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bedfd3fe-a41c-4d6f-880e-091987f7a353",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef56213b-a03a-412f-8246-0f0fdb2c4651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "477d7dec-2a37-4150-9dbe-c836ead5d652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac934ca-7556-44e0-ae25-1812ffd6be0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1c91bb5-0e82-4952-b4ad-9289c8495aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04903817-3e23-4723-b922-5ef20884cc08",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d28813d9-b462-45f2-a61c-f681c153e1da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68cf2260-75c7-429d-9c4d-31ea0e4300d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d719241-3079-4c74-a30e-0486c219a416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9f953cf-2577-458d-a111-73c067a8be37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31629764-2f83-48b8-9505-371266e4146b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d90cb91-d9f2-486c-8612-cc33b05d2aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88c73fb5-84b5-4716-91f6-6651ebb5da9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "425431de-aeca-443f-ad96-4fe7be888b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8970b9b-fde8-43bc-b622-19337c5fc363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a7c945-ac94-43bf-b499-21f2a1b1bf0f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78abf782-7392-4499-9a8c-35284a4a8495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2133c09-3025-4ff7-b73b-555f53217061"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae7cd904-95b1-49e0-ac88-196ad69d733c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55229d74-e8d1-4aea-bd2f-1a1476af2ce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5ccbee7-8f7c-4f83-930a-cb7ad9b98a3c",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a139eda4-eeb2-4e51-9948-3a708ade81a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47f02690-9101-41f1-afec-d425be5053a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a343b12-ce4e-4032-be82-719da954271a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e9926ac-9f4f-4607-9e8e-76bb17aacc45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6065dd7f-f972-49e1-8aa5-aaef0b1e880b",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a8ca96-e996-4126-a2b7-c716e84be6bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee6da346-7d04-4fca-a6f6-dd4dbd4b16fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc38df84-4506-4265-983a-eba5d193e3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7642c01-0c6d-49d3-8c8a-f5862c88856c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1fe5f4e-a6e6-494b-a7cd-97b327759873",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81347b44-166a-455a-a4c2-fc3abd18f79d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f6edccf-6a2b-4da8-a28f-36bad1e0de91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5adb29d6-2baa-40ab-8a13-1adddd8d7ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e875e6d-6634-4bc1-9dab-47e39868a09b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccca1658-7613-46fd-a735-2e1359c1a75b",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "973c8ebe-ec55-4228-9096-397d91502cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "828b4c01-c42b-4f19-9eda-87c2c1bac2c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "add8fa52-7cf5-49a0-aec2-cd71aebdbe1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0cd563a-e6ef-4ae7-8cd6-db013588b4d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afd5372c-a103-4bf3-8a5d-35595dcd8192",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fdfcb9a-d98d-4c94-84e8-c76a6db0b8a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b29ec3d-7daf-4b2c-9e3a-527cafdfd03f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "917250f3-7eb8-4e5c-8453-afb59e1dcdaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66245ebb-6d5c-4a43-b72e-311c959cf305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65073e86-2b6a-479b-a175-759bbf66135e",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d47a98c-b814-4287-9d06-5d46d9b33440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b350b6c3-6172-4cb7-a658-c3dbea261ab7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26028965-e2fb-441d-916d-adcf56522b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "560c6e81-b8e6-419c-a355-02b007e5770b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2e7574ca-a97e-496c-8fd8-43b394c82567",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2fcd9d30-cbd7-4e49-8f12-f90eb04ee723",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d6ceb7f-b091-4a68-af4d-d7793303d616",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "91088cef-6347-4e39-b979-435799c51f05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "909e2ef1-67d3-434d-b39e-e2ac0193bded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5a5a99e4-1ca2-4749-af35-fea958ae3b35"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bcee085b-3d97-471c-b1a8-73476ddb6634",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "17976e76-ac9a-47a0-9efb-134a97fce7d5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "556cafdd-45eb-4bf5-8d6a-4c3a9ea30780",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a3032e3d-91b0-476f-88bc-afe27edbcbaf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "664ef3ba-4297-4264-a061-650632748952",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6c3f58d9-6dad-47be-8c7e-fd99e984a836"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fb8012a4-e17d-4762-bb76-e2c63478f25a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cb1cefb8-4489-4873-a417-1754c06e7354"
            }
          }
        ]
      },
      {
        "id": "d0e4cc73-4364-4b23-b7e2-ce1e046a11bf",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d7b2b80d-45bb-4bd9-9ab4-4b1e69ef8b73",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4728fdc4-44d9-4dae-af8e-f9d7b003daf9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3f7da0b0-2a4f-489e-ae2d-3e00bd3cc27e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe39a601-c619-401f-b837-6421ea448625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c6b7be3-41ad-4b65-80ba-aa1a9bb09277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a72fe13-ead3-45a8-bb21-7ff9088785d3",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d112051f-8149-431a-87da-84f1f4cbe422",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2c4c4b1-60e1-4135-8d13-227aa95434e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "769b47dd-f376-4c86-91d3-b07ec132c8d5",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c8f3cb-2ef1-4fa6-87a4-498f7c37449e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb59a073-bc33-4282-93df-81e9ecadff8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d583bfde-19de-4a6d-9275-49e1411d831b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad2100a-9181-4640-afdf-5b5405749f96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9635205-e380-44ea-aa9f-01d6bee1639d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf5a7c5-cbca-446c-82e7-b53eae55b66f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b3d7122-e577-4847-962e-e8c0717ab8fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5495ff9-3c4c-4b69-8b83-43587ec8b73d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0203ce5-2521-4058-b4e4-0c9f13444f86",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7700ddd-b90d-4d97-9893-9d7aa2c0af3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43b5556a-126d-4a04-b315-26ffa997f343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b197cd6f-29e0-4b39-bceb-787cc4c4233d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e52ae7-c013-499f-9c4e-09655a7cb633",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fa485c8-74dc-44fb-812b-fd1933c7a8b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b94c7d55-2e55-43ac-810a-a645434b67ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb42196b-9777-40a3-bb17-7667fc2dd423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cad557b-db04-4adc-b6b8-5c809a9deebb",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d5f24c-5ad3-4718-8544-ea0d0173de23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "419c37a5-38d4-4daa-9c05-4e6ed8936464"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a38cab-0ce9-47e7-9bf1-8a907569c6f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc41c861-75dc-41d1-bc77-030752944e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d820cf3-fdd4-459a-a369-59e25000c2b6",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9265c5ac-89c2-4331-8faf-ab5852a83065",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c92a3c12-fe88-468e-b333-7af8f628b4f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f51bdb-4f26-4c57-8e51-59321d05d963",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cb48cca-a516-4c8b-92e9-e3309607b539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ceb461a-2e68-437a-b57d-d94aa1137ebe",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "862193f5-6233-426b-aeb3-00cc492d9ddf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "915e7224-7564-426f-bec0-fc86d8287260"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d4587d0-7190-4496-80ff-3bb7c90b5fdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f66ef5e1-999a-4d76-b810-049502904937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d008272-40dd-4672-aef2-88ede45a5bba",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "781f58be-cbfd-49f5-86be-cd79a6f16f97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f56ea22-e068-413c-b342-875541e65c23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b36f29be-33a4-425f-8b84-9c7cf40f1912",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5059395b-8590-4662-810e-c63b8b569480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd7d215d-4541-4c88-87a7-1996635b3951",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab152096-e72d-4208-adbd-0792e535d822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d5a7db7-834b-4181-b3fd-1fcc532119de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8afc9dd4-8976-459c-a712-ef739b23a720",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5149405d-8635-4e14-a4d8-7002cbfeb6c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d18d76f-16c8-4d9d-a186-733635667c0e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c25e4134-d5fc-4aaf-922c-0596688711a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33cbce76-a4af-4c86-afdd-57ff8bb7e460"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9dfef8d-a330-4f04-8a18-6ccd213d03ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b7e0e32-c344-4c40-81c6-c3e22e499152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec5ae2e-53fc-488a-a6b2-45ff9696cb25",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41f3a4db-2115-481c-8c54-6ca9630a1459",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "190fd73c-17d3-454b-8cda-71609b137c2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfe8dcd7-d5da-44ac-8464-f4e32ba64bed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfb32e94-de6c-4c97-a756-ca7ec932fcf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6683a07f-e8eb-4ef8-8fec-265617c4f2d3",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9787808-d927-4df9-af35-4d82865374c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4329137a-6efd-4dff-bd91-fd0b068f45a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d25a9c3-c1e0-4f17-8e35-57a72179985e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a95d6a4e-70c1-4ac8-b390-e30674c4edb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ee829d-481c-4d02-801b-6cea3ecfaa50",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64afb2e6-3209-4bf6-a91f-053fc822a455",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9e99a46-79c0-4406-9cae-71b2333adf5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef9ef49d-2148-4d7e-bda0-a790f51d0079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18a71dff-d849-4a20-8021-1d03a3a8aad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "233dc606-066c-4608-aaa5-bcea2e303a7f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc76a68-c212-4921-9d73-3f6129fd0baa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce2fa7ae-a993-434f-8d19-220b49af914f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "736e0eb9-c205-4d8e-a0fc-73a557ecbe2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7a8e788-6681-4987-bcdd-0dfdeb5648dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a5f309-f02f-45b4-a196-7143508c2aa4",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c18327f-e538-407f-b1d0-41f77c5aa948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8eb022e-c36e-4474-b845-7cdc2d1a1713"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f2a1a3-370d-4f88-9bab-ab6cd1102e92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b601b559-9981-486d-8d41-d32415f1199b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e06770-c20f-4a2b-b8b5-0b68acec9d54",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d8c0c21-9f8f-4324-9869-800ce79e5650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8182c9e6-9c14-4488-abd0-888068c3786d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c2c709-c942-44d9-94b2-349c966320a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9369fb3-338d-44a6-a668-34e55d0bcc12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd1f8340-53a0-40fa-9005-14f30a5987af",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c052ffa-2771-4dbe-b744-9f3803e4630e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8231bfb-a237-42be-8313-de495828cf20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "decc85be-63fd-4e0c-85f9-45a2536e4d2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f30f9fe1-69b5-45a6-8d2b-6f332e952ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e383ce1-80de-41ba-92f6-5f55b256ed6c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90ec26ce-f28c-40d6-b251-ff8cee667e3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f006e6d7-2836-4eec-b67b-b752cc059e2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e54a36e-78d1-4740-a7e4-d29ddeb3f2a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca76bc7e-1dd5-42ba-8983-5b48ca3d06b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57bc554d-9ee2-405a-9d04-96b3d075035b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35207b36-8beb-4029-b032-61cb1fc6dba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ea986a2-b83a-4128-81bf-ee8206012d58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e459d9d3-aa9a-4ab0-a73d-b13a4da45675",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0d3321a-2af3-4faa-93d9-6df44cba394b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64476bf3-cc8a-4361-a0d3-28fee2a32526",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db37368-2569-4a4e-97d3-8056cbdb3d60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0829524e-11cc-4881-ac59-c860f95ce296"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ce2bd9-5db1-4247-b175-33c9227a70ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "699bae15-63ef-495f-a13d-e2e318284e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f99e196e-7f9b-4907-8210-e7bd11ac3e0b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ee5944-f21a-4991-9d6c-0184640b7dfd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f5aa2ff-bb31-4387-92aa-787fb5111c44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b8d36f1-4d7a-4af6-ac24-74e34753d063",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae921ce5-defc-4d53-ab0f-54cc381042ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c83d8b2-bfdd-450a-b0f0-a0b778439006",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4324c13-2ba9-422f-930b-fdd093e8d927",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4d9fcda-97c3-4eef-b42c-e31d961daa64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57118d18-6ce9-4ec4-a7d8-684012f4e878",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70e95e5d-5405-49e4-b5ef-cbeaff0ffd29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0fb8e5c-e26a-401d-8fe2-e42a17084f01",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27d1c28a-810d-457d-b4fc-edcd1be8f466",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e8ec784-c80b-437d-be56-618c36cb375b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a423bc27-5496-4af0-93f5-c54c26d5a6a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c928a7a-74a4-4754-b158-de1a1b600c09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "936240b9-8e5c-446d-95aa-2a39d55fb26e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "371a864f-2d0f-4bab-833f-6b8379257670",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7fe120c-9e5d-4dc6-b3a5-0feef1bf99ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76fce91b-ed02-46cb-ac79-e5c4bc5643d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e90dc0bf-3a50-41e7-b15b-40eb5a1bebb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2110a5d-8c6c-4588-912e-3f3080445460",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b382d4-585e-457c-901d-0240fab3817b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98e92f5d-ebcc-4835-af49-eab12c24fb60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f820e53-6563-4c58-8841-50d004ce6e4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17d3b139-f6d6-401f-be0d-82abf33f5f1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8707b7d-bd9e-4d15-a627-4a7b726c3567",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "023975c4-16c1-48d6-89b3-6161ef38cef6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10382a42-0d4b-4479-8395-2834b3a38db3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f71a2f-d6e4-48c7-b376-acf1d0a2f8bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fafe1df8-35d1-4c8d-a51e-64813dff2e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "023548fe-fc0b-4421-a9d2-b0b8ebda911a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d5fff8f-dc40-4526-a845-535acef21398",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e03778c8-78e9-44ad-ad5d-25648c0f350b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a45718db-8ce4-46c4-ac59-47e3e5a53a0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e6a890b-9974-48f7-9371-310e5eb02367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edbd279b-c722-47d1-848a-f2b347f3f1d8",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1613590c-bce2-434a-9d57-66f58917e07f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3f91659-ca3e-4a6c-81b7-bf73898b9906"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "594f9fea-4b95-456f-be78-8e01731e8bfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60d986cd-f459-41ab-8696-61cd853dccaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82bc5afe-9b78-4bce-a48a-b628f637066a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab42dc32-e6b2-43bf-905e-9028159ae62f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0c2df6e-cedf-4203-8d9d-df1150808613"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9477e9dd-f6dd-45db-aecd-629aa96e3d41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1009d86a-91f5-4931-a917-268b7e3e72b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d736ffed-ebe3-49a8-9aa3-d67512a11133",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "773c1bba-22a4-401b-b64b-0d66d3f70d97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae8887bd-90dd-462f-9a25-6c290821993f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e93ec508-5a0c-4b86-bd1f-a0cde0ebaf97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "873cb8d8-4fe0-4999-9621-201136883900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e233d79a-92eb-4b71-b955-ef52be6b8faf",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f953bfbf-373b-432e-8d36-8763feea255f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6851538b-ced2-481f-885c-d7b3b072be6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d20accc-6a3d-4dcf-bbad-5a1f7a59dadd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12427336-467c-41ce-9203-b932e8d13cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f135cc-7dfa-4d1c-9403-04e6a831ce01",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c938574-3ee9-4916-9300-61e0615b31c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6688b6f2-d7ce-4d41-a819-67aac1c4294e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16cac681-35a6-4cc5-97ec-d5c407e49a3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "095582a6-071f-4ccc-acc9-5418b235aa70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f20cffa4-c44e-4a16-b464-994f7bab1c4f",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03c92ca6-9a40-4c53-86f3-af6d12cca090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c30e4b52-06b1-45bc-80cc-7a5531a3bab3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21cd1197-e443-4538-bafb-f1eb0ce29d54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c357669a-3cee-496b-afca-c1ec6de5abe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da7a71f-0615-489b-97f1-d7f1ae91bf11",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b725f8-3d51-457c-baa3-997983041919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4801f28d-6256-4191-8657-30d78605c25a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "299c9e6a-b241-464a-beb5-a6f56adb9943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20d59c8b-c6ef-4472-aac4-163ef53c8aa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3491fbc5-088c-4bc6-b570-ddb47ed5573a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08eae5d2-2695-437e-a09b-a23474b0086a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "634d687a-4f29-4f11-85a7-c3a32e7e2c3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee130a4f-bc6b-4000-8bcd-c9a56b6294de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a0a755e-57a7-46b1-afa6-443d171ef861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c677dea2-4fdd-4090-b880-8c07af988e02",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a35a9c2-b3d8-4147-8cc3-22046e7e5a4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8cac8a2-53c7-4bcb-8273-84bc37b1231f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e43043c-f692-42c7-95a3-d34ba11ebcac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49fdbdad-2ef3-468f-8267-1589818fa307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b62f722d-9bbc-4cd9-b858-2d32badb0a99",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "052e5d34-5df8-4b10-aea9-df250dbf871c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "648f489c-eb34-4e76-a276-d3541c07b2f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "478e570f-509b-4ddb-b987-b64656acb64a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85c83c49-3855-405f-aac6-685c43cafd9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d8d977e-115e-4eba-9871-9c61076a31fc",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0994f42f-f28f-4667-8758-415c7cd6c8fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98b852cb-0d19-4557-a3f0-7ea4e675b403"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef740e3-70f2-4308-8f7f-102bcf77c4a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12b34e49-4460-41f7-8137-3f6d8679bdfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9dad687-6f71-45fb-8409-63419bff899f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e4454a7-c23c-4b99-bb3e-cdc2b77abb7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3695bb17-49ae-4eaf-8faa-086a38acf513"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fb6d543-b650-4cb8-8e84-c66a12e53127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eb9f630-a23a-4f9e-aceb-8eac88587bf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e357e480-069a-4cd9-9314-73566cde4c00",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb9e64c-02cd-435e-87ab-85f4d3e56603",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72081005-db8c-48b4-a653-a9278630e3b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc7dade7-0b37-4f59-9631-b2018d265a5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fd9772a-931d-4f4a-90de-066cb6b24f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "206026d7-5122-41a6-807f-cc4f08ad9dad",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b643513-a25e-43f8-aa8a-d72644a08d70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4e9ab27-4ff8-457c-a849-33f5cf6b8344"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a46ce7-c00b-4a9b-9097-f290b79c0c29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a395f11c-17f1-489f-b344-ad9c91615393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec2da8b7-8ec3-4f4b-a09a-63689f59c325",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cfece6b-5a99-459b-b1da-6a7fd1c5c3de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40f102ed-2319-40df-b517-883d27b640aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba9a7c14-f6cc-47ba-8889-e4095cb6d9a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbc5ca68-cde0-421e-b7f9-8ba03e5db492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f705ba04-19b0-4a64-8d32-1fbdb6a97770",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0947c6e-2a48-4245-b6ca-149330e72d80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1ff1c11-0cf2-4651-bdfc-3edef163b46d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68bddd44-8c54-4e96-96fb-9e34fe1aa0a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38ebd116-2709-4779-adaa-eade560fe78d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d908a8-76ca-4d90-a873-03676b215e1f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7352d47e-3274-4a52-8333-8732a7f53f61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dd9ab1a-eaed-4d2d-86a6-ac30db658af9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f06804-969c-49b1-8920-a8b4cd993974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0c367cc-194f-42f9-a2c3-7bcf546ae6d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b39bd0-b55e-4d3f-b115-78a8ff6889b0",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c5a944-c9e4-4a6f-a107-57fd51997eba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "729cd4cf-3631-4d54-b9c0-8ca640028c2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b906165d-4066-4e3f-a1d4-b2982dc845f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e50dfda-8393-4ae6-a439-8cf0de738b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5daf5dd2-e8a1-4729-8b25-af3fdf47558a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9135575e-801a-44db-b4ac-482d05746ff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6343eb19-c8d5-4391-ba7e-582fae17dc9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bfd9777-c5db-404e-abe4-4bfe7e651710",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51fa731f-f514-4fc3-95e3-eadef5897d75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e25771b7-cd3c-4632-a702-3121b30b5c21",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2553ad91-0f54-48b0-84b7-c7a2d86a0093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "190e6a19-9c36-47a5-a3a1-5d06c4bede76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4b36c4b-551b-4e2d-937e-65347c6b3d4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9644e70f-9797-4033-bb53-9dc2bfbed50c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14794587-e635-4b98-a473-56f1b1810196",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "251b02e5-8628-48b9-b1f4-9358eabefd02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c11926c2-6391-4fd0-867c-7d482a299918"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b95e9a-bffa-476c-82cd-b811bc4c26bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a8eed22-8814-439b-a2b5-1d04e405c4f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91eb3c47-fb22-4399-bd76-0ed6e634326e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcb824c7-e74c-4558-a3be-c008aa054a09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eb18fbd-6659-4a07-b747-6da873734321"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb612f8-5085-4b0f-863e-09ba60329a4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae60dd50-e4f9-4d7b-b6e8-a25cc98131c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f53fea-8300-4cf0-ada9-ec4db0c69405",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca37a37-18f2-4b69-9090-4130e4cbf8f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc0748ce-096c-44ff-af1c-5a3b9befc4a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "114be925-fea5-47c5-8c3c-972591301ccd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa303b61-df44-4b29-9755-058125f926ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e17e435-a7ea-4dcd-935b-94442315c9a0",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c973015-8456-4370-bc91-5500d9752fc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da6b7efb-c487-471e-8d1e-fbf830e5bf86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e6f90e-ab16-49c4-a2f3-44bf51cf3e5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e7cd102-c7c6-44da-9c0e-7a3dc226258c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef06e9ef-2095-49e9-a728-d00ef37ff708",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c12c103-322e-44ad-98ab-94ff88e1a3de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c33e8ed2-a14a-4fad-a727-c61ef54d7eb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "479251ae-ddaa-42e4-9f36-abec09b70bfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33703758-4e23-438c-b9f1-6fb8f903dd09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "192a3114-8d28-4d06-8cc4-02d94516dd35",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "343d372f-8d5e-4c62-ade7-5d56176dadc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f66ead2-72c5-40e7-8477-0b0095536d7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e8328a1-af6b-4f4b-998c-13d54b429dbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c8e83c1-495d-4ab1-9323-bcb8f659a3d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "575a834c-1af1-430f-a3f2-801034599e08",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf329927-11be-4189-84d7-f0f5fdee44c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f5c4924-920c-4ac1-8123-da7f4aaaa500"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f32807-b483-4ece-b000-c938f05c855b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb1c3910-c303-4830-ad4c-26573bcd01fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec319ed7-f8cd-42d0-8b42-16eab1b4d061",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b956fbb-da62-4c39-8a2c-6bb6e028ea30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccbd3cd4-60fc-41af-9e11-0f4c5b688035"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1afe3784-7f7f-460c-b30c-ffdeb081176b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43a6db83-f48a-454e-9ffb-534ac6c7dc1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e4b6537-de45-4faa-a41d-b62f05ffb9dc",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "464a13cd-060b-4385-871c-d08c1c3b8b7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97a37439-8f64-4e34-83a4-67b9e5fa1bf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12cb886e-148a-432d-afa1-9fa3e13bafeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec3eacde-81e3-46e9-af73-25b4091cd0bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a635241b-53dc-4d36-8a7b-a5ec0b411fae",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e15ffd8c-a2ba-48f5-b70d-355ec513dcbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9eeb71f-344d-45d7-adf5-f0c5f3645fc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c8fe9fd-b7db-41d3-94be-84c27f09e7ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32569013-2a24-4124-8a22-39f1211a934a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba4cc0ed-785e-4719-99ae-d23306295c52",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5936f372-512b-4386-89dd-c6b6eae3ec64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22e27b0a-a50b-4a81-834a-cabc606a199c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf2f514-1e9f-49e4-b9e4-bf2b4988bb62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2de79124-b845-4824-bf72-c322b44976e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14aefa85-194e-41d8-8c95-e71b83f5293b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc8d17bb-09a4-4076-a70d-470f6d7a1408",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb2c9b6c-1159-4be1-a5c5-b39ae7ee3af0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bdfbe9e-9206-4812-b381-faf1fe6b9b26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13a806bf-115f-4e0e-a6a5-4a774b668e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89fe773-17d3-41ed-bc3f-3e4bf70a8572",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d83f8e0-e093-485b-837c-9a3fbaba5396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5fb553f-3220-4151-8b3e-38f2988cac91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6749fad4-eb2b-4bd6-9549-212790b575e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2d7fb54-7bc9-4b0b-8f23-cbbd7c8e7cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f21ee68-0ed0-4418-81e1-2dd9b3140ab0",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fbccf8f-a945-4acf-ba69-5db4211e6ee1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9889fbb1-5f89-4dde-b5c3-a6a89e59b362"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a820104-af67-4ca0-b31d-4034c38d3184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e500a0c0-40f7-4c4d-8f1f-3d87b197383c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a28ac80-193a-4a7d-81a5-4b1e86e1a744",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7d2abd2-8f41-477d-bb2a-ca62a42548f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bd77b74-451c-42b1-9597-028e6d34fcc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d96456fa-7674-4cf9-89b9-1a55ad21abd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a0c2f73-a464-4bdf-aea5-e1a63e159cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "357951a3-effb-4447-a659-d56ae12eeab8",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4bc972a-1424-4e05-8b61-6285fceea25f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c301e1f9-74c4-44ab-95aa-2cb5a251315d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "105d6a4c-0156-4be3-8e33-761976049d79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b947fcb7-e05f-416d-91ad-4cb5c8858fc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de2ef75e-ed6e-4493-82c2-16ecf7745fee",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c8d3b6b-dc0f-49c1-9cb3-8ff2f116af64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fc2a182-465a-4cc0-986f-6e1e038f731c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a215fd8d-08a8-4404-ae94-2917a92aa85b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c603384-2d89-468a-bf46-ce54f9ebeb2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa97fc90-576d-437e-ae06-c34424afc8ff",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf5c09d-07c1-4635-a1d3-8aa76826bcad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4541214-eaae-43c7-b9a6-78927981aad0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e295ac-8a87-4109-a7b1-312cb40ecb14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47e7e20c-9750-440f-b054-12e49514e34f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe3ab88-cfdd-4141-b6af-c0ca5b4d1cdb",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b27bcc-bfdf-45fa-b794-fdd125f29ee4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19707f96-faa1-4e41-af22-ca3248108829"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a638060-792a-460d-a3c9-24edff08bbc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59023d88-92b5-4978-ae41-68fb48eab33b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "683732be-7de5-4df5-b352-6ba7894491a7",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f221938-7e2e-4715-9915-8d8f1aaaa9ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "992f562c-43bc-4a5d-96f1-021ddb10374f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c3faad6-688c-4f06-844b-4a24b3f9b4f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69d13796-0a2e-42fc-9f72-4ed082bbd4dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06307f8e-ca2f-48e6-9440-b0d6f96e14cd",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "626a5de6-faf5-4321-952a-1e6225067d8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3e657ca-33e9-4455-93d4-f82c25f222e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8453cd0-b64b-4db9-a5cc-796cd4c8bc72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "424dd30e-ae5d-4b5f-a60c-a9cab45d0bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99565979-cc54-4480-9ac7-edb7b85fadfd",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca402e5-ec4a-488f-89b3-6c2b8ac553ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55a69a89-0dde-4240-8b44-66d6c11f1b5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e1e781f-350b-4286-83b8-afa56771b3c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bfcf52f-315d-4fde-8c4d-7c9f73d3d4af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb3a7426-c72a-4a12-a037-2503787e96c7",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bf3d7d6-61d0-4b24-89b3-373e8778ff8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aab405d6-1dbb-4174-8d89-5befd4bd5156"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "659c664e-2fbc-46db-9172-c6de28c36929",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2160b44e-07fb-4350-bcf7-4710a41e8b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a65001-5584-4826-be06-bae4780ab526",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "588c968d-18f9-496b-ae68-6cd7e976e1bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53781db8-3487-496a-914f-851ef98c0897"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2692ae00-152d-46e7-acd6-a6e27528b511",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa758932-ab96-4d7d-b145-f66efbdd171f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8740d4d-1132-4738-9a49-97f033b82932",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b7a2749-5166-475b-b285-28eff86b515d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52540fde-3e5f-4984-a73c-efdc7cd6b41d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d49e30-7015-4906-976a-b8fdf978ce05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19568c2a-ec30-408b-9c4e-f07bc6116607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aacb850-1b32-42b8-8b0a-6e73a08a60b8",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef39b69-a67a-428a-b5a7-f48bac79ef3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59168592-8f97-4513-90a9-dfbc1deef3b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fe8d024-238c-4917-85f5-f55aef6da4f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa495b34-085d-4a1b-9f12-c6c2f4643347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f35413-eb3d-4baf-a18e-d5d45cdbd0c0",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e2517a-8436-4f6b-baaf-90a63d9c4e4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82ba973d-663f-430a-bee9-de0bb3e1c494"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd80de0-3e64-494a-a483-c8a11f3c2159",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c77a559-d383-43ea-93c8-38761af857e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6087466-0a8c-4e7a-a314-04c2a795498c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a12e9abd-c3f8-43ee-a952-01d32c9ff362",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b69356e-5b35-4f2b-9001-898f9bb4cf84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e57848-df8e-4cf8-ac21-d67520f73382",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e063ed1-cb6c-48f9-83a0-adb6ad5601bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49cade67-3f71-46d2-af60-fabb1484df1d",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e66215-ce3f-43d4-8120-48e4430a407d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c746772a-ae53-4ae8-ae3e-bc4d51251a97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa4645de-c8a1-4d9a-b856-b92375c7492f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afca6b38-1eee-42b6-bfb8-4121f3a87c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b012c8-39db-433f-b083-7395ae49e8bc",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f64a26-38e9-4fb7-b034-620e29cc01b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6345e1e8-96bd-4297-a7e0-f18ce6410818"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "275c5051-07de-4093-b13e-f3fb1a0b48a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68ea1b1a-1325-4cbc-aaaa-233cb49d96c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7972a2c7-4677-4e9c-b220-81fb38ddb8b7",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af072bc5-cec8-4d8f-8fe7-c0227c385777",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "affc4089-8fd7-48fc-b258-9756cd4b1164"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c61619-eec8-4d6b-a366-a5e639340a57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baa076e1-7d1f-4b87-98b0-d954f9259a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8135bac-dca0-4d07-b8a7-53920f326342",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7211e8c-df7b-4694-bb28-cdc710153039",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edadbb1b-c02d-49c6-aa23-7b77bcdd0527"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9280b67-84fb-4db8-941f-699ba15b4734",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15334be0-efd1-4b78-987c-f64ea4f91a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4159589b-e0fc-43e8-bdeb-ac32b005e317",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e72b02a-d4bb-49b5-87e7-e945ae8dc2db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7ee7889-5438-4b97-aa9f-34e546636d34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f5f24c-38a8-4ad3-94d0-bd02a308f8fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf5cd708-bf57-4587-bc37-fc224c038f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5293e13-e6c4-423e-b334-9d3796e80b3e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "413ae8d0-b2d0-4b70-8ea2-ad045795eaff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a581dd54-137c-4dc6-a3c5-32ce070d998d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02fe2439-a466-43e5-bd61-d17d3034071c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2f1108b-48ef-4c99-b662-cc347c4d8b33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe241fd1-1a7a-4a85-9932-702cfde6a4ec",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59ae1e56-24d3-410f-9aa6-1b22ddaf1a94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "017870fe-9bf4-4466-87fd-220271d0ed51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ad865a-a700-451f-9930-f38c88117fc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bda501d7-0005-480e-8fb4-14c4e09d2bdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4429e52-c40a-4d5d-813b-f808533be6f4",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a75d545-7e0d-4d22-b286-c32fb09403a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9da215b7-e863-414f-acf7-97e5c4b2165a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43048961-13a2-4f50-a8a0-5abcc96a139b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88e11eee-64d4-4fe3-a65c-bafd58330ae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68e2f63-7953-433e-9c89-beb9d61fdca7",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63285878-a981-44c2-bc74-1bdfeefc9e99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2711a84-92d4-4b1c-a51d-33efa7093cfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6870652b-2168-480e-9ddb-e4420c3b7e46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cfee171-4281-4573-83fc-566cf1e3c517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc59bf8-c2b2-4070-88e0-149fda75ac30",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e431c8f-4b37-45ea-a2cb-26f94444adab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fb4056c-ff7c-452d-a017-1c348c968f49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8dacf05-f451-421a-957d-b85d456f13e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "080a9b42-a967-4ec8-96e9-424698db7fd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e9017a-cf4b-4a06-971e-e0e561aba5fe",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8adceb54-fd27-4dff-88fe-3f071616df88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94800374-f1c0-4d8a-a8d6-29f47428f52b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0df134d-5d83-480d-985a-19772db35340",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0802ee97-3394-45c0-9053-a7bba3bac64b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2f479a5-7254-4c51-a6f2-a90278553be6",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623e12d2-c66e-4d58-8e3f-003a0571460e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba2c6565-53a6-4474-a5ac-6194b40f80fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f099afa-d62e-49d6-a189-086fb99cf24a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52284bee-2afa-439d-a18d-211759b9dce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f2ab69b-1966-4cdb-ac9a-9da49ec6931c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "129d32a3-18ce-4ea3-a50e-98f226cd33f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de792a4c-88f2-46bb-a120-7fb385aba37e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da9057b5-87eb-473c-9232-8247a816f774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e44861df-1403-4c8c-9e83-ff8f9ff10354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b81dd4df-2648-4202-838f-09dcd42d7548",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbdd8a6c-d847-4cef-b069-81804fdb06a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbe8f775-d01a-47dd-82ed-04f6c84a5a33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da1baac-9217-4a08-8be3-5f9510cf2ee5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19ad3c68-420c-4aa0-9381-2125d2e51344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af417c84-b68c-4101-b901-5381d941f4d2",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa7c8bf5-04cb-4e1f-aee2-0ca5b3436315",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68e13e2a-13a4-4d9e-907e-cfa08f2655af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2afd98c-943f-4943-82f0-63f0df4f060a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37c4e15a-cf99-4a07-b0eb-0bd6bc29830d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b114e3a-da70-4555-a7f1-c26fc997d3b2",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "996bda65-fe10-4a8d-a428-03442b09366e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d786842-daa5-4e0d-ad14-5fa470b92770"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e0df2a-c2b9-49ff-a40a-ffd08e536bdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "451c121e-93a6-46cf-af6c-a88340ba6cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff1501f-c03e-45d2-81de-d2d6aacf442d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa73723-2c9e-45a7-a967-ad3ac752d242",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb8f443c-839d-4025-bf55-7b68b03f27fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e4d002c-b794-4e44-9eb5-c747644472c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbe9df72-d9cd-4947-a34f-a06cdfd25b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e6bf2f1-84a5-46f2-b492-0e64ad5622cf",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c278f149-41be-4044-a828-2e51fec93ac9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9695af8-60f8-4051-81ec-45d1e3734dbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f29441c7-7758-40de-b759-c978ff476d8a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3876c8e6-bc71-4772-9094-52a241da564d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8651c41-44a0-4a9a-915e-8cdaa4f393d4",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d4d032-b81a-4425-a802-38ae81b85668",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6253af93-6b4d-42f1-93a0-5e1a244df6be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6149783b-766c-464e-9ee4-18a4de26e049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ebc73a3-d97a-41ba-96ab-2a659f68d333"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d85ef6e4-2b39-4adb-9161-e1e8fc587832",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "42115dd8-9716-43c9-ba71-59d65f56529c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8525740b-3b9d-4a0a-88dc-f7777949f919",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3893ccca-ce33-4768-8a34-5ccedf2b7d5a"
                    }
                  }
                ]
              },
              {
                "id": "481cf3a7-b74a-42a0-9afd-65fbdfe03fb2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "00199616-7003-4ebb-bcac-8570173444ee",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57eed71c-46ac-46b0-9203-c6cef0d1b875",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e5597780-67bc-48b8-a750-b8845f5418cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c98fc691-8980-4acd-9e59-a39ae0a4502f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e03dad6f-8464-4885-b384-d85b4e9f2c79"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a2d5f06-f4c3-40b1-8e8b-50dbda1300a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "285ec904-c589-4063-b071-42e85e897bb8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "654f66ec-f5b1-4b95-ad52-418ac2235f92",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b7ff6670-9d2f-4104-b12c-423d7b11e86d"
                    }
                  }
                ]
              },
              {
                "id": "eae654b7-a456-451b-a96b-52e6a35d11de",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "7363c91a-23a1-48d0-91ce-f337de184701",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00611a70-a5d2-4a8c-a472-c3f80fe8b4de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b9eabb29-3499-477a-b7c3-db1a5a306d23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2137b7b6-0ffc-4e79-a743-bb2222a53ad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bfb6dd3-7714-4c0c-8a6a-92a92613360b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3bcbfc2c-a337-4ebe-b8e8-7764c790156f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "515fce81-7a2b-46e6-9025-dad0a43275cd",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0aff8dc6-85d5-408c-80aa-8622c1295b6a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "104de130-bd2c-4546-ab05-8549191fe9eb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4aab0eb9-7780-49d2-a03d-82b1792c00e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b631a946-c4c8-4ca5-8f91-8bd349b82459"
                    }
                  }
                ]
              },
              {
                "id": "ad8bbf49-6198-4f15-9179-f0574dd3cd20",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1b8039f-699d-4cd6-aae0-fcb0aa5bd3f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3379177d-1de8-4865-af0b-26322efe57ee"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "559bf579-6c14-416e-a80d-5646dfc917d4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2290f234-8803-46f4-9357-3257aaa6d5b1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6b6b76b6-6035-448b-9dfd-13c48b0fcdec",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "0ac3511d-7950-4bd2-8305-4b58898d0943"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7ff5d532-54cd-4d1c-8111-f3eb9c8e32f8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "25a8785b-1dd9-4ecf-97d9-e08065e763b6"
            }
          }
        ]
      },
      {
        "id": "64545b16-1682-48a3-8a8a-17bd29d25530",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f041f464-1d74-4d73-b208-5487b64b7312",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c5bbb7f2-0386-4844-b205-492de76591fc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ae61ba05-86ba-4ec8-8624-8f635a2d523c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c2a59a-f09c-47c2-86a8-de27915dd1ec",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ba4d34ff-b2bd-4e3f-bd7e-e1d82be55729"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42163aee-0161-4820-904b-58436e9b0a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7cc14684-6e71-4556-af75-b4f5c4751d16"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da9e6bce-3714-47b6-8665-dab465d55c02",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30ae4f6e-8752-48f6-8e14-aa3e42b8acb8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a8cff9e-2b55-481a-99e5-3e624e2f5dfd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6deaedc-9837-4359-986f-4fc97b790bbf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eb0ca342-2981-480c-81e7-3f8ca6aecaa4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "4a0a841e-c1e6-4b7a-9806-3b96a6bb8a1d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d0497dbc-6e00-4f1e-9be7-8a17245e614c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b17a5fce-f3fb-4712-bfef-2e5e53a49de7"
            }
          }
        ]
      },
      {
        "id": "04821eb6-e991-4886-8e0c-ce92c622256d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "68129933-6e41-4195-9871-2b556e417066",
            "name": "Negative Testing",
            "item": [
              {
                "id": "491ce6e4-4393-421b-8be5-389673c16ba8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2e45d405-8920-41ea-8ae8-3f2648af3dc2",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd94c70-d659-43b9-bc8d-3f4b20544608",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52ce0e5c-2978-4b31-9ae9-9bd20e308da5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f138d0cc-6749-403e-ada8-1088ddec8ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de841f57-aecc-457b-9503-2f51a5a9f39e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c8cc0b13-8ea2-4b3f-8af1-8faeb5133515",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6dd994a6-186e-4ea9-b87b-fc6df261af28"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "389459dd-ad8b-46bb-b48f-48e88f9e21f3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fdbc07d1-15cd-4a93-b6ae-685d647b9527"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "69a2ba83-b72e-450e-906a-17bd41abfd32",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c67e1ff0-6d70-48bf-bc9a-6fae18cc819a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "098c56ee-615c-413c-be88-f26c31fc9632",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "22c0bc2a-c828-41b8-870a-6c4f7ccb5945"
            }
          }
        ]
      },
      {
        "id": "e418795f-319e-4d59-8476-adced6858184",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "797d27a6-0871-4080-8d31-d3c54fa85986",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5b92d1cc-dd4f-48ba-b869-2887e8bdbb30",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a59a8ad5-3474-4956-954b-84dbc47095d0",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e16672d-f21c-4ff2-8236-9102b67a18a6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab968392-5ee1-4491-b8ca-a943b88ad957"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d1dd67-22e5-44ad-905d-78d1f45024b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5671307f-bb97-4d57-902b-6ead0a79dad4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a5e4db52-57a2-4796-b9dc-0727452714bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad3413cb-59da-411e-867d-8a43032937cb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2688789a-aad2-4c26-a207-874988c680e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "faf0542b-c1be-4b87-9331-bb7c04e88844"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ca32fa73-82eb-4c95-bb77-c79102324cc6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "625eae3c-2f35-4a2f-8814-c8e9e3725fdc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ce7223b7-3116-4f49-b877-d277b574775d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b1fb1f4c-f22b-48f2-953b-874e896eee3a"
            }
          }
        ]
      },
      {
        "id": "876cad40-3556-4fa1-9da1-19f1ba207aac",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b0a8f5bf-b033-4c85-a67f-240901db9462",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fc9acf53-1632-4a8c-a677-dd0415becf64",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "fddba837-f4f3-4b6c-ad76-aac7321c6d3f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1a7eda45-324e-4466-aef4-42f175aefcc7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dc4d7dff-503e-4f96-a464-437f5f80a5b2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 207.3157894736842,
      "responseMin": 17,
      "responseMax": 22881,
      "responseSd": 1484.0086082633832,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1699662825687,
      "completed": 1699662900295
    },
    "executions": [
      {
        "id": "e03cb75f-c8a0-40ad-84de-4f44cc4cd287",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a72e1e44-5aae-49e5-a5a5-b4d79d5b04c5",
          "httpRequestId": "50a0884f-6e9d-4404-bda7-6bfcf29e5aae"
        },
        "item": {
          "id": "e03cb75f-c8a0-40ad-84de-4f44cc4cd287",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a236c655-a12e-47c1-a01d-f9bb29522c6a",
          "status": "OK",
          "code": 200,
          "responseTime": 97,
          "responseSize": 0
        }
      },
      {
        "id": "e8f2d344-4857-48e6-8b84-f49a37d7291b",
        "cursor": {
          "ref": "182e6f6f-2dcc-4d30-85b1-f687e8e3af6a",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5c40fb5c-2990-40e7-be33-8a56a6849deb"
        },
        "item": {
          "id": "e8f2d344-4857-48e6-8b84-f49a37d7291b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "a1d5f2fd-284d-414f-ab9b-d0e40ca648d0",
          "status": "OK",
          "code": 200,
          "responseTime": 17,
          "responseSize": 0
        }
      },
      {
        "id": "887a3e8a-30cd-46c5-8d63-4147cc3c76a0",
        "cursor": {
          "ref": "2408abc1-1ce4-46dc-9dcf-d591bdbd4c45",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "21c2495a-fe24-4151-beb3-888dbc0eed58"
        },
        "item": {
          "id": "887a3e8a-30cd-46c5-8d63-4147cc3c76a0",
          "name": "did_json"
        },
        "response": {
          "id": "5827e823-d735-493f-9003-1ea13bb559e5",
          "status": "OK",
          "code": 200,
          "responseTime": 621,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "937461e1-6306-40a6-8c76-a9bcad14358e",
        "cursor": {
          "ref": "89be0f05-6aac-4188-b276-2443baabbfb0",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "31585fb5-03f1-4164-ade4-95e666fd3134"
        },
        "item": {
          "id": "937461e1-6306-40a6-8c76-a9bcad14358e",
          "name": "did:invalid"
        },
        "response": {
          "id": "dd9fa0dd-407c-4eb4-b005-cee9141e4221",
          "status": "Not Found",
          "code": 404,
          "responseTime": 3627,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "937461e1-6306-40a6-8c76-a9bcad14358e",
        "cursor": {
          "ref": "89be0f05-6aac-4188-b276-2443baabbfb0",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "31585fb5-03f1-4164-ade4-95e666fd3134"
        },
        "item": {
          "id": "937461e1-6306-40a6-8c76-a9bcad14358e",
          "name": "did:invalid"
        },
        "response": {
          "id": "dd9fa0dd-407c-4eb4-b005-cee9141e4221",
          "status": "Not Found",
          "code": 404,
          "responseTime": 3627,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b7bb59-0f25-4e00-80ba-cdd64a824c0d",
        "cursor": {
          "ref": "16ae4010-d89c-4174-a20c-5eac3ccf964d",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "41588a28-ec7a-49b8-b401-2b6218807ea3"
        },
        "item": {
          "id": "12b7bb59-0f25-4e00-80ba-cdd64a824c0d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f7426c0c-fff8-4304-90d0-ced6dd0fb301",
          "status": "Not Found",
          "code": 404,
          "responseTime": 76,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c6c8580-8e33-4e47-b844-9fb6da2b45f9",
        "cursor": {
          "ref": "2ef612b8-a32e-4986-88cf-50141187914d",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5215efed-0a84-457a-8765-73ade113dba4"
        },
        "item": {
          "id": "5c6c8580-8e33-4e47-b844-9fb6da2b45f9",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e3235b3c-637a-4657-9bce-8044b03e2d03",
          "status": "Not Found",
          "code": 404,
          "responseTime": 57,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3729066-5f2b-406e-b204-e2f13d7fa13d",
        "cursor": {
          "ref": "b59f3711-430f-45cf-87d5-5bacf1078680",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "57634168-3990-437b-9198-31eb26fe48cd"
        },
        "item": {
          "id": "d3729066-5f2b-406e-b204-e2f13d7fa13d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "aa649b98-042c-4c24-bdc6-4e9bd8c373bf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3aac4f8-6fbe-42ee-9a4e-1575fa68b342",
        "cursor": {
          "ref": "dd43322a-93fa-4be0-a335-6a292bc78e52",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "654b7d4b-fda6-4a90-8f1d-81632cadc930"
        },
        "item": {
          "id": "e3aac4f8-6fbe-42ee-9a4e-1575fa68b342",
          "name": "identifiers"
        },
        "response": {
          "id": "1bf4b27a-b5ca-4e11-826b-3dc529e288b7",
          "status": "OK",
          "code": 200,
          "responseTime": 87,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b0df071-8796-4be0-8937-624e9a210440",
        "cursor": {
          "ref": "fb144308-f5cb-4426-8d43-60e4b7b91f89",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "31e21cf1-494c-41d5-a5e1-b85ab3a258a3"
        },
        "item": {
          "id": "0b0df071-8796-4be0-8937-624e9a210440",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "52e2c087-7793-41b8-a998-7f48f806797d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63cc6ec0-16b1-4121-8802-740192eae54a",
        "cursor": {
          "ref": "1307d4c8-4c96-4308-94b2-416f37a46c20",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "bab9385a-8123-4f7d-994b-f9382a006aa9"
        },
        "item": {
          "id": "63cc6ec0-16b1-4121-8802-740192eae54a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "772b57b9-2c2a-4dbd-9c74-bfadc91cf1bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0911f0a3-3f5b-48f3-94e4-d9aafc2323e8",
        "cursor": {
          "ref": "c88459ad-49a9-4f5a-a069-586517e40f93",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "571bb19b-8be6-4bc8-88b8-fe9c2154d7de"
        },
        "item": {
          "id": "0911f0a3-3f5b-48f3-94e4-d9aafc2323e8",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "79b69138-4320-48cd-9377-d510dd9e63f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ae0d27b-de8a-4e57-a0f9-b61c9d9d9e93",
        "cursor": {
          "ref": "c95999a9-bbf4-45b7-b509-8e1822d7fd25",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d2073b6d-84d7-4428-9da2-8eda996ee46b"
        },
        "item": {
          "id": "3ae0d27b-de8a-4e57-a0f9-b61c9d9d9e93",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "de008e95-2d12-409a-9309-7e2cae1bb5dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a67e32-4f8c-4930-8652-3bec534fb571",
        "cursor": {
          "ref": "037055c2-2f04-4553-9af6-663c43646229",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9cd87166-db72-41f1-8be5-562793898564"
        },
        "item": {
          "id": "16a67e32-4f8c-4930-8652-3bec534fb571",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f4ac3789-1e49-4a49-a134-83c08e9b9a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 764,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44505376-a208-4333-b5db-e34e877e13cb",
        "cursor": {
          "ref": "a05d8afd-e067-4a57-93d1-161c1686ea46",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a2b7332e-8a6a-4d15-bd42-8f233bbea041"
        },
        "item": {
          "id": "44505376-a208-4333-b5db-e34e877e13cb",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "c7d26693-7a17-4096-a5de-fbe6040c566b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d1c7751-cce2-4ec3-9c8b-078325b8a7e0",
        "cursor": {
          "ref": "41d16320-255b-43d6-be23-6a2b9ad7f344",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "1e84ed2c-afa3-4b78-b67e-8cbd2b83a4ed"
        },
        "item": {
          "id": "9d1c7751-cce2-4ec3-9c8b-078325b8a7e0",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "be7aca1f-d204-4fef-a6a6-000e516abe6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78624c31-05ab-4d12-8504-3164b7f32e49",
        "cursor": {
          "ref": "6ee0d732-5d66-4715-8e55-3e2d96eb2e8a",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f50af9d4-7e95-4309-92b4-4e43baa38c16"
        },
        "item": {
          "id": "78624c31-05ab-4d12-8504-3164b7f32e49",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "94f849c8-aa9f-4d5d-ad3c-0d78ac8bc83e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6aaa441-7907-41fa-bb19-66f29f261e23",
        "cursor": {
          "ref": "ac5db70a-13d1-4d0d-a56f-0570da1357dc",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d5afece9-34ce-41f9-8cbd-ce653ecb5766"
        },
        "item": {
          "id": "c6aaa441-7907-41fa-bb19-66f29f261e23",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "2ee02694-a857-41a1-adbb-1fc7f1fe0196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ef421b-5136-436f-9e10-9affb602b47e",
        "cursor": {
          "ref": "03f37733-403e-46ee-9bb8-ab441b326fe2",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "207d85ed-72bf-450e-a051-d6db088f88f4"
        },
        "item": {
          "id": "d3ef421b-5136-436f-9e10-9affb602b47e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "8aff5409-5f6a-409f-a79d-420708c4c806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edabd136-22d0-4801-991f-4cdcd80816ab",
        "cursor": {
          "ref": "5b9dc34d-0277-4c96-a190-aab4d5cf3155",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "9e7606e7-ad86-4083-8d20-8a6e9c5dd40c"
        },
        "item": {
          "id": "edabd136-22d0-4801-991f-4cdcd80816ab",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "fe7af59e-2789-4089-8549-b1a77b0b6b3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81d13ed7-509b-4c87-a3ff-39d3da158904",
        "cursor": {
          "ref": "8450ba05-18c7-4ecd-8acb-5482b8f44ada",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "97eacfae-fa8b-4093-ba86-a34a1f7ab1b5"
        },
        "item": {
          "id": "81d13ed7-509b-4c87-a3ff-39d3da158904",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "99d52ddc-d2ca-43f9-81ba-eec491b6c15d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6aaafe4-d693-448f-9625-99f08565cc81",
        "cursor": {
          "ref": "eed8ffa7-4824-4fd1-b2ec-ce320a432b4e",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9ab85d9a-f5cf-4b13-b00f-4eff80fdc7a7"
        },
        "item": {
          "id": "b6aaafe4-d693-448f-9625-99f08565cc81",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "a95a6953-50dc-437d-9d20-e1a1bc2db6dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48066883-588b-4941-8779-3c92e53fccfb",
        "cursor": {
          "ref": "89a1c8ea-8a98-4fc2-88a4-4262b5343279",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "b00bbdc9-18df-4e31-97ba-4edf2b52e6b8"
        },
        "item": {
          "id": "48066883-588b-4941-8779-3c92e53fccfb",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "adb763cd-eea8-4496-8cd8-16ecc208ac1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6585bcc-46bb-4e08-9bc2-e6270f2bd72f",
        "cursor": {
          "ref": "26ee0cd8-813d-4e55-a277-b17ec103a7f0",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "83c91991-526e-4fb8-a269-2ed46aaff2bc"
        },
        "item": {
          "id": "c6585bcc-46bb-4e08-9bc2-e6270f2bd72f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "7472b7dd-a884-48df-b44b-d4ac5f9406c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c40f26d-7857-4331-aaf4-434cea236531",
        "cursor": {
          "ref": "5727dc16-6d7b-4d3f-9b92-9c1116b63082",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "8a4106cc-b30c-4fb7-afa3-3a65301dfd74"
        },
        "item": {
          "id": "2c40f26d-7857-4331-aaf4-434cea236531",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "46743d34-8417-4574-b8e4-2b429693d183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2552b734-32fa-4213-9958-cc3494ddeafe",
        "cursor": {
          "ref": "50f128ae-6e67-4d8c-a3e5-3d8e22197426",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "1d75f5d0-42fc-4ecf-a3a7-e6b0c09fdee3"
        },
        "item": {
          "id": "2552b734-32fa-4213-9958-cc3494ddeafe",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c1b96568-abba-4893-ab4b-6723722802f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "265a7779-e5a5-4b6a-bae6-fbc890309d16",
        "cursor": {
          "ref": "2424034d-4f16-4b92-83b6-f409f0085eb2",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "bd89e625-a4e2-4a3b-94e3-c60b4fa45430"
        },
        "item": {
          "id": "265a7779-e5a5-4b6a-bae6-fbc890309d16",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "60fb2a79-7a18-483b-a0f6-8ebca60909c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a848431-06c3-4ab0-9f49-0abe4e64d20a",
        "cursor": {
          "ref": "125ab5ef-68b1-4acf-ae41-a7bd20933745",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e388513c-6680-491e-9548-229040ded30a"
        },
        "item": {
          "id": "8a848431-06c3-4ab0-9f49-0abe4e64d20a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ae61c2e6-75ab-41bb-a76f-ce28058cfffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dcfbadc-6673-4ddc-b205-81c49950a452",
        "cursor": {
          "ref": "69c7804a-ff02-4215-bf90-51704436ebde",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e08f53b3-d290-45e2-809f-4d3148bbcc8c"
        },
        "item": {
          "id": "2dcfbadc-6673-4ddc-b205-81c49950a452",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f9580701-feb5-405f-9a9c-89c5eccce98f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600763d5-f9fb-4455-b8b8-d60139c23d5a",
        "cursor": {
          "ref": "b992f2aa-698b-4a18-9942-af263d6678e7",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4afd4c8b-5bc9-406a-b7e7-9ff78cd620e1"
        },
        "item": {
          "id": "600763d5-f9fb-4455-b8b8-d60139c23d5a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "12434781-4b58-4a87-92f2-1a30681b0a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39b6b4d-820d-4a43-88d6-0770a12bd6c6",
        "cursor": {
          "ref": "0de83c8b-2de4-4609-bbe7-6cc095a86ada",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "b4be60b8-cb82-4f9b-a2aa-eb6b42325329"
        },
        "item": {
          "id": "b39b6b4d-820d-4a43-88d6-0770a12bd6c6",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "66d413c8-19b3-4422-ae4c-492c35835914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe0a46c-5069-4372-a000-c1cc9aebaa43",
        "cursor": {
          "ref": "59938e88-7fce-44d0-af9c-83ed6e5c3a91",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "410807cf-f037-4b76-943b-a93f5c3438ba"
        },
        "item": {
          "id": "4fe0a46c-5069-4372-a000-c1cc9aebaa43",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "4717f292-5869-4cdf-81c0-a75ef33efeb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab16e3a4-b1c9-48f2-97fc-6bdd20ceed2c",
        "cursor": {
          "ref": "c651235a-c9ef-46ce-a448-4513b78282b2",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "91d29eb4-0b10-4b74-accd-7b07a1c13948"
        },
        "item": {
          "id": "ab16e3a4-b1c9-48f2-97fc-6bdd20ceed2c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f8de4045-9348-449f-9adc-2613733b8f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e409630-3658-41bc-95b9-f208ea4ef6ab",
        "cursor": {
          "ref": "539652fa-5e47-42b7-8b6f-f61bce11061d",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "1740f661-a3bb-4003-b0f2-62adf97a2e25"
        },
        "item": {
          "id": "2e409630-3658-41bc-95b9-f208ea4ef6ab",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "290b40ba-0e0c-49e8-b032-ba4cf7d73959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25247eda-b9d6-4f84-8f81-6badacdab140",
        "cursor": {
          "ref": "58575734-6fb5-495b-bb23-08832439f387",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c9cc6e89-36df-449d-879f-ce50a16b1ca1"
        },
        "item": {
          "id": "25247eda-b9d6-4f84-8f81-6badacdab140",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b1a755a3-939d-4e74-9a70-2ba34a697f36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d1842a-40cf-4e19-8bb1-17254d859ae7",
        "cursor": {
          "ref": "47e34dc5-f405-4c87-870f-3bab989e9f9f",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "b79c3b18-177a-40e4-811e-5a22a48e2f36"
        },
        "item": {
          "id": "63d1842a-40cf-4e19-8bb1-17254d859ae7",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "d6235ff2-64d9-4965-b696-fda52a27f676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f696686-8499-4c99-a916-dc077e9f4177",
        "cursor": {
          "ref": "4895c24d-1203-46af-924d-1cc9a507ac99",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "782363bc-7709-4f95-b420-014b43b3e5a0"
        },
        "item": {
          "id": "5f696686-8499-4c99-a916-dc077e9f4177",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "469a59fd-4bf3-49ae-9553-652d72962ecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c81f6fde-1e98-40e3-87eb-e50cd0f1fc97",
        "cursor": {
          "ref": "002c7783-3054-4906-a2d6-cce40e2fdbd5",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b6846a0b-cee4-4a50-994f-a44807f59e6e"
        },
        "item": {
          "id": "c81f6fde-1e98-40e3-87eb-e50cd0f1fc97",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "dc2f44fc-abc7-434e-97c2-91efa8ec5285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c56ecfe-c33c-4702-9180-b1ee70ed7c9b",
        "cursor": {
          "ref": "375048dc-bcbe-4bd4-a3a7-25fb3209c207",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "f8845212-b1d9-4871-8bfc-b93fef03c0f3"
        },
        "item": {
          "id": "0c56ecfe-c33c-4702-9180-b1ee70ed7c9b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3f761a96-3b14-4caf-8394-3f70710b9032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86204ccb-d9f5-4db4-8a17-1176820a05c7",
        "cursor": {
          "ref": "2461d7bf-cc8a-4dda-aa7d-1043ea1ba5d9",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "68933e54-af14-407d-9d5a-c909e7734ce8"
        },
        "item": {
          "id": "86204ccb-d9f5-4db4-8a17-1176820a05c7",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "2deec89b-0329-44f1-a168-a4f78c848a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53fac791-554a-498a-ae17-caf15d4fe001",
        "cursor": {
          "ref": "3823f1ac-6e71-458b-a846-64c55674c171",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "3099dd71-eb3c-4e90-a63a-21b30a413fc9"
        },
        "item": {
          "id": "53fac791-554a-498a-ae17-caf15d4fe001",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "6548192e-797b-40b6-871b-526c6455399e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aeccdf6-4b11-4036-b31e-4940c3ecee17",
        "cursor": {
          "ref": "46e22b3d-49bd-46d4-b418-850b7d2844a3",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "00b01830-3a54-4778-95f7-36371c0c077b"
        },
        "item": {
          "id": "1aeccdf6-4b11-4036-b31e-4940c3ecee17",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "bd706bbb-8445-4f02-8a20-8ef7a72c0808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031ede49-d42c-48a5-8898-59316148a8f8",
        "cursor": {
          "ref": "53a36920-331c-49fd-9926-2b6349e5cbbd",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c08a9a01-c201-41ac-a2f5-ade75bdf8a47"
        },
        "item": {
          "id": "031ede49-d42c-48a5-8898-59316148a8f8",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e65b3ac6-0e13-499d-a211-1f302680dee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e80ffefc-2e51-4b98-894f-dab430f7f882",
        "cursor": {
          "ref": "f1d7f0b9-246c-40b6-8f36-06b43cf4997e",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "16252278-d3cf-4511-a6a8-2f570a7b73c2"
        },
        "item": {
          "id": "e80ffefc-2e51-4b98-894f-dab430f7f882",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b250179c-82f5-432d-802b-a7ae9864ec7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5713cd3f-d8b7-4231-8435-8f288925cbbe",
        "cursor": {
          "ref": "2e7f5d5b-f864-4914-8fe8-aec159e0bb0f",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "633380a2-5728-48a2-93e6-32668940627c"
        },
        "item": {
          "id": "5713cd3f-d8b7-4231-8435-8f288925cbbe",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "999a2a73-bcc6-4b7d-80b3-0cc23b798784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622cb798-7ca7-4776-8602-8423a371a4f7",
        "cursor": {
          "ref": "500ffd1f-9e86-4120-b084-00dc55303895",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d3e39a82-0d25-4e21-a6cd-c9c5afa580d0"
        },
        "item": {
          "id": "622cb798-7ca7-4776-8602-8423a371a4f7",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6f9b6401-1c38-462c-8952-b4209157d9e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "367c4081-5b52-41ac-9b76-dfd7144105ab",
        "cursor": {
          "ref": "15bd864e-d283-48ba-ad07-74d8e518e648",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a61cdcf6-5a0c-4eaf-82b3-ac0202f83870"
        },
        "item": {
          "id": "367c4081-5b52-41ac-9b76-dfd7144105ab",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "2031cc55-9199-4fe3-bf13-c1777ad225d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e1304bf-13a1-4fad-a347-7928910fb3e2",
        "cursor": {
          "ref": "fdf57cab-ce6c-4acc-ad4c-c4befa8a58e1",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "8fd20f5d-d208-4e2e-bffc-3b9ab98eb289"
        },
        "item": {
          "id": "6e1304bf-13a1-4fad-a347-7928910fb3e2",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "809b306f-e875-4b59-8056-e3b242e69aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d939f5b-e18b-47f4-a117-b2976ae0d93e",
        "cursor": {
          "ref": "94843169-3cb0-47a3-9a9b-a5d9afd4b68d",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e6413c23-3eda-4ab3-915e-17be42eb943e"
        },
        "item": {
          "id": "1d939f5b-e18b-47f4-a117-b2976ae0d93e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "67aa8f46-5fda-46bd-887b-5d9e3d21ecd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b82d1b-2386-4844-85ad-76ac28ba6f12",
        "cursor": {
          "ref": "98d3a5a4-c80b-49c5-a267-1f32cf52ef01",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d433a4b7-c301-4256-a6b9-63459bbd83be"
        },
        "item": {
          "id": "a6b82d1b-2386-4844-85ad-76ac28ba6f12",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "b99e0a2b-a4d5-4d17-8ac2-833d6fde9de2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c967408-48cf-43b8-ad62-bb29de04cbaa",
        "cursor": {
          "ref": "eeb156a4-0796-40e2-b5ab-b53eb92d9296",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "47aacea9-04cd-42e8-bc6e-9fefe7954dd2"
        },
        "item": {
          "id": "7c967408-48cf-43b8-ad62-bb29de04cbaa",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "7b24ab38-41e1-4a08-b092-2d499e865037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b081721e-c3d2-4aa9-8232-026c0512314d",
        "cursor": {
          "ref": "1f32d76f-60ab-4293-b52c-9d63ab20398a",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "dd00fb62-d33a-4f48-a947-f69a97817c5c"
        },
        "item": {
          "id": "b081721e-c3d2-4aa9-8232-026c0512314d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "5b2fb139-3b1f-4d07-9322-77dee94c41a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce91e3f-a412-4f31-983f-4964a8c5e6a7",
        "cursor": {
          "ref": "047a1ab2-2244-4d68-bbbf-2219975f5e8c",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "73098559-fe78-4959-b9f2-54498e05476c"
        },
        "item": {
          "id": "4ce91e3f-a412-4f31-983f-4964a8c5e6a7",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b12fadfd-6821-40da-8397-ee536feec289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b1e7bf-dedd-4b5c-9415-0694865f0edf",
        "cursor": {
          "ref": "d24cbf1b-c166-40b1-bab2-68e67b73828a",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "92a553aa-d9bb-4b99-8d10-d5c257907333"
        },
        "item": {
          "id": "38b1e7bf-dedd-4b5c-9415-0694865f0edf",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "2ea8cc2d-1fbf-4abf-a0c7-22c7c30ee863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89849d57-7f09-44b4-9d64-37b0fb40c7f4",
        "cursor": {
          "ref": "42750dd8-3b82-4451-b3c1-2fd9c518e20a",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "758d787c-3339-4274-8e9e-6d91ba369bfc"
        },
        "item": {
          "id": "89849d57-7f09-44b4-9d64-37b0fb40c7f4",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "1d814a43-f1c1-4fef-8d36-b8512df18442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce67f2ae-a7ef-4bdd-bb68-9136deafa1e4",
        "cursor": {
          "ref": "bea1cf93-de45-4ccc-8827-855b7cbe7d33",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "5b0d65ea-fb66-4950-9351-9da52c06a9b6"
        },
        "item": {
          "id": "ce67f2ae-a7ef-4bdd-bb68-9136deafa1e4",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d6bc62ea-cc7c-4090-8e31-061c1048ef1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49947d2f-62ac-4606-9d50-942da83f2758",
        "cursor": {
          "ref": "2ea091c5-c1de-409c-ad85-85403018d8d0",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "1590c2b2-4df8-458d-a9ce-97290b55f887"
        },
        "item": {
          "id": "49947d2f-62ac-4606-9d50-942da83f2758",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "eafd432d-2df6-4cf7-96b2-dffad962955f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ebc3873-da39-420a-b88c-5ad21ca22280",
        "cursor": {
          "ref": "d4c6e582-da94-4665-ba48-860302f85b24",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b468eaff-db49-455d-890a-c524b1cb72e8"
        },
        "item": {
          "id": "9ebc3873-da39-420a-b88c-5ad21ca22280",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a7df6c93-2e0b-4c4b-9833-067aa5191427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68414549-e4f4-48ef-a1ba-2123b3613e8f",
        "cursor": {
          "ref": "b8b38766-3c10-4795-9ec3-a1acdac4dede",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "1a58867c-59d4-40be-a661-7495c5364e1a"
        },
        "item": {
          "id": "68414549-e4f4-48ef-a1ba-2123b3613e8f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "263362b3-c5ce-48b6-b724-379d9520f8fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab9fd0c-257c-4585-95d1-e0ae38a5abdb",
        "cursor": {
          "ref": "4293d753-90e7-41f8-a9e6-d81f207833f1",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "28459f94-b45a-47e2-96c2-18bdfa8a1d3b"
        },
        "item": {
          "id": "2ab9fd0c-257c-4585-95d1-e0ae38a5abdb",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "4cd27530-1161-46cd-9fd7-e53560fd268a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da14a1ce-51ae-4512-b32b-66e333828539",
        "cursor": {
          "ref": "e907186e-8eae-44fd-95b1-bd17d9e8cae2",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "9d099e4c-7e71-4873-96f1-e86b560c6545"
        },
        "item": {
          "id": "da14a1ce-51ae-4512-b32b-66e333828539",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c9929896-cae8-4a98-9e54-46dd8e444d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5daf2613-004a-4f4a-bbe7-fba032c92a89",
        "cursor": {
          "ref": "b31cb0ec-0f0e-4b93-8d33-cff698dfa449",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "08d2c055-c542-4b1a-9f16-aa6e7766268e"
        },
        "item": {
          "id": "5daf2613-004a-4f4a-bbe7-fba032c92a89",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "0facd75c-bbc8-4156-a3b3-af0cb2022854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b47b86-0a7c-4193-923d-bfe9a9a80322",
        "cursor": {
          "ref": "44ce6eeb-6a52-4f7f-8786-edcdb474ec1d",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "bc38e37a-78c2-450f-bd69-01dca9208fd2"
        },
        "item": {
          "id": "02b47b86-0a7c-4193-923d-bfe9a9a80322",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f99c5a32-69ac-4e1d-97b6-e0b4653f0613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1061f4a9-7dfc-40e3-bae3-d3ad2fe7b800",
        "cursor": {
          "ref": "d6b77028-349c-4283-a8c9-54b93bc13b1a",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "64990431-5ffa-465f-8d97-0bcf20a3419b"
        },
        "item": {
          "id": "1061f4a9-7dfc-40e3-bae3-d3ad2fe7b800",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "21bfa671-afe5-4910-99fc-f3774a0ef93e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee516bf-fbc8-4b5d-92bf-631c3ea608fd",
        "cursor": {
          "ref": "02f94eae-c654-4e0d-ad63-1d09ff7e5c4e",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "677eeca5-b4c2-4bff-b132-71ed4a3e2877"
        },
        "item": {
          "id": "dee516bf-fbc8-4b5d-92bf-631c3ea608fd",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "3992e6f5-a7fc-477f-927b-0395d78b91b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4966f7-8f34-4121-a4e2-559506b4339b",
        "cursor": {
          "ref": "5af18727-e2e6-4933-8d65-c055de215bdd",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "eaf51b18-e98b-4828-8548-0642e4a1dfce"
        },
        "item": {
          "id": "7c4966f7-8f34-4121-a4e2-559506b4339b",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "caf9de5e-77bf-42b9-9f24-ee6c90d6f818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fecb95be-d8cb-467c-8324-d1fdddf3a0e8",
        "cursor": {
          "ref": "3ca95c89-e658-429c-b5c6-9351bb35759a",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "66eab2a5-b9ea-4e40-a4dd-b4be7c502f14"
        },
        "item": {
          "id": "fecb95be-d8cb-467c-8324-d1fdddf3a0e8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "514812fc-95eb-40e0-9ad2-6b9a06a5dbb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad5789ab-f570-4827-bc56-9d8610d086dc",
        "cursor": {
          "ref": "9671e126-d2ce-4b29-a31f-f2cf9be5d1f4",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "af381a98-7381-4cf8-97c6-fababc93911c"
        },
        "item": {
          "id": "ad5789ab-f570-4827-bc56-9d8610d086dc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "2eb76292-74d5-4d4e-b5d5-841d5b395997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141ce4bc-194a-4f49-af30-bd02f1ed271d",
        "cursor": {
          "ref": "291a4d24-b353-4614-b114-641ba10ac321",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "dda99d3c-b967-43a5-88fd-79b30a791d31"
        },
        "item": {
          "id": "141ce4bc-194a-4f49-af30-bd02f1ed271d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "6822e129-c70f-4e00-96d5-5d5b65e46aa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1c5093-269d-4d23-b296-8ce5fddc4a2c",
        "cursor": {
          "ref": "3fc95d6f-eb32-459d-84de-a7165f1ae11f",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "9edaedae-d5fe-44e6-8964-9a4972838be9"
        },
        "item": {
          "id": "4f1c5093-269d-4d23-b296-8ce5fddc4a2c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5db4097f-a053-4b25-8ee3-3491ee7b29e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f1dc9c4-4b64-4a43-9c02-63eeef75cf58",
        "cursor": {
          "ref": "192e8115-98e5-4a60-be25-ec2e932ff28f",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "2e7c5085-a315-4f8e-9f31-7cdb34a5a6b0"
        },
        "item": {
          "id": "7f1dc9c4-4b64-4a43-9c02-63eeef75cf58",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "68a605e2-bcc9-4852-aa64-bad60ce9514b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa7a7a8-1783-4e8e-bf52-ba18de7bf58d",
        "cursor": {
          "ref": "b3986490-2339-4dda-84a0-147c1565360c",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5baaeef8-7f15-4e49-8301-2ddfb5f43b90"
        },
        "item": {
          "id": "6aa7a7a8-1783-4e8e-bf52-ba18de7bf58d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "cc6e2c94-bf13-4fc1-bcad-803c0fac0cef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0450218-8c8b-4357-a11f-6a0a57a7035a",
        "cursor": {
          "ref": "9ea701ea-c47d-4f65-8949-dc1bd2488371",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "cc45e55a-338c-42ff-9a60-fe87426188f8"
        },
        "item": {
          "id": "f0450218-8c8b-4357-a11f-6a0a57a7035a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "140bb948-a36f-46a4-b5a0-5a3be814a004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35082543-60d5-4ba8-a8de-ecfdccd72579",
        "cursor": {
          "ref": "98f8f072-d4e3-4598-963d-cbe58517aba2",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b99af041-a97e-4566-b5a7-be82a8f9f0c2"
        },
        "item": {
          "id": "35082543-60d5-4ba8-a8de-ecfdccd72579",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c94dd81b-4241-4d8b-8692-b439cabe267c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bfa1a71-d743-4952-849b-11b7d1202071",
        "cursor": {
          "ref": "79ec5af5-9e91-4b3a-80ce-33b5fb65e6a0",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f53aa040-31e3-47d1-80f4-d0796bde8b0e"
        },
        "item": {
          "id": "2bfa1a71-d743-4952-849b-11b7d1202071",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "839aa6b1-2c80-4758-b0d0-a90873a69543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af56c73-e8af-4b36-8bf0-2fd55e3327cf",
        "cursor": {
          "ref": "27a39f16-7598-429f-843c-cb7e5fcfc227",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "5ec1e032-a5d7-4852-ae1b-76cae0bd386f"
        },
        "item": {
          "id": "5af56c73-e8af-4b36-8bf0-2fd55e3327cf",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "263faef5-d255-4482-b45d-03cdb2ffe14d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc896007-3604-4839-9392-837fcc797972",
        "cursor": {
          "ref": "a374b684-6faa-41cd-9c22-3f4c3f81dd74",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "919673ff-27cf-42db-ab22-3526fe5d9093"
        },
        "item": {
          "id": "bc896007-3604-4839-9392-837fcc797972",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "e1b2d131-52d4-4cbb-9e84-431e3d23d6ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb37e305-00d3-445b-a875-d4b5c02d2e2e",
        "cursor": {
          "ref": "8e5e6490-3fd0-4f85-948a-3609bb4521cc",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f5c9bf12-bb69-4200-b1aa-f2340dbc55a5"
        },
        "item": {
          "id": "fb37e305-00d3-445b-a875-d4b5c02d2e2e",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8057bc12-db39-4381-ba5d-8f834a1a3977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4861263-82af-404c-8546-9a88c1c148f9",
        "cursor": {
          "ref": "c7046607-597b-4861-bbdc-c01668bde956",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "66e0df65-347e-4ab1-97eb-d35a6f903031"
        },
        "item": {
          "id": "d4861263-82af-404c-8546-9a88c1c148f9",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "a0f16f21-0608-44cc-a964-6cbda11c8ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a16e2df-4803-437d-8241-e7d3ba6b0467",
        "cursor": {
          "ref": "cee889af-da1b-4c72-8ffc-1b6e778dd0ea",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1c589456-c965-498a-b24d-58bc8d40ab0e"
        },
        "item": {
          "id": "9a16e2df-4803-437d-8241-e7d3ba6b0467",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ad8a6f31-f79f-484a-a81c-e903308d7c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ab49de-818e-406f-ab25-a2b94905b8ca",
        "cursor": {
          "ref": "77320914-f8a3-4564-a8e8-8b3827ae46d0",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "f35053a8-abd9-4337-a800-29676e97f8b6"
        },
        "item": {
          "id": "05ab49de-818e-406f-ab25-a2b94905b8ca",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "5035e42e-f368-4b9b-922c-255ef7537f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acfee25e-25ba-4ea2-9356-29e2682ae9b6",
        "cursor": {
          "ref": "103054af-931a-4d60-8f9d-5da0257512b6",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "3c374e66-3c47-4f30-b268-81279e81dfe4"
        },
        "item": {
          "id": "acfee25e-25ba-4ea2-9356-29e2682ae9b6",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "659fc09e-13a4-42d1-8a82-ede2fe04ea1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a8e94b-cadb-4c46-967b-7962204790fa",
        "cursor": {
          "ref": "451e5783-a58b-447d-8a15-5f92068a6307",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a63e74a2-a9ac-4036-bf7a-38bc1c5b0fd8"
        },
        "item": {
          "id": "20a8e94b-cadb-4c46-967b-7962204790fa",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "34590bfa-ded9-4647-a101-185cf65edcb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d56926-8eb1-425e-b918-d98708888026",
        "cursor": {
          "ref": "d032d4f7-4929-4736-9bab-150ac9e538d7",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "758ac43f-2243-4682-bccb-e13e6f5ec22c"
        },
        "item": {
          "id": "c9d56926-8eb1-425e-b918-d98708888026",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "efeabe54-b8ec-442a-a7e4-4017529980fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65f61b2a-4a7d-4395-a3b7-005723069a9c",
        "cursor": {
          "ref": "ce7f0b1d-355f-4346-ac57-146cdd83b203",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "3028dbf1-adac-4571-b042-e62a991e1ea8"
        },
        "item": {
          "id": "65f61b2a-4a7d-4395-a3b7-005723069a9c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d9066b10-123d-43d9-80cf-435174941d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce1eb3f2-3947-4953-b59c-3d7882b41a22",
        "cursor": {
          "ref": "c1325e56-26fa-4f32-8e22-d7e06dbe9f92",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ca86d948-21c2-4793-a374-0228a914c310"
        },
        "item": {
          "id": "ce1eb3f2-3947-4953-b59c-3d7882b41a22",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "353f723c-7b78-4a8e-941d-ac69b17ee7b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d2deaf6-8c5e-42fa-b45a-c0ef77a2512c",
        "cursor": {
          "ref": "5c7a6ebe-8b75-4254-810a-5a44dedf02dc",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f0ed7b2a-371d-459a-93f8-b9c2bf8d2186"
        },
        "item": {
          "id": "6d2deaf6-8c5e-42fa-b45a-c0ef77a2512c",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "081be7a9-c5bd-4c4a-a6c9-7d9e3496716d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b175d1b-857f-4cc1-93fe-c0f5942c8661",
        "cursor": {
          "ref": "78bff1be-586d-4072-beef-9c5295bc8210",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "aa2b32c7-8453-4acd-9c0c-a4f763b0130b"
        },
        "item": {
          "id": "1b175d1b-857f-4cc1-93fe-c0f5942c8661",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d5b79898-1538-4b0c-b1f1-088f14fd8237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58fc956a-0fd9-4d70-8c13-bb143c9608af",
        "cursor": {
          "ref": "0cf96d54-3f88-4dc7-84d2-e80496b274ca",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c932e34c-84bb-48fd-9073-42380a4fb1aa"
        },
        "item": {
          "id": "58fc956a-0fd9-4d70-8c13-bb143c9608af",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "51df77f3-43b3-45f7-bb7b-c3708fdfbc51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c3c11a-14b5-4f68-b871-202967835717",
        "cursor": {
          "ref": "eb59af93-76f9-4dbb-b943-f096d40f660e",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "45bda848-5526-4447-aa55-bb24880756ac"
        },
        "item": {
          "id": "50c3c11a-14b5-4f68-b871-202967835717",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "89309bb8-d8c0-446b-97b0-df9ca399ff24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 161,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16dfe486-cdf0-4b35-9811-99ab0cf21689",
        "cursor": {
          "ref": "1efe5f49-5be0-4248-b9ec-d055c6380c2d",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "31aba2eb-307a-4a8b-93a2-a0b54c010011"
        },
        "item": {
          "id": "16dfe486-cdf0-4b35-9811-99ab0cf21689",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "51321265-c3c4-46d3-82b4-56af0213d73e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5beac4c2-4a7c-4098-8ec2-a6d6515cc9c4",
        "cursor": {
          "ref": "71887ac0-43c1-40f4-a141-3e7e11cfb30e",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "77591e68-4859-4c05-b7bb-3d4cf8d43217"
        },
        "item": {
          "id": "5beac4c2-4a7c-4098-8ec2-a6d6515cc9c4",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c7c93c87-ed61-412f-9d3c-c8082d16cfb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e30a9fe-3a92-447a-a9e9-1d9d7ba1e52d",
        "cursor": {
          "ref": "332a1214-d528-478d-91ab-a1eab9a01a0c",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a41f0187-836c-4001-b1ff-ea17f6f0ee7d"
        },
        "item": {
          "id": "8e30a9fe-3a92-447a-a9e9-1d9d7ba1e52d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "fe4d5058-7989-4e34-86fd-c458abf2e3e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef39ee62-3b4d-4bef-aa95-d5b47827920e",
        "cursor": {
          "ref": "9d3ba47e-31b3-4477-ac18-35ca6d8c179a",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "be9fb5c5-2368-40a7-8636-04eb6560f581"
        },
        "item": {
          "id": "ef39ee62-3b4d-4bef-aa95-d5b47827920e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "893e9782-c5e1-42f7-a5c6-528b82d1c191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "723c21bf-587f-457f-a24d-696c843b2cbf",
        "cursor": {
          "ref": "73f34b38-7373-445c-979e-11c09cd534be",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "4cc09937-c822-4ea4-a0f3-4c121fa229b8"
        },
        "item": {
          "id": "723c21bf-587f-457f-a24d-696c843b2cbf",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "9de167c1-c2d4-48a0-b39f-5ea0da4a2e58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db2f1d2-1b8d-4832-99d9-b563ff24897d",
        "cursor": {
          "ref": "da4abf0b-7ec6-4e06-a3ad-13942d48d690",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "0fa946cb-04a9-431f-8ecc-196144533c07"
        },
        "item": {
          "id": "9db2f1d2-1b8d-4832-99d9-b563ff24897d",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "1208c8e0-78f7-43cf-b64b-5ab5a4369c72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ac3415a-ea0e-400b-9f04-171c3d57c162",
        "cursor": {
          "ref": "068c18e7-4fb5-49f5-ad2b-230c64f0303c",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "fd00fc02-7bec-4b02-af93-e1b57cff8403"
        },
        "item": {
          "id": "0ac3415a-ea0e-400b-9f04-171c3d57c162",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "403a1838-67b7-417c-9d09-4af910983863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4838ca26-2ca3-4bda-a958-7c7b2bb9baaf",
        "cursor": {
          "ref": "2920e631-9c14-465a-87f3-4d5b611c80ae",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1246ae33-8a48-42b5-ac35-3e4988515486"
        },
        "item": {
          "id": "4838ca26-2ca3-4bda-a958-7c7b2bb9baaf",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "5da96862-d34a-4e61-9d93-50300b236fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac0f794-390f-45cd-b6d1-ad6ea2d3b334",
        "cursor": {
          "ref": "32683953-dc1d-4436-8c62-9e64330f3c67",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ca0ada2c-5308-4ea0-8639-bf9cc278a9fd"
        },
        "item": {
          "id": "eac0f794-390f-45cd-b6d1-ad6ea2d3b334",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "8d1da866-e161-45bd-bbec-43e3858c23a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c024833b-4d98-4776-a484-f208789d74db",
        "cursor": {
          "ref": "59aaa39a-3bb3-48e0-9a24-811425a46237",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4657e59d-7c12-49f0-89a0-7e59c4b09e39"
        },
        "item": {
          "id": "c024833b-4d98-4776-a484-f208789d74db",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "71b9b78e-4e95-4c4d-b6dd-8dd937370003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64186b00-42d5-4ef6-b3c3-1ca37e908f5d",
        "cursor": {
          "ref": "60978e03-119b-45ed-a15f-bfcc30752c3d",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d3eec729-2348-4c3b-8c29-935c5c1df150"
        },
        "item": {
          "id": "64186b00-42d5-4ef6-b3c3-1ca37e908f5d",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "28aeaa96-90b1-4ed2-a10f-53fba72643de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f50f4ac3-e336-40ad-ae63-581b174464b5",
        "cursor": {
          "ref": "dce52416-c940-4bf5-ada6-a63ee1eee399",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ecf4ea6a-980d-4c59-aee9-0453311835e8"
        },
        "item": {
          "id": "f50f4ac3-e336-40ad-ae63-581b174464b5",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6c374517-2855-42d3-b54c-8672f02ef687",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae20922-ef15-4e87-9826-ed2a2a3fa30b",
        "cursor": {
          "ref": "56431396-75a2-4399-bf69-2a92f31fe57f",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "edb41d30-2550-4330-ace9-c0f5a97ddfc7"
        },
        "item": {
          "id": "aae20922-ef15-4e87-9826-ed2a2a3fa30b",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "1e7ae60a-88d7-424b-90c7-6cdb9469adbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "1bcc0599-d297-40c5-94d7-33f6a248c460",
        "cursor": {
          "ref": "48a69691-563a-4218-97ef-95f081b190a4",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "c059285c-adcd-4f68-92b3-fef764ae7842"
        },
        "item": {
          "id": "1bcc0599-d297-40c5-94d7-33f6a248c460",
          "name": "credentials_issue"
        },
        "response": {
          "id": "bf871ba2-fdb3-4862-ae4b-eded0dc460ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "9a8f8b78-4188-4e39-b1f3-0c5424225c12",
        "cursor": {
          "ref": "02a0ca16-995b-4022-9a67-9f8f409ff6f7",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ee628d94-318b-4887-a019-4dac06ce7b70"
        },
        "item": {
          "id": "9a8f8b78-4188-4e39-b1f3-0c5424225c12",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ee0dc310-b98b-4191-b232-a1d1ec19f9f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "17026bc5-c73b-4bf9-8590-60d4c3a8acfe",
        "cursor": {
          "ref": "7a82f33c-281f-4897-b5df-18762ed70312",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9c027983-4d98-4a5b-92b3-97a6ac4abadb"
        },
        "item": {
          "id": "17026bc5-c73b-4bf9-8590-60d4c3a8acfe",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b5b8f89a-d4f6-4ebd-93d6-d74255794ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "67666032-bdb0-4861-b122-6c279acd039d",
        "cursor": {
          "ref": "cef5e405-ad4d-4a49-a47c-2656381ddc4e",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "6f95b616-bd83-41c2-8261-ea677cbabfc4"
        },
        "item": {
          "id": "67666032-bdb0-4861-b122-6c279acd039d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "07af4e67-3b6d-48f6-8a8c-eab1db823d10",
          "status": "Created",
          "code": 201,
          "responseTime": 22881,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "582fb013-c12c-4330-a745-e04bd1ebc23f",
        "cursor": {
          "ref": "4df3e89b-e06c-4e8a-9867-62d25062ecc9",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "96fb759f-5b29-4f9f-b1bb-05f67b27c55c"
        },
        "item": {
          "id": "582fb013-c12c-4330-a745-e04bd1ebc23f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "1a70821c-5891-4459-b5be-e9d30c579e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "b7e1d842-2cc4-44bd-a140-a5c4cbd06a13",
        "cursor": {
          "ref": "29177a8f-0ed2-4570-a391-99592bcc88fc",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "2d47731b-d113-4c1b-b326-0e91e9039e1e"
        },
        "item": {
          "id": "b7e1d842-2cc4-44bd-a140-a5c4cbd06a13",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "0c918e97-0e0f-4487-9a40-8b4958fafca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "d9dc0a8a-f773-491d-93a7-4aabdd8dee96",
        "cursor": {
          "ref": "b58b64a6-87e8-4a74-9ccc-150194f62bfa",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "9843a90b-bbf8-4bfe-b69f-bd159d60abdd"
        },
        "item": {
          "id": "d9dc0a8a-f773-491d-93a7-4aabdd8dee96",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "91180500-9b9a-4934-8244-38d3c167057d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f49b3c27-f8fe-4ed3-8564-e3730b71aa69",
        "cursor": {
          "ref": "0552e60f-315b-4083-ab93-25d024e420c5",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "449925bd-0277-4b01-a725-bd7a1bc527bb"
        },
        "item": {
          "id": "f49b3c27-f8fe-4ed3-8564-e3730b71aa69",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "966721e0-156d-4af8-9f52-707c0d68f574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb015ae-f492-4f0a-8c55-765e13ba522c",
        "cursor": {
          "ref": "f18acebe-2336-463c-9555-488d86985ecb",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f6042c66-183c-4e11-8193-73755c7f6177"
        },
        "item": {
          "id": "3cb015ae-f492-4f0a-8c55-765e13ba522c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6a919a90-b00a-434d-a381-17225d514596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c9a984-97e7-4062-9116-39f3e66326ba",
        "cursor": {
          "ref": "fa05c091-9692-4252-9323-4d743f996dbf",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "30b67e91-40c5-4f83-8b62-7fc31bb2f2a5"
        },
        "item": {
          "id": "62c9a984-97e7-4062-9116-39f3e66326ba",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d576c39f-de31-4abd-9e19-2e089eb34a1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d2761b-bae5-4e15-a9d1-9536090ad609",
        "cursor": {
          "ref": "f192d1d5-0f9e-4045-8248-97010f429517",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "77a87cbd-3d6b-4f83-9b62-69ac6c618b91"
        },
        "item": {
          "id": "56d2761b-bae5-4e15-a9d1-9536090ad609",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "af4c1124-fb80-44cb-8d4f-c16cbd1519a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea5761d-6f3f-496e-9056-4e3c8ee4967d",
        "cursor": {
          "ref": "2dc563bf-55a5-46cf-ad95-07dd73307967",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "1a5cd815-b76d-4769-8a8c-af7b79bea840"
        },
        "item": {
          "id": "aea5761d-6f3f-496e-9056-4e3c8ee4967d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8c2938df-6525-4c8d-87b6-3367a3dc7311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b66d4696-322e-4d47-891e-2473513b1d88",
        "cursor": {
          "ref": "354f2445-9b80-4ad8-add3-d5eb2276c0f2",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "6caad651-6545-4ae4-8c03-c5071b0ebeba"
        },
        "item": {
          "id": "b66d4696-322e-4d47-891e-2473513b1d88",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e91469f0-7f5e-43ab-8b5a-48dc6c5bbf3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf4e77a-86fd-43f5-bce4-861769442e61",
        "cursor": {
          "ref": "bf0479ee-107d-4fd5-80fa-283bd0978913",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "501138c4-5f9a-4883-a5ea-28121aa6f4a4"
        },
        "item": {
          "id": "bbf4e77a-86fd-43f5-bce4-861769442e61",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e173fe8f-7c06-4ee5-a82b-51594a6a7ed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b5d7359-172a-48c1-ad44-af4c47cf3eb9",
        "cursor": {
          "ref": "70df45c4-a8b8-4457-a141-3d9a68acfc04",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "71e51509-aded-43d9-a65b-c05eb05aee3f"
        },
        "item": {
          "id": "6b5d7359-172a-48c1-ad44-af4c47cf3eb9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "637b25a9-854c-463f-8ac6-65a43e1d01b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9135ab87-d518-43f3-a35d-615b5b947e5d",
        "cursor": {
          "ref": "411ab31d-e674-4ba2-b6aa-c52a5ed1b0cd",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "32ff712e-06a5-455b-a772-f6cccd521077"
        },
        "item": {
          "id": "9135ab87-d518-43f3-a35d-615b5b947e5d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b88848cc-eafa-47e8-93f5-7c442767944a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b6f30a-3cde-4763-88ca-df278a00ab7a",
        "cursor": {
          "ref": "67939580-3295-411c-a059-da71542416ab",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "be8f464d-0b2f-47ad-b129-9baa10beb5d7"
        },
        "item": {
          "id": "63b6f30a-3cde-4763-88ca-df278a00ab7a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "36ef653b-e251-4d3b-a680-2f405a61ea70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46731e5d-d71d-4ddb-985c-78663595ef94",
        "cursor": {
          "ref": "aea1651e-3fa8-41fc-bfd5-7129d1d2b984",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c292c330-a192-4180-84d0-30d21c7e9d9c"
        },
        "item": {
          "id": "46731e5d-d71d-4ddb-985c-78663595ef94",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ba404522-bd1e-43a7-a7a8-48d527c0f1ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f3015e-fba9-49a0-aa11-16296e3ea827",
        "cursor": {
          "ref": "2da4da1f-d5ac-4d63-9b90-8bd73e033947",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "41587e8f-667f-4b64-917e-1edca0efb5ba"
        },
        "item": {
          "id": "99f3015e-fba9-49a0-aa11-16296e3ea827",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4ff25b0b-b622-4239-9505-77fd7bfd0199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6505299e-e8be-4405-85a2-52a352169a87",
        "cursor": {
          "ref": "2ebe6295-be7c-46ff-af9e-05d37a4064ad",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f0321a7d-874b-406e-a380-eb62c02c5c8c"
        },
        "item": {
          "id": "6505299e-e8be-4405-85a2-52a352169a87",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "133b7525-8a1b-486d-874e-9fb0eeb840cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcdd9fdc-55cd-4e07-b843-346d8d0af35e",
        "cursor": {
          "ref": "3823a60a-7fe7-46ca-9653-d830a5b19ce8",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "2a30ea5f-eebc-44eb-86e7-855c4e05b97e"
        },
        "item": {
          "id": "bcdd9fdc-55cd-4e07-b843-346d8d0af35e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "df9e20bd-1c8a-4561-9f37-9021e2abac7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe18f7de-e3df-415b-ad19-51131c00a0e9",
        "cursor": {
          "ref": "a88b30fe-92c2-43ec-90ee-f2a28dc0016c",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "0fd5ae6e-7385-4e57-9610-7447bcac8657"
        },
        "item": {
          "id": "fe18f7de-e3df-415b-ad19-51131c00a0e9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4b8d176c-6732-4f4a-99af-ff563c084be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8def9473-7f8c-481e-bd09-6de36473035d",
        "cursor": {
          "ref": "fb162a75-1488-4911-a2f0-d6f17c38709f",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "2e5d01d7-a8b1-4f48-aa87-edc5aa4e0228"
        },
        "item": {
          "id": "8def9473-7f8c-481e-bd09-6de36473035d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "046d59f9-0053-409f-ada3-82e2fc9bc093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f319f8-f301-4aad-8445-5bcd1e98b961",
        "cursor": {
          "ref": "70cf5125-af47-4565-8c1f-adbe5a50f521",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "5bb95c72-7451-44cc-b60b-be934340eeba"
        },
        "item": {
          "id": "52f319f8-f301-4aad-8445-5bcd1e98b961",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e4d0bd3b-2daf-4aaa-a0f8-72fac10535f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af79368-af61-4c14-bc8a-7e96250b8cb1",
        "cursor": {
          "ref": "13dff1ac-fea6-4efa-89ab-6efa0817dae9",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f66e3564-bc6e-4863-8b7c-2d60854df7f7"
        },
        "item": {
          "id": "1af79368-af61-4c14-bc8a-7e96250b8cb1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ea960e86-0806-428f-b7a7-7799bf7a67a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1720a687-a546-4a2e-b864-831c07f98196",
        "cursor": {
          "ref": "65f1058a-3bea-4c53-8f6b-b6d34e3cc5e9",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "9a37957a-72e2-41fa-a5f2-bb37748d71e8"
        },
        "item": {
          "id": "1720a687-a546-4a2e-b864-831c07f98196",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "28160127-532a-4257-a5f3-99ad7a21e62b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e02c4ee-acc1-45ae-8327-c915f05d9427",
        "cursor": {
          "ref": "f8d26bdb-e315-4452-b007-3a3d4e11740f",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "27ff6a2e-723a-44cc-9a0a-990203681796"
        },
        "item": {
          "id": "3e02c4ee-acc1-45ae-8327-c915f05d9427",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8f3c77c9-cc0d-4374-97aa-ba079a994a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0080df8a-b845-45bc-bd22-874a34010d3b",
        "cursor": {
          "ref": "982ea6e2-4cb2-4d8f-9826-c63b0e40feb5",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "aa3816f3-82b2-47a4-9bb4-c5bfa407fe5e"
        },
        "item": {
          "id": "0080df8a-b845-45bc-bd22-874a34010d3b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "196b7c29-7206-4fae-bc46-876bc4fe27c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb91004b-05a0-4473-9b4f-111ac4facf31",
        "cursor": {
          "ref": "44768141-6e90-4c06-8170-fc616c897a42",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "3d611920-8a2e-4555-88bc-b4030cde8876"
        },
        "item": {
          "id": "eb91004b-05a0-4473-9b4f-111ac4facf31",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "04eaa83d-d701-4338-b520-98fa43a405b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c7cc24e-d90a-4ada-bd7b-a0aa699215c7",
        "cursor": {
          "ref": "aa43d89e-1935-4c07-a2aa-fbfeba5ffc59",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "0669b69d-b8ef-4d19-a8ec-786e361016d7"
        },
        "item": {
          "id": "4c7cc24e-d90a-4ada-bd7b-a0aa699215c7",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c8519960-9b0a-42d9-a5d0-bf42b86216ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2dfe5d-b95d-4518-bf04-d79161f9a83c",
        "cursor": {
          "ref": "2e5e15d4-2cc7-43bd-a90a-22a647721079",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c62b950a-8075-4f88-8806-ac2fc980063b"
        },
        "item": {
          "id": "aa2dfe5d-b95d-4518-bf04-d79161f9a83c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6fcc821e-52ed-454e-a11d-ab8b420579e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51053bff-f51e-4ef1-b0b5-f540bf91b608",
        "cursor": {
          "ref": "c05800df-e7fe-48d1-afab-76866278f317",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "fecffd90-8ef3-4540-894b-434a09dfcb76"
        },
        "item": {
          "id": "51053bff-f51e-4ef1-b0b5-f540bf91b608",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "225e4e1e-a163-4c9b-8596-87d6db93d8ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f05a45ff-a2e5-4a6b-ae28-d646b4baf973",
        "cursor": {
          "ref": "e156bb78-1648-4a15-8cfa-287259d60157",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "977f71d9-344a-4518-9f24-05b248bd02ba"
        },
        "item": {
          "id": "f05a45ff-a2e5-4a6b-ae28-d646b4baf973",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a0f8305c-5091-4c26-9ade-a85e6a89f4df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b90602b-4104-45c5-adf3-26b4f5b398c9",
        "cursor": {
          "ref": "605ddfa4-da85-4fb1-a479-5a243ae2ce49",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f8f7f581-e21f-4b80-93ae-b0372953e900"
        },
        "item": {
          "id": "4b90602b-4104-45c5-adf3-26b4f5b398c9",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7b4e9af0-34f3-487a-ac8b-771e71f6da47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78830e47-30e8-4d24-9a32-f5c342e26a94",
        "cursor": {
          "ref": "a7bcd5c4-2350-420a-a687-b2d38bb0cea8",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d26e0a84-0af7-482d-9ff4-8c53e1ebd714"
        },
        "item": {
          "id": "78830e47-30e8-4d24-9a32-f5c342e26a94",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f9aba570-c3ef-4806-871f-1f61541264ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa7d448-209c-477c-aa5b-3cb6eef4c724",
        "cursor": {
          "ref": "3ffc6d0f-b51c-4cf1-b73c-be785a7fad44",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ded5958d-3b46-4278-a16c-621feb60d662"
        },
        "item": {
          "id": "afa7d448-209c-477c-aa5b-3cb6eef4c724",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "faafb400-86e4-4034-93f8-865cfada2a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b53ebd61-24b5-4a8b-b72b-cfb53ac4862c",
        "cursor": {
          "ref": "31c04529-2c15-4f4b-9bda-f26ec1946b11",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ff18ff91-4400-4cef-a39d-6c81e83c4630"
        },
        "item": {
          "id": "b53ebd61-24b5-4a8b-b72b-cfb53ac4862c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "22e337d4-abe1-43c7-9492-85dc3ca5613d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e68ef7c7-2119-4528-9b34-172ba7a6e3a6",
        "cursor": {
          "ref": "575c7912-63e1-4856-9fa2-2c5e06627311",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "96653849-3375-456e-9d3a-74099de67b64"
        },
        "item": {
          "id": "e68ef7c7-2119-4528-9b34-172ba7a6e3a6",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "2d19ca55-44ce-4fbf-a17d-ab6aaee30f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d0c7528-e93a-42cb-a2ac-837193041108",
        "cursor": {
          "ref": "c95f420b-22e8-4202-b411-428260a45b41",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "2cd343cd-079a-443b-8c81-ecad592d403e"
        },
        "item": {
          "id": "1d0c7528-e93a-42cb-a2ac-837193041108",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ad33bdc8-16de-4f47-8a36-164ea4dead6e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d0f9e3f-0ff4-4125-b3d3-6a5821bab380",
        "cursor": {
          "ref": "32795874-af18-41bf-88dd-12d27d40ca70",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "1c7ae3e1-e6d5-4450-af18-73f85b8dbf44"
        },
        "item": {
          "id": "2d0f9e3f-0ff4-4125-b3d3-6a5821bab380",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ed9c90a5-b49c-4814-9b20-4480f6b4ddcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea0e6d78-bca5-4543-9674-1ba86e89fb66",
        "cursor": {
          "ref": "518a0898-92b7-4256-9fff-efa46038b10b",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "513df925-b5e7-4e33-b47f-8f44be610731"
        },
        "item": {
          "id": "ea0e6d78-bca5-4543-9674-1ba86e89fb66",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "401bf832-26bf-4296-a444-7bedf12a172a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae70b9fe-033f-46a2-8da4-10f23c65b22b",
        "cursor": {
          "ref": "9bdae547-30b2-4d80-976f-70c8e089a9cd",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "25adfaeb-7754-4a15-b46e-48ddacb911af"
        },
        "item": {
          "id": "ae70b9fe-033f-46a2-8da4-10f23c65b22b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3b33c3e3-f265-456a-a524-81b043ee4fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "079e01e3-9d2e-4968-897b-aa20e2232449",
        "cursor": {
          "ref": "a986eb5c-46ce-45f5-9f78-72849eb5d08a",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "bdddf919-2396-4c8a-b847-c8a765f9136b"
        },
        "item": {
          "id": "079e01e3-9d2e-4968-897b-aa20e2232449",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b1f9faa4-cdd0-4763-8305-fd7216fc9e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0894ed4-9a4b-408c-9551-9702e1d35cdb",
        "cursor": {
          "ref": "3f0e1378-5b60-439a-a610-d837d067c76a",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "86dee346-a569-415d-a41a-c3ad86d31491"
        },
        "item": {
          "id": "c0894ed4-9a4b-408c-9551-9702e1d35cdb",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "52ee8362-8dd4-4414-8c67-62c52c1bf23a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cda66c2a-9241-47c6-aece-69bf0682b92a",
        "cursor": {
          "ref": "575f7f6f-24f9-4e50-b3d0-976a93863e9e",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "919857fd-f67b-4816-91e1-bc5cb42e5729"
        },
        "item": {
          "id": "cda66c2a-9241-47c6-aece-69bf0682b92a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e5f978ca-c916-438f-a308-9cc68a178b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72fd5d75-a413-4552-a113-7ae267b98da9",
        "cursor": {
          "ref": "d303c08d-8dc8-4c2d-b1e2-2622e7efaa3d",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "31f8bd6a-57b9-41ff-8eaf-53ca77ea7c71"
        },
        "item": {
          "id": "72fd5d75-a413-4552-a113-7ae267b98da9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f029a0f9-3b1e-45f7-ac19-6289143c8b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf22735-e702-4025-925a-79161dd0713b",
        "cursor": {
          "ref": "6308da2d-073c-43e2-961b-686abf725c7f",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "863a1495-8096-4f8a-a5b4-fbe06ea0c3e4"
        },
        "item": {
          "id": "dcf22735-e702-4025-925a-79161dd0713b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2bdd23ab-df1c-49e2-ba34-3651859b372e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "661b98a3-4b5b-4cf3-86b1-48493bb89306",
        "cursor": {
          "ref": "797a8988-bd79-45cc-aee2-86d3764f04bf",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "47e962d3-c9e3-42e4-8a58-1d8ecab11a89"
        },
        "item": {
          "id": "661b98a3-4b5b-4cf3-86b1-48493bb89306",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "64e1dcfe-1091-49ab-ac15-1bc40c1ea669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5101a7a-e477-4c22-beea-d8cafac27f11",
        "cursor": {
          "ref": "9b6b5dbb-2916-4e41-b17e-9933d0fe4883",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d063a34e-6d3c-4acc-be8a-61fd44292be2"
        },
        "item": {
          "id": "b5101a7a-e477-4c22-beea-d8cafac27f11",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b0d37bec-962a-4754-9e88-16966714bde8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4a0c95-a619-4703-aaa1-68a601bd31ca",
        "cursor": {
          "ref": "0b3b6d99-96a2-49dc-aff5-ba41f97169f8",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "1c3cca9c-b08a-457c-b457-28fc50473e7e"
        },
        "item": {
          "id": "af4a0c95-a619-4703-aaa1-68a601bd31ca",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "eee6f6a1-483b-4655-b3eb-2b532ba7af79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3879fb5d-4cc4-4ca2-ab7b-4cdabc0bef53",
        "cursor": {
          "ref": "fc6bbfd2-1278-4c18-b89d-ab24fe8af91d",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "5bd559da-f24d-4f15-ab13-2970e9ce9a1d"
        },
        "item": {
          "id": "3879fb5d-4cc4-4ca2-ab7b-4cdabc0bef53",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c7d73e26-8890-4d02-84f5-3dfa2e6ebed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1776a9-9e57-4e61-a2f0-01c78b3d9956",
        "cursor": {
          "ref": "41c30964-8899-415b-81e7-9244a12005eb",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ef06c53e-736b-415e-9bfd-3ee5493616a8"
        },
        "item": {
          "id": "ed1776a9-9e57-4e61-a2f0-01c78b3d9956",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a05f61ac-3d29-4d45-a050-a51408dd1801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2378ea99-4e1d-4cad-9ec6-d38858da487c",
        "cursor": {
          "ref": "108fc879-dd4b-41b8-8495-27b189156dda",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "2027f4a2-8132-4bb1-9bf0-520ee0872f9b"
        },
        "item": {
          "id": "2378ea99-4e1d-4cad-9ec6-d38858da487c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "548fd24f-46fc-4f6d-b225-65852cb8c02c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff6fb14-6990-43a0-94b7-12719b400850",
        "cursor": {
          "ref": "68da045c-fbe5-4c30-a832-19a630d3b692",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "68a5cd56-15f5-4424-a72e-dd1524d2eb41"
        },
        "item": {
          "id": "2ff6fb14-6990-43a0-94b7-12719b400850",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "36f09d7f-24fb-4af0-b253-c58149449aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ce33d8-4b0d-4bdb-bf78-88abec655502",
        "cursor": {
          "ref": "5d0d4d31-3831-4758-9ac7-b02c9c4b13f9",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2ff0b9c0-55b9-42be-87a7-01cc47a822b7"
        },
        "item": {
          "id": "71ce33d8-4b0d-4bdb-bf78-88abec655502",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b0f531d1-c29a-4ecd-87a3-de646574fdf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21614b7d-d1bf-43b3-b2e7-f53f06c6c473",
        "cursor": {
          "ref": "615a2e0d-9360-4cbd-b10e-0d4a93fadbe5",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "85b799c5-a798-4652-982b-72c2c43c6939"
        },
        "item": {
          "id": "21614b7d-d1bf-43b3-b2e7-f53f06c6c473",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "17635ba6-ebf5-4ea9-8cbb-4250a1fe86b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d46ef1e-ebf9-4218-83de-ae42d2d03646",
        "cursor": {
          "ref": "3b159320-083b-42d2-837a-8a048c444a1e",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "4ad4c05d-b072-4b2d-abe3-0c7fd192547f"
        },
        "item": {
          "id": "7d46ef1e-ebf9-4218-83de-ae42d2d03646",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "00a97d2e-96ac-4ebf-b603-b1bf87eb26ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "368c4296-773a-484a-ab06-fd32d9f4ed71",
        "cursor": {
          "ref": "f17337b1-ffee-4f0f-ad41-c3a813796572",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "92587a8d-b4e5-449d-bc92-4d42338cb577"
        },
        "item": {
          "id": "368c4296-773a-484a-ab06-fd32d9f4ed71",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4aa471e8-d551-4c4b-81d1-1433a85a7876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad0c48a-d641-42ea-a87e-5ea04d429667",
        "cursor": {
          "ref": "d96cc045-21d6-4dcf-9db7-a7ff44ca639c",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "dca0fb16-48b4-421e-8df6-42d56d35b862"
        },
        "item": {
          "id": "9ad0c48a-d641-42ea-a87e-5ea04d429667",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "885233ae-47b7-46e9-98c0-0b4d714b8212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f69c26-c05f-4eee-aca2-60b429a75050",
        "cursor": {
          "ref": "5943a599-2f2c-4870-ba25-e0ca08703ab0",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "c308b8d2-eb3e-4ced-b2e7-9d007d7b761a"
        },
        "item": {
          "id": "73f69c26-c05f-4eee-aca2-60b429a75050",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "81c0c5ae-cf84-47b4-bfcb-6d58a0f8beab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a90d63e2-0ae8-47e4-9942-74d8ddbeabb7",
        "cursor": {
          "ref": "f2b01927-8cc1-45f1-bd6c-4b5785e2d3dc",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "7bae21f2-682e-460a-aaa8-f3a25bf8be41"
        },
        "item": {
          "id": "a90d63e2-0ae8-47e4-9942-74d8ddbeabb7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "98230bc2-1f85-4153-a7ff-c4f670f9ecf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5690299c-9cee-4b63-a780-f7ae391cc084",
        "cursor": {
          "ref": "96272fff-b8ce-4ed1-b58c-50e95727b7ca",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "5498deec-646b-4826-a44f-ac3a35ad6b36"
        },
        "item": {
          "id": "5690299c-9cee-4b63-a780-f7ae391cc084",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b09b1bdb-1d24-48fe-8210-a403b5ff5049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5274ddd-5db6-458a-b3bf-825d578f93e9",
        "cursor": {
          "ref": "f592f424-a88b-4f2b-827f-a18ddd4819a2",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "0871df54-bea0-4e2b-b1b4-264e493fbc44"
        },
        "item": {
          "id": "b5274ddd-5db6-458a-b3bf-825d578f93e9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0c441171-120c-4598-aa44-a3777ff47bbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd32d074-93d1-4215-afe9-15c1b524d071",
        "cursor": {
          "ref": "234dfa0c-d0f4-4d65-9ed7-20370624a5e4",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "71f17b44-12e1-4a47-854b-2b0ac24d0b67"
        },
        "item": {
          "id": "bd32d074-93d1-4215-afe9-15c1b524d071",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1639261e-02c2-41c2-9b7c-5827d3b9e2a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b3e2e29-7c95-47dd-982d-c72240f78695",
        "cursor": {
          "ref": "22837f19-2a0a-4721-96bc-226a387252f0",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a0d9bc51-6861-4210-b60e-05be33a82461"
        },
        "item": {
          "id": "8b3e2e29-7c95-47dd-982d-c72240f78695",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a3aaf525-c347-42b2-87cb-94c840985b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48604560-7fdf-4374-8930-22762952b58f",
        "cursor": {
          "ref": "6e4296fe-7387-4eb6-8dd7-9b45845bd283",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f7f05fd2-ea73-44b3-ace4-65a982609118"
        },
        "item": {
          "id": "48604560-7fdf-4374-8930-22762952b58f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e30bc093-bb79-4a51-a931-8ddf9ae39840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bedfd3fe-a41c-4d6f-880e-091987f7a353",
        "cursor": {
          "ref": "426690d2-426b-4fca-aefc-bbf99f7e6fb0",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0acb307c-b6fa-44e5-b038-6ed7af0c0162"
        },
        "item": {
          "id": "bedfd3fe-a41c-4d6f-880e-091987f7a353",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "20e95e33-19e8-4978-8baf-ee8a3147df9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04903817-3e23-4723-b922-5ef20884cc08",
        "cursor": {
          "ref": "e6d48c90-56c3-4112-9b16-f939012a250f",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "22c57dee-d8f7-42d5-ada5-45a2527f8553"
        },
        "item": {
          "id": "04903817-3e23-4723-b922-5ef20884cc08",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "aa8f708b-0305-48f4-bdbd-4d433350efd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31629764-2f83-48b8-9505-371266e4146b",
        "cursor": {
          "ref": "e176823b-b78a-40d4-94f5-0e52d7bca36e",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "858b5a6a-f8ba-434d-afb8-e90744842c2c"
        },
        "item": {
          "id": "31629764-2f83-48b8-9505-371266e4146b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "691c8d64-a60e-457e-bef5-eb80364d1b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a7c945-ac94-43bf-b499-21f2a1b1bf0f",
        "cursor": {
          "ref": "fa6fc409-04cb-4239-9b92-7760c7353038",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "374e1e2b-7315-4cee-b775-bfa8aa8f11ee"
        },
        "item": {
          "id": "40a7c945-ac94-43bf-b499-21f2a1b1bf0f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9d34108d-7a38-4a27-92a3-cadca33ac963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5ccbee7-8f7c-4f83-930a-cb7ad9b98a3c",
        "cursor": {
          "ref": "73fdf56f-a59c-43c7-8504-71323aff6908",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7c7f6e8b-47ec-4d4a-be93-a1b16020331a"
        },
        "item": {
          "id": "b5ccbee7-8f7c-4f83-930a-cb7ad9b98a3c",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "5c2312ee-c8af-4629-8fa1-afbd9968e39a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6065dd7f-f972-49e1-8aa5-aaef0b1e880b",
        "cursor": {
          "ref": "dd673b55-be0f-4e8a-8bf2-ee6bb86d9e50",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "173258f0-836c-4e53-bce1-e4daf98a7873"
        },
        "item": {
          "id": "6065dd7f-f972-49e1-8aa5-aaef0b1e880b",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "e7b8e94d-697a-46ff-aa79-0d981257768f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1fe5f4e-a6e6-494b-a7cd-97b327759873",
        "cursor": {
          "ref": "ad785c5a-d15c-417a-b122-cd7df920309b",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "0e4aa674-5408-4ec8-9fe1-0eba84db8a93"
        },
        "item": {
          "id": "a1fe5f4e-a6e6-494b-a7cd-97b327759873",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "dd5d7b90-a3c1-4176-bd7a-5048b7caf729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccca1658-7613-46fd-a735-2e1359c1a75b",
        "cursor": {
          "ref": "759dff3b-e330-4135-9fb0-df58e13d8fbe",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c25e2dff-6cf8-4eac-8cf6-ec090a4d6031"
        },
        "item": {
          "id": "ccca1658-7613-46fd-a735-2e1359c1a75b",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "7366faed-b653-46f8-a203-48de7a0c3467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd5372c-a103-4bf3-8a5d-35595dcd8192",
        "cursor": {
          "ref": "2392e1df-1303-48e4-b7ee-f38caa2fe9d9",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "090ba2e5-6680-4545-bcca-5f7b4786a652"
        },
        "item": {
          "id": "afd5372c-a103-4bf3-8a5d-35595dcd8192",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ad0be93e-bd5d-47b9-bb0e-b0e05fcc816e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65073e86-2b6a-479b-a175-759bbf66135e",
        "cursor": {
          "ref": "1db36af9-bef9-45df-985f-0587ca0ed40b",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "4ed27f08-021e-45fd-91fd-454e05d4537c"
        },
        "item": {
          "id": "65073e86-2b6a-479b-a175-759bbf66135e",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "22668122-71ba-43f9-8182-07efb98b674d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fcd9d30-cbd7-4e49-8f12-f90eb04ee723",
        "cursor": {
          "ref": "bbc620b0-67f9-4801-9f71-b38b71717e0b",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "20789967-ccd7-4219-85c7-4a7e1ab6a3f2"
        },
        "item": {
          "id": "2fcd9d30-cbd7-4e49-8f12-f90eb04ee723",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "de305c84-1807-4689-9056-e2ff74474c40",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f7da0b0-2a4f-489e-ae2d-3e00bd3cc27e",
        "cursor": {
          "ref": "f267f90c-b459-4a44-bc90-c213b5828e8e",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "983023f5-3f37-4dd1-9660-81305a2a881b"
        },
        "item": {
          "id": "3f7da0b0-2a4f-489e-ae2d-3e00bd3cc27e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d24c01c9-ec20-4d99-bfdc-a38464ae476a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a72fe13-ead3-45a8-bb21-7ff9088785d3",
        "cursor": {
          "ref": "f27b4ca0-16f3-4d3b-ba7e-3c3fd0e63601",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "13b1bd5e-ee25-4e10-b48d-8fad57ef2f75"
        },
        "item": {
          "id": "8a72fe13-ead3-45a8-bb21-7ff9088785d3",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "71f30a85-b5f4-4cbf-abd0-b46a29902b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "769b47dd-f376-4c86-91d3-b07ec132c8d5",
        "cursor": {
          "ref": "cac77cf3-3cd5-4774-b9bb-4df4025b9188",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "23eefbc8-27ba-4000-9ade-7b5cab88c48a"
        },
        "item": {
          "id": "769b47dd-f376-4c86-91d3-b07ec132c8d5",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "191188d4-75c7-47a2-bf51-7cd6a6341d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d583bfde-19de-4a6d-9275-49e1411d831b",
        "cursor": {
          "ref": "fc38aed2-95e7-42bb-9e5f-5341eaac84bb",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "61a1d2ae-6637-42bd-a9d8-84ab130e2cc7"
        },
        "item": {
          "id": "d583bfde-19de-4a6d-9275-49e1411d831b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "ddac4ccc-7e21-4e2f-bd94-b8bbb317a047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf5a7c5-cbca-446c-82e7-b53eae55b66f",
        "cursor": {
          "ref": "3d1a986b-846f-4c9a-a8db-a308bf268e39",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "f78c3243-2012-4536-b572-c8bc4647301b"
        },
        "item": {
          "id": "1cf5a7c5-cbca-446c-82e7-b53eae55b66f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "b78e2a3b-2084-4178-82c2-bcb244637933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0203ce5-2521-4058-b4e4-0c9f13444f86",
        "cursor": {
          "ref": "80e28d03-1230-4bd1-894d-8d324b02a446",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "70e2adda-07b0-473f-ad73-b6db44887cff"
        },
        "item": {
          "id": "f0203ce5-2521-4058-b4e4-0c9f13444f86",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "4c49bbbc-32dd-49bd-8309-917fbda4d963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b197cd6f-29e0-4b39-bceb-787cc4c4233d",
        "cursor": {
          "ref": "4dd56275-c63d-4760-a528-d10b1722288b",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d2385250-3bd4-4c84-8eae-58632fcb8474"
        },
        "item": {
          "id": "b197cd6f-29e0-4b39-bceb-787cc4c4233d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "0e7e2d8b-fabf-43af-83e4-6bef835ba308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cad557b-db04-4adc-b6b8-5c809a9deebb",
        "cursor": {
          "ref": "35ee740f-ce40-4325-9b7a-61b6e5feb544",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b41d81d9-dbd0-46dc-8e95-65f929a850b8"
        },
        "item": {
          "id": "5cad557b-db04-4adc-b6b8-5c809a9deebb",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "cbb5d36d-94c1-4a00-b614-66621c305471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d820cf3-fdd4-459a-a369-59e25000c2b6",
        "cursor": {
          "ref": "a41b43bd-17d7-48e1-83bc-5d8221ce15aa",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "0e7e8d67-1989-4ef2-a6ae-8d4a5c62e1d2"
        },
        "item": {
          "id": "7d820cf3-fdd4-459a-a369-59e25000c2b6",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9bceae91-2da5-4676-a945-90bf0bcf98ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ceb461a-2e68-437a-b57d-d94aa1137ebe",
        "cursor": {
          "ref": "e52e38ef-5016-472c-8306-801ccee2c765",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a61d7cc6-ea6b-48b2-870c-b627d482c70b"
        },
        "item": {
          "id": "1ceb461a-2e68-437a-b57d-d94aa1137ebe",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "6a2a3262-2638-4eed-bc0c-dcc6e15359f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d008272-40dd-4672-aef2-88ede45a5bba",
        "cursor": {
          "ref": "41fd30d3-6ed2-4439-862e-400e9c8340ca",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "88cb5251-14a5-472d-a496-1a8127e8c5f6"
        },
        "item": {
          "id": "6d008272-40dd-4672-aef2-88ede45a5bba",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "0d9aecb0-b792-4a46-be1d-39765fed2c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd7d215d-4541-4c88-87a7-1996635b3951",
        "cursor": {
          "ref": "93a41d6f-33e5-491c-9de9-76e2f1475ed6",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "8da0cfc3-dda5-44bf-907b-d6f67a5f49cf"
        },
        "item": {
          "id": "dd7d215d-4541-4c88-87a7-1996635b3951",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b0198fda-8f49-4ced-86af-e44f871ec013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d18d76f-16c8-4d9d-a186-733635667c0e",
        "cursor": {
          "ref": "39f31c87-5e93-4fa5-92c7-12d6d6330392",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "af691bf5-e1b4-4793-b364-a30f8fb40824"
        },
        "item": {
          "id": "3d18d76f-16c8-4d9d-a186-733635667c0e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a5275f60-2e99-479e-8be0-f1d79c4e4614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec5ae2e-53fc-488a-a6b2-45ff9696cb25",
        "cursor": {
          "ref": "123e352c-4664-4190-9f0c-ae041ae81737",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a7e37afd-ac1d-4865-b844-b81e841b3d9c"
        },
        "item": {
          "id": "5ec5ae2e-53fc-488a-a6b2-45ff9696cb25",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "2c9864d6-0eb6-400d-94ed-5dd0a1d79b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6683a07f-e8eb-4ef8-8fec-265617c4f2d3",
        "cursor": {
          "ref": "0ccda5f6-dd6c-4bb5-a719-f58318cf359a",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "fb9777d2-0512-4e13-ab01-24fc89aa674c"
        },
        "item": {
          "id": "6683a07f-e8eb-4ef8-8fec-265617c4f2d3",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "23a81c14-b8e9-4687-ba47-69d5a85794c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ee829d-481c-4d02-801b-6cea3ecfaa50",
        "cursor": {
          "ref": "8b15a684-969f-4681-bc7a-6648daadeb09",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "de7895a8-434b-4a93-85f3-73d960ae2c56"
        },
        "item": {
          "id": "13ee829d-481c-4d02-801b-6cea3ecfaa50",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "8b6dd6d9-a63a-4bd6-a40a-76c506db5e3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "233dc606-066c-4608-aaa5-bcea2e303a7f",
        "cursor": {
          "ref": "b78711a7-068e-4fe2-be19-225cb2610adc",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f56cd548-57c8-4f37-95e9-8e357a7c1e00"
        },
        "item": {
          "id": "233dc606-066c-4608-aaa5-bcea2e303a7f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "34c3bb97-e6ba-42a0-a50b-420ec078aa25",
          "status": "OK",
          "code": 200,
          "responseTime": 229,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "14a5f309-f02f-45b4-a196-7143508c2aa4",
        "cursor": {
          "ref": "07493d9c-cda3-46e8-b84e-249877a70789",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "be555bc6-129c-4db5-ab01-f1fd2567cf92"
        },
        "item": {
          "id": "14a5f309-f02f-45b4-a196-7143508c2aa4",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "0e3230a7-4417-40a3-b6a1-1c2c9055acda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e06770-c20f-4a2b-b8b5-0b68acec9d54",
        "cursor": {
          "ref": "3812aa2a-bfc5-4fac-a241-aacf5f142c2f",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c4112f87-27d9-4c8d-b559-1bfdfca74d1e"
        },
        "item": {
          "id": "03e06770-c20f-4a2b-b8b5-0b68acec9d54",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "6fde8e0a-bdd2-4c3a-ae09-1934f2a0f9fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd1f8340-53a0-40fa-9005-14f30a5987af",
        "cursor": {
          "ref": "c80501ff-6c57-45c6-ab65-cb2e0ba94763",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "004e553c-0d45-4b61-91a2-bbdf4468160f"
        },
        "item": {
          "id": "bd1f8340-53a0-40fa-9005-14f30a5987af",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3e2533ab-b36e-40e6-87ec-845a531cacaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e383ce1-80de-41ba-92f6-5f55b256ed6c",
        "cursor": {
          "ref": "892b002e-3c64-4844-9c2e-600ea6a1ea38",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "4fd4d4cf-df85-400e-b21e-d65b12465e44"
        },
        "item": {
          "id": "5e383ce1-80de-41ba-92f6-5f55b256ed6c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "ec3e59ec-a0c4-4833-a229-bb9bd28cee35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57bc554d-9ee2-405a-9d04-96b3d075035b",
        "cursor": {
          "ref": "2b679eaf-c25c-49bb-987e-162f4e58f322",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "bb5bfd99-e4ed-4b12-a5a8-f66fcb8aaa89"
        },
        "item": {
          "id": "57bc554d-9ee2-405a-9d04-96b3d075035b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e1508ab5-6eb5-457a-8848-d0416e029781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64476bf3-cc8a-4361-a0d3-28fee2a32526",
        "cursor": {
          "ref": "95e74ba8-15ad-40ba-9824-c8d9899ca765",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "4e3e3a48-074e-4912-9958-bea1f0e4b22b"
        },
        "item": {
          "id": "64476bf3-cc8a-4361-a0d3-28fee2a32526",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "931832ab-91d3-47af-8ea2-88920fc732ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f99e196e-7f9b-4907-8210-e7bd11ac3e0b",
        "cursor": {
          "ref": "9aee35af-5fac-4259-aafa-5c701c87dbd5",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "76425011-6665-4096-9852-02232a20bd95"
        },
        "item": {
          "id": "f99e196e-7f9b-4907-8210-e7bd11ac3e0b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "caa5ef4a-2ce7-4938-8225-5095553e7eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c83d8b2-bfdd-450a-b0f0-a0b778439006",
        "cursor": {
          "ref": "3aefbff7-2092-4bde-bdcc-f122bcff1f3c",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "8177851c-9c57-48cf-87b5-fcd97618e11d"
        },
        "item": {
          "id": "0c83d8b2-bfdd-450a-b0f0-a0b778439006",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "3dd30d68-54c5-4aef-bfbf-66ea3ffac74d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0fb8e5c-e26a-401d-8fe2-e42a17084f01",
        "cursor": {
          "ref": "9d483c6f-0321-4974-b811-962c8623b6ff",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "08306e9e-cffe-4a43-a908-25518619835e"
        },
        "item": {
          "id": "b0fb8e5c-e26a-401d-8fe2-e42a17084f01",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d551c57d-6574-48df-93fc-ac3c974addd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "936240b9-8e5c-446d-95aa-2a39d55fb26e",
        "cursor": {
          "ref": "98f1c556-0869-4fe7-958a-41a103a2d27c",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "6ae311ae-5a8e-4357-8ec6-a44060658dd4"
        },
        "item": {
          "id": "936240b9-8e5c-446d-95aa-2a39d55fb26e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5e8c2823-7bba-4b72-8706-3c60293ec7ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2110a5d-8c6c-4588-912e-3f3080445460",
        "cursor": {
          "ref": "d1602756-2a1a-46c5-878c-2a5c53e39778",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "253d611b-8657-4b68-84c7-1039fbd9c65e"
        },
        "item": {
          "id": "d2110a5d-8c6c-4588-912e-3f3080445460",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "92b970a0-33f2-4ff2-ab4f-a86b4d1638ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8707b7d-bd9e-4d15-a627-4a7b726c3567",
        "cursor": {
          "ref": "75ddc106-65bc-468e-ac30-c1d40887238d",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "ed4ee124-56c7-45ac-b17b-4db45473eec3"
        },
        "item": {
          "id": "d8707b7d-bd9e-4d15-a627-4a7b726c3567",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "496c961a-414f-4572-91f6-7ad979f3b25e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "023548fe-fc0b-4421-a9d2-b0b8ebda911a",
        "cursor": {
          "ref": "92788ce1-b5db-4bc5-b397-5cab03f2d5fa",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b4fd28e9-9d3f-4fc4-97af-cd6168e04dc5"
        },
        "item": {
          "id": "023548fe-fc0b-4421-a9d2-b0b8ebda911a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "690e45a7-2dcd-429a-b949-97ae9debb1f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edbd279b-c722-47d1-848a-f2b347f3f1d8",
        "cursor": {
          "ref": "1834316a-6bd2-470a-8174-14ed1bc9fa3a",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "083c852a-1e9b-4efc-bf5a-615324f48529"
        },
        "item": {
          "id": "edbd279b-c722-47d1-848a-f2b347f3f1d8",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c6c5f433-ca34-4a24-a944-e1910f90acb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82bc5afe-9b78-4bce-a48a-b628f637066a",
        "cursor": {
          "ref": "e7350bf6-6a23-4945-8cdf-729393186756",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ee32213a-aa34-4f12-8542-1f04b566b7da"
        },
        "item": {
          "id": "82bc5afe-9b78-4bce-a48a-b628f637066a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "9436af02-9166-4857-9af0-af21f5611f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d736ffed-ebe3-49a8-9aa3-d67512a11133",
        "cursor": {
          "ref": "387ef663-db06-4e12-9b00-9ad2166f4912",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "5a01cfe9-cda4-44a2-8a72-f1dd5e6ab610"
        },
        "item": {
          "id": "d736ffed-ebe3-49a8-9aa3-d67512a11133",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "403eb85b-5314-45f2-9b66-f923d798d4d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e233d79a-92eb-4b71-b955-ef52be6b8faf",
        "cursor": {
          "ref": "c4a6b49b-69ba-4a51-940e-65153e00bcaa",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a46ca825-8000-40c0-97ab-f1f39cef40bb"
        },
        "item": {
          "id": "e233d79a-92eb-4b71-b955-ef52be6b8faf",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "79e64da5-bf47-46c6-9dff-dac2e814e106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f135cc-7dfa-4d1c-9403-04e6a831ce01",
        "cursor": {
          "ref": "1ee23a73-b0b5-4184-ab20-ff36af146384",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ef91046a-40c0-499a-a433-fc24f87d05ac"
        },
        "item": {
          "id": "b8f135cc-7dfa-4d1c-9403-04e6a831ce01",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "9d76df4e-f6af-432c-81d8-ae6785567c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20cffa4-c44e-4a16-b464-994f7bab1c4f",
        "cursor": {
          "ref": "5ea9c0e8-c759-48e2-b25c-ce54bf6784a0",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "d19702ba-9b96-4e3b-98a3-152d3d85159b"
        },
        "item": {
          "id": "f20cffa4-c44e-4a16-b464-994f7bab1c4f",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "15acc524-d0b7-45b4-8311-da33f6cb1488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da7a71f-0615-489b-97f1-d7f1ae91bf11",
        "cursor": {
          "ref": "c3e9dbe6-affe-49ea-a77c-132fbba87151",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "72293eb3-cc06-4a2f-a6e7-47ff568c9fd1"
        },
        "item": {
          "id": "0da7a71f-0615-489b-97f1-d7f1ae91bf11",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "7a024d2c-78bf-484b-b041-8cc8b1758a41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3491fbc5-088c-4bc6-b570-ddb47ed5573a",
        "cursor": {
          "ref": "3653b9f7-a1e9-4041-9420-0e51e64519c7",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "3202ffde-1942-40a9-b935-3be1eec8b38e"
        },
        "item": {
          "id": "3491fbc5-088c-4bc6-b570-ddb47ed5573a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "2e5092d0-6500-4656-988a-e7a14a0b9644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c677dea2-4fdd-4090-b880-8c07af988e02",
        "cursor": {
          "ref": "eeac93ee-7be5-4685-a9de-f78fa3cee818",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d275b787-d3f4-47fa-80b9-4294e1bd26f4"
        },
        "item": {
          "id": "c677dea2-4fdd-4090-b880-8c07af988e02",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "84232152-fb0a-4674-878a-33cd2fd8ba5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b62f722d-9bbc-4cd9-b858-2d32badb0a99",
        "cursor": {
          "ref": "4a02a009-db11-44e2-81ff-7a0f99d65782",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "18b7c2d9-5683-44d7-81b3-fa477f2c44d6"
        },
        "item": {
          "id": "b62f722d-9bbc-4cd9-b858-2d32badb0a99",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1f9fc954-a014-41e4-b5a8-f9565d6f82cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d8d977e-115e-4eba-9871-9c61076a31fc",
        "cursor": {
          "ref": "c1f681bc-81cb-4a49-8f67-24979bde0ace",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "0cc93ffb-5045-41d3-8419-d71d88fae60f"
        },
        "item": {
          "id": "4d8d977e-115e-4eba-9871-9c61076a31fc",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "7e6e150c-e150-493c-80c1-cca4304f7f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9dad687-6f71-45fb-8409-63419bff899f",
        "cursor": {
          "ref": "31dcd623-66ca-48b0-a65e-30664bce7daf",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "be63f50b-fd84-4fb3-acee-56c0e779438a"
        },
        "item": {
          "id": "f9dad687-6f71-45fb-8409-63419bff899f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "1592e519-048e-4227-8dcd-f50f8ae5dc4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e357e480-069a-4cd9-9314-73566cde4c00",
        "cursor": {
          "ref": "2c4bec70-9647-4108-a7f8-c9e7d5bc4ef1",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "75a4ec4f-df49-439f-9c33-1795089933b5"
        },
        "item": {
          "id": "e357e480-069a-4cd9-9314-73566cde4c00",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "9df3e31b-66e0-4fa5-b5dd-2bef47821c70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "206026d7-5122-41a6-807f-cc4f08ad9dad",
        "cursor": {
          "ref": "b6ba84ad-058a-4070-82f8-1597d2826515",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "2d52c63c-8c4b-4a44-9d17-20b13d6a8e3a"
        },
        "item": {
          "id": "206026d7-5122-41a6-807f-cc4f08ad9dad",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "674ca6a1-56f1-4292-aaa0-756d13b027d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec2da8b7-8ec3-4f4b-a09a-63689f59c325",
        "cursor": {
          "ref": "f57d2ccd-8ec3-4a0f-80cb-653e2fd0a71e",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "f3dca896-157b-4785-b0b7-9e5ab635211d"
        },
        "item": {
          "id": "ec2da8b7-8ec3-4f4b-a09a-63689f59c325",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "10541c1a-941e-427a-94eb-37fc7ae184f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f705ba04-19b0-4a64-8d32-1fbdb6a97770",
        "cursor": {
          "ref": "febc16a7-fb25-4978-b2ee-c62a0279f04c",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "574298b2-1178-4a9e-86a4-34170bf37f0e"
        },
        "item": {
          "id": "f705ba04-19b0-4a64-8d32-1fbdb6a97770",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ee6f8c77-494f-462b-b6f9-f3fe14947290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d908a8-76ca-4d90-a873-03676b215e1f",
        "cursor": {
          "ref": "f05abb4e-a040-4e90-b033-be66318acf83",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "e43f03b9-0c6e-44f1-86e6-42d10d6e50ae"
        },
        "item": {
          "id": "02d908a8-76ca-4d90-a873-03676b215e1f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "2e8bd573-e4c5-4ad8-8422-5bc88a418dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b39bd0-b55e-4d3f-b115-78a8ff6889b0",
        "cursor": {
          "ref": "ff1868a1-f2a2-4422-8e04-94c8eb043a1c",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a5614086-dbe4-438e-a677-e5b6ab6b6fc1"
        },
        "item": {
          "id": "10b39bd0-b55e-4d3f-b115-78a8ff6889b0",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "3bc6015d-2d11-4c43-9f78-012b7618aa54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5daf5dd2-e8a1-4729-8b25-af3fdf47558a",
        "cursor": {
          "ref": "9ac69900-ef4a-4776-92f3-2763476b461a",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "15929270-a217-443f-9680-75ca787f12f3"
        },
        "item": {
          "id": "5daf5dd2-e8a1-4729-8b25-af3fdf47558a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "7c5fed13-4e53-4140-bded-49efc128a08f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e25771b7-cd3c-4632-a702-3121b30b5c21",
        "cursor": {
          "ref": "750ccdd3-8c79-4d9a-b347-2edbce26f407",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "cee4007e-53c9-4b73-97c7-440f330122d2"
        },
        "item": {
          "id": "e25771b7-cd3c-4632-a702-3121b30b5c21",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "8e52f00b-9701-41b1-bbb4-9403cd4dbb68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14794587-e635-4b98-a473-56f1b1810196",
        "cursor": {
          "ref": "07b9aaa8-3ed5-4efa-99db-9bea552c3987",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b749d052-db00-4aaa-9669-ed36d88221f5"
        },
        "item": {
          "id": "14794587-e635-4b98-a473-56f1b1810196",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "13253869-3c4a-444a-8c5a-1676489412a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91eb3c47-fb22-4399-bd76-0ed6e634326e",
        "cursor": {
          "ref": "7b9b152d-b786-4d42-9403-3ff9778b9778",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "95f3ddc9-5e17-4b51-8df7-f4db819849c1"
        },
        "item": {
          "id": "91eb3c47-fb22-4399-bd76-0ed6e634326e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "98844ea8-edb1-47ba-84b4-7388d1f0cec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f53fea-8300-4cf0-ada9-ec4db0c69405",
        "cursor": {
          "ref": "a70a6b9c-b23c-43e3-a5b6-8d95f49e12ef",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "5fcd1255-df6d-483c-aa2e-6c8697947d6c"
        },
        "item": {
          "id": "d0f53fea-8300-4cf0-ada9-ec4db0c69405",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "95344cdd-56b4-45ff-bc75-5bf6bc8dc97e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e17e435-a7ea-4dcd-935b-94442315c9a0",
        "cursor": {
          "ref": "55508756-36cc-4af9-855d-e6804be8f460",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a2f03c6c-76b2-4cd9-aea7-6dbcc6bee350"
        },
        "item": {
          "id": "6e17e435-a7ea-4dcd-935b-94442315c9a0",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "3b899a7d-f7d1-45fc-bdfa-c8d4065c522a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef06e9ef-2095-49e9-a728-d00ef37ff708",
        "cursor": {
          "ref": "2a271cb6-9aff-436e-9b37-670df306c118",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "09ae521f-e286-48be-8566-6768fbdac370"
        },
        "item": {
          "id": "ef06e9ef-2095-49e9-a728-d00ef37ff708",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ca9f2966-9934-4334-8a21-d76cdccc84d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "192a3114-8d28-4d06-8cc4-02d94516dd35",
        "cursor": {
          "ref": "e3e63cbf-fb4c-4928-a3c4-b7a07cb17fb6",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "318c60cb-dcc2-4737-ba2a-c01bc4b5a56d"
        },
        "item": {
          "id": "192a3114-8d28-4d06-8cc4-02d94516dd35",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "67b65265-0b02-4857-b719-7281eda7834b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "575a834c-1af1-430f-a3f2-801034599e08",
        "cursor": {
          "ref": "76e66780-fd44-4246-8acd-887269a6e942",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b50cde50-2b91-4ef4-81f1-71e69a66774b"
        },
        "item": {
          "id": "575a834c-1af1-430f-a3f2-801034599e08",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "13c72bfa-16c0-41e1-974b-fa896219593a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec319ed7-f8cd-42d0-8b42-16eab1b4d061",
        "cursor": {
          "ref": "0bf8f638-8861-4e92-927e-85f6f57d54a4",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a8d5c547-a8f1-4f36-b5d5-b9082ea4046f"
        },
        "item": {
          "id": "ec319ed7-f8cd-42d0-8b42-16eab1b4d061",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "6056f949-9a47-4540-b43c-f4cd2530c9bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4b6537-de45-4faa-a41d-b62f05ffb9dc",
        "cursor": {
          "ref": "5b2fe6df-56e0-4af7-93ee-bccaf9e6bbd7",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "41ac6081-6046-4c32-9e70-7ef1cdcf9b82"
        },
        "item": {
          "id": "0e4b6537-de45-4faa-a41d-b62f05ffb9dc",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "8fc33e80-2f60-4b91-9eb0-3f0de5458e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a635241b-53dc-4d36-8a7b-a5ec0b411fae",
        "cursor": {
          "ref": "09204045-2816-45b4-89ac-3af79d41a72e",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "601494ca-ec94-42b4-9311-e9084904cddf"
        },
        "item": {
          "id": "a635241b-53dc-4d36-8a7b-a5ec0b411fae",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c781c668-5b3e-4166-9186-460898e668e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba4cc0ed-785e-4719-99ae-d23306295c52",
        "cursor": {
          "ref": "a6feeaa9-7071-44a6-ab48-d6c14bf4e1bd",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "efffdbd8-aa96-4ee0-8999-d362cb9f6cbc"
        },
        "item": {
          "id": "ba4cc0ed-785e-4719-99ae-d23306295c52",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "bf4640b5-c365-436e-bc61-55aeb818df73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14aefa85-194e-41d8-8c95-e71b83f5293b",
        "cursor": {
          "ref": "0aee6d89-e898-4d18-88d9-b28cf831d7f0",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "29b51183-c913-4534-8185-0066d9536e90"
        },
        "item": {
          "id": "14aefa85-194e-41d8-8c95-e71b83f5293b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "18c42f6e-de53-4923-bdb8-6925c32334ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89fe773-17d3-41ed-bc3f-3e4bf70a8572",
        "cursor": {
          "ref": "0e42bd8b-3e01-46fb-aa54-652a5fbc7367",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3a5032b4-094e-4eae-9b4b-8507380a1bf3"
        },
        "item": {
          "id": "b89fe773-17d3-41ed-bc3f-3e4bf70a8572",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "1d53282a-37f1-4530-8525-a7c729c6b83e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f21ee68-0ed0-4418-81e1-2dd9b3140ab0",
        "cursor": {
          "ref": "965c70e2-e288-4936-8759-bced3b0a5d03",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "70c90e27-17f6-4ef4-82ff-518d1e2e8a4d"
        },
        "item": {
          "id": "4f21ee68-0ed0-4418-81e1-2dd9b3140ab0",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "fb49ea50-4ad8-43a0-8779-dc83f62eab3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a28ac80-193a-4a7d-81a5-4b1e86e1a744",
        "cursor": {
          "ref": "f1441596-34e7-4cee-8a64-ab2a9a7062a3",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "016eb311-b1e4-4b79-9e08-b6e632bb90bd"
        },
        "item": {
          "id": "9a28ac80-193a-4a7d-81a5-4b1e86e1a744",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "145aa2c0-8ff5-41d9-b340-779f8dd7acef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "357951a3-effb-4447-a659-d56ae12eeab8",
        "cursor": {
          "ref": "6038053c-17c6-4143-a5e8-c8aa2b47382f",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "3ab5cb52-a644-4f87-b6d3-fd09047890ca"
        },
        "item": {
          "id": "357951a3-effb-4447-a659-d56ae12eeab8",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "068d8d5f-d688-4c2c-be74-b84f58c3bb7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de2ef75e-ed6e-4493-82c2-16ecf7745fee",
        "cursor": {
          "ref": "71300dd3-2650-4c9b-8717-0c82f50bf768",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2fb6923b-9898-450d-9e9d-eea48966105e"
        },
        "item": {
          "id": "de2ef75e-ed6e-4493-82c2-16ecf7745fee",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "77fa80bd-f8e8-48d6-99a7-aa73cabbaf31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa97fc90-576d-437e-ae06-c34424afc8ff",
        "cursor": {
          "ref": "b940ac6d-9695-46d6-bf16-eedeea10dbc7",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "054a06e2-1e45-4108-94ad-bfa45bbf306c"
        },
        "item": {
          "id": "fa97fc90-576d-437e-ae06-c34424afc8ff",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "0c04dcd9-0324-4db2-b93c-fbf161b86143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe3ab88-cfdd-4141-b6af-c0ca5b4d1cdb",
        "cursor": {
          "ref": "6509b988-ccbf-4e7e-8e4c-854439301ac0",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "511e59c4-577a-44fe-8a02-e134bd7c7da2"
        },
        "item": {
          "id": "dfe3ab88-cfdd-4141-b6af-c0ca5b4d1cdb",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "6cfc787c-29ce-4414-a559-3d8ebf0a050e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "683732be-7de5-4df5-b352-6ba7894491a7",
        "cursor": {
          "ref": "0e4585b3-d9d2-4897-b90f-136ee43cc717",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "72b5f31d-f004-41e6-aa89-ffc36a96a56e"
        },
        "item": {
          "id": "683732be-7de5-4df5-b352-6ba7894491a7",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "95f410dd-98da-44fe-8e3a-9c9ac8587bd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06307f8e-ca2f-48e6-9440-b0d6f96e14cd",
        "cursor": {
          "ref": "495d6a12-6b30-4e36-834b-7c51046e7be3",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f90ed851-a2f3-4a27-9d4a-a9d4730c0144"
        },
        "item": {
          "id": "06307f8e-ca2f-48e6-9440-b0d6f96e14cd",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "ee54a9ef-4d8c-4f4e-9e41-4a54d0377e66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99565979-cc54-4480-9ac7-edb7b85fadfd",
        "cursor": {
          "ref": "cf19a24f-ce03-4ae4-99af-8ba7a8cfa060",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "78c2c4b3-598e-422c-bd8a-fe4f7390d95f"
        },
        "item": {
          "id": "99565979-cc54-4480-9ac7-edb7b85fadfd",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "268541fb-661e-487f-b08f-d6a76b0d4456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb3a7426-c72a-4a12-a037-2503787e96c7",
        "cursor": {
          "ref": "b74e5126-bfc1-4aa8-a403-b2de90ef4dbc",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "21eac571-f70c-46f1-aa8a-0a884ca9c8ac"
        },
        "item": {
          "id": "bb3a7426-c72a-4a12-a037-2503787e96c7",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "02903e9c-fa3c-4cf4-9281-7f7de90e32ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a65001-5584-4826-be06-bae4780ab526",
        "cursor": {
          "ref": "cb022ddc-36a8-4855-b945-55f4e89d168d",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "ec186751-f414-48e4-be70-3509f55d602e"
        },
        "item": {
          "id": "56a65001-5584-4826-be06-bae4780ab526",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b6b05472-3584-4b24-949c-0ed15b38dd84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8740d4d-1132-4738-9a49-97f033b82932",
        "cursor": {
          "ref": "45c2a6f8-9f6c-4f9b-bd6e-33f3a9b2480b",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "88ebe33f-1758-4762-a684-7ff210b52fa8"
        },
        "item": {
          "id": "c8740d4d-1132-4738-9a49-97f033b82932",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e46ac5a6-9ac5-4bbb-bc29-4d5d479be09c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aacb850-1b32-42b8-8b0a-6e73a08a60b8",
        "cursor": {
          "ref": "f3a0e81c-3c88-450e-8a70-8a0c6e071b14",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "84e9d4c2-5489-4c36-9379-05d2e3fa250f"
        },
        "item": {
          "id": "9aacb850-1b32-42b8-8b0a-6e73a08a60b8",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "148714b2-b926-466c-935a-f5234accd6ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f35413-eb3d-4baf-a18e-d5d45cdbd0c0",
        "cursor": {
          "ref": "dcd6aef4-2ce7-4c86-8cd6-51e858faa935",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "84a43c41-694a-401d-b264-ce36085b7cda"
        },
        "item": {
          "id": "66f35413-eb3d-4baf-a18e-d5d45cdbd0c0",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "9011765c-46a4-4ff3-940c-e5cc816518f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6087466-0a8c-4e7a-a314-04c2a795498c",
        "cursor": {
          "ref": "396ba640-e930-4440-b852-90e7d5ba70ba",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "782f641f-f547-4539-a5ec-58dc9f73d035"
        },
        "item": {
          "id": "e6087466-0a8c-4e7a-a314-04c2a795498c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "4d6ee89c-cba6-4e49-b033-7181ba8f1c98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49cade67-3f71-46d2-af60-fabb1484df1d",
        "cursor": {
          "ref": "a40bb4e6-4524-4251-82b3-83829e551368",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "64e7287a-161f-4c52-9504-8b2d58eb04a5"
        },
        "item": {
          "id": "49cade67-3f71-46d2-af60-fabb1484df1d",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "c90bc5ed-6ddd-4153-bf12-6d645f570fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b012c8-39db-433f-b083-7395ae49e8bc",
        "cursor": {
          "ref": "9f8a9dd1-9e51-48e3-9638-035e63fddedc",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "b8211592-22e9-4a22-849f-f7e8369bcc1f"
        },
        "item": {
          "id": "b9b012c8-39db-433f-b083-7395ae49e8bc",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "b42ece6a-18fb-4028-9051-de0122a3a812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7972a2c7-4677-4e9c-b220-81fb38ddb8b7",
        "cursor": {
          "ref": "a03c9475-0812-4ba2-a0ec-aab81b560c3b",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "62a23dc1-07d2-4968-a603-73c6e5193bdc"
        },
        "item": {
          "id": "7972a2c7-4677-4e9c-b220-81fb38ddb8b7",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e2d1699d-6b9d-49d3-9e90-7c8da858f939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8135bac-dca0-4d07-b8a7-53920f326342",
        "cursor": {
          "ref": "fde967bd-80b9-42d6-9cb1-d85f527842dd",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "81576d39-6045-44d6-99b8-f562b9e8cad0"
        },
        "item": {
          "id": "d8135bac-dca0-4d07-b8a7-53920f326342",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "360b42fe-229c-4207-82cd-8ad3a74decfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4159589b-e0fc-43e8-bdeb-ac32b005e317",
        "cursor": {
          "ref": "0ca2b270-5bfa-4e25-9ef6-1e36997c0781",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "b57ee83d-8d4f-413b-b31a-5f86c00238f0"
        },
        "item": {
          "id": "4159589b-e0fc-43e8-bdeb-ac32b005e317",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "9ec3f02e-7eaa-425a-8220-0e8d2a903cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5293e13-e6c4-423e-b334-9d3796e80b3e",
        "cursor": {
          "ref": "ecae6af3-f5cd-4b9c-beea-792ebb524b90",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "fa672f82-e3cd-448d-b99a-044a95e5acae"
        },
        "item": {
          "id": "b5293e13-e6c4-423e-b334-9d3796e80b3e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "c19a52ed-f33c-4354-b9bb-425840c1eccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe241fd1-1a7a-4a85-9932-702cfde6a4ec",
        "cursor": {
          "ref": "e825a8a2-82be-4dd9-960d-d1273c61469a",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "63e80682-7bef-485b-9466-7678d47f8867"
        },
        "item": {
          "id": "fe241fd1-1a7a-4a85-9932-702cfde6a4ec",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "6ff3a2e4-07cb-468b-8409-a28176d8db40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4429e52-c40a-4d5d-813b-f808533be6f4",
        "cursor": {
          "ref": "b15ee7ff-98a6-4115-a472-7652f28279b5",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "02498f70-2356-4943-805c-eccbe069f964"
        },
        "item": {
          "id": "b4429e52-c40a-4d5d-813b-f808533be6f4",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f52e7009-16e6-4668-98af-263aa7df5d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68e2f63-7953-433e-9c89-beb9d61fdca7",
        "cursor": {
          "ref": "aa19387f-fdb9-4aeb-807e-1e56fd8f7985",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "78c2b49b-7403-4850-84f6-e84921d49a97"
        },
        "item": {
          "id": "d68e2f63-7953-433e-9c89-beb9d61fdca7",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "feac2136-cc39-4da4-a237-fd631810a1a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc59bf8-c2b2-4070-88e0-149fda75ac30",
        "cursor": {
          "ref": "cf5f64b8-5d29-4cc7-b377-959bd2053d21",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "5e65b446-cf89-441b-889e-54c575f23799"
        },
        "item": {
          "id": "ebc59bf8-c2b2-4070-88e0-149fda75ac30",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ae24e35a-7c22-4382-8eeb-7832f6d347cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e9017a-cf4b-4a06-971e-e0e561aba5fe",
        "cursor": {
          "ref": "152ec7ad-bd97-4a87-9a2b-ee2aadd262ab",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "a6daf659-b19f-4bb6-8c50-51739d968248"
        },
        "item": {
          "id": "65e9017a-cf4b-4a06-971e-e0e561aba5fe",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f624a362-06ff-46e2-afca-37d286bff35c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f479a5-7254-4c51-a6f2-a90278553be6",
        "cursor": {
          "ref": "d568a480-81f7-443b-b84c-9e84c7684f27",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "1e7637a1-b7bd-415a-a9df-a0de77e8b1c2"
        },
        "item": {
          "id": "d2f479a5-7254-4c51-a6f2-a90278553be6",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b9eb164a-9f3d-4bbb-9edb-d780f94e431b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f2ab69b-1966-4cdb-ac9a-9da49ec6931c",
        "cursor": {
          "ref": "b35acf6e-4529-4f8e-be0c-e68a05eb00f9",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "e069d3aa-8976-47fb-ba2c-34930ad2e007"
        },
        "item": {
          "id": "6f2ab69b-1966-4cdb-ac9a-9da49ec6931c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a665d47b-a7d2-483f-b12d-6bec4fb7f838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b81dd4df-2648-4202-838f-09dcd42d7548",
        "cursor": {
          "ref": "8d85dc3b-0a10-47c8-abc6-b43704564da8",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "6982800d-d685-4324-a34e-b70f128ca7e1"
        },
        "item": {
          "id": "b81dd4df-2648-4202-838f-09dcd42d7548",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ae184a1e-0fc6-4a0b-9b8a-c3b627fc9fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af417c84-b68c-4101-b901-5381d941f4d2",
        "cursor": {
          "ref": "0824d281-5f85-49da-a284-87c4f72cd30d",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "56cb0e12-3354-4225-9b38-b1a288e322b7"
        },
        "item": {
          "id": "af417c84-b68c-4101-b901-5381d941f4d2",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "092d56e3-2528-448f-9b4d-e647c9f1bb2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b114e3a-da70-4555-a7f1-c26fc997d3b2",
        "cursor": {
          "ref": "de8d8338-5b8f-4778-bb62-3af7bd7e7a50",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "011864c0-90cd-4f35-826f-b9fedf696a7d"
        },
        "item": {
          "id": "7b114e3a-da70-4555-a7f1-c26fc997d3b2",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d3503c64-fa83-4736-b80e-c73a91f65b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff1501f-c03e-45d2-81de-d2d6aacf442d",
        "cursor": {
          "ref": "145a9884-67b3-474c-b7b4-f6e72ed5ba3f",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "92a0d851-d865-45d3-a0b1-36a55d9201d2"
        },
        "item": {
          "id": "fff1501f-c03e-45d2-81de-d2d6aacf442d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "8ec6d853-e47c-45c6-b5bd-6651502f98a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6bf2f1-84a5-46f2-b492-0e64ad5622cf",
        "cursor": {
          "ref": "fb516621-c048-46cc-a7c6-31e563dfbf74",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "76abfd4d-b9ca-449a-b415-a1a9c2fe4195"
        },
        "item": {
          "id": "6e6bf2f1-84a5-46f2-b492-0e64ad5622cf",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "4c899e6f-6858-4edc-9dbf-d8bee0d389e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8651c41-44a0-4a9a-915e-8cdaa4f393d4",
        "cursor": {
          "ref": "f22d9f4e-a2ff-49d3-a043-6a4a73c7a8e1",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "361afeea-b278-4b55-9334-f7b36c66cc05"
        },
        "item": {
          "id": "f8651c41-44a0-4a9a-915e-8cdaa4f393d4",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "cbad5d8e-8988-4556-ad4d-9cbef58021be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00199616-7003-4ebb-bcac-8570173444ee",
        "cursor": {
          "ref": "f8c51b33-11b8-462c-80eb-b36e18245b85",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "31197098-a784-4ed9-8674-25b589e0a5eb"
        },
        "item": {
          "id": "00199616-7003-4ebb-bcac-8570173444ee",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "befdef85-15ec-47c2-bac7-a4baa920630b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7363c91a-23a1-48d0-91ce-f337de184701",
        "cursor": {
          "ref": "4d7e2d22-1273-4d7f-95cb-93ea56e96ff6",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "c3912008-39d0-41fe-a6af-655a882dde17"
        },
        "item": {
          "id": "7363c91a-23a1-48d0-91ce-f337de184701",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "77c6e512-c4fd-4488-b72b-71efdae8a96c",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "515fce81-7a2b-46e6-9025-dad0a43275cd",
        "cursor": {
          "ref": "20a95e4c-4d90-400d-86c4-36a32247146f",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "4e55219d-f3e6-4e48-9846-e1287285faef"
        },
        "item": {
          "id": "515fce81-7a2b-46e6-9025-dad0a43275cd",
          "name": "credentials_verify"
        },
        "response": {
          "id": "23819214-176a-4cab-aecf-85856d551c97",
          "status": "OK",
          "code": 200,
          "responseTime": 3710,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad8bbf49-6198-4f15-9179-f0574dd3cd20",
        "cursor": {
          "ref": "af08d22b-2862-431b-9faf-21808a772bcf",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "7f0d008a-d243-4cbd-ba92-4586a9dc2a54"
        },
        "item": {
          "id": "ad8bbf49-6198-4f15-9179-f0574dd3cd20",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e94a0ecc-d86f-4b4d-b2bc-07e737ddef7c",
          "status": "OK",
          "code": 200,
          "responseTime": 2348,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae61ba05-86ba-4ec8-8624-8f635a2d523c",
        "cursor": {
          "ref": "b7983cf2-fa4e-447c-bb13-a693a0a8b071",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "3666363e-24e7-4be8-a8a1-1923503630f3"
        },
        "item": {
          "id": "ae61ba05-86ba-4ec8-8624-8f635a2d523c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "39126e55-bf2b-4944-bdf4-71528c0b3421",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae61ba05-86ba-4ec8-8624-8f635a2d523c",
        "cursor": {
          "ref": "b7983cf2-fa4e-447c-bb13-a693a0a8b071",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "3666363e-24e7-4be8-a8a1-1923503630f3"
        },
        "item": {
          "id": "ae61ba05-86ba-4ec8-8624-8f635a2d523c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "39126e55-bf2b-4944-bdf4-71528c0b3421",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e45d405-8920-41ea-8ae8-3f2648af3dc2",
        "cursor": {
          "ref": "a8260b38-6515-4498-ade5-1e4c5b1beecf",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "ba2ce25d-ee89-4fff-83ad-4f7120eac10f"
        },
        "item": {
          "id": "2e45d405-8920-41ea-8ae8-3f2648af3dc2",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d1dd7c80-b95c-4b61-8d9f-be7383a5e833",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a59a8ad5-3474-4956-954b-84dbc47095d0",
        "cursor": {
          "ref": "48b8c896-9593-43db-9b17-3b47fb57b2ed",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "8bee0d1c-b5a4-4d3d-9d3c-3e6f26750e86"
        },
        "item": {
          "id": "a59a8ad5-3474-4956-954b-84dbc47095d0",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e1a43fa5-4d55-4dfa-9327-f893ea36e148",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}