{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9fe1480b-3356-498c-a432-f0dec89c779a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8d7b82c3-44e3-4ddc-b99f-26101f17bae7",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c1b3a4c9-46dc-4521-9717-f48c339f6b01",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "350c0845-eb4c-45da-aac4-e880abbad570"
                }
              }
            ]
          },
          {
            "id": "97d2be02-8710-4299-ab31-ee06cbb5c71d",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "769c29e2-eacf-4b59-9563-b61b5a390e85",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8df86a9a-3840-4a3e-aca4-971af288073c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9b8e6e62-1997-46a9-9fd3-b629c402ba56",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "49471cde-73cb-4a2c-a2e4-b5dbffc8599f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f0e3a20c-0a9a-4d49-9610-cfb193b3e40a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf301796-b633-43ba-b3a7-9ba4ebb948b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c2558647-ca75-4dfe-9573-69d108b8eafe"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a97d14cf-9626-4988-835d-067cb6e9693a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ecd18a9c-cd39-4805-af04-650671bc6444"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1202050d-6e5e-4e3b-9176-099be5e9b32f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "48fab6dc-f2c8-4a46-8f42-a25e1caeded5"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "01e1fb0b-f311-4f25-b9e2-82b4c486dcdd",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "dbd7e0f4-8c30-498a-a4be-ee8a664c8272"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bf24ba9c-46e5-42c0-9cab-8644aac7ded0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "236f25b8-1816-40f5-afc8-0964589f288b"
            }
          }
        ]
      },
      {
        "id": "5cc6721a-0e53-4529-a867-0f9b80d106a1",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ad608a6c-ed83-4d42-b8ce-d983625ce1df",
            "name": "Negative Testing",
            "item": [
              {
                "id": "69512799-3e5d-422f-82ef-f2b3bd076575",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bd94975d-5ee5-4d88-b660-74c07d839fcc",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc2570e-f73f-47e5-a614-d1f61a334c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b06f218d-e8a6-421d-83b7-e8eea9b1f494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb8c624-1db3-4474-a0a9-e572dbe46aa7",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "512cde2b-64d2-4b6f-ae0a-09b734f0a33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d0bb7c44-dd75-4285-8545-1d866be03f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50d57d99-0ce8-49af-81f1-736b67f49955",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "200d36d8-528e-4ed6-8d2e-4934f0163986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5dcc1b72-7a90-4fc7-9e70-2111dfe8115d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e9791c41-a808-4c4b-86e5-d4e0e1c32ac3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c805f95d-0f81-47ea-86f3-1333b536d1e5",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a52587f-2930-4c15-9e09-edc740486e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6bf5eca4-4bd9-4806-b5ee-93d41acced2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ba0c07e-7554-412d-8b66-57ef1d9be703",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4702aea2-9743-4c72-88cd-b72bd7c1e348"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "09fee8be-1b24-4051-bdaa-a0bc2252746f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5e22dd45-12cc-4048-90bf-b0e6a58339c7",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "496f64fe-c1ec-4259-923c-d85a02aab7f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "98089ca8-c5c2-461f-8369-f82ba9103f99"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0c59ce08-09e3-407d-a0ac-d135fc756f5a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "81535d5d-f88d-43d2-9ddb-e947d9135f57"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8315744a-6a63-4e60-bfa4-2aec10218e7a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0864ec9c-a919-4081-b967-7ee98f0b7489"
            }
          }
        ]
      },
      {
        "id": "58e01b89-ac43-4de2-ba2c-cbaf578439e4",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "0646c3c6-1543-48a0-aebe-77d683c14cae",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9c8fc894-a51d-481f-b03f-759e6d223a0f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "8bac073f-f1e6-4b46-b625-4df90f90c9dd",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c408981a-39d8-48b1-977e-ec15f681d65b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fb50dcb-3950-419a-841f-350556e42711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd143c1-406e-4fee-9906-58ba15ed5137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32b60add-39bb-4440-9e03-6d21f8096357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21fbf791-f717-427a-b4b4-e4d83f45a4e1",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77aedcc8-2773-4728-bca7-4f4c3540fc2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cecbd358-0fbb-4878-93c2-09d5406bd994"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd4698ed-eb95-4049-a7fa-de57ffebdcaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "394fbabf-ff43-431d-9558-003a7792ad38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec63b3d3-e51c-4380-b52c-ede6b0b7e642",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e79afc-a44a-4d88-9d1a-0b5336298960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75f51ca7-beea-4d46-99de-9822bdfd761f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fe0117e-60d7-4cae-b32f-dd790d3fa080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a305f45-0488-45c9-8525-4e03486d453a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6a91619-e8d0-4fec-ae78-678589c24b85",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "334673b2-8600-4d44-92f6-50f977db3f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee13dd74-c6e1-42b7-9c15-6632d027bdd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf3ff8c-08aa-4428-9166-37eb74f8e24d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ab71bc1-fee3-4bf0-a0e6-7c145536da96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c4c9b5-a0b7-4735-9f1b-0acc69c38f31",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a78a278-9f6a-4ead-9c98-44d1c7c52c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f5e3f44-397a-4dcf-9784-32750fd07392"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a920ded5-e2dc-47dd-b42c-e3fc444920be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b7b624d-04da-4d20-aee6-6ad96b9c937c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe8bc6c1-97f1-4fda-84b9-53cc85eac770",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3935cc3-ddf5-41fe-9736-0c02c9fdea7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eda1b20-3948-456f-9abc-5edff8a77985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d71e847b-fa33-4888-bd77-87db528fad5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2c6ae38-2518-4016-992e-05a2edbe886f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "765819fe-1a88-4e94-9106-464354824c4c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27757fbd-ae2c-4edd-bb74-0acd7aacdf2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba4ebcb8-4d6b-4e94-b3aa-7c046721a0ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70490e1f-94ba-4b0b-95f0-59672e466b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77cada2d-1357-4289-b0a6-7f81b681dd1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "796b4aeb-c5a7-4783-b24d-c7026adc0469",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfb7eeda-e4cc-405b-8479-aee13af3bcfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d7a43cd-c614-40a4-83ed-92357cd1b3fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb9b481-a6fd-41d4-a2a1-4c6af90c2999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9d3044a-2754-4d36-b9b2-90413c5acb32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5134c77-de14-470d-b9e2-05f25645a5af",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1670a82-6a77-4549-bfbe-608c2ba5aeaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45170cee-87d0-4b13-ac7f-869ffdafbaba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d01908-adc7-4c9d-aaf2-a02936fb70b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b35f5bbb-9e3e-4cfd-abde-7e67c0bcca42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db6cfdcc-670f-49ea-869c-0c84f4792a6b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77315c7b-3a45-4a36-8be1-4a5c204cf4c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47666143-2afb-4a72-8969-9d3e23113631"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8e9ec09-0a5f-4e87-aaeb-78d2a3eb3f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86a413f4-6de1-4213-821e-8c28fb529947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec9f8470-b0ba-4c7a-b6e7-a518675d074b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b3c45b-8ee6-474d-a18a-74f34b77164a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca3ff108-6204-4791-be9b-b4545d0d0d25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "872297e5-f028-451f-8acc-f6e170c20569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fdc2810f-2844-449c-a1a3-2496dbb41a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b314dcdb-a1ac-4141-8d29-a10227f5efa2",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "356ece48-91a6-44e1-ba3f-e97e4485da55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26b03ea3-6fe4-498d-9836-9d7ec840b374"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed34456a-474c-423a-9b96-2be06b267063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ffedf659-4789-4be2-8adb-27958909f598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcda2cc9-9b8b-4f0a-88e2-965e0b38fbe9",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e29c2f7d-6b18-409a-8fda-e5adfe55f006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59e5321b-ffd7-4947-a12a-be93140ec62c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f094bb0d-5259-4834-b569-10b702c6f961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d865ed65-15f3-461f-8f31-33c2c485aaf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80eb96e7-a212-4c23-8f81-393551704505",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6eef0cc-ad36-49ad-bdf7-b75e8b925bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b43b3f1-08df-4f93-bbec-524583a7a82c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7c92e14-4685-4672-a494-a8c20195d03b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d42b26e-0f1f-448a-82ff-83353ee6faef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f2abaca-aa76-4532-a007-f83c49aee4dc",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fb8004f-9996-4006-86d0-5017e26d84bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1c9a130-23f4-4415-8b4f-bbb88450db58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4481951-a0ab-4d30-98b0-e5422ff5fed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5bfa16a-14b4-48c2-8fbc-e997122cea41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "126eca1a-b918-4218-b589-42c6c077ade1",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1831fa86-3a03-4fd3-9735-b210f0dc21f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "428a8a56-949c-4b6f-9a09-c7dbb87c30b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea436e5-3ae8-4196-ac14-7420959fd99d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf6498aa-82ab-4108-8ba5-77e53c5e5370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdfe0a7a-a693-48ac-be49-cdb92fa76c48",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d35466fa-c2a2-4554-931d-7657459a477b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19d7eb10-be9b-4cd8-89be-e886f25e237f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93c8b64-a587-43da-bf4e-4b16e2d42400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c10ba5d-2b24-4a4d-b015-ef9ce53ab0b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "464305f8-ed81-4d00-93ef-f1142da398bd",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0830e180-4599-4731-8345-97d7e3036356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5368a86b-1b61-4ab2-bd75-fe54e807af6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb2d19a4-26bc-43c0-8ef8-dff49386e593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "acf9a295-6c69-43aa-8c80-7aa6038dfb12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c24fc2f-db23-4e6a-8219-03115a5f049e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc26e74-71fe-4109-bd84-2905818c4d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4960cca9-2a34-4c4f-81f7-76a79cbcdd09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d1b8cfb-ecb4-45b1-bd59-822407fb0335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3da540a-8231-470e-8b3c-c1d168a08b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "529bdcba-745d-4886-842b-c8e91c88fb6f",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2ca018-9f69-41e7-a9c6-178ff3353afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b7fbb62-e354-4af9-a3f3-2af836427492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001a4e94-0d16-4f46-8262-ab19e696ba53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4b65ca1-a7a1-4d4a-94ef-93a3f74b77f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7442dc36-e255-4e93-9911-75b290d7b7fa",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37796b91-63be-4de4-acaa-4157eb8d17f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0068e41b-9ba9-49a2-9cb6-ca1fb1cc5893"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efcea9c8-6d0a-4bdd-ab82-503cf2a18803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc947b8a-2c50-4afd-9854-c0d36b04d27f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53750605-9516-43e8-b035-d66738425c8e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a7c893d-f5f0-4217-b494-22f2754f4808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8a6519e-efa0-402d-9321-1998f8675fd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2223f2e5-7b0b-4050-b362-645a0787dcef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1aa9d861-c84b-42f7-82a5-5fafb5c880a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a258ff76-aa8d-46e9-b4cb-2c6c3018c452",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16875275-14ad-4642-8131-1f388ccb5177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee58d3db-a6c7-4176-b482-c035b661564f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d48af0f-7a81-4acb-998b-c21b35bcf417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f3d095f5-4b59-402c-92e4-c7f9917811ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4795f28d-f302-474d-8ff4-0df26de03220",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee96938c-9e77-457e-8120-3844a8d13fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f4df054-b6ff-4540-9562-b0357c799e0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70477fcf-2fd8-437d-b334-c0170c0b5d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "45c75afa-16bd-424c-8c71-d19870e0fcdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11216c56-dd95-42d5-9c5a-32db0197a8f8",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3795c158-8fc4-4861-b77b-4863b8f46e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "898e06be-0b60-4dfc-a734-4fa9cc85cc2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f26f7b-7b4e-4138-baae-a2fa2a890dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1873bac9-fac2-4b50-b799-87d6d71144f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "078e723b-6995-45a1-ab80-00ab7c806be3",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddcd3751-c603-4b94-a4ff-50ba15881055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92271b88-74f3-40c9-b1e4-08f308af8859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "856af341-7157-4f06-b148-320cd3460631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cdf5679-227f-448c-8036-47bcd839db6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dea0f2a8-af3b-4d40-b92b-25f473cd7eb7",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "469a137a-0c73-4cd1-956e-3d669af3e53c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c91bd6d4-5db7-4fac-b1e6-2ed8ca9d2721"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ef14a2-d05a-48ac-8e29-7ec0a6b3f3d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0426e40e-0a38-42e3-9232-ac273a645b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b55bb8-dfcf-4968-913f-2ff5cd48ef74",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d9c550-97fc-4dc8-8139-6afd4d988c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6cb42c8-5904-45c0-944d-3f4f92122e20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a652575-5696-4238-b1e8-d826dad57b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5038406f-45f9-4154-a9c0-b1ec9b8591ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b68a8d2c-f9f6-4e6d-a70b-4990a6e0399d",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d0caa89-40fe-4158-aab8-bca8273000db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc263b74-d665-4f8d-ae1a-59a17a736b13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef067910-2c26-4518-bb3b-db23ee0557e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0de12307-44e5-40b1-8201-aee826d53800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e355095-92f7-4cf8-a1a7-18e668b97065",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a699af-862a-472a-8ebb-5c9877705237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7cd15f8-2441-48b6-8bc2-bf54c78ded4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81bf20ce-0050-468f-b17d-323c389d7f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "97310a3a-06ae-4c48-befc-11416319a11d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f643f8a8-f594-4fbb-9235-5d3abed81c89",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1965cc19-ee18-42f8-91e6-0f5848ba6dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fc218ec-0ffc-425b-9bd3-ef84d0388376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c8c4ef2-8357-49ff-a288-b44f3ed98c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "332f32ff-e208-46b1-8abe-830b6b8bb74f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a93bdb-22d2-4d57-bfaa-5a13cba9cc83",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f26510-c184-4e45-bf97-30725c700497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21b1f6ef-3ea4-47a1-9141-8af31ba10b9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95851c15-19c0-47de-9191-8920b0bdbc51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e752030-e51b-46a4-83d2-ff809ef5da11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c07fb6-53bc-413d-8a91-7ac8892c238a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92303e0a-3dae-468a-a7aa-63a086dfedac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28369a26-e5ed-476b-8a80-e9e43381c37a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa9802f-ab25-4ef3-b32d-2d2f34ae75bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d24bd512-71d0-4b41-8fdd-e716d2d22a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67952b4e-226c-4aa8-b017-159048660ebe",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "930a2206-aaf1-4253-ab77-1485b42d1e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd25f067-8890-4fea-8cca-015ae4361b6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa8c1990-fce2-4497-a8a3-e979ca7f5fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f263f61-f221-4ee9-9477-641f6a0b9768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cecf498-81b1-4a0e-89c4-14812009ceca",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "575b9d40-044f-4bf0-8859-f5d08f7d8372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7cb3c3d-42c8-46e8-a626-d839206a3d32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b4754ce-e1f8-4ce3-931e-e23139a52a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "99c2960c-6787-4ade-bcaa-5f2c42c527ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5cc3a73-89b6-419c-b94d-c322a84d6e8e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c3780e-133a-44ee-b9e1-df0120dbd4de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e98fda43-cc5d-4f32-bf65-deb29b015c6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a79a0fb5-bf8a-493b-a8ec-0fafad23ea68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "03e2da30-03c3-4a88-8ad5-4078b4d52bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32af90a9-6e4e-45b1-a01c-e92c4705cc9a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "639327ca-c852-45b2-bea9-242a58215d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "810e7a33-7daf-478c-b5e6-9c1fc8c0d1c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "609c6f5d-6bad-4220-8230-c840110a7fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ca31471-09a6-483e-867e-d56455d73444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb3aed0-17e2-4ad0-b8fc-88462462005c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c93b06f8-66b8-41fc-9629-50b98ffb964b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "559444bf-b857-4a5d-aefa-bb84f54f0218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "783ac581-19aa-4342-b7ff-9d80e71b80f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4d845b7-677f-4d89-8d01-a7a626b78d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7734f6c8-52fb-48f0-9ff2-67c8da532a7d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "092227f9-5a75-4303-bfb0-31344dfffa6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baeb7272-5bbe-4724-9f88-3e12c54929ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef65e79c-6063-4b3f-bab1-cdb4e34873ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c05a7a1-b4ff-479d-b920-1d50c51771a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba740127-5b91-4fc3-a40d-fbab016d6929",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b390a54f-a698-43b1-9061-010aeb57c02a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48347697-9afa-42bd-9136-b56f9cfaafd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06348ffc-2efa-4a03-af66-9319a4609b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f61ef44-2d9b-40b8-b247-aa40bdfe75cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afddc087-ec38-4cde-9472-7d1d024dc56a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e026e3ad-a7f4-4591-8338-748665f50e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebe99862-c6d0-47b6-a8fd-f49d236bccbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e27f6b3d-099d-4e8a-9f44-57a7f98cbc87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9781346f-73d5-4f6b-99c6-a64db00c1ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f8e80a-bf98-492d-b681-a23106367bad",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "170e9afd-3f29-4346-9862-66fa3733a8b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22921faa-5b42-4cde-9db9-048524b90358"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69319ef4-e397-446b-805c-91f683ab75d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "87259673-76f8-41fa-b49b-a58e69415175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd76eb7-1574-48f7-9d4c-6536146d514d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc300c79-4f1d-4648-91dd-862287d63c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f04365b-214e-451e-8c49-6630a7dbddeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed3d1d5-44cc-4119-a3e0-f46a963ebbb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "19fc85da-ab0d-489b-91bf-47bfe948cecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a48583d-2d97-48dd-bc45-7d07b224406f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffeebfec-52a0-484b-acc4-bbc87f2f4f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4420a29-c61c-47d8-a52f-19908f8e12ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1293e7d-c76c-40de-9ab7-db23b96d40ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c6b4d9f-ad52-47c2-b24b-cb1515d3e987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf0d288-0dea-47f8-a722-a8306b49ecbd",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aefe6159-2c86-4ffe-b68a-090b77123fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3d077b4-b2e4-451d-b64b-0f359bbc441a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f118e86-82bf-4eef-a4ef-c1a4daf322be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "67502f34-62cd-4f38-9e39-7d0205bed344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "631a72e3-d71e-4866-aed0-043c8efab5b2",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e81403-50fb-4cac-bdac-29ed91ca61fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df857316-c9a8-4a1b-ab2e-849dd494e443"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4567a1e-56bb-4b67-a585-655e303dfb31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb5ab122-2c1e-4667-9088-7a320aaed21c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5126b7c8-41a1-4f05-93e4-3f5dd458b4de",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f389b9a-6f41-4053-b8af-7fc912dd2a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d19c0bb-429a-4e47-b9b4-924314bd7760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c15a77-908c-4659-a57c-44fdc5c9f1ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae7f443d-6f87-45ca-9c05-133c20859dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "206af078-1509-477d-b849-015dd60569cc",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "234a2f26-a7c0-4c62-829a-cf45fc0a93e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "094e2529-24f9-4180-859e-16263d50fe5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b527b77c-2097-45f9-a0f5-8b4abef3daae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dac995ee-d0e6-4fb5-83a3-9d4cca8cb48b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd2bb46f-a3dd-4052-9d39-792418093f9f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26023e56-7e63-45b6-8ddb-a0070197079d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "138951cd-9afb-4182-b5ee-e91a925181e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2193dce-cae7-4dde-814d-a8b5adae0f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "09dea601-6641-4a0b-aa51-58a3b0ced5e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ce9c0e-d219-4eb5-81bb-e5cea17609e9",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e550f613-5a01-4b42-a3ce-e9352963d969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34fdc7ae-e0e0-44ef-8c1e-259e46894097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1691b0d3-7d11-4923-98e9-26689dad24b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cc046f24-89f8-4072-9789-9fee4cc77507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a74c34-89c5-42bf-883c-0a22794a881b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d04f5bb-25cc-4f66-9c9d-a9c202578223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b172dc0a-d952-42b0-99c1-f4e43beb6173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3cda41b-1ad1-439f-88c6-30977392201b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "593d09a3-372e-404a-bbd0-d0f3fa539d6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0938112-9a9d-419b-8e8a-30062d1e6139",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "691adab6-96a5-47c9-88da-5f6699b5c5e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d8a634a-61ca-4b49-902c-0ea008d1d1e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c5bb5d9-50e9-4173-b8c4-e9b3e8a6cf7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "41a817e0-a4bc-4987-99e5-0a1b91177d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34911be4-f535-4eb1-9d7a-927f58011dd8",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7998d68-6324-40b4-918b-6a827ebad42e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63ee1c4c-32bb-4004-96bb-e050704a10b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ad0cff-d618-4ecd-93ae-9bb5b6922f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0c41975-221a-4304-a3b7-060d5f7a0eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6180495d-12af-4bd4-a5a9-6d0c68b78d28",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d86e086-d9c2-4a2e-98b7-a2efda2bdacc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cec3608b-8e60-4c54-8537-0cb76ee6323a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b6943b-5be7-4e3c-8788-68aabe845261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fe3f3ed-aaf6-49ad-a9be-9c106fa4cebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55c85977-2b7e-4685-a99f-f4432491c671",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "029bfd87-3eae-48ef-9e95-548f50c5e378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0319acf1-bcd0-448f-a6e2-e53f7cc93904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b611cdbb-fd70-44bd-907d-5d654930eb5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a49d307e-c0f6-424e-9bea-50c060eca926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff991e54-e388-410b-a677-e4704484bc52",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc07b2b0-db5e-4b3b-ab69-5d47c0025720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fbf6e5c-499b-45dd-93be-14813fcd730a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3c845c2-1db4-46bd-98ab-0033063b7b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "249ec695-7671-419a-ae9d-85c5e6a41db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca91860-7787-46a3-85ef-5a5f14234e67",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b720545-25d4-46e5-bf0f-b4f61925a4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a0d2502-a379-42af-bff4-28c8741f62a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aca710b-390a-42da-8d6a-5470924da9e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "38d6a9a3-28f9-4fd3-b0f9-82c8c8fd018f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f61de327-bb07-4f24-9abe-6e42a7a96d13",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da7107f2-492f-45e9-bebc-cf3048d49b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f2db13a-4ed3-4174-be9d-08efc03af51f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec10271-247b-47ac-9462-c1a86f92fc8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4e48f0a-5af6-4d38-b803-2f011a316748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32447968-d09a-4938-a3bb-235467e1ceed",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb5d05c-a92c-4b79-974c-b94a87590279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3816c7a-e35b-4475-8855-d0ec60942b26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc967320-d18c-4f1d-8dee-dfa4da52546c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3e32334-e020-40ff-82e3-e2c598a7a3e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab5e20dd-3551-4855-97ce-01a2c010eb94",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "465da156-cbf9-4d76-8c1a-5f70f9d5b078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85e28e7e-2a5f-4e15-917b-0a9192030b0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c894a684-ac20-43eb-9dd9-c386332a2c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae50d10e-fb57-4763-a705-5741ecb7f509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46dc1730-17c8-405d-85c7-4f8a809b01a1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a84b11-6807-487c-aa87-240a79624496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7492c19-8a30-4b07-a152-a59e3d59c76e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41c5147e-ecbd-4720-b326-d0e272889b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a27245e-46e8-4060-a6fd-c731c603d21f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf55806-8f3b-4a73-b97a-278bf3e28f78",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f00a774-e5bb-4f5e-a5ff-038b36913778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb5b6e0e-fe58-4c85-bf68-68a76a323f98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de72fe3-b0ae-4581-ae18-a127fad69a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b9fe2b5-18f6-4e25-8b89-333fe26adbe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddd2a56e-2ef9-4156-aa49-b465a1b90547",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93055351-fda8-467e-bda4-b2d500d5e4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "597597ce-c4d6-4c49-bb9d-39dad8a19cd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "897b277b-fa5e-4868-a540-206d4116dc37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "07e704f4-696d-44df-a969-96d9cdf6ee91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d65d523b-30ed-4f9b-be95-19b978d582d0",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efad9498-0364-4834-bc17-d3d0f9a265fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7beab13-3a2b-44ff-a75d-1d529307be60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ca6f746-593a-4dc1-a127-256a1a307644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1e9c171-5e85-4e79-997e-c81a29bfe82e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd7546aa-4d1f-4b23-a01c-dfa13047016b",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a469fc-78b3-45d9-a901-fe8460b52077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d67dd13-d432-4c5a-9867-147386ee4c39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98370d1a-0052-4dac-beb9-7bb170748a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ef8c2e6-1c90-4721-b646-2ed096c163a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29c198e5-d318-4289-ba60-d347507a8a26",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d25d3a-8dc0-4783-9051-4088e35a6071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e51bdc10-c46d-436f-9edc-5ef3f76efe2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ff2c5c-603a-4a08-a48a-928e9cd7fd11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8003f461-db19-4717-aabc-3cd30b088bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619def39-7937-42aa-a2b5-f86bed9d7050",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edaf7f2f-d01e-4371-a85a-6e416a17fa02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d90f1e29-62ff-4c09-8c9c-05b3f3000ecf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e82a026-c883-47bb-a73a-d9ce1f2a0375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "44f2781b-7466-44a8-9a06-1319cf460977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "546d2a72-0f81-4c1b-8f87-a8684adb150d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d5506b6-df6c-4355-8410-88a3e63bbcd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "750cec72-6d39-4f21-915f-db7141889ee3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb642314-130f-4521-9c56-97ad329a77d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4021c957-8656-4d82-a19a-3f75c314b2bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25477edf-ef61-486b-aa9a-3cdb2068375f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e3dfed3-da55-484e-98d3-9c8a67625bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a739476-3df2-4604-adff-cad1449f4029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c340d6-aa5e-4113-a52d-73055d69f4dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8062f61-6d20-4b45-a913-32917a258a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e89c94-4de9-462f-90d9-532ef26aad26",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4592c4be-be75-42a9-9f84-ca7564b2cac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03b4c59e-0cf3-4064-ab35-58cdccaa8b0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99286c30-a032-4348-9470-93b39f8d2d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0d790cf-3d30-4403-90a1-5472c635f7d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "063ddf71-03e7-4c00-9f7c-29108f138eca",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2251f247-6647-496e-b74e-5664654a9cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0df9c4c-e54e-4ea6-9c65-aeb5cf281bbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b3086c4-e7db-468b-b695-f0c0b8c2244b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aff1c2c9-8ea1-40f8-9b2f-14ef107ea302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae64b92-ccc8-4ad8-9f67-71fe9bc12ed9",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf8c301-8a26-4910-9ccd-1b75a01c4643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdfcb056-7c92-4ea1-b2b7-ab9ab8a194d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a46bed4-f0a2-4ee3-8844-55d11de9b768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b2e9932-ea90-4305-9003-3b111677da2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4714d3d5-01c6-412c-ad72-c9acc84d659d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba91fe7-2b8f-431e-8837-2311928e38c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62254772-9181-490a-9dcd-600bee52c9ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df971ee6-4807-4f24-99a0-0f2f9f851cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a33bc8a5-7546-4ae8-9f77-9e68f000b352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ec42ad-69ec-43ac-a641-0545029c668d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f308deb9-ae92-402d-af77-91116a47223a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aac939fd-9d56-465f-9921-1f009605df6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25184ac4-8a7f-459e-99a1-da8a30a4e33c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "03cdd8e8-7b87-440f-8bc0-59747f8472f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4cd2303-6a72-4a21-9b24-1eaac8860897",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ff5e98-c228-42c9-a2fe-3ec2786be896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d17bf53-fad7-4e53-995b-8dbf099931a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e55074-eb2a-4a0a-b18b-e30c6beed0be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "19a98444-1b01-4574-b4de-436489329575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc8691b-dac2-4b92-b3ef-47f548bcac33",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3afc5a1a-dc86-4061-aebb-8771a096a68b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1833604-d134-4d1d-b7e9-77cca796bc3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e26f2dfb-db89-4fa7-a270-e8c11181dd49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d81deb0-aad2-4d9e-8706-fcaacf0ae4b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26ab731a-f66f-44e4-914c-15c3a1e328b0",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7343c16b-4c96-425f-ad49-4377937c0235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ec6e899-730a-4c00-b748-a468877eb6db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fb428af-6ae7-454d-a1e1-e07851c12c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f26f085f-2e27-4cd5-ab03-ecd15d77b541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0acffc61-6a15-49fa-afe3-e369b59286c2",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ceaf9cf-45a5-4f0d-becf-bb2787b6ee55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f4905b7-9239-40fc-be58-35c8d143a4b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f508c8-8ccd-4914-ba93-7ab2a1f5c08a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "46911217-02a8-429f-9013-5b99628f663c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c4d44dd-2be5-422f-b758-1e14a94569db",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef9f6fb-b74a-4450-a6f5-0865b6a695d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b783b37f-d367-4743-b7eb-41b7bc780b45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad0f816-e759-400d-b716-56d64e9c5b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5aa0b485-2274-4aa5-ac59-78a6b4ec674d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e6498f-fc0a-4bdb-b08e-5a14d41ce2ad",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa74f90-b38e-472c-b22b-9137c3391c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a79c850d-63ff-4653-a09d-198f39f1dd90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ebde76-d18f-417a-8535-6fba348ab84f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "01617ea4-8dcf-4574-b715-db51d5d33701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17136dd8-2bcf-4978-9900-f5f7678a30da",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc8d0347-98a3-4f4d-97a8-7ff783b153f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d76e8573-09ad-4594-b02e-3078c8b76186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0187f335-27ac-4c21-a5a1-66bd5e35ea87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1afff398-a7e2-449d-8cf4-baae9a59e455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b3855e6-e0c2-4927-a59b-6f8c6efd643a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d6efda-fc94-48fa-9c44-8f04da39d183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69f17a1c-f293-4daf-bc02-2be150461b6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4605c5d3-cff5-409e-b2f4-1df6d3c60090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e15f956-c051-4dfa-a0b3-97e4d6a7b2ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d3e081-8b78-4bc0-a62a-2b709cb49f7d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d4636e-23df-432b-9385-bf673e9d5272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8e820ad-5918-4a04-84ca-f2566ac5f166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f10997bd-124e-4ab2-aaf4-aeac690a3244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f3e26a6-c3a3-4c2e-a0d5-c3766042014f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "355f8239-19be-4575-b454-fb0f1cf8f4db",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d7d4a91-c493-4b92-8962-bdb7dbfe57c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aa10f91-819c-4b6a-a82a-83561dc17bec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b83190aa-e4d9-4e19-a4b9-d685f380f8e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "84986744-a093-4907-bba7-23838462abd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "214df12c-e3db-4d04-b49b-e1e3d9929309",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "011a08bc-d85a-401f-a7e7-2dc883c095c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "843a0e34-3b71-4768-8792-a2ee64e699b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "044b0535-2fae-48fb-b1e8-f78625d48e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8570760c-9ff2-4abb-a1c6-d65a9c17de37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9be8a2f-5283-477a-a306-2c85662ee816",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde1af47-194f-4aaf-9665-f84d6e2851ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c1e2def-b54d-4371-9e66-c8ac7dc35084"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffea01b8-0f07-41cb-944b-c6026ccbd5cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "46b043b0-c286-45b7-8da5-2b79072817f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77a067db-e64f-4314-a11d-06153ae32faa",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a25b51-bc56-4977-a85a-e4b4000aea10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b05edb6d-4787-4540-b123-63b6d0df69ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e529e393-97fc-4262-845e-c002406aa9e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "93385739-3988-4103-931d-8847be94b25f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f3ed7e-badf-49e5-ad13-869609a1535b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "638a5910-021f-4f19-a474-39676760db0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "379e11c4-4feb-4e5c-981e-6bcb3018b105"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "127873a0-da23-4961-95b0-6d0d851cf806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c36a6c9f-a64a-41de-b13e-fc5fa1792751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eada6be-b391-4729-a1f2-52038a0aa808",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94622cda-8f09-456e-94e9-656dfd4af054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6241e5c0-156b-4d84-bea5-8807b38b91e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d05988-573b-4989-bb58-1899952ae966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "98df1fbe-4a33-4845-acb4-befc2accee91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a293b8e0-822a-41ec-a3b1-d34e14935a50",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c8188f-d09f-467f-941b-d8f31b51b112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b688155f-f10b-4a8a-93e5-3d69340152ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85862d4a-8b02-4fab-88b4-fafab89094a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d49efb8-381a-4135-9127-9a991f66776f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68ae3df-10ed-42ca-8675-546b1b685e89",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ef6fa7-1970-4fb1-976f-909ec9896aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48272971-2f57-4a80-89ff-fece2640b1dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb09e05b-0733-4790-95f5-d11c6badc701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "536809c1-aced-4d86-80d9-d3260f60e787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "151341a7-4e43-4ec1-a022-83c0d1f0fbf5",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e5be34-844f-482c-9bf5-e925a61d215a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6f31d5c7-f179-4750-8d18-d8e1f78cbe4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "301663fc-76d7-4a62-a7ea-d7554173916b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ece9754-5f92-41af-b4af-493c2b188a95"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7988b153-6e33-4e63-ba54-bbb48243cdc1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "20c840ba-fb9e-4371-952a-7987679a1475",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3c2b974-0bf4-482a-8167-b6f51e723f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "adf52b73-c2e3-4195-bb01-2989e0a798a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b42700bd-7097-45c3-a922-001207199e69",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b55645aa-7370-4f58-af06-b0609cf27360"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b506e8a-c2a5-4264-bdc2-ca9e15c7bb68",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b2b9954f-0744-41ec-80ad-73cd3a62a012"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe35ca7b-a8fe-40a7-b8b6-1bdc4d5cf98a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1922f5b1-fa41-405f-a217-6c6a4b2224bc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e31bee38-6b9c-4525-9fa3-016716a896ee",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "75fbe9dc-dc05-4e86-b572-7752fa379ec1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0bc1bf5d-1df8-43a7-8d3f-b9414e75a27a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ef3ff8f9-a540-4aae-800b-3a20c08b2756"
                }
              }
            ]
          },
          {
            "id": "4b2c1c04-2a67-4ab0-b321-8a10b7aa5cad",
            "name": "Positive Testing",
            "item": [
              {
                "id": "69ac05ba-d276-4725-8220-5c9b4f455a9f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "43a25d4c-ffab-40b6-afbb-7800c217042f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b9967390-cb83-48fa-bf3c-ba1a987f2f63"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e9617e5-07e4-431f-b878-044424b771a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "805edca7-3e0e-409b-aded-61c95fe70e81"
                    }
                  }
                ]
              },
              {
                "id": "1d0e7a32-4681-43b7-b9c7-000d2f08f6e8",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd74f538-9881-4d8f-915f-90c8f409a543",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "197192df-66d7-468d-92e7-48e929e7372c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1546aac8-6ab2-40a9-9d70-08f86f029953",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b810bb4b-9bbd-49b8-a914-8eb85ea71e58"
                    }
                  }
                ]
              },
              {
                "id": "28243d94-ba80-4049-bde0-9618c9b8bf7f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "35a71946-5fa4-4d42-8f0c-7c7b62db0370",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6ffaf2e2-7991-4cf1-a53d-9b429b345914"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a5d1472f-4dc3-4571-b3c6-2fa8a069f817",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b4dedfa6-3083-457a-8680-5a79374bd29e"
                    }
                  }
                ]
              },
              {
                "id": "efbce7b2-31aa-4439-abce-f3b2f2389020",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "90fbbbdb-6725-45b0-9ca5-d7e009e28053",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b076584a-dff5-493a-8342-2c93b3379a3a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "01797c57-fbff-473f-8ac9-2dc1d666fba2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "738f9452-4a97-484a-b44b-5fa7a02a97e2"
                    }
                  }
                ]
              },
              {
                "id": "1b78bcf1-5102-4b5c-9d5b-c98a08b7796a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec3c7f1c-a539-4fb4-b625-4c1295462cbf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "52d05e4f-417c-4c53-a384-070c5aca9221"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "700c1f21-0caa-49a0-aa59-ac8b0a5ed3af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f953fac8-7efe-49f7-ae3a-c0b33dc30694"
                    }
                  }
                ]
              },
              {
                "id": "f16cda41-1f4a-42ca-9ca6-b7ff314c2185",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5d97ae6-8645-4ef9-ab9e-aa15efd58a8f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e254424c-507c-4112-b4a1-e42eb0605fc6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1890fb38-17df-4658-83d5-0c77439d9888",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "74e9b453-ea4b-429f-9281-fdee9430c515"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1f8d4ce3-2380-4dc9-ac69-c39cf557972b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e348ecff-4b92-4272-8787-ab3291cc28f4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8e8ef2c2-33d8-4f79-bf27-3676d0fc77ec",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "97391e5e-04bf-4615-8106-936ad502c5c3"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f65c97a3-9c16-4971-9cf4-0ec1f31c284c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d26d0cb8-ce3a-4a4a-a447-78acc49e36fa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9a75eabd-fbdc-4375-befc-0ab96b2ef70d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9ef169e5-0005-4c4d-8745-c1332b214566"
            }
          }
        ]
      },
      {
        "id": "7de60ff8-6bf4-4269-99fa-21dab8f8ebdb",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "167829cd-596b-448e-acf1-48e8924a1e77",
            "name": "Negative Testing",
            "item": [
              {
                "id": "458278e7-9b4f-44f4-83ae-ca73e8dcc916",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7f9f888b-a2b4-4bf0-b22d-aa59c024d6b6",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0dad3e4-3111-46fc-b5d5-ce2856f145fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eee0bb85-b679-429a-aa56-07ccb82e9edf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc612c8a-0a53-43fc-b5aa-8ff6b32236f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "39a67e9d-6fcc-4216-9827-9027ec6e5d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb5b40c-37a6-49a1-86d9-d84b10549ed6",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "874e746f-a844-4a86-9e5a-430f372999bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4513c5c-5179-4870-8b48-63150c5c8df6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb0c61e-63cb-4db7-83e7-d51f43daab0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c331cbe8-c9b1-454d-b223-640c05209f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03904390-e9d1-488d-a919-bd625c4a89b4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "342aa33c-bf68-45b4-948f-299e70e21605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a047d1c-14f2-41a5-8d56-d33df3cd99bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40567bae-cf96-4665-9ef4-04cfd99c5914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d973e41a-25df-49f0-a305-7ce470915892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e84d14-c5a8-46f0-a1a4-2190628060c9",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64b8d50-004e-4abc-8d2f-1a06546a3782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "431b386c-0219-4e37-a9d5-c2d135cfe599"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3805a84e-d232-481e-9449-ca350b9a0f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "afd35408-7f30-4d32-8aab-bc54bad24dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dfa26df-862a-406f-9d7d-31ad44ac7261",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d09a9e0a-dc32-4dde-9a22-bb5a0418e464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5976fc10-c3b1-4f5b-b2ad-30842ba22a6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30dc04d5-5235-44d1-a0ef-f1cf442d47b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fecd3e99-5686-43fd-aebc-94b1f45b9ece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ce7e67-1512-44b9-8240-a183dc142665",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "485555a1-4588-498f-bafa-0c16ed6cdfec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67cdb184-233c-4cee-af97-c964c4cea643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a49ecf-87e3-4f5a-96a9-cde19b3ce563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7cd081e-c066-4653-a4e4-2059434cfaa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "162126ec-9ff1-4844-a17d-a2930aca9552",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f31c27-3555-48cb-a975-b4209520f05d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13ddf288-89f2-4e12-8cf6-89ebf826169c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd67dde9-b97f-41ef-9a68-6061663a1e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "16bce76d-fe37-4274-a060-48c28327a1ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2843f60a-071f-40e2-a484-4ea54b966c31",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4824ddf2-0348-40b6-8065-71cf7b013664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d354dba7-2a5a-47c4-a3c3-446c10d8e4c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b98749d-c9a8-4d52-bce4-800d02e301b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccda5add-4c74-41eb-aa2c-ad6508361550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f8a825-d30d-4598-86e8-213d6eb2c793",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "359c8d9d-f57f-4fd7-a0ee-e52a0a7ce1aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07a66085-a562-4c44-abbd-56768ac600c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "911f6980-bf98-4c96-8c74-178512756823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "82c8c560-6949-42cf-b1da-a1093059795d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "527ead3a-93a8-4cb3-9354-094cbe854e63",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a5b2b2d-9b30-4ed1-bebb-4465e4a1ac62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a62bf6a8-4fb9-49ab-97e6-50f74e5d816a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c182367-627e-4b6c-a44d-ef998a68b7b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2884a9cb-0f68-4a2a-b7dc-5f63c12ac0c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2cf1d2-a996-4bbd-9edc-1bb5f657897d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d89206-9731-4a49-946a-84a9b14556c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c937041-5ece-4fb3-b7e5-640428d62697"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b04eed-0f48-4303-ae69-184cb6b32916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b1179cdd-972e-4347-a2c3-b093eb79fe84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e03cc998-5ba6-4abf-bb28-3d40e5c59ec9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c84bb08a-ba6b-4bfa-89c5-7648d7e697e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "054266bd-6142-42a6-94ea-47c641cc6f05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a5b7b36-2296-4e3c-8542-0e4aa9c9fb82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cda18118-ef30-409b-8e39-55d5aa0738ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d38d56f-85a3-47ae-92b8-ca96c80fbcfe",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "358c1933-1366-4a25-8894-8566c1e98b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5eec6bf-382d-4dba-aeea-4ff44d8ee4b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a5c8f42-dfe7-4238-a1ad-a02813e35efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8266032c-b5ab-487f-be00-8e7ffb186810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dbb341d-f1bf-4500-8d45-77363e023f3e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac74ebe3-e2c8-4a9e-88d5-5ee03b45e82a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8a809c9-d969-42ce-a075-a51c602427b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a317e5-f5bc-4b07-8f2a-0fe907b7983a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "13feedb3-084f-47be-9e18-c8dfe2e106b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce14ec84-b94f-4027-8479-c4f70d962930",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b50176-4f79-46fc-957c-e0f71dbdc029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bf56466-1556-446c-8255-2d1b3242725a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d369071-4ddb-4a98-97be-e60dbc92f8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb532450-c251-4a95-a78f-21999b87188e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be08de08-b92e-4223-92d4-5cafeb82fcd2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70255067-1291-4bd8-b261-7e5407f7e495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a4486ee-11ca-4120-a57e-ae87976cf6a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4083e3a-3bff-4239-8da7-b12d027e04e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6dd608a9-a794-4d07-9d51-bccc8b3aabbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb22a25-ab76-4a6f-8f94-c82c7deefe7e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "120026c3-e333-4aaa-b6cf-7afe8aa01434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9712f87-0555-4014-9c4e-dd0e81752807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "360f3517-9f18-4a5a-bce9-1e941819b104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "54d4a68d-be7e-4844-90b0-53ba6bfcf2fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28647ca9-5987-419e-a18d-c3c8a12f0c85",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2309ec1d-f487-4317-afb9-260c1778706e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb423bbf-c4db-4ab3-bbdf-a0bbe65698ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0906dea6-3ddf-4c78-b6d4-2e8859740703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b525f305-dfb1-4653-8197-0059b2876f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84791540-9a85-4979-9ffd-a9d0fd5ec6c1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b0e067-ef08-4dd3-a76d-075b1384af7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f442f3e6-6d4f-440a-8cc0-3c8c7914f18a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a76ae4-ca45-420d-99fb-845e15eb42ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "040dd462-814f-4aaf-a2e0-7b84dbc9a310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9141948a-0a71-4595-8f49-5d346a3a505d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02bf1d31-e4f4-4253-9970-ecb88726b87c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fcb5542-493f-47a8-974d-aac7df24e7b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b968e7-cf06-431d-8a61-d3c967575c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "035d2e26-7edf-4365-90f5-f24b275e8a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70d40239-ac6d-4225-a6ef-725608c7cb8c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca2ff67-c899-46a9-a012-401d089e625c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "509e6377-9a9f-47db-807e-ea318019a972"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c41301c7-f760-4b9c-9e42-a8f40d8d34ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86229c88-c1c5-487c-9cdd-3e8303661400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e06a57c9-fcd3-4522-97cb-bb93a0db7b9e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22269a57-f6e6-4f10-a2c1-ac0c128e7213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b213815e-287f-42c4-9690-46cdbe027730"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2860add1-b10c-4898-8e0a-5c4e810fc6fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35a267a0-8d6d-4bec-a226-4215bc58e7cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d0b1e08-33d0-41e8-99d3-8e7b9ccbeee5",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "279ea452-6769-4d3d-8b9f-c54416b02036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7556a3c-e436-4fa0-a608-8696b94ab016"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "293d6e1d-bc01-43e4-8662-1768bc16a13f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6340a906-6b8e-4c09-bcda-7e578f50e0b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "852a448d-2218-4979-b167-f05a3fa98d0a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05025e09-7805-4290-a2e3-b04d5996ef27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0ca906c-c48c-4a95-bb2b-27656df5865d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce3ea6f-7588-4111-9f25-476da258c38a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1dd6a54-5e1a-4eb7-901a-242bba750728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f63ffb5-5737-4c39-9958-6201cae39c82",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2419aa94-69e5-434b-9b42-7c0d043aebfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "166bf2b7-c79b-4c26-91db-675eb108ac5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b5c7da9-3080-4e25-be2c-65352a86266c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfcec2ae-ab26-4689-b5ca-1c9b88cfa87c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90092cc8-16c5-4b3b-91a5-a1ab2afb6be1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0609e21f-d948-4d12-a896-ddd1a52cc122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ab17e48-918b-4fef-9698-1e9dcf1d6371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d64d9bac-3043-46a1-a401-fa007820ff6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01cced5c-6dad-4d32-8718-5fe4f6e81a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf02f1c3-ceec-40da-80a0-79b0c69aa2a7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d830a008-84b1-4ca0-a89d-76812c757d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33ef26a3-20fc-4d06-9761-b33cc8365c4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5188a493-fddd-40e8-864f-2e5ac9465ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "113cf278-3480-498d-a0b9-576c50380f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef69fe59-501f-4901-822f-0fcedd5deb10",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1efddf43-3c38-4111-9aae-a435c835b985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beca04c1-4337-4062-9f43-32318f161a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b05dcaa6-7833-492d-9835-35b48cb5c3df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4e438ab-3f08-4fd9-9a5b-6438dd2c0368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdec8536-9510-42fb-9e19-3919bedadb85",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf3476f-7d86-4ac6-b859-6f509058cc20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44a3f88a-3a7f-45dd-ad5b-269d79708cf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e7314b7-7cfe-4692-8176-c3626ae55134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f47b31f3-80ae-449f-a8be-9494e007763b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81146555-8dad-4d13-8d73-4659d9e143f5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb146ef-a3c5-46ca-a677-15a2b7139e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5da2fd8f-697c-424a-b737-fde68867d470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d961ce96-00a0-4c2d-812b-a64e6dbbc4ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0bac4db-735e-458c-b2d3-b17655e69586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f520c7fc-5012-4bca-b216-720f29c8432d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac811e1d-39cc-47ef-8eac-cbae58eec27e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64eaafc9-787b-44a9-8a89-9b7cd2ee5372"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dee24750-42b9-4129-bc79-6759ee62c825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62958214-33e5-4112-bd82-037aa6724524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f80f924a-d82e-46fe-bc24-c9d4619f4ea3",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c43cc0-c080-4ec4-8d4b-29f6cf7a20a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a10430b-421d-49da-86e9-5d77d1e23195"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f52b915b-bd07-4940-949d-47bc9a3534a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb89207a-97fd-4c17-8544-26bddd4871dd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ff62ccb2-2981-4939-8050-a2903a9facd1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7fc51c00-494a-4896-8be2-358d894a0882",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62e8aff8-e194-42c9-93c9-fc175c7d78c4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7a912a78-aec2-4520-ae87-307d001f3220"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2193ac85-b107-45e9-88aa-a3e8b4ecd782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9c739334-664b-45ef-806c-6da079efbe8a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f2a25bc8-aca5-474a-844c-613fe1bb5ed9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "39e1a204-2a36-48a1-b42d-ee7beab291b6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4610704-f69a-4ac1-abbf-07c40e309a44",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93f6e6d2-c27f-4ff7-a344-2709a79dafff"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5d76adbf-c656-4166-9508-22e46e7401ac",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "50b64046-014d-4e39-9abe-3f428acad5b2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4e927b07-d287-456c-b37c-5363e6449105",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f731ff9e-a7c7-4acf-9902-74aa5312965c"
            }
          }
        ]
      },
      {
        "id": "018758ca-95fc-4b69-9f4f-5a4d94a0eec0",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "ac078cbf-0f72-45a6-90f4-1cbcaccc349c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f5a63a68-6eb4-49fa-af4b-13d4c29d854a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ab7394a4-ea3f-4168-b3a8-2cf650ea0659",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10fc3eff-105d-4304-8f60-5a9a88803e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27abc6a9-b6ff-43f0-aea9-4d6743e738bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d4905b-7b73-4c52-95cf-b59f9766dc30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3db490e-2c78-4dba-997b-d2424310de34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a3a77e-d5b1-44f0-9fe1-781051dd7771",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75418ae4-d0c2-4560-8337-d4f0c6083c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99ee54f8-acb3-41bd-8937-cbe1142a4cd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7e1e8a8-e237-4c94-b6bb-4529e3aee4d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c95121c8-2938-4c65-bfe6-613570d30a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f96fc096-eb5b-4997-9a76-62ede4949cd1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc5b8a77-573e-4337-b21e-4a3ff57b35e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecc08cfc-d66a-4c83-84af-238b76d58ead"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe70d97-25eb-49f9-a24f-ccacd331a7e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f7db4ee-45d3-4e85-a887-4f2f07571e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49da1c9c-98c2-43db-b9f5-fe430e940a9c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b278a96b-e62a-4eb6-9e58-0ff1bcafe9af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5ed4864-7945-4817-92f1-39273a26da89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c95f7811-27c8-41ae-a25e-bc604630a186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c10a86aa-df57-4401-926a-da68c5b122d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af46c6e1-1942-4900-b554-dcd4360e0dd0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "983be210-1c1f-4be4-95c7-3e8a464db837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5acb818-2b97-4c8c-96c6-f8efa0a82be3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c5660d3-5eac-41c0-be72-5a47e2adffd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "375f8e70-de52-474f-b9e5-809b93160af1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f9845c8-2171-4eca-aa7d-286d3a5654f0",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a757343a-2ba8-4c2b-9680-d2d5557f3c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cb28d7a-8c61-4e14-8895-53459b9ed62e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "994923be-07b7-412f-a236-5f07300c2a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e72025f4-1eaa-4e1e-b7e8-eb184b65af0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "181da331-383f-425e-8732-5a3a52edd172",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "334dd7ce-387c-4001-a29b-68de1a84c111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ce0d6a7-f546-4464-8dd0-d8d66fe4073a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b1f5a44-2c7b-4171-b909-41ea8232a8c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9453c5d-873b-43dd-b8ab-fe644dcd6814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d28e07c9-3f72-4250-8093-2a5263f6ae7d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac6449fc-6249-4b61-aa51-8fd92c2a58ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c86f192-95e5-4d43-9227-13870c29f6da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ced9988-6040-4b06-9e58-f953dbf9b6a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ff48ba7-f683-4dd1-b965-dcbf36a2be9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d92d6df3-d4a9-4841-9d3a-065abe5ea2c5",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb31fcb-33ce-4efe-bd2c-b1cf072a1d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78cd71d8-e9fd-4d71-9dfe-0190b29ff1cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4692d71f-76a6-4c45-9b42-cb9d901ed68c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2746221b-ddca-4b07-94bc-16afd3f72a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263c57a8-3341-41f7-a670-6d2063ff1b37",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c20deb6-6553-4f4f-949f-d790da7a8e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "280c5307-6ed5-403d-9c79-fd2c24f0c59b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c44adf12-4988-4549-8e7e-5fff00174322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "da39237c-82c1-416b-a0f2-64ba39b47ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "370a7a39-efb4-4752-99ab-8b35e34a796b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3960901-c105-41d2-b720-318183ffb22f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ddee773-d117-4445-8252-a2da304d5c91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3d6d01e-429e-4271-8664-5471647b7bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "52ce840d-7b2d-4cf2-82cf-0abad8a54e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca9cf6c-ca71-4b7c-8f7f-935174c53344",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1e9f15-d579-4882-bacc-44b954b946bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aad36dae-2030-4009-bb60-bca774651c57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa2ccfb-6f95-459c-93d1-483cf341ee4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "393c13b7-87da-4e5f-9132-014e06d465ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "698b426f-f82f-4f92-a965-3867c5cc7836",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fb8494e-87da-46a5-94ac-2ea1e6f91715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffbe8d0f-fb1f-4a5c-acd9-607fce54a83c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21fa47d7-5d3a-435a-bec0-9adeb98dcfdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "097abddc-59ad-4e75-8b9c-37768d068b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07b3bbc7-86ed-40a5-be90-dbc59f33af5f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df329b52-02f4-4994-93dc-9301ddf5ad28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9796544-50ca-4970-b830-043e55e07981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43501508-965a-40a4-9fd2-159a4fe8667a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "20bf0dc1-764c-4029-a6d4-05bb28d53c87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c31365-1754-49b7-9bf2-6109b5836d26",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20fac7dc-f807-437b-b3c9-d8946e9e806d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb36b986-000e-4a2e-b485-cd42c5507356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b8be3e1-2e68-483c-9c35-654fd1bfdb3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "22dfdcd4-c35b-41a8-b97a-ea7835240e3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af6b9112-9bff-4098-856c-fbc5929e5ffb",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b798c7-a797-427a-abb6-695fe3271cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43eb82c0-a79e-46c7-9e64-37c63bbf5f31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ed679a-8af2-4d71-b22b-6e565b0661d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "79ce3f45-b7ad-4729-912a-98b958c76568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a0b2f5-f8bc-4573-8789-6ea1fc8fc24c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f45a76ca-edcb-436b-806f-90788d7c7176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5076964-48c7-4f3e-a68c-6e010591ea78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ca8279-3a18-4d6c-8a51-00cfadaedc59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e86f6307-a9d5-435c-a7de-5bbce33cb2d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8525562a-1b0c-4cca-ac61-df5fbaf6caaa",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c985d3ea-fb45-4891-b194-e38e98af6683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d477830-27c7-499b-89e5-603390ddce51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa8a1efb-f98b-4e4e-a7d3-f85da9aa5a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d87b101-913a-4b56-be94-4bf5832b63f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "397e2e6d-3025-4246-8a00-24c0adb2df9f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1881da94-dd86-406b-9ce1-046d703e8a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "387cd562-ee7f-4131-9d60-c036e78e4cac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5cd26e5-7930-4df9-8893-8da485a6d4f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "258749d0-7dbd-4730-9881-f8020e5742b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "100ff76c-ed39-4176-97ee-5c4efedac9b6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd4f7b9-fdda-4d73-98bf-a5835dc1c6d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e04871ca-d88c-4afa-b32d-81ab51c3916e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd78438f-d023-4b9b-8924-d7533b4bd0be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73818b2a-694b-4252-90e5-f97aedfe1241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11861a24-f182-4a07-ac09-3fce846d32d1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d34036-86c7-423d-8b12-cde145ba9699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dd746ac-4d15-4122-9193-60b2b6ed6e2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa0b5a0-531f-4b15-b8e3-12cdedfca6c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0496810b-aed3-49c7-b659-ef1090fe0206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa08529-5af0-4622-8f21-f6ae16e20739",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b31e353-73bf-4dcb-9b82-2afcc08c69e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c971115e-b0cf-4e4f-8dd5-b86d398ee03a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "072216b1-139e-4943-8cdc-5a5a2e3a78e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc01aab8-5eca-4cb7-9aa5-9b8c3e4f5a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef89c76e-c6b5-4f70-9b2b-7f465e1ab37a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e879ace3-f95a-4a22-a3f1-0b8f1936975a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ff86dbf-92e8-44f8-91af-dbb8a0003fbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba7f6fe-3fd2-414c-bedd-1893d95f7377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84f75c97-3b8c-400a-84d4-1721fa89564e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e275edff-af28-4afa-a786-05757601a124",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f41b3c7a-2b29-4b71-8b3f-760a95be10de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0adce58f-e897-4519-9ba2-ab7ff1039132"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9182493-8496-4bfe-9688-07283ab53a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d491cc39-81c5-4c9f-a53e-7194f36e4f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33de979b-baff-4039-83ff-a008bb13072a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a683c223-6c1b-4c78-8b22-ed9070f6d612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c985e7d8-3ae7-4ac2-95f2-40b6e151af22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88d4f596-c1ba-40e2-9806-5f76b65aef9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb9e734d-e319-4486-9354-f2c425caaa1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04864e36-53f7-4899-bccd-4f5ceb8f7c13",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a84d9b7-a11c-49f5-b4f7-655a44f89c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6545a796-a3c4-451a-8803-77a43cde282f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd15a223-eddb-480d-8838-af28ea4c1079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64de671d-8df5-4986-88e0-ce06630e517b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b9f4479-0861-43cf-85fd-d16410773352",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "852265cd-6298-4668-bd84-eeffdc017a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94edd5d7-d327-466e-819e-c55877152201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "280daef4-f080-4ef7-9d9f-1241196d860f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "639b273a-c561-4566-833d-acc7e9e07dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e1c5bc2-90c6-4dd5-9763-b420c16afcfa",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f576d067-2bad-4d62-8d82-dcf1cfe45aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d8c3a80-d031-46e4-922a-f331dca84759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e6fa50-b9af-4808-93fb-1ca42a47c176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddd56ce7-8b1e-4b36-837a-c82e84c4448d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46750fa2-1595-4048-b419-50ce76546836",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb08f4a-6eeb-419a-a5d1-82f44f4daff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e562844-5622-4bf1-8fe7-00117476abf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e0b64a1-77f8-4e1a-a172-14c534674adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "479f5b30-6482-4866-855c-813782019d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a26da67-56e9-4929-a4f4-029da68f4da2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6dd44c9-6d91-4c7c-b24f-d45934d8472a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e78b34f1-53e5-44a4-ad16-331f0c28d6e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d52c407b-dc55-4c82-9731-70d53f13d319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73bff1d8-b29f-4c5b-8848-fcdd2cdc0f91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "019669d1-d29e-4693-a903-ead5353e798e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdedd4da-7771-4a5c-ae1e-1540043cbb7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7378dc3-3f9f-4901-8cdf-d84fa5ead973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "872e5a1a-8136-4b0f-8723-653f70c66929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1bc7db1-8388-4234-b219-562e5042c070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bcf016d-8349-440c-af27-72c137c1b0d7",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f300a41-8afd-434a-b5d7-aee074e8429a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faaa52e7-ba36-4ffe-be81-1db75a09f473"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d66d6fdc-233a-4efc-944d-2cefa256b3b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c767e85f-f8ed-4dd9-9f93-e328b38e1f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e851471d-7f1a-4107-9192-103937eb2c51",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e87f014-33bb-43d3-b686-58c570601189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ece37096-5720-4162-ba34-04c0f729a401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c6c8c51-49a8-4f52-b17c-242ec1aeb3f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3fde913-ac3f-427b-8d1e-d506ef20be9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b94bfe27-ae67-4cbc-bdf9-7bd30b5cd40f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "583fbdd4-f364-4a60-9cda-36abaab2f4e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6e9b087-7616-4fc1-a9fd-bf259b51a5d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf00ab3-78fd-45c3-bbab-c3eb9c00a476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8643090d-1271-4337-9466-5f7ceaa79356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b56fc6c1-6ea0-4924-bddf-289c138476dc",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfaa74e3-50b9-4db6-9822-dad818c4e87e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c819e432-dc79-4bb3-add5-4b405dac619c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf5bdbaa-a9d4-46e8-b5f7-f579deea4f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9644962f-afd3-46a0-ad3b-5229ab4244df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bfa7b3e-0e22-4c55-a5bf-269358fe687f",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "413716d1-8711-45d3-9901-b0b1b60be252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5a4caf6-a99f-4772-882d-636efa59c48f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ebea6f-6c7a-4231-b957-db529751d987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf702b80-261e-4ca0-9232-a6b1fd14f6fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a44a94-a8a5-4248-8d2b-3c3a87dc3c6e",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd77e2a0-36ee-43ba-9565-46400774cd60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0881b38-fd3a-4acb-a368-d19bb5de3d38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b6d43a-85fd-497b-a523-cfe3a3f14c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5c90d03-ec83-4117-a6dd-ec422d21dfdd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "838e7bbe-73ad-4cd2-b901-ee6b453b12ae",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c90fcc5e-89b0-4b82-8125-9509478ab7bb",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe16d694-3c7f-40d6-aff0-ee9a459e0880",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c66582ff-bd13-45cb-b282-31ce5fc0a33f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb9cbc2-bd6d-45a9-9bc1-66c808b7fa0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3e5f7f4c-9f87-45fb-8ee8-274142e39270"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b48e9e91-4288-4211-b11a-9f3c9bd16c3b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6dc76b18-4620-4bdb-ab85-68efe6e31a25"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd074248-8e23-427f-a229-fab389ca45c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cfa9f619-34b3-4ad9-843c-430d7bf8aac5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b5ea738a-928b-4f26-bc93-2e38342c288b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a099772d-13d7-46d1-ba42-54be047575ac"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "86704506-adb9-49d2-bc69-ff01b21f695a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "46bbc831-25b6-48e7-9aee-2d495770bb75"
            }
          }
        ]
      },
      {
        "id": "7b9828bb-dc36-431c-8567-10c29019a67d",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f468639d-85a6-4bcf-83f9-f6f705f8c476",
            "name": "Negative Testing",
            "item": [
              {
                "id": "97ba2e89-7e67-4dc0-9e8a-f30a9d862284",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fd65a153-9a29-4349-a108-98a74620995b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a5dd332-46a4-4522-bc54-2e183b265701",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c84326da-95ed-4aa5-a9db-260b6f469428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a390026-8c4b-4d41-8f10-e3ea15716abc",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4095a876-1cff-4abe-9156-c9d764c2807f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15771529-6212-447b-a42e-2ceeba0b7d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d174d8-3a8d-49a5-a864-3c3f57850cc3",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d181c9fc-a098-4151-8fe5-6f27ec02406d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9043ae3b-2568-4d1e-ae27-59bd48b6f902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f5fd92f-9338-4b28-a681-975831a7c794",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe94379a-4c37-4e82-b778-0237eec60a93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9862bf1d-7535-472d-90ca-dcbbd0fa0000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6aeee7c-8c6c-4281-93d5-5e92e95c7be8",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc560936-65de-4ceb-bae4-9c7d7c00bba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dca08715-f4f2-4f91-8268-c8eba5f5e8c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd19181-afeb-4241-903f-e196dff4201e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd72a968-5f04-483c-b232-7b30bf9f4581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20c6d8ac-8184-40c3-82b4-4af69ee0f2da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "927d2c9c-84df-4409-88f0-6f985f2bb8a7",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59a78472-b184-4a67-aebd-9d1a75b1d792",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "566584b8-1a97-4d5e-9eb4-ab3f79a09e30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "766010de-d0ef-44b7-9eec-9b9863839e4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ff22873-72f4-4fd7-a35f-3a8ab4a42b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "641e476e-adc4-4180-986a-5e032480dc13",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "887f7cd8-6ef3-4cdf-a59a-7bf52059c1fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fec92e1-b905-4a9d-83ce-b73d2012db20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ff87d4-3174-4bda-8391-5e7218110c71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91bf1124-7f24-46bf-975f-cc8792186ed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf8539b-96ef-40a6-a681-36e91a99afad",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f04649-5f5e-4ff6-9731-0b5cd63ce19a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98681210-1efb-4fa7-9849-3d599b2534e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7586ccc-28a2-4164-b9ab-f78b61a661fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4e1a75d-9fe6-4ad4-8631-8cd4c85614b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b892f544-6895-4a60-a0f6-19c9d8407a0e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6acdc28-740a-456e-b671-30c40e13ec81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9e1dfbd-ae84-421c-a0f6-d4ce090b5a1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc8c89b-7c12-44e2-a56e-ac18028877ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c71927e8-50ff-4213-8ce1-bfa5e7598a2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0070b08e-fe31-4fa4-b4b8-1f98c6e97c2a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb00aa92-b95d-4c05-8dcf-1e3816bae0a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "989b488d-d1d7-4683-a60a-c6a77a02a3e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af81eb32-98c3-4011-b6e7-1c99ab62b614",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86d31bab-7da1-4fad-99bd-8e987506e39e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d31f2a06-a650-4a29-bb71-73bd154f59aa",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2689aa2c-3fdc-41c5-bc63-11af9ede6856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d6c83a5-88f8-4911-8b9f-e1a41162fad0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f33b9a9-f84f-4899-90d6-21594e866b5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94e2975e-989c-45b3-9c0f-1f899485d5d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e7e6724-3dbc-42ab-a49a-fe40deb670bd",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ecdc658-0037-4b6f-b2cb-624acc2d78e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4ce7466-9fe7-4e1f-abb8-51050d0c8ae0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c948143e-e41b-4822-ac87-3defff777dab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "441f348a-43f5-4cd1-be47-54a55f6d1c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23bcd2f2-1ae1-4e3b-9b33-4bce16f7ed2f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8a8b88f-ea77-4450-8b8e-ff8eccb4fefa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9b8a0aa-7dc4-4f90-bfbc-bf77926198b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1dea9e-bc1e-49f9-8b69-5df9c06b8179",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5decc65-36af-42f3-887f-5a3f99191bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba93941-db14-4872-a60f-6fa93a2e5fe0",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38076f2-9696-40ba-85e7-75a25154d02a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d3ade5a-ad6f-4876-af7b-f8009b570f0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2af360f-3739-48c9-91b3-5a006cc247ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ba9bf15-d377-4dac-80d5-aa23a30b9104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8acf6da5-a356-4e01-9f12-e1c3dd00ef28",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69560105-0f19-4f1e-a6bf-40c6541a4d88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f779e566-08a6-41b2-9db4-2bf302eef974"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af7ac9c-ab1a-4627-a781-d4c09998a099",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4264ae0c-5caa-49de-8d23-944bb7bc549e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc18859e-e6bc-4732-b5fd-581a1cb9ab98",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "004d1a83-e5df-45e9-b824-d6ac9e99c7eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b805f9d6-ca59-42a8-ac8d-95649c5534bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df51c38-803e-417c-9825-66ef2db94666",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5bb1e54-31ec-4543-9c57-3fe8ed73c571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "702e8ae5-f484-48e2-9981-c0dd926b9b25",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0abdacad-f8ef-4da0-af40-151480c56d52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63928a37-0532-47b5-bb1a-9c120c314914"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4428ac1-b4e8-4857-a085-bd49b5f379b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d1b86b2-879e-45ee-b973-73675d81ec3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11866261-5f14-463d-9919-81ca3d2c5022",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73dd5d4e-ba60-48ef-aea1-79ab1d33a201",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bfb9951-86f2-4cdb-a30f-83194262edc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b76e15c7-7dee-4ecf-97bb-6e93345477b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d670a29c-749b-470b-b229-8e5247c51344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1efa0f2b-c278-46e3-aec7-7cea1b511306",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "703870fc-7356-4f1c-9678-8349a44c13f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85cd4067-1619-4a38-93de-0011cc2c6035"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "230e8dc5-25c3-4ce9-a3d6-6816a3c2ac41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdb71b59-79e5-4179-bed6-091cfb85b234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a1b7b1-b0a4-42fc-b223-f3b758d299f5",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5674b403-1aa9-4188-99b7-393cbe78dca9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adef0b78-b77f-473f-8319-f4b1d87aff23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da90b6b-324c-48b3-9dbb-b156a7dfbd72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b85b194-ff1d-4749-8672-72cae7793420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9d1a448-6321-416c-bfc6-7ed3b4ebd9b4",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d9aad2-52f4-4d07-8d8b-dba9c1f75b22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbc65c5e-f31b-45d6-9444-af52c6057272"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca8f1a8c-9eec-4b20-be64-b935d07b450e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44abd41e-0e80-425f-9913-5a3e92586773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4789065-7b9e-438f-aeac-e18dcf06bbf9",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55052287-ddec-4a53-bfa4-ce3b4a387b2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2c6a372-1f60-44e7-8340-e52516686d85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cde92f9-b861-4d83-bbe9-023cf9784d12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cb90615-efa2-4b29-b03b-462c4f4794f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8deca1-d9d3-484f-a199-0c19bb60728a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c927aac-6bd7-4250-a0d9-d5f1302d1031",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03087a16-34fa-4203-95f2-875adfe8b4fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0466f4b4-c8dd-4428-bda6-23ce65c1388d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb40f9e8-0b04-4d2d-863c-c50e39a0096a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "642490cd-93b9-4c7c-b013-8981aa8f0460",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5209a05-d81e-4853-9118-80b23126912d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "392513e5-a3bd-402d-86e0-d576491c7cf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d88e7cc7-c5ac-4557-bd7c-6b86a8bb6687",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17dd5428-db34-4e08-8ff8-a8ed92760bac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4263340-6aae-415e-99c0-7eebf58e1aa0",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94aa19e2-6497-4c6b-8f81-0c5b4e391800",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "916025ef-b280-4a91-9ad7-5a66c6f57ef5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85dc77db-d4f7-4a3d-8d59-a15ab6a51837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "545623f6-534d-4a2b-9a50-01bca40c4a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "464e2b4c-c8d6-4bcc-a76b-bbbff5f155ad",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c7dcb4-b73c-410e-b416-e6c30440f028",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28849b3d-9b98-4430-b43f-526cf855bae3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f815b4d-ddda-4b53-9e1a-539fd11baf0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "554666d7-0812-41bc-a4de-5a29b75bf202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a48d5102-d0f4-4c09-bec5-2725f5e71d9b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ee4b37-3ce3-4c2b-8110-fac083a38792",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c768115-2bc8-4708-8b93-aaffa2880770"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d7107b7-e27f-46f1-8179-06c176f7bfc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8167f69b-206c-4e0d-bbf2-cd5758191538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47455a8f-bcd0-495c-aa6c-6c95272fee12",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d318a27e-e841-4032-9b27-cdadb2ccc962",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f62bf92-f86c-4078-9a9e-868a149b5c3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3d9e602-3a3e-474b-828a-b4c78b3fd7ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d5dfda3-6f37-4b83-86f1-9d2a8ad13815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3850d130-0b88-4ada-95ab-95a10bdbbfe2",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f53b19-599d-45cf-8e4d-f460f5455084",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07cc5960-284e-401f-94e7-e1a1d02d0eb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97bc19e4-890c-4806-a958-ba51e0a03222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d51b78d-1951-4c0f-9ef1-ee0fe8f8deaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d04cfda-0941-4dd6-9df7-973c66ec9c86",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9510207f-93be-488c-8a92-4fa4908363a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b80fa968-9c3d-40d9-8a9d-3099f02185eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8841311c-8027-48a4-8240-7239567edd52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3052f2d-756d-4d16-b875-7c481ea0c7a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad61b18-4878-418c-8b18-c839d8299583",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "304ed544-7dc1-4234-b75c-ebea57d3d74f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6e9a311-f12f-471c-94f8-aee1666fe69e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "428f1ce8-65a7-4060-bb4c-900092375b09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e2f674a-8834-40f5-a2a3-190417420e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1238b4d4-d299-42c5-a7a0-57dc1558f82f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a510f1-199a-48a0-8744-db4ba0d97d4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6ae2c36-3266-4a2a-89ef-ac00c354ddf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d0fe1b-a5af-46c8-bd04-8d5f6bed291e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e866af7-23aa-4bd4-b24e-9cf8a0fdd32f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25012b05-016f-4d57-8e7c-7d9faf80b320",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b07bb46f-8420-4fb2-a288-32e22b0af098",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "992442a6-1fd1-48bc-8cda-3a9cfa73c47c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d78cd1b0-1867-4fe7-ac86-18639b43ece0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "055dd10c-623a-4e5b-906c-24d1c9575af9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f26dbf-2531-4ff2-9c4c-4f9f2169c14e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6de4a6cf-f203-4bcb-b695-81e4af9520b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2ce182e-b904-4291-9b5b-7dd4de8aa646"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b318d52e-9b72-4da5-956c-251a7756fe49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1df1f1c6-ad53-4af2-b276-2841c8d63b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e982c19b-a4a3-436e-8c73-298279c72b76",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe82029d-2add-4689-b5d0-e5e4090f79bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f615d9d-12d6-422b-b4dd-905f3d5be2e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86ef3f79-facb-407f-b7a7-b6f692e7eedf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aeae19e-dc31-4da0-b4ed-11ca9b1bcff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d3acfd2-4efd-40c8-83ca-cab30d118bff",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce76c7b-c540-45a7-9fa9-864310223113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d218a3ec-563e-4d6c-862a-2d55ab5d9aed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d00677e7-1ebe-44bd-ac03-c09b4275c92b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb990fe4-f53b-44d7-b4d7-bd30bc47adb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd7d1e0-c892-4161-8ceb-94a063cb0955",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd27d967-6cde-4564-9d66-3021a2d8ef3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5903435-0dec-4d9f-8203-ca0fae6def26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9492a25b-94c0-40b8-8944-25a3825f289e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87d027b3-c0e8-44f8-a6f5-4be6a8286260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaafbffd-9aef-4809-9489-f7618aa53d17",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b0c51bc-c036-4575-ad3d-242dff88dba8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03bf3ce2-b656-433e-9fad-f145372935ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f4c240-3845-4d69-94de-69cf57166008",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9803b8a5-9745-4f85-873c-b0db323e8841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c5c9ab-be26-40ef-ac49-83e5f7f60710",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2eb36b-cfd7-4128-97d3-20a645412b1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61f397af-896f-4aae-bbf1-a2613034ed9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc015d7b-a4c4-4626-8238-43c4809fc7bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e9e1144-44c4-4efd-8709-2ed6e9be429f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f67c74b1-7d6c-441a-b110-49a37ae446c9",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1821581f-7d87-46ac-a6bf-29c778cde83b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c304999-a61a-4fba-804c-f7819e06a4d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2a9f8af-7345-4155-b109-17b12bf8c8cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec928160-167f-4c1e-bfcd-2a1f8fb0b99c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "090b5d4c-cf9b-49f1-8e78-3c0e43eb46c0",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "103a406a-069e-4a72-8d11-c1e1241c70f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70035bbe-ada3-44c1-ac47-dc20abf08356"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c92e6582-8858-4a13-afd9-1a8a41fb2d6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b21fd507-2e26-4574-88eb-92c9a7b984cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e14a243-193e-40a8-870b-6e342eecbed3",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c569a35c-75b3-4ea7-b970-5e840515c85f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "241a55d0-ec4a-46da-9cef-768815bc101b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae6544f-c830-4f1e-aec7-c6e3eef96c48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94114a42-05be-40c4-9471-9e7f8688fb0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2716ef0-e67a-425f-9d05-93633904c705",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c58b4716-47a1-4786-ac5b-0f704b251e78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e6f194a-0d8a-429c-99f3-d1fc4c96e4fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff61bba-6181-4b03-9bdd-b6b5847e0bb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f53e4b0-3c75-470c-a36f-02c5935f18e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b2bf7e-0fbb-4c7f-a9fe-446df949b8e2",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96da75a2-bbf8-4bdf-95a9-18d665c59705",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfa355b2-9779-47e9-bdfb-389a921d7f79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ba2028-5ea0-4dbb-9bf4-5719607faa62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70ad6512-cf6b-4577-b9ef-f275c914f6f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf7f6920-2300-4742-88e3-4de4e51c7cfe",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c640f68-6934-4b39-8c2a-44f32bb81d1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "014bb174-ece7-44b6-bbf4-30fdeb847931"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fcfa1ea-0def-4142-998b-2606af792efa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99983ba4-c27a-4640-99b2-7becf82ca342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfea021c-4649-43da-9fbd-042923d59861",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a5228bf-d8a8-4c77-ad7e-29aa5da397db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d49ff52-6bb6-4af7-9fc5-90c132e3ff41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c9f633-04ae-448a-8a59-50c987f4309b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4b25fbb-1818-45ed-afbf-a76a87f4d8f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3237e39f-3132-420b-8fed-464b89a3e951",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70f6626f-70d2-4d8a-9fcc-043fb6d779c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5da4859c-8056-4fed-99a3-d21374fa1c89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe2f3890-dd89-42bd-a220-e9d7938f5dac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d140fb06-0b95-42c2-81d1-0ae251fbe139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c524dd19-e283-492e-82e5-07501c76a22d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496dd36a-e73f-4274-8ea0-eac4624facdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd7962a5-ac42-4ecf-8b4b-efa56588d449"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a32a91-902c-4be8-a78b-289a67c0c664",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a0fcb2d-37ca-4f97-a12a-94ca5d5e0783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de9d4a4a-99a6-4d17-a7a0-4fc52c20d689",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d5e60c8-001e-4bfe-86a5-581afe917c7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b45e65c-a565-4daf-8e6d-ea20110a91d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c45044c3-263f-4c94-ab22-702915872df2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8b7730e-db45-4ba5-93a9-5939700d1f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d143a8f-e297-4d76-976e-971b0fea86a5",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e32cd3-0cd5-4b6d-90b5-24ad537fb6f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "910c36f3-bab7-4a9e-a78a-1a33881e0c4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe5a5a57-283b-4dff-ad21-b060885728d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfc79f08-fc27-4406-91a6-ce0a318dfe19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc912ec-0207-463c-8c0d-a76543ed8421",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a30da4-697a-4f51-8964-15d1dbbf4b8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60db0ff9-59be-416c-9ba4-ec1a5558b09d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9141edb7-c78b-4636-af8a-4627215f8ef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b82acd4-e5bd-48d9-aa92-7e37cd8d0fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "649b97b2-8908-4f6e-8f02-0e85a5202877",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bcb4754-f4eb-41d2-a98b-adaf29017471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b48b5d9f-57cc-409d-85be-e124cef10381"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f74a576-973c-42dd-9c78-036faaf04bfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32f7a8eb-b17f-43a2-8a8d-0fb7d708bd62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "888fd417-6022-4e44-84c8-f63c77d8b1c5",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "557d8495-3355-4934-ac28-dd079fc9673d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82f67afb-8517-43c7-a245-a07067694ca9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3aca822-6f73-4f9c-8bfd-25e01175c10d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eca9e13-aae6-41b0-896a-597c11c0c2a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01742ac2-42d9-4621-9222-f1c933581983",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "088599f8-6f65-47ca-bcaf-d147a0bcad91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10e42563-2183-4a26-bddb-b9210e846435"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e32b55-5922-4d0e-818d-05ae6daa87d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf719c16-cf35-456a-a548-06189b032b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86fcd03a-d33a-4836-ba56-c8e5f4dd9eb6",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53b6748b-0f2f-4f32-a49b-0115b3f0b6ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5ea4957-ff34-4dc1-b336-f44bd9379a3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c80ed91-be7f-45c2-9515-3a6cd61b196f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fd8427f-dd3e-44fd-b781-060239d538c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94bc02bb-3597-4ece-ad65-d10db1c5762e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ae9375-661b-40db-87dc-0ad7b283b4d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39d791e1-bd4a-4a21-8f9d-168266fadb41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb293473-3424-438c-bcbc-ed9d2b896c5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e06b042-7328-4a52-8274-0157cf0013b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b64ec54-cc03-4b47-8ad5-c37bfcd0a833",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "337504de-6ad1-447c-938e-ff160182bbee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d26f8261-e1b5-4c43-adc1-c64850dd1de3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aec4ee7a-7d68-4c28-a773-9c8d08c5fb52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2af9945-69fe-46ec-9ce4-78beb887c431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71125240-af34-434c-a3f5-888dfc43befb",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbf76fdb-66c4-434a-abef-5594edc9cdb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bf6cfa3-bee7-4250-b74d-26e5652e1f64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22fc84c3-375f-480b-9060-11aae8876f40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a3e8c35-dd9f-45b8-9914-70b958b0fb23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91aeac40-c0a7-473d-acaf-3cfc59f82cd0",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f1ed20-8371-4e79-89ae-3554f7235e08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84b8cf29-ab12-4a1d-bfdb-0d93352b1424"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "271af562-2e77-4ee8-b37c-0c449785bbc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15b07a21-abf0-46c6-bc65-c9a054be147d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc60353-1cae-4619-bba9-60115ebdae71",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af1f8e6f-3910-4947-9617-52c0494fb1da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e66c0a08-43c9-4195-95c4-12cfe196747e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "941060a9-6b28-4955-afbd-f39b2a356aca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd5b4377-2c8f-4732-ade0-efe896ff4071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68168276-b068-453b-907c-821cd85e14e3",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a777f04-ff61-4be5-8491-e5adbdc9adbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49d13331-e050-44c2-bf1a-9e3bcc607bda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fc29f1d-4703-4f2f-8ffb-db36fc9773a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c96738fe-d7e1-4c5e-8b13-3fd5577da075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "123ae190-bc26-49c4-95c4-89ffc5421e88",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0955d0c2-d9cb-4bfd-aade-7f433b56f4c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd32c42f-2ad2-473a-aec6-109ab495de9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71bb6c6c-e83e-4c99-a66a-b81b83adb743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b2c2363-9a4d-4b6d-b7b2-5f0d50fab614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55baf54d-e213-45ef-b2b8-0fcaff666be3",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5749f37-cbc5-4f4b-9357-15bd89486334",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b42107da-c0a4-409a-a5b3-f4e73d0eac76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5189595e-c9f7-42ca-93af-d32e50ce3d6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46e103f9-270b-4126-94bc-92c1ad7ae5d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "107c4b0e-a5c8-434c-8de5-50f7bb880e8c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08211801-494b-4bf7-b682-b0eeee5849b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1d6f545-b335-4463-9b41-9b4dc8c3863b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ee1952-20c1-4958-96ae-2462cfc491e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd62ef31-fab8-4a55-8a3f-52170b314089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07227d21-ac4e-4fa0-b5ca-bbef50fb9803",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eb39827-2090-4696-93b5-1b21aadc6e84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9a412bf-e9c6-4c5f-aa20-df805e991e15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a5a0bd-d5be-49a1-8257-7a0ab75c725d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df5afbe6-a59b-4906-ba75-f6d14cfd30b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d5db725-9f3f-4497-a7a4-70e1f83da3ed",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d08a57-1c96-4a38-89e6-de39885756c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe6819df-7876-4939-969a-f2873fb7d647"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc6deb7c-ef8b-462f-b36d-5b04339d3f2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4db93cba-3e2b-4656-877f-79bec7f32f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4957acb-5e0f-47a3-bafb-bc8a677aee5d",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e29491b9-474e-4556-a67f-cce3da3e970e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a991cf16-fcb5-4a58-b4e1-7106a9153d01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf761fa2-9f83-4e6c-9934-e274fbd2ed56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c63b9ad-e7e9-4a63-a08c-5401677a8dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b00fd70c-c6b4-4662-b445-b8deec844dce",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc6f4b8f-c291-4242-ad17-c2bc7dc132c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c851a87d-d2ce-4b16-82fd-846a3f5dfc05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "048cfc43-20a6-46f3-b9fc-525a4a5e5233",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c7b829a-53db-4a6c-b962-d14b9491019e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ced479a-79aa-4c6f-be1e-5a7136922c1c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9162d4fb-657a-4589-aeb7-c72f3c530877",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e4690f0-4791-43ec-9537-4b8eb46a6433"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f931e64d-68b8-4ae5-a7e3-92ba0162d7f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bde84c4-3e2c-4184-8ff1-013bc5da3016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "617fd68d-6c8c-4f6d-8157-ce739d8fc2a6",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7327cfa-ad38-43db-a712-fbe718a58899",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f1da822-c9f3-4ae0-b30b-a3ab5b94bca2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8747ac6d-5406-4334-b6bf-a312f2d53acd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab0ac601-7049-45f0-a5d6-81cb4f4d088c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb35759c-ecb5-4795-b39f-e6f53a97d092",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ab51d7-9cef-4545-b2b0-92968cf127a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba1c025c-4a07-4150-b45e-138b23a2085b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb12860-d98c-4bcd-bef9-aa871e379b33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42349e14-7de8-4ccd-a8a4-e333016cba73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78248fd1-c0e2-4bf4-b894-04e1b30bb19c",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c85021f-f28c-4f7b-8572-ab97fcd701d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0238c3d-4345-4b5a-8242-407c62946e99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd73a78c-2928-46da-8f99-42f37bb5efcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0381746-fd56-4171-a958-4c39ac6970a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47eca076-c22b-4960-bf9c-cf0a7684a143",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea97d99-4f35-4dcc-b109-de34b71846e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77e726f8-8bb2-4f60-8387-cb50b724fe25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "804d0249-8812-4c2e-898d-d1e3e7e53f33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07029fb3-b51d-4dcf-a82a-040adc4dd58a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51d39401-61e0-4fc2-a047-2005777f374c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62e455d9-7e18-4379-aff1-946c497f56a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1244d878-a078-40e7-8609-ce6c94d75f53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66af2d0b-ad50-426d-90b0-8bf973bf70d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8de100ca-58d8-4b2b-9df7-4b361761c395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d00c39-ad1c-420a-bade-72e90f1e770a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de4844ed-ba27-4c39-92af-fde051c2fbe5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e18e98fb-5270-40d0-a7d2-53c2f6b4e63f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e6f7c2-629d-4f9d-a00e-3fd630cd29c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba4018d1-a2b7-4dec-8d24-64856cc59503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23224970-a5f1-4d28-9026-2e5b7eace189",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b03ee2b-7f64-4565-90d4-6932d55e5cba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1335a3f-66b8-45f5-a999-9f955c341635"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d9b05e-c001-4e5e-86d1-25c8b8403696",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8aa9f43-b210-4b8b-8e61-49fd5f7899b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e652e862-7af8-4036-a73d-b0da492970af",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa4911f-04e9-4041-a071-d26a5f107fc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ef27cfb-1429-4c68-aab6-7e9e9b177333"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e030e3de-23e3-4436-89a5-f66fbf8d4b63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3caf0e94-049f-4c9d-ae8e-d5b16236ace6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99bce310-f1f7-44ef-a084-d35ee49ad6cd",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebeaf0dd-9fa7-4282-88db-2a1566b9a58e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d63cfff8-2cf7-4fe8-b600-ba3eed302cd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d2f245-19ad-4e88-8838-c9ad1d960141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d3e9ad3-e7c7-456d-a575-0d7b4a1e0c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b873d3f-4cdd-4888-87a1-63b145a3b526",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b136ce-62fc-438f-8a55-a74c0a0feba7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47d1e1b3-3bfe-43eb-b839-442e2c2a1ab5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e607a68f-d7b7-48d9-9c8e-0a5a1636b825",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47741838-35a1-45dc-9294-d34d0480a720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60bf75fc-8f7e-48cb-a93d-8a1b19ef9254",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38147ee1-ccdd-46f3-9925-f4a234ff8f81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61336a9c-7ab6-4332-b5ce-151d298359bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef95a303-8d25-4ce9-a6d7-62a1129a337a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2597cebb-9eb5-4a72-9520-0ec74414e5f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf0a9eb3-e8a8-4e15-b3d5-0e6865e57507",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82b8b05d-f52b-4f11-bf9b-2979926e33bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ade72d9-ae83-4565-b5ce-62b12faa4fc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd1d99b4-e74b-42bf-8aad-9c3010c2eb42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d17ea191-4892-4664-b424-750b191aca46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "466bda87-5089-4070-a1bc-5253af5dd3bd",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e59fe7d3-6e0d-403c-9581-b0e985159a08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26c6e758-256d-4a87-b5ca-71db9717347d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26fd36c6-ed64-4f35-b978-714925a9cae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd63542d-97af-41ac-bb14-4f46d289ae7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1527814-32b2-425f-8404-35290235d0a9",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76fef873-1997-4bb6-b3c5-f890c54b9e3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cea0adb-54ef-4339-a52d-b2f78029d23d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af8a35a-aa55-43b6-b2e7-d6c5980f989e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3b5e756-9a36-4449-ac13-c8038ffbfedb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9859dd93-d474-4a6c-a66b-616639fb1a30",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821e298a-8337-4f8a-a0a1-379e2c0c955a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20480fcb-0378-4ecb-909f-1bcb6bb3d360"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf54175-036b-4bcd-a3c7-72a5dc0d9b94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c5e902d-3de8-4f65-8bba-5897d1fd95aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6564e7c-86dd-4613-be14-f793223030c6",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f125af-7e94-4876-9cba-a848dca6a8f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9f38ea6-5885-457b-9760-1987fa5c1f13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f13d1b9f-452f-4c61-834e-2b531277e78b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3351173f-6d34-4754-89f9-83f9985ee1e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a309199b-25e9-4e5b-bec2-deb5dcbba3df",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ac6af2-1341-4b1a-b6ee-3454b4efbcc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d82a1e37-4782-42f7-a9b4-4405b6e72b95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ebdd3b-3c35-480b-844a-56d62370ec78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa689060-e85d-42c7-8cbd-e08f8a70f978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d57c54-965d-4b5e-8ff3-bb0010232207",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37cdaa8b-f2b1-4dad-9995-0417ff8b8220",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c78831fb-981a-41bc-8844-b3adde73d38f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "defbcfa4-2a01-4b98-993c-541c13ac30a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c8b6077-05cb-4566-af5f-a76cbd159f09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46674b05-35b2-468d-917b-729dda163b5a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b7e2d42-133b-4119-bc91-a0b481d607b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0b617e9-565f-4c65-8452-68187d684879"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8cdec7-5fb8-4ff1-be64-6bca5751e785",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fe1e34c-10f5-412d-9143-e8a4a9db441b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59f0b75e-a652-4562-b0bb-bae770e44a43",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b44406-4123-42f1-ba67-fae5b73701bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72a1b623-75b6-4a7a-8026-891e313d7bfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "668d9445-71ea-4a0d-ac47-854d9ee81f70",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbdd2657-e45b-4003-9080-891f50e7bc5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c3ea885-0d5b-4a1d-995b-51b7486770d0",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e90fbf-2945-43c3-917b-6a8b2b280f26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a0f9109-c198-4d19-9c6d-549befb0d1fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2dbe65a-df19-40a9-b081-b280e3d9443f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1edcf5dd-8573-4935-89fb-f1a7c02c2bf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c2a1cb1-c725-4c66-81da-5a5d028ed400",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1451ad33-fc17-4877-bb5e-629279ea276c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "115bac5a-307f-45ff-a67c-aed256ca1c70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7699e94d-faca-41ea-91da-082121a3b8bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36a3c20b-3644-48af-9ede-2054fb4cfbfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e736dc7f-342a-4dfa-b52b-8aae57417cd8",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a976032-1436-4669-8c6b-07863a31c699",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "502ab42f-2833-43e4-b67a-7e58f4113b84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b982fb-328e-4e06-b90c-dfe848fa47f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38c73d42-3152-40d8-b3d7-88b2d46d0437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e077362-f9c1-44db-aed9-5bf776ffe104",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c95bf011-4b46-4bd5-a2ea-bf99020753c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cc5371f-03ac-43f9-bf8b-a9af6781ce17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6df14699-ed73-47d9-b66e-27121b9b64e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48e6bf81-c0af-457a-8ac4-8cc2c39ff729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8106b075-8903-4fb0-b4b6-60a9be182a27",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ab29b5-a710-4c79-80de-bb8c5b6c07e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48bcd45e-5f17-48c7-90b5-5eda7ab71626"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb81f982-939c-49f8-85ef-20d99834e49c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de1d5fb5-32e6-4cab-98bb-2b78eaa7953e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13883db9-a97d-447c-9519-a84f12bd8b90",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61139f3c-defa-4283-8f7d-adddd0c80b15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "998bb846-a931-40fa-8e6f-0b357f118e74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3139667-a311-425c-b109-c5ac3d1ae2fe",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c56646cb-6c55-486a-bb9a-8f974875b060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edbb801a-b73e-4e45-b6ad-b4944aac599c",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdea19a2-fbc1-4513-9c1f-0fdbdba1d63e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b979fd6d-d442-448e-af2f-a5302732d328"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ac8265-bb3c-4eb2-be40-8e272c86b2f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37b40acb-e9f4-41d1-99d0-60cb3ac1cae8"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8fbc07e8-8030-4c0b-bddf-f49318ac8eb9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "219da8ab-dc53-4b13-8f42-9ef0ecc1ed77"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ebda3015-03b4-479a-ad77-a88114754178",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "584cc45c-3f2e-4682-a745-d4c1ebb86d89"
                    }
                  }
                ]
              },
              {
                "id": "dc90a8b4-c65e-4ecd-8033-30c3db5c5b91",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f8eef1bc-806a-4ddc-84cf-e743d51b4349",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffbfbd2d-b3ed-4357-b600-3b02e8155eeb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a59f7769-4769-4b60-bee2-fc703fbe0c29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58bae39e-1629-444d-b025-04e2549ecde2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "80c011a1-9d38-47af-878b-98750b0f2d43"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3038197f-5a86-46c8-ac11-31ddf77e8aab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3db941cd-2b25-4341-88b0-8943a0ed1a8d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b404767-323f-49f1-a219-f94a2f12217c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f54369f5-e287-499f-85e6-bfc3739781bf"
                    }
                  }
                ]
              },
              {
                "id": "47979aa9-ad66-4e52-b20d-803341af1038",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "5273e3da-e26c-4c71-b5da-e0e70b5e14c2",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e68f166-9eea-4fe2-8849-c126b93340dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "34093140-7e95-42aa-ada3-4e724726f01a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3994941d-433c-4f5a-b507-ca16c4906e21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d02a60d-4a38-407f-b3f3-41a5bd2835d0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2f29f3ba-2315-44a4-b847-2751316afe28",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a4258d4b-872b-4cac-a7e2-50b46e1335f3",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2db857d-188c-4a72-a74b-d8370da7b497",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5fa75398-db13-49e3-ad33-bf87e15a6f56"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7e3b734e-4802-4a66-a814-be56956b9611",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc3c369a-a1db-49de-9a83-f37f8c5999bc"
                    }
                  }
                ]
              },
              {
                "id": "91498b19-955f-46d6-9ba9-fd699930ca03",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c79b56f-e4ac-42de-a87f-26e181a8c325",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8670b612-2cb8-4d06-a235-6e045b6a0967"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e1f1a43-2429-4f0c-ab60-746db6047adc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "99736273-e78c-47d7-9200-d9b2ff78ae01"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "93a8daf5-3c22-44d9-ba11-488ed36fe714",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "904f7f85-0f01-4a07-95b4-9d918f733cb7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "853ffd22-c91b-45ce-b661-8c573851731a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "146ae087-5aea-4fc0-a09c-32f4a7381907"
            }
          }
        ]
      },
      {
        "id": "32f4bc61-373d-4045-941a-be8d8bfb68b2",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "9168e755-8e09-4f8d-892f-e0e846970236",
            "name": "Negative Testing",
            "item": [
              {
                "id": "555ff0eb-cb3b-4edf-8366-b2bdf75068c2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "64d97b80-edde-48ea-94b3-dc903b74e913",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa97c9da-580f-4fbd-abb2-4eb8078e1f89",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0b3f99d3-7327-4813-9194-b7b53f3bc7c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c3884bc-1491-46a7-8f81-fc928db97ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a3058f42-6656-4f77-bfc9-7ccd69d17235"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dbbd6a09-ae4c-4ee2-b508-72afd46333ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "47f82680-11ba-44da-a5dd-2840fb039418"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce6076fa-4f82-49c0-a969-ea6ff7bac26c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d7da5b4-996d-4425-af0a-fddacca85f28"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f271096e-149f-4993-9546-786f45f7888b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "59492148-e6ed-4c83-9ddc-79cc90bac5d5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "361f1cbc-07e1-4838-a15f-d74968a3a6b5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f5385bb5-14a8-4cd2-ab1a-fd52af93d0c4"
            }
          }
        ]
      },
      {
        "id": "4ca1fae9-714c-4699-a59d-cd01e112ad8b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2c1d782b-3efd-4b34-ac12-3780769c690f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "32481db4-2a83-4340-9428-2f3a32ec8933",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7b116747-91fa-4093-9f79-6f7bfafd4146",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f89aae-c59e-4845-b69f-e37786490685",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "112b65bc-80f7-40ce-8c83-2d5c905e9f3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0376f4a-d52c-48a1-818d-ab4e5364f876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f103af89-3db6-478d-8739-343ef54be7fa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "afc597dc-204e-4032-acc9-ebef7f741afe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0184c1b3-adf8-4872-9817-f42c91c366cd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c7d432ac-2d3f-4e7d-872d-3fb5bd9e948e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "383088c8-9d14-4037-98e1-f4858c90032e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a8ae189f-e19a-4ecb-bbdf-7d630efcb202",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8a7224dc-8e6a-4fb0-a2b2-3aca8200bb1b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ae46ff9a-5559-4f62-928a-aa6e5582e399",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "24bfbb07-6e65-41e1-9af7-fc7dcfa40b2a"
            }
          }
        ]
      },
      {
        "id": "ade31db6-ebc3-4fa2-ae85-e53874e13f3c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "8094aa3c-4a1e-466c-a602-c7b24506a98e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cbeb0db8-730a-4229-bc4d-a06d4f039800",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "155cd97a-db58-4438-bcea-8611ee25bad4",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f60ab3-0a42-4129-802e-c8353902fec3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b762795-ef45-423f-bd4d-fad4359decd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d916932-5d68-4247-90e2-5fac9777d9c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b1bb4f0-29ca-4b3c-afe3-a7588b516a8d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bbcb9130-050b-47f8-b1c3-9630c26b0dee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "084f5c92-0bad-4226-a18e-348e3f14c76a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "598a3c8b-a367-491c-8d07-c783f5a96feb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "59e7b49a-7446-40ce-ac5d-e191940482e8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5682c997-3bf5-45cb-830f-51e0146b8900",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d5fef852-8de2-4f9e-a628-40bc45c30ef8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "612c3cbc-a23f-4ebc-bf86-8262c6bb2874",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f3d79c52-dc6d-4e79-8970-ccba7e9f8ea4"
            }
          }
        ]
      },
      {
        "id": "6b88490d-2ad7-4eb8-a9ff-e336c571c458",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4bf1b260-9cb4-43fb-b18c-73dde566a9f2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "112dadc8-31a2-4c06-b76f-d73571cbe903",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d2304681-82c8-4e7e-aa20-4941be53d8ef",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fd82c348-a7aa-4817-8584-a6a5ab25ea44",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "35012a2d-16e4-4e69-9422-b2ff17131062",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 34.327464788732364,
      "responseMin": 13,
      "responseMax": 290,
      "responseSd": 20.40527287684091,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1687308122199,
      "completed": 1687308143501
    },
    "executions": [
      {
        "id": "8d7b82c3-44e3-4ddc-b99f-26101f17bae7",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d23e0c99-d4f8-464c-bfe1-00e537bc503b",
          "httpRequestId": "c75cfee8-3e89-459f-93b5-be5d6e35e89a"
        },
        "item": {
          "id": "8d7b82c3-44e3-4ddc-b99f-26101f17bae7",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e945ab62-1b2f-4f68-bf69-afe936aa3f26",
          "status": "OK",
          "code": 200,
          "responseTime": 93,
          "responseSize": 0
        }
      },
      {
        "id": "97d2be02-8710-4299-ab31-ee06cbb5c71d",
        "cursor": {
          "ref": "5f98d868-2030-476f-88e0-8ccc79f71203",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "2f1f8bf0-611e-4731-83e1-26ff28e24d48"
        },
        "item": {
          "id": "97d2be02-8710-4299-ab31-ee06cbb5c71d",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "76df821e-aec0-4328-8116-f191a716f4d4",
          "status": "OK",
          "code": 200,
          "responseTime": 13,
          "responseSize": 0
        }
      },
      {
        "id": "f0e3a20c-0a9a-4d49-9610-cfb193b3e40a",
        "cursor": {
          "ref": "a8ce5019-6d22-48be-91f6-9a890d7aabf6",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "af4fcfdb-0c36-45d5-819a-4a309dce6354"
        },
        "item": {
          "id": "f0e3a20c-0a9a-4d49-9610-cfb193b3e40a",
          "name": "did_json"
        },
        "response": {
          "id": "051db086-dbc9-44d0-805b-a6f7867f6d41",
          "status": "OK",
          "code": 200,
          "responseTime": 147,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd94975d-5ee5-4d88-b660-74c07d839fcc",
        "cursor": {
          "ref": "bc0cb249-ad70-4d82-b82e-97e629dc94f9",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "78f3bf1d-066a-4803-8704-0fe722a2bff3"
        },
        "item": {
          "id": "bd94975d-5ee5-4d88-b660-74c07d839fcc",
          "name": "did:invalid"
        },
        "response": {
          "id": "d4c28863-ea10-4da3-96e3-05a3e688c5bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd94975d-5ee5-4d88-b660-74c07d839fcc",
        "cursor": {
          "ref": "bc0cb249-ad70-4d82-b82e-97e629dc94f9",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "78f3bf1d-066a-4803-8704-0fe722a2bff3"
        },
        "item": {
          "id": "bd94975d-5ee5-4d88-b660-74c07d839fcc",
          "name": "did:invalid"
        },
        "response": {
          "id": "d4c28863-ea10-4da3-96e3-05a3e688c5bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb8c624-1db3-4474-a0a9-e572dbe46aa7",
        "cursor": {
          "ref": "1a6907ec-dbe7-461c-88b6-de7179bf5ddf",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "343df864-7ac1-47bb-823b-7cd2a3d30858"
        },
        "item": {
          "id": "8eb8c624-1db3-4474-a0a9-e572dbe46aa7",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "fa618516-b3c6-4120-adf4-554818ed1dc0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 68,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50d57d99-0ce8-49af-81f1-736b67f49955",
        "cursor": {
          "ref": "5d41a5c2-f1f1-4719-9d92-b238ca2148bd",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "4d1ce903-d1d8-4bef-aafa-899eb4854ad6"
        },
        "item": {
          "id": "50d57d99-0ce8-49af-81f1-736b67f49955",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "3205e8d7-d8ce-4985-8305-d1bcab0ec360",
          "status": "Not Found",
          "code": 404,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c805f95d-0f81-47ea-86f3-1333b536d1e5",
        "cursor": {
          "ref": "209ae118-219f-4207-a0ab-64c0af55f675",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3675eca2-2230-47d0-b563-70cf7caed882"
        },
        "item": {
          "id": "c805f95d-0f81-47ea-86f3-1333b536d1e5",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "9ac514c2-12a2-45d2-b9b4-4c619f5bb504",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e22dd45-12cc-4048-90bf-b0e6a58339c7",
        "cursor": {
          "ref": "b7429d09-7c69-435c-a5b7-d4ccec57dd85",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "dbcb678e-8ef1-40b2-924c-ce9affaa017f"
        },
        "item": {
          "id": "5e22dd45-12cc-4048-90bf-b0e6a58339c7",
          "name": "identifiers"
        },
        "response": {
          "id": "ec991c93-e758-4b72-8bc8-f585176424a7",
          "status": "OK",
          "code": 200,
          "responseTime": 81,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bac073f-f1e6-4b46-b625-4df90f90c9dd",
        "cursor": {
          "ref": "bc9d44c0-4b38-489c-8d2c-007b7be23161",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3d890f0b-96a3-4ecf-919b-5bc70680dd2f"
        },
        "item": {
          "id": "8bac073f-f1e6-4b46-b625-4df90f90c9dd",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "defc5af2-9d84-45f6-9c43-515a6d3f1dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21fbf791-f717-427a-b4b4-e4d83f45a4e1",
        "cursor": {
          "ref": "7164c23b-631b-4fd2-83a8-97ae807c3442",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1bdc6614-2a80-4536-a65a-078d5243fe8f"
        },
        "item": {
          "id": "21fbf791-f717-427a-b4b4-e4d83f45a4e1",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "418f0919-dc7c-4b9d-815e-7dffd794c133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec63b3d3-e51c-4380-b52c-ede6b0b7e642",
        "cursor": {
          "ref": "a8e6defc-265a-411c-abc1-e36fb9098478",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e817f1b1-495a-44fb-afbf-f10aa8b963f7"
        },
        "item": {
          "id": "ec63b3d3-e51c-4380-b52c-ede6b0b7e642",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "05d8d9a6-8d30-4592-8f45-234486fdd25e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6a91619-e8d0-4fec-ae78-678589c24b85",
        "cursor": {
          "ref": "0619f53d-ad6f-4a5d-8ce6-f4897ee63591",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "223a5aa0-fde4-4750-af4c-1d0eea5592fc"
        },
        "item": {
          "id": "b6a91619-e8d0-4fec-ae78-678589c24b85",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "2177b331-d4dd-4e87-8e0d-68838afca8d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c4c9b5-a0b7-4735-9f1b-0acc69c38f31",
        "cursor": {
          "ref": "a123bc3d-ad3a-4659-b9d9-7ea317e9ab2c",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "388e372a-10a2-440c-81e6-f83a79660af7"
        },
        "item": {
          "id": "b8c4c9b5-a0b7-4735-9f1b-0acc69c38f31",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "2d015405-6a35-4a55-8242-32300258be42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe8bc6c1-97f1-4fda-84b9-53cc85eac770",
        "cursor": {
          "ref": "649b9238-f91e-4f38-b25a-6a9cd1b9510f",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "64683533-3ee9-4a5b-8ce7-3b17acabf58d"
        },
        "item": {
          "id": "fe8bc6c1-97f1-4fda-84b9-53cc85eac770",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "07ffd13e-300b-44d7-979a-92f0f19fa5e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "765819fe-1a88-4e94-9106-464354824c4c",
        "cursor": {
          "ref": "4926eb9c-6592-4135-97ec-0eb42bd42b15",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "30b46ab8-c1a4-44e5-a0a1-73fd8907a6cf"
        },
        "item": {
          "id": "765819fe-1a88-4e94-9106-464354824c4c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "30c571ef-e851-464b-83e6-fb026d1c6e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "796b4aeb-c5a7-4783-b24d-c7026adc0469",
        "cursor": {
          "ref": "4792c993-7c8c-4475-a829-8f8ca6bd6e55",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "8c5adc7d-fde2-42e1-80f2-c791c1e73a6d"
        },
        "item": {
          "id": "796b4aeb-c5a7-4783-b24d-c7026adc0469",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "0487f46d-e451-4991-8334-58648a75225b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5134c77-de14-470d-b9e2-05f25645a5af",
        "cursor": {
          "ref": "504c6503-0087-497d-855b-995587eeb5d9",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1423026c-2ea4-4b36-ac6a-c8be8c8cf737"
        },
        "item": {
          "id": "d5134c77-de14-470d-b9e2-05f25645a5af",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "fc1607e7-16d3-40e9-a38a-12cdcf3b671a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db6cfdcc-670f-49ea-869c-0c84f4792a6b",
        "cursor": {
          "ref": "f42ca7b0-3c0c-43bc-b457-0c014ef72f35",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b8cc74b7-b9f3-4eda-b0bb-536591e13be0"
        },
        "item": {
          "id": "db6cfdcc-670f-49ea-869c-0c84f4792a6b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "845f6ba7-0b4b-47a7-a35d-bc2685f83224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec9f8470-b0ba-4c7a-b6e7-a518675d074b",
        "cursor": {
          "ref": "bc659303-e8de-4888-95b7-18f035bea820",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "40d07b3d-51be-4715-adb7-3ea8ddfee7b3"
        },
        "item": {
          "id": "ec9f8470-b0ba-4c7a-b6e7-a518675d074b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "375d92e9-bd56-4abd-9aaa-d9188a2014f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b314dcdb-a1ac-4141-8d29-a10227f5efa2",
        "cursor": {
          "ref": "c8bb3aee-f2a2-4e24-b836-b66c65cbb091",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "23bb8702-e7fc-4234-95a3-e3399917c4a7"
        },
        "item": {
          "id": "b314dcdb-a1ac-4141-8d29-a10227f5efa2",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "298ad604-3ac6-4ccf-a46d-657d0606a10c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcda2cc9-9b8b-4f0a-88e2-965e0b38fbe9",
        "cursor": {
          "ref": "b2225e23-e24a-48aa-ade3-7b1e11c1990b",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "13dea703-099f-45ce-9340-be86f7d2fc19"
        },
        "item": {
          "id": "bcda2cc9-9b8b-4f0a-88e2-965e0b38fbe9",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "46063a5b-2414-464a-98a5-fd850c5463c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80eb96e7-a212-4c23-8f81-393551704505",
        "cursor": {
          "ref": "425748ae-4eb8-4100-9d29-dcfd682c58a6",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "777414b8-92b8-49ba-a153-f5df24b4e57e"
        },
        "item": {
          "id": "80eb96e7-a212-4c23-8f81-393551704505",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "fdf806c2-b3dc-4fc0-b275-52023b04b28a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f2abaca-aa76-4532-a007-f83c49aee4dc",
        "cursor": {
          "ref": "4252157b-8e63-44cc-a672-948006c21f9b",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "2c4d5202-c558-4392-ae87-317b7cad3bbc"
        },
        "item": {
          "id": "3f2abaca-aa76-4532-a007-f83c49aee4dc",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e12016bb-e1d3-49f1-ade4-efd2f0951cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "126eca1a-b918-4218-b589-42c6c077ade1",
        "cursor": {
          "ref": "cb52e4df-9037-48b6-8d55-497f5ef23db0",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "95b8921a-a827-4ed6-a17d-41af302dab12"
        },
        "item": {
          "id": "126eca1a-b918-4218-b589-42c6c077ade1",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e6f33161-9376-4208-9890-c035eee600e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdfe0a7a-a693-48ac-be49-cdb92fa76c48",
        "cursor": {
          "ref": "7a922c6f-1286-4088-9526-cc30407ff601",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "0ec9fe4e-f254-4747-ab1a-f8eaf7aa00c4"
        },
        "item": {
          "id": "bdfe0a7a-a693-48ac-be49-cdb92fa76c48",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "dbaf3401-f27a-4739-92b8-338c819f6e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "464305f8-ed81-4d00-93ef-f1142da398bd",
        "cursor": {
          "ref": "9f0d1b62-f91a-472c-8a01-a25c66b179a8",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "05045221-0f03-48bb-a29e-d3a5b61c2061"
        },
        "item": {
          "id": "464305f8-ed81-4d00-93ef-f1142da398bd",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "4cbfae8b-95c2-46c9-8b74-53c83e325594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c24fc2f-db23-4e6a-8219-03115a5f049e",
        "cursor": {
          "ref": "8adcb8eb-a9d7-457f-8563-926ce42454f3",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "fce94fce-5b8d-40ec-ac96-f68fcf97a99f"
        },
        "item": {
          "id": "2c24fc2f-db23-4e6a-8219-03115a5f049e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e87eb288-a2ea-4aa1-a664-fa2a55861462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "529bdcba-745d-4886-842b-c8e91c88fb6f",
        "cursor": {
          "ref": "dca76457-df11-48c1-937c-cc65f31faf53",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "46d2f1ed-dfc7-4b63-a457-1698f98768bc"
        },
        "item": {
          "id": "529bdcba-745d-4886-842b-c8e91c88fb6f",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "737f2032-3bd5-4c44-bd0a-184cfe47c3da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7442dc36-e255-4e93-9911-75b290d7b7fa",
        "cursor": {
          "ref": "9570b632-abbc-4698-af52-78d7c7f30770",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "25c2aecc-2f78-4903-9e5b-3218ef516cf1"
        },
        "item": {
          "id": "7442dc36-e255-4e93-9911-75b290d7b7fa",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "45e94db7-852a-403b-8f68-05ee8bfd2db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53750605-9516-43e8-b035-d66738425c8e",
        "cursor": {
          "ref": "9964c0f1-e5a0-4825-8125-59bb36c005b3",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e3af2a31-430d-44c1-bee0-bef723612a8a"
        },
        "item": {
          "id": "53750605-9516-43e8-b035-d66738425c8e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "6e442ed3-3949-4cf0-80b0-db666049d912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a258ff76-aa8d-46e9-b4cb-2c6c3018c452",
        "cursor": {
          "ref": "e9f79681-a86a-4b01-9df5-14151e7d845f",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "9931a67d-7c89-45ba-ac01-b278d3731bc1"
        },
        "item": {
          "id": "a258ff76-aa8d-46e9-b4cb-2c6c3018c452",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0da3c0a6-0d38-4873-8775-461d2e84ea16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4795f28d-f302-474d-8ff4-0df26de03220",
        "cursor": {
          "ref": "19ddd05c-a61b-4fb5-87b9-b096da298049",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "62cfd7dd-b331-4f96-93ee-d9b67d78ef7f"
        },
        "item": {
          "id": "4795f28d-f302-474d-8ff4-0df26de03220",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "9152e74d-32c2-49b8-b051-a90519113b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11216c56-dd95-42d5-9c5a-32db0197a8f8",
        "cursor": {
          "ref": "a8faaafc-dd1e-46fc-a491-c46ea4d2bd75",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "650cfe58-6128-4b2f-92c9-1f33604a0dc6"
        },
        "item": {
          "id": "11216c56-dd95-42d5-9c5a-32db0197a8f8",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "927436b1-bf4d-4daf-98b5-06785a527e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "078e723b-6995-45a1-ab80-00ab7c806be3",
        "cursor": {
          "ref": "411971c4-9570-47d7-9970-3e59f85cd318",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "308a81b8-1342-4e24-af24-a36008b7cf09"
        },
        "item": {
          "id": "078e723b-6995-45a1-ab80-00ab7c806be3",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a1111d66-1b0b-4f9d-a44b-b2d4ddd1c4cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dea0f2a8-af3b-4d40-b92b-25f473cd7eb7",
        "cursor": {
          "ref": "653b7058-05d3-40b9-887e-5dad0aff7947",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "9594b645-47a1-4d0c-82cc-be76079b8094"
        },
        "item": {
          "id": "dea0f2a8-af3b-4d40-b92b-25f473cd7eb7",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "76ad7483-a686-47c1-bc13-d14253b80497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b55bb8-dfcf-4968-913f-2ff5cd48ef74",
        "cursor": {
          "ref": "6f1c3b02-73f5-4634-b8a5-6960ad512bad",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6217f1f4-d6e0-4ea1-84ea-e9efca3fa4c8"
        },
        "item": {
          "id": "b6b55bb8-dfcf-4968-913f-2ff5cd48ef74",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "aae86d54-f3ad-4598-962d-1e2c2b6e9e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b68a8d2c-f9f6-4e6d-a70b-4990a6e0399d",
        "cursor": {
          "ref": "3d69c4ac-8dc4-4bd1-ac17-892255bf2a48",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "c2ce72f7-3e3e-49b5-8fc5-6ce362b6c7e2"
        },
        "item": {
          "id": "b68a8d2c-f9f6-4e6d-a70b-4990a6e0399d",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "10017a52-1771-4471-b460-149e8667ce73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e355095-92f7-4cf8-a1a7-18e668b97065",
        "cursor": {
          "ref": "65274fa2-ed8c-419d-b83b-43936d8990e3",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c8a4ee93-866b-4860-a137-de38835b1b60"
        },
        "item": {
          "id": "7e355095-92f7-4cf8-a1a7-18e668b97065",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "758277d4-b157-4cc3-8665-c91f68bafb8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f643f8a8-f594-4fbb-9235-5d3abed81c89",
        "cursor": {
          "ref": "1f03b845-6f5d-4827-a4ad-14bf986bee58",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "03dc3de5-8d35-4374-ab8f-597e1d43dd05"
        },
        "item": {
          "id": "f643f8a8-f594-4fbb-9235-5d3abed81c89",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5834dfa2-b479-4f27-aac4-79571481f1e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a93bdb-22d2-4d57-bfaa-5a13cba9cc83",
        "cursor": {
          "ref": "2b7ce066-a34a-4ee7-98c8-0984cf599450",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e1802f19-34b6-46be-a011-34b3fc35bcaf"
        },
        "item": {
          "id": "c9a93bdb-22d2-4d57-bfaa-5a13cba9cc83",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "5c5b00a2-a9e7-4134-b0bb-3073d974e295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c07fb6-53bc-413d-8a91-7ac8892c238a",
        "cursor": {
          "ref": "09edcd19-1a9e-4914-ac81-4b0913d9562e",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b0731f16-dd86-4c81-b6e9-2b0d22634c14"
        },
        "item": {
          "id": "06c07fb6-53bc-413d-8a91-7ac8892c238a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "d206e416-77fd-45e5-a3c7-9c74b988f112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67952b4e-226c-4aa8-b017-159048660ebe",
        "cursor": {
          "ref": "14862427-3e58-44c6-ba08-c390bc157586",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "94388c6c-ec9e-4439-a537-eb343063495e"
        },
        "item": {
          "id": "67952b4e-226c-4aa8-b017-159048660ebe",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "69537aa3-97dc-46e0-85ca-ea7bc556bc06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cecf498-81b1-4a0e-89c4-14812009ceca",
        "cursor": {
          "ref": "30f55205-023b-45b8-b248-94e1d1731cde",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "614294d4-28ba-447c-833d-c82bd2feda42"
        },
        "item": {
          "id": "0cecf498-81b1-4a0e-89c4-14812009ceca",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "cf68ea8c-63d7-48f2-ad54-01314d741c30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5cc3a73-89b6-419c-b94d-c322a84d6e8e",
        "cursor": {
          "ref": "2164aa10-0341-40be-84e0-cf6c19bf69b9",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "bd614f66-5137-46b2-9f1b-421c60d6bae5"
        },
        "item": {
          "id": "e5cc3a73-89b6-419c-b94d-c322a84d6e8e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "2852dcc7-ff1a-4204-afc7-9cf85e531760",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 42,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32af90a9-6e4e-45b1-a01c-e92c4705cc9a",
        "cursor": {
          "ref": "a04f962f-270e-46da-82b7-3230774502c9",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "9352049d-4fc9-4e1f-a7c3-c5eb593376b2"
        },
        "item": {
          "id": "32af90a9-6e4e-45b1-a01c-e92c4705cc9a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "1a2ad6c7-7706-4c4a-bcbc-cd3ff526f751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb3aed0-17e2-4ad0-b8fc-88462462005c",
        "cursor": {
          "ref": "ff9737c3-6d38-48fb-bdfc-40fa70258778",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0c49aa0e-f6b5-4ea1-8539-9f531ec0a73f"
        },
        "item": {
          "id": "5fb3aed0-17e2-4ad0-b8fc-88462462005c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "83402c0d-4580-4165-82ba-e9c629521d3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7734f6c8-52fb-48f0-9ff2-67c8da532a7d",
        "cursor": {
          "ref": "b6883fe5-4c4c-48d0-acbe-12f8b3710a9d",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "38b32651-ef34-4483-9fe9-329bc99a865a"
        },
        "item": {
          "id": "7734f6c8-52fb-48f0-9ff2-67c8da532a7d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "7e0e59f6-96a2-432e-b0dc-0e849f5c7374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba740127-5b91-4fc3-a40d-fbab016d6929",
        "cursor": {
          "ref": "dafc8f43-0ba7-4ea1-b27a-7f80dd3fe3d6",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c3b5d448-2bd0-4502-bd8c-073bb48bb99d"
        },
        "item": {
          "id": "ba740127-5b91-4fc3-a40d-fbab016d6929",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ab3cf004-59db-4381-93bd-c61ccdb45b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afddc087-ec38-4cde-9472-7d1d024dc56a",
        "cursor": {
          "ref": "cfd76c29-785c-4515-9027-798928083085",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c96ed9fb-77db-41b5-9428-ffd0a7aaa6e4"
        },
        "item": {
          "id": "afddc087-ec38-4cde-9472-7d1d024dc56a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ff275d55-f2d2-463e-a332-2bde8f481f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f8e80a-bf98-492d-b681-a23106367bad",
        "cursor": {
          "ref": "cd758f3b-6984-4365-a9bf-fd90c819732e",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "073abd84-c25e-46a0-acec-cd7354edb136"
        },
        "item": {
          "id": "f5f8e80a-bf98-492d-b681-a23106367bad",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f719dca2-c980-40ef-9b73-2721ad72b47f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd76eb7-1574-48f7-9d4c-6536146d514d",
        "cursor": {
          "ref": "fdae47ba-9e98-4266-bf88-4a00f611bd5a",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1a502993-5b99-4c16-805b-261650d75190"
        },
        "item": {
          "id": "fdd76eb7-1574-48f7-9d4c-6536146d514d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "242f7157-4250-4e3a-b157-2bd2566e9aa9",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 39,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a48583d-2d97-48dd-bc45-7d07b224406f",
        "cursor": {
          "ref": "44ee534a-eb89-4168-90b4-4096e2654563",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d40d0907-89ff-4fa8-89e7-08746593cd26"
        },
        "item": {
          "id": "2a48583d-2d97-48dd-bc45-7d07b224406f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "88254592-f739-4c50-b7e7-0096755b5b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf0d288-0dea-47f8-a722-a8306b49ecbd",
        "cursor": {
          "ref": "76dd2dec-2685-445e-bc5c-0d168b09974c",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "9ffe6014-9b03-476a-990d-a1b0fdec64b5"
        },
        "item": {
          "id": "2bf0d288-0dea-47f8-a722-a8306b49ecbd",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "5c78acf3-14da-44fc-88a7-dae30ca9e1c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "631a72e3-d71e-4866-aed0-043c8efab5b2",
        "cursor": {
          "ref": "adda520c-3caf-4880-80d3-67328cb5aaf4",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d5cedf20-1621-4c99-a943-968ed2d3fb25"
        },
        "item": {
          "id": "631a72e3-d71e-4866-aed0-043c8efab5b2",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "94c1510e-4598-4a0a-8643-5f49d7a82f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5126b7c8-41a1-4f05-93e4-3f5dd458b4de",
        "cursor": {
          "ref": "025614d6-7c9c-417c-a13f-d723146d6d1f",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "41fdb48f-cee9-4258-9750-b300b89d1f4a"
        },
        "item": {
          "id": "5126b7c8-41a1-4f05-93e4-3f5dd458b4de",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "09393844-e6b5-4c1e-b21a-3d02f3a8d002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "206af078-1509-477d-b849-015dd60569cc",
        "cursor": {
          "ref": "75793194-d722-4f07-81e2-58dead832012",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8d956dc9-2077-40c5-a703-24e3da8e60cd"
        },
        "item": {
          "id": "206af078-1509-477d-b849-015dd60569cc",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "484729bb-06df-4586-93cf-43ccc21b3f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd2bb46f-a3dd-4052-9d39-792418093f9f",
        "cursor": {
          "ref": "0b2136df-f727-4cc0-b5c7-cde13362787d",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "8fe28595-1868-41ad-8079-4f5ad97a4a2c"
        },
        "item": {
          "id": "cd2bb46f-a3dd-4052-9d39-792418093f9f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "fa47e11f-6ae1-4982-ba54-f8cd06ca3771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ce9c0e-d219-4eb5-81bb-e5cea17609e9",
        "cursor": {
          "ref": "cbf9a01e-4409-482b-8180-33940c033392",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "811d6cab-9b9e-43d5-b65e-8986923ced06"
        },
        "item": {
          "id": "e2ce9c0e-d219-4eb5-81bb-e5cea17609e9",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4f14a68b-8503-458f-b32a-92e356928ba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a74c34-89c5-42bf-883c-0a22794a881b",
        "cursor": {
          "ref": "440b3406-afc8-443f-814d-96c2c59e4991",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4d618fdf-9ca5-4b10-ba81-d7f670097f8e"
        },
        "item": {
          "id": "39a74c34-89c5-42bf-883c-0a22794a881b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "2326e6bd-931e-4f31-93ce-67de1296f95b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0938112-9a9d-419b-8e8a-30062d1e6139",
        "cursor": {
          "ref": "f5ff0ba1-a052-4fa6-b168-bc3c9faf9d48",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "9648b7e3-a229-4e7e-a1b4-bd792bd071c8"
        },
        "item": {
          "id": "f0938112-9a9d-419b-8e8a-30062d1e6139",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "0ef29f6f-bf38-4a5e-96bc-1b737aca8cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34911be4-f535-4eb1-9d7a-927f58011dd8",
        "cursor": {
          "ref": "6353ae9f-2de7-4e6a-9b28-6374d03c12a4",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3c0e207f-1315-4309-99a8-30200c68ab06"
        },
        "item": {
          "id": "34911be4-f535-4eb1-9d7a-927f58011dd8",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "97b0cc6b-a2a8-45fc-8047-cc67ac3d798f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6180495d-12af-4bd4-a5a9-6d0c68b78d28",
        "cursor": {
          "ref": "6dd74fd3-4d14-4171-9288-b15d0d89b8a4",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "32d70fa0-fe9c-4b8d-b3ba-8d7eb53202bb"
        },
        "item": {
          "id": "6180495d-12af-4bd4-a5a9-6d0c68b78d28",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e68e9042-3883-40b2-aace-904217b617cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55c85977-2b7e-4685-a99f-f4432491c671",
        "cursor": {
          "ref": "6caed84b-662f-4915-b69e-5f5a5adba246",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "69d6da19-ec72-4f71-ab80-f713b9f29980"
        },
        "item": {
          "id": "55c85977-2b7e-4685-a99f-f4432491c671",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "5bdd4c37-2817-4b6e-8daa-690dd2acfd52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff991e54-e388-410b-a677-e4704484bc52",
        "cursor": {
          "ref": "e408b670-929a-41fb-8b84-d48b97a6df02",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "084ec81a-fa3a-4d50-8bf6-661585616c5c"
        },
        "item": {
          "id": "ff991e54-e388-410b-a677-e4704484bc52",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "d60c6991-980f-4de8-8c9d-f48f15334035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca91860-7787-46a3-85ef-5a5f14234e67",
        "cursor": {
          "ref": "8426acdc-712c-4996-8d52-7ba8cd7278ac",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "dccdf975-8eb3-4870-8a85-133d4fed99cd"
        },
        "item": {
          "id": "cca91860-7787-46a3-85ef-5a5f14234e67",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "cc7b40e8-476e-4c8e-a7b7-80eea8b5af14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f61de327-bb07-4f24-9abe-6e42a7a96d13",
        "cursor": {
          "ref": "5304b93b-0b4c-41b7-87ad-bb0921d65d6f",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a2765d16-3c4b-4f9b-9b11-61c074198000"
        },
        "item": {
          "id": "f61de327-bb07-4f24-9abe-6e42a7a96d13",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "722e19ee-51a2-4a92-8e93-f990d816658e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32447968-d09a-4938-a3bb-235467e1ceed",
        "cursor": {
          "ref": "2efdf2dd-dd11-4567-b26a-8d76ccee3097",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "78e91203-9a96-4d41-89fc-895ad376f809"
        },
        "item": {
          "id": "32447968-d09a-4938-a3bb-235467e1ceed",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "2c0b81fe-cdd4-4918-b5e7-63fec06a6406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab5e20dd-3551-4855-97ce-01a2c010eb94",
        "cursor": {
          "ref": "fce0d9b1-2ca5-4c7f-9857-1ef9968f830d",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "32580539-ba7c-44a3-85d5-ae965bf73080"
        },
        "item": {
          "id": "ab5e20dd-3551-4855-97ce-01a2c010eb94",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "1c10ee91-b33b-4eee-b9c7-971ff33df49b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46dc1730-17c8-405d-85c7-4f8a809b01a1",
        "cursor": {
          "ref": "b8011219-e982-4c9e-8a18-db7caeed6a26",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "759bae31-36b3-44b4-9a86-7f85398bd40b"
        },
        "item": {
          "id": "46dc1730-17c8-405d-85c7-4f8a809b01a1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "0a7df163-2a8a-45b9-b20c-1eef020f65b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf55806-8f3b-4a73-b97a-278bf3e28f78",
        "cursor": {
          "ref": "edef4f63-d9aa-467d-ba5e-71efff690897",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "95749d28-5926-43ea-93e6-41cfc2bc7f1e"
        },
        "item": {
          "id": "edf55806-8f3b-4a73-b97a-278bf3e28f78",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4cb69282-bc32-4b89-b7c6-a1707b892511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd2a56e-2ef9-4156-aa49-b465a1b90547",
        "cursor": {
          "ref": "d13b1bc8-39eb-4cf5-8fd0-32e0718d92b3",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "0f7dd532-3276-4989-b6cb-73358829d2bd"
        },
        "item": {
          "id": "ddd2a56e-2ef9-4156-aa49-b465a1b90547",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "64279705-c93e-4a63-91f5-7d49a07067f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d65d523b-30ed-4f9b-be95-19b978d582d0",
        "cursor": {
          "ref": "a26964dc-9603-49da-a5e4-db2a2749e48d",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "3a2bbcf9-3a7b-4b8f-a11d-1614e527f7d5"
        },
        "item": {
          "id": "d65d523b-30ed-4f9b-be95-19b978d582d0",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b730a186-d604-432f-8e9d-5c4430086a27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd7546aa-4d1f-4b23-a01c-dfa13047016b",
        "cursor": {
          "ref": "2aafe191-7561-4516-868c-eaa52219d790",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9fe10cd5-dfba-44fc-8c07-e2d541245291"
        },
        "item": {
          "id": "cd7546aa-4d1f-4b23-a01c-dfa13047016b",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "85f8caf0-7263-4219-85d9-b9699094e336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c198e5-d318-4289-ba60-d347507a8a26",
        "cursor": {
          "ref": "3dbcdf49-f475-49b6-bd3f-3c795023e9f6",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "b4354fcd-77e7-404a-a03b-949d30baefe4"
        },
        "item": {
          "id": "29c198e5-d318-4289-ba60-d347507a8a26",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "1b89d51b-cc27-4a8c-bbbf-eeb93b3bfc55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619def39-7937-42aa-a2b5-f86bed9d7050",
        "cursor": {
          "ref": "5315eb46-4736-4cca-ad0d-573702e95b33",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "1c2ca725-b60c-4090-9f2b-b55114061518"
        },
        "item": {
          "id": "619def39-7937-42aa-a2b5-f86bed9d7050",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "39a05346-fab6-47c4-a400-91c651baaa81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "546d2a72-0f81-4c1b-8f87-a8684adb150d",
        "cursor": {
          "ref": "ca23bcfe-f17e-41d8-ae5b-cbfa53f64dd7",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7c7a7c6c-1cce-41da-bd77-3b7578843d5f"
        },
        "item": {
          "id": "546d2a72-0f81-4c1b-8f87-a8684adb150d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "6485cc7a-e616-428e-bc19-f45c7742387b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25477edf-ef61-486b-aa9a-3cdb2068375f",
        "cursor": {
          "ref": "996f250f-ba25-4db7-a28f-6d0cf52abe3e",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "019b8aba-7896-4217-b5d1-ca7085625446"
        },
        "item": {
          "id": "25477edf-ef61-486b-aa9a-3cdb2068375f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "efe93715-fd0e-428a-9b96-aad19a18dcd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e89c94-4de9-462f-90d9-532ef26aad26",
        "cursor": {
          "ref": "c5fbf698-db0e-4e0b-9861-4a97d43c81db",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0c4a6ffd-f6f3-4ca7-85a3-3a98a9775252"
        },
        "item": {
          "id": "40e89c94-4de9-462f-90d9-532ef26aad26",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "32992581-8592-442f-bd96-79b840f1f607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "063ddf71-03e7-4c00-9f7c-29108f138eca",
        "cursor": {
          "ref": "c090ab06-c5f7-41e7-92dc-056f3c2532bb",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "95daf07d-e177-4c56-ad8a-319e28c16453"
        },
        "item": {
          "id": "063ddf71-03e7-4c00-9f7c-29108f138eca",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ba5c6235-67da-472c-b1c9-fd5abfaee1ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae64b92-ccc8-4ad8-9f67-71fe9bc12ed9",
        "cursor": {
          "ref": "7c934a65-5a92-4996-b567-659e9a4d46cb",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b5caf893-ec8e-4ce3-8a1f-96e39dd83c37"
        },
        "item": {
          "id": "aae64b92-ccc8-4ad8-9f67-71fe9bc12ed9",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f496ac62-4ba6-4dd6-89dd-4c5fa2979047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4714d3d5-01c6-412c-ad72-c9acc84d659d",
        "cursor": {
          "ref": "8da03976-5c37-4a1d-9bb2-cb3cd065fd03",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "3eb8bd10-50c7-47bd-9583-11d414ca1f26"
        },
        "item": {
          "id": "4714d3d5-01c6-412c-ad72-c9acc84d659d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a00617dd-59e3-4c54-acc5-2e9b42d9b133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ec42ad-69ec-43ac-a641-0545029c668d",
        "cursor": {
          "ref": "4a775a82-fb32-4028-afc3-746a4fba006a",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "62f3cda7-9a18-433a-beff-0b383f108c2c"
        },
        "item": {
          "id": "b7ec42ad-69ec-43ac-a641-0545029c668d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a67b67a3-2416-4d29-bfae-4040e2fc2c42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4cd2303-6a72-4a21-9b24-1eaac8860897",
        "cursor": {
          "ref": "3232729e-a0e1-4274-8ac5-bba60a3583a8",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "54fa99f0-56b0-4060-8f8a-74c81fb023d1"
        },
        "item": {
          "id": "a4cd2303-6a72-4a21-9b24-1eaac8860897",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "9ddb33ab-37ec-4f25-8e35-bf96d0fc16a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc8691b-dac2-4b92-b3ef-47f548bcac33",
        "cursor": {
          "ref": "c64b737d-b52f-4e45-9c74-8283a0d23ada",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b5e85fa5-b2b3-4ad7-862d-db5fc9ed4efc"
        },
        "item": {
          "id": "1bc8691b-dac2-4b92-b3ef-47f548bcac33",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4b20ad82-c688-46e7-9eb4-cc43e39b789e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ab731a-f66f-44e4-914c-15c3a1e328b0",
        "cursor": {
          "ref": "0da3d7c1-7078-49bf-a56d-81e73d157d17",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "d5e66f92-de4f-4ee5-9f50-1fe70229bc44"
        },
        "item": {
          "id": "26ab731a-f66f-44e4-914c-15c3a1e328b0",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "2323eba8-5f0d-466b-b871-5d4fa310a532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0acffc61-6a15-49fa-afe3-e369b59286c2",
        "cursor": {
          "ref": "958ddadf-f3a2-4e72-b978-a827b07046dc",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "30d447e9-26c2-42db-8556-5bb03a7dce03"
        },
        "item": {
          "id": "0acffc61-6a15-49fa-afe3-e369b59286c2",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "0a290d7f-0034-44df-b450-4b8740444afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c4d44dd-2be5-422f-b758-1e14a94569db",
        "cursor": {
          "ref": "1acb7926-5336-475d-b57b-619c8d816263",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d77cd8ea-002e-480b-a706-178f7b1b8bbe"
        },
        "item": {
          "id": "4c4d44dd-2be5-422f-b758-1e14a94569db",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d9771142-242a-4366-a056-e1835ec758cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e6498f-fc0a-4bdb-b08e-5a14d41ce2ad",
        "cursor": {
          "ref": "ba9920a6-ae69-4b70-9cd1-0fcde545f8a2",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "e30efafa-82f1-4105-b2a6-2c487087148f"
        },
        "item": {
          "id": "21e6498f-fc0a-4bdb-b08e-5a14d41ce2ad",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "279c0b58-9c76-433c-9cf4-dcee6165b404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17136dd8-2bcf-4978-9900-f5f7678a30da",
        "cursor": {
          "ref": "728de9f3-aa35-4238-baaf-e3655afffb34",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "768ecab1-a014-469f-9103-775308ab7ccd"
        },
        "item": {
          "id": "17136dd8-2bcf-4978-9900-f5f7678a30da",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "6b212f3e-203a-471a-a089-90dc5ca2d625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3855e6-e0c2-4927-a59b-6f8c6efd643a",
        "cursor": {
          "ref": "95c7a352-0117-4078-a4eb-eebbafae2540",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "60136f71-e9d8-4677-b2e8-a4e2c085fdab"
        },
        "item": {
          "id": "5b3855e6-e0c2-4927-a59b-6f8c6efd643a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "134ec8e7-6044-4116-85f2-b84940820ae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d3e081-8b78-4bc0-a62a-2b709cb49f7d",
        "cursor": {
          "ref": "901d4be5-5301-47d5-b1a7-2f780d19d823",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c6c6372c-ceee-474f-bd63-58d08b04be9a"
        },
        "item": {
          "id": "a2d3e081-8b78-4bc0-a62a-2b709cb49f7d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "37b18fd2-d104-4582-b1fa-4cc023f07e4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "355f8239-19be-4575-b454-fb0f1cf8f4db",
        "cursor": {
          "ref": "f42ea0d2-b264-43e1-b219-85e22663ec08",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "340fadb8-0873-4ce3-8272-a1f12c26468e"
        },
        "item": {
          "id": "355f8239-19be-4575-b454-fb0f1cf8f4db",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d0b28441-5f2b-4786-8811-0e46ad49bc1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "214df12c-e3db-4d04-b49b-e1e3d9929309",
        "cursor": {
          "ref": "c66ff10b-dcf5-40c1-b6b1-9eeccd12650e",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "6539c795-2ede-4076-a71d-9d8834d662a6"
        },
        "item": {
          "id": "214df12c-e3db-4d04-b49b-e1e3d9929309",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "39bdee2c-e276-416d-b041-9dbcec846986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9be8a2f-5283-477a-a306-2c85662ee816",
        "cursor": {
          "ref": "c94af889-2153-445c-a465-488750263a16",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "66cc0f6a-4d22-4df3-b15b-37d55bf2930c"
        },
        "item": {
          "id": "d9be8a2f-5283-477a-a306-2c85662ee816",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "8d3c46c3-f170-47c2-b1e9-ea9ce84c2d6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77a067db-e64f-4314-a11d-06153ae32faa",
        "cursor": {
          "ref": "b9ad98d6-23b3-43dc-bb33-c8081f1992d3",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ccddcc0b-a9fb-43d5-b1e9-d518fed3f871"
        },
        "item": {
          "id": "77a067db-e64f-4314-a11d-06153ae32faa",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "2a15165c-0807-4b5b-b865-c69a9139d576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f3ed7e-badf-49e5-ad13-869609a1535b",
        "cursor": {
          "ref": "12f7eef6-a6a6-47d0-86be-5b81804b3e99",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "9ac64555-61ff-4cb6-83c8-5a34277955bb"
        },
        "item": {
          "id": "b1f3ed7e-badf-49e5-ad13-869609a1535b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "625dde7f-8a24-41ba-84bc-0b8aad4a7974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eada6be-b391-4729-a1f2-52038a0aa808",
        "cursor": {
          "ref": "5796c4e3-1b91-4aaa-8320-b6898cd3247f",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "289885ca-855d-4fcc-b4d7-2059a3f1d9fa"
        },
        "item": {
          "id": "2eada6be-b391-4729-a1f2-52038a0aa808",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "33e44b57-b76c-40f5-9133-4c805b041a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a293b8e0-822a-41ec-a3b1-d34e14935a50",
        "cursor": {
          "ref": "39560a58-f832-42e9-95c1-4759f4e0924b",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "60579f7e-0816-4f72-bfd5-bab8215f235a"
        },
        "item": {
          "id": "a293b8e0-822a-41ec-a3b1-d34e14935a50",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e0694480-df4d-4323-ad5f-ec3a7c06dcbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68ae3df-10ed-42ca-8675-546b1b685e89",
        "cursor": {
          "ref": "97225f5d-da84-436f-a7cd-eafed4afa583",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "1c3a48d9-9444-4f53-8121-0f1935d552f4"
        },
        "item": {
          "id": "d68ae3df-10ed-42ca-8675-546b1b685e89",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a31565e2-4b24-4215-84d8-020c0da239ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "151341a7-4e43-4ec1-a022-83c0d1f0fbf5",
        "cursor": {
          "ref": "3340844d-40d1-4e7f-be67-987a39edaac9",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "87dc54f8-932d-4cf7-b6cf-c465aad008bf"
        },
        "item": {
          "id": "151341a7-4e43-4ec1-a022-83c0d1f0fbf5",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "dcb70588-286d-4604-b9fc-cbe7f29c567b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c840ba-fb9e-4371-952a-7987679a1475",
        "cursor": {
          "ref": "ee3fe457-1a5d-4bab-8586-e55b5e77cd54",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "9c7062c1-b966-4454-adcd-f3b1fd0c725a"
        },
        "item": {
          "id": "20c840ba-fb9e-4371-952a-7987679a1475",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "67a4dd41-4e5f-4b9d-b96e-58d4756455e9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ac05ba-d276-4725-8220-5c9b4f455a9f",
        "cursor": {
          "ref": "db4484bd-1cb5-49d8-80dc-18eec65069be",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "468923bd-7874-47c5-884d-06e7a15ef420"
        },
        "item": {
          "id": "69ac05ba-d276-4725-8220-5c9b4f455a9f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "1f0db846-c2e2-45f8-8735-33dcedb322d5",
          "status": "Created",
          "code": 201,
          "responseTime": 58,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d0e7a32-4681-43b7-b9c7-000d2f08f6e8",
        "cursor": {
          "ref": "a49a9bd7-2ccd-49df-87b8-a56afc569831",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "39580467-19dd-4f9c-a29b-faa41cae0faa"
        },
        "item": {
          "id": "1d0e7a32-4681-43b7-b9c7-000d2f08f6e8",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "9d5c66e7-9bc4-43a8-8bcd-d318c104931c",
          "status": "Created",
          "code": 201,
          "responseTime": 168,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "28243d94-ba80-4049-bde0-9618c9b8bf7f",
        "cursor": {
          "ref": "aac5562d-506d-4640-b33a-ddf2d965df7b",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "e210e9c3-6fa4-4692-a375-cdeba6f4bda6"
        },
        "item": {
          "id": "28243d94-ba80-4049-bde0-9618c9b8bf7f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ae648bac-9325-4c5e-ab7d-d172897ae3e1",
          "status": "Created",
          "code": 201,
          "responseTime": 60,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "efbce7b2-31aa-4439-abce-f3b2f2389020",
        "cursor": {
          "ref": "3241b3ff-4ae3-40e3-a134-8604e27a78b0",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d145eec5-3bda-4b02-9a3b-4d91d292eed7"
        },
        "item": {
          "id": "efbce7b2-31aa-4439-abce-f3b2f2389020",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "00d4b7d5-304d-44e4-9dc2-ab542d75535a",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b78bcf1-5102-4b5c-9d5b-c98a08b7796a",
        "cursor": {
          "ref": "0e0e2531-7a3a-4c53-99bc-c234b9d0175e",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "afa1385a-2087-4ec9-9fd4-3a939bebb01b"
        },
        "item": {
          "id": "1b78bcf1-5102-4b5c-9d5b-c98a08b7796a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "1747d21e-a97a-49d6-bdc7-35da9ab24e40",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "f16cda41-1f4a-42ca-9ca6-b7ff314c2185",
        "cursor": {
          "ref": "c9f5f413-2ec4-492d-859c-9333fb81bfae",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "37e50cdf-9a65-424d-aa6c-ec234201b5af"
        },
        "item": {
          "id": "f16cda41-1f4a-42ca-9ca6-b7ff314c2185",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "309ded0d-06a6-4963-96b7-acde3a189366",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9f888b-a2b4-4bf0-b22d-aa59c024d6b6",
        "cursor": {
          "ref": "22f4532a-dce0-4ebc-bdd5-95fdc37fac5c",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a8f35952-7dc0-4d48-91bc-a3b48e4b90cd"
        },
        "item": {
          "id": "7f9f888b-a2b4-4bf0-b22d-aa59c024d6b6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "86602206-f0b6-49f6-aa0e-c3951a85a356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb5b40c-37a6-49a1-86d9-d84b10549ed6",
        "cursor": {
          "ref": "be65047a-d4e3-4668-b34c-b76d497f964c",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ef735bb2-1e54-4b5b-8ab7-cd820bfce18a"
        },
        "item": {
          "id": "7eb5b40c-37a6-49a1-86d9-d84b10549ed6",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7c2d6bbb-35dc-4705-8a86-d14dec574443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03904390-e9d1-488d-a919-bd625c4a89b4",
        "cursor": {
          "ref": "d37c5cd5-c7d6-43c9-a9ae-51ff9e45f850",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8929ca81-23ad-4cbe-8d4c-bbd8a499209b"
        },
        "item": {
          "id": "03904390-e9d1-488d-a919-bd625c4a89b4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "98c055f5-933b-4c47-9e02-512b52c4656d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e84d14-c5a8-46f0-a1a4-2190628060c9",
        "cursor": {
          "ref": "662eaf01-bcd9-40bc-8e2c-5328b13b3d94",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e6f1d542-2c16-44dd-8cf0-a1db4198385b"
        },
        "item": {
          "id": "89e84d14-c5a8-46f0-a1a4-2190628060c9",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "df86731c-5d5a-4c67-91fc-c9310237c30d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dfa26df-862a-406f-9d7d-31ad44ac7261",
        "cursor": {
          "ref": "61af60d8-fcc7-4a86-8f77-5bd38ca9010f",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "9c2b61a0-b3e7-4540-b5fb-38db346f7e28"
        },
        "item": {
          "id": "9dfa26df-862a-406f-9d7d-31ad44ac7261",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4598d64f-936a-4fbc-9e8d-d37a02fdece3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ce7e67-1512-44b9-8240-a183dc142665",
        "cursor": {
          "ref": "fa4cc73e-1e3a-417d-af2c-8e672975d9a3",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "91753bd5-6c64-45b3-9bbb-d715fda23b50"
        },
        "item": {
          "id": "86ce7e67-1512-44b9-8240-a183dc142665",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "46471483-bd5c-49c7-a447-3da71b443ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "162126ec-9ff1-4844-a17d-a2930aca9552",
        "cursor": {
          "ref": "73aa8032-6510-4bc4-8a11-256735c7375a",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a46c6704-472a-4b99-83ae-2b0ac0028f94"
        },
        "item": {
          "id": "162126ec-9ff1-4844-a17d-a2930aca9552",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f428bb80-fc1f-4f58-8a11-c0697a415e4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2843f60a-071f-40e2-a484-4ea54b966c31",
        "cursor": {
          "ref": "faedc360-5ae8-466d-8a94-07614be66a42",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3dbbfc7e-79d3-4c77-a3a4-754f24b1ca0f"
        },
        "item": {
          "id": "2843f60a-071f-40e2-a484-4ea54b966c31",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e7862051-ad2a-41f8-afc6-8e78ef15048b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f8a825-d30d-4598-86e8-213d6eb2c793",
        "cursor": {
          "ref": "646383f4-4cbf-489e-8c9f-ab5d0e1bec9f",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c7635ae9-c459-4fd5-ba06-7f4eaef870d1"
        },
        "item": {
          "id": "75f8a825-d30d-4598-86e8-213d6eb2c793",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "81cac970-8ea8-4322-81e2-4c2c7e596b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "527ead3a-93a8-4cb3-9354-094cbe854e63",
        "cursor": {
          "ref": "dc1350be-ebed-4012-912d-bd29ebd103d7",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "83691ad8-6459-452c-8889-067217c890d3"
        },
        "item": {
          "id": "527ead3a-93a8-4cb3-9354-094cbe854e63",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "24d5f648-e07a-4804-a974-e296185807ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2cf1d2-a996-4bbd-9edc-1bb5f657897d",
        "cursor": {
          "ref": "816cd181-3c3b-4bec-80db-309ffb7e1c66",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "0f72c2f7-316d-4b74-90a8-1439239ba4c8"
        },
        "item": {
          "id": "3d2cf1d2-a996-4bbd-9edc-1bb5f657897d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0b553eea-2bc6-4997-8979-7eeb0c5f42dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e03cc998-5ba6-4abf-bb28-3d40e5c59ec9",
        "cursor": {
          "ref": "88df7d3a-37c9-4406-a29a-c2aa552a3229",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "5948910d-06b3-4bc2-8e13-79a21a833b56"
        },
        "item": {
          "id": "e03cc998-5ba6-4abf-bb28-3d40e5c59ec9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "eedab6db-a4da-45ad-879a-34c0832f5606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d38d56f-85a3-47ae-92b8-ca96c80fbcfe",
        "cursor": {
          "ref": "dbcdb2c0-3e28-4cb4-96df-2d858ae6c5f0",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f9f08a7f-1d2f-4a04-b3af-707be5617869"
        },
        "item": {
          "id": "2d38d56f-85a3-47ae-92b8-ca96c80fbcfe",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d0bdc402-2116-4fcb-9ccd-f842221fcb10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dbb341d-f1bf-4500-8d45-77363e023f3e",
        "cursor": {
          "ref": "4823a398-3d16-4039-b0ee-1b7432508bec",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "8fd11364-19a2-4212-a160-9b858e3ee685"
        },
        "item": {
          "id": "2dbb341d-f1bf-4500-8d45-77363e023f3e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "712e604a-72ef-4491-a790-905bdc55f315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce14ec84-b94f-4027-8479-c4f70d962930",
        "cursor": {
          "ref": "5a701a0d-d6dc-4143-8f38-89fd17a17572",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "9f307c3a-ec9f-4f34-96a1-da99d67cc6ab"
        },
        "item": {
          "id": "ce14ec84-b94f-4027-8479-c4f70d962930",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "dea77cf5-a89e-4c6b-8465-7f55936c6aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be08de08-b92e-4223-92d4-5cafeb82fcd2",
        "cursor": {
          "ref": "7abd56e5-a566-4fe2-b664-94ea5c633c9f",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a6939874-e376-4941-9402-472f7d0b00a5"
        },
        "item": {
          "id": "be08de08-b92e-4223-92d4-5cafeb82fcd2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "065afa4b-12aa-4614-b65f-a2eea634c80f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb22a25-ab76-4a6f-8f94-c82c7deefe7e",
        "cursor": {
          "ref": "aafefb76-48ae-455f-9899-4afc3df37c5a",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b41cb749-0a8b-4b6a-9ebe-2a00d781b4b0"
        },
        "item": {
          "id": "bdb22a25-ab76-4a6f-8f94-c82c7deefe7e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4638c3d2-5526-47f9-a489-7dd90fae9a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28647ca9-5987-419e-a18d-c3c8a12f0c85",
        "cursor": {
          "ref": "32bbacdc-ec70-422b-9f8c-2f4403e63492",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d546366d-154a-472b-9446-559b2a6984cf"
        },
        "item": {
          "id": "28647ca9-5987-419e-a18d-c3c8a12f0c85",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d7df0b28-bb69-485f-902d-aab0e8d10b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84791540-9a85-4979-9ffd-a9d0fd5ec6c1",
        "cursor": {
          "ref": "df57c433-73d0-4542-9eaf-a50a92e271a1",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "28534ee8-0f46-4f5e-a876-c68199fcc61b"
        },
        "item": {
          "id": "84791540-9a85-4979-9ffd-a9d0fd5ec6c1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "672c873c-7491-4f75-8610-5110b36b6596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9141948a-0a71-4595-8f49-5d346a3a505d",
        "cursor": {
          "ref": "0525df3b-edad-4fc1-8137-d20ef03a11a9",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "06d0ed1e-d918-4b43-b8c7-ec60e89cf80f"
        },
        "item": {
          "id": "9141948a-0a71-4595-8f49-5d346a3a505d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b2b2094f-3e07-4d75-a7e2-9fd9bfb46476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70d40239-ac6d-4225-a6ef-725608c7cb8c",
        "cursor": {
          "ref": "2ad2007b-6ba6-4a55-931c-3ed147747a0f",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "65199534-d149-463a-8345-70d48a3d7ef9"
        },
        "item": {
          "id": "70d40239-ac6d-4225-a6ef-725608c7cb8c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ef6a8d4a-ede5-4356-830e-d152b63c0eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e06a57c9-fcd3-4522-97cb-bb93a0db7b9e",
        "cursor": {
          "ref": "7f50d6b0-0576-4406-96bc-2321f8b76a2e",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "20c1a8e0-e923-4cc8-88a8-6e941a2a4934"
        },
        "item": {
          "id": "e06a57c9-fcd3-4522-97cb-bb93a0db7b9e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4fba1390-64c1-415d-afe1-7fc031220898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d0b1e08-33d0-41e8-99d3-8e7b9ccbeee5",
        "cursor": {
          "ref": "d699ada8-de30-457c-baba-35f4e5618a9b",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "67976a8a-ee1d-4ffc-bfc4-12ebea34e0b9"
        },
        "item": {
          "id": "4d0b1e08-33d0-41e8-99d3-8e7b9ccbeee5",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4c336dd9-5c5c-4e63-b14e-60602291576b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "852a448d-2218-4979-b167-f05a3fa98d0a",
        "cursor": {
          "ref": "72c74c40-a954-402d-84ec-2eee49b8b942",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "7dc023ce-75b3-4942-920c-65db415aa3cb"
        },
        "item": {
          "id": "852a448d-2218-4979-b167-f05a3fa98d0a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7812b127-b0f6-4139-bd95-c503eb1327d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f63ffb5-5737-4c39-9958-6201cae39c82",
        "cursor": {
          "ref": "9355a5bf-aa71-40c1-8556-592c5e932c0c",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b2a46b2a-71e8-483d-8b51-e8d4a657496b"
        },
        "item": {
          "id": "7f63ffb5-5737-4c39-9958-6201cae39c82",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "86ffdc4e-1d09-45a9-92a4-c9736391ce72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90092cc8-16c5-4b3b-91a5-a1ab2afb6be1",
        "cursor": {
          "ref": "bb2053a9-f489-4a0e-b250-0c5bca8ff236",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "94a73ab5-3e91-4acf-aa29-25ae45fece45"
        },
        "item": {
          "id": "90092cc8-16c5-4b3b-91a5-a1ab2afb6be1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "68396ff3-9aa4-4d48-a8c3-3e1fb8a5d4f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf02f1c3-ceec-40da-80a0-79b0c69aa2a7",
        "cursor": {
          "ref": "ede9ec96-108f-4701-830e-3bd27278e74d",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b6418b64-c1e6-4270-bbb7-5ab7716f68cc"
        },
        "item": {
          "id": "bf02f1c3-ceec-40da-80a0-79b0c69aa2a7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "bf2a301e-1324-4fc0-b416-d9c9ab2a2295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef69fe59-501f-4901-822f-0fcedd5deb10",
        "cursor": {
          "ref": "365df63d-16d4-4614-ab68-e73e73d9f8f7",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ba46b649-fa14-4d9a-a749-27a98b0f8a00"
        },
        "item": {
          "id": "ef69fe59-501f-4901-822f-0fcedd5deb10",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b6d089a1-931c-4d96-99ce-d1ec541a770b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdec8536-9510-42fb-9e19-3919bedadb85",
        "cursor": {
          "ref": "a139ea10-1693-4fa8-94e1-5b9e0d1cbe68",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "e4a5ecd2-b881-402c-b277-6f38f899f576"
        },
        "item": {
          "id": "cdec8536-9510-42fb-9e19-3919bedadb85",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e3ae4aee-3cb0-4e65-be47-6bc48a4432c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81146555-8dad-4d13-8d73-4659d9e143f5",
        "cursor": {
          "ref": "80c149df-5c17-40a6-a401-7ecc47885072",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "860f4ccd-3b53-4576-b3a4-c2a0647b312d"
        },
        "item": {
          "id": "81146555-8dad-4d13-8d73-4659d9e143f5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0dc6ca0b-d584-41d8-9227-b6d958f2c3b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f520c7fc-5012-4bca-b216-720f29c8432d",
        "cursor": {
          "ref": "bab79bbe-5cd8-464e-b443-7cc1bbd16f98",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "2db6dab9-2892-4b61-afac-3f68921e2bd0"
        },
        "item": {
          "id": "f520c7fc-5012-4bca-b216-720f29c8432d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8ff79d49-93b9-411a-a3db-77be313d59df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f80f924a-d82e-46fe-bc24-c9d4619f4ea3",
        "cursor": {
          "ref": "301d169c-fe2c-459a-bc1f-a09e0103e5e6",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "75770644-7993-43a6-b7dd-25b2829e7a85"
        },
        "item": {
          "id": "f80f924a-d82e-46fe-bc24-c9d4619f4ea3",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "2e1f50e9-8564-4d35-b929-1caa16bfd420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc51c00-494a-4896-8be2-358d894a0882",
        "cursor": {
          "ref": "4b689afe-0d21-48c6-a1d3-be32e31e3594",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "6d788889-294d-4e7a-8108-aec1af5556dc"
        },
        "item": {
          "id": "7fc51c00-494a-4896-8be2-358d894a0882",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4976aec9-bc66-483a-aaa3-ec4193b4d345",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7394a4-ea3f-4168-b3a8-2cf650ea0659",
        "cursor": {
          "ref": "9b65a343-8d2e-4333-94c5-8f00b291a7e0",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "aa0f09de-6623-429d-b74b-3a9408a7f5c5"
        },
        "item": {
          "id": "ab7394a4-ea3f-4168-b3a8-2cf650ea0659",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e1bb0938-965f-4a80-9dc7-c7a3f2b302b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a3a77e-d5b1-44f0-9fe1-781051dd7771",
        "cursor": {
          "ref": "f134d29f-093a-403c-a578-ea793f23390e",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5d513c17-b408-43ae-90c0-e5c5d2e8c0e2"
        },
        "item": {
          "id": "46a3a77e-d5b1-44f0-9fe1-781051dd7771",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "895a98f8-7750-4653-96d1-50e5f3415afe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f96fc096-eb5b-4997-9a76-62ede4949cd1",
        "cursor": {
          "ref": "7ce44ce1-3853-462c-847e-b3e1d792310c",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "886a93c4-1b50-4bb2-b4ad-725bb33881b4"
        },
        "item": {
          "id": "f96fc096-eb5b-4997-9a76-62ede4949cd1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0d475f14-afa4-4054-b715-d5a23d5d8327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49da1c9c-98c2-43db-b9f5-fe430e940a9c",
        "cursor": {
          "ref": "258fd89b-8755-4afb-bc55-887424c1290d",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "743a2588-29c1-4b2f-a142-efddd7bbd533"
        },
        "item": {
          "id": "49da1c9c-98c2-43db-b9f5-fe430e940a9c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "716963c0-7eec-41ef-bc28-c37c6fdce8b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af46c6e1-1942-4900-b554-dcd4360e0dd0",
        "cursor": {
          "ref": "aff3c808-8cf8-4391-8e29-cee10f82fee8",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "39e272ef-ebb0-4cee-bd8c-13fc997cfe92"
        },
        "item": {
          "id": "af46c6e1-1942-4900-b554-dcd4360e0dd0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5372705f-1889-43a0-b527-328527124e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9845c8-2171-4eca-aa7d-286d3a5654f0",
        "cursor": {
          "ref": "85d8cc37-69fc-47ab-9b66-b7e116262db7",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e285e716-22f1-4b6b-a8d4-6ef5eb3b9c1f"
        },
        "item": {
          "id": "7f9845c8-2171-4eca-aa7d-286d3a5654f0",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4045f666-a341-43ed-b7ad-67ce16ccb6b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "181da331-383f-425e-8732-5a3a52edd172",
        "cursor": {
          "ref": "f2c406ef-38fd-4c95-a638-8a15301b70c6",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "707d9dbd-c656-4133-b5bb-fa3bee899557"
        },
        "item": {
          "id": "181da331-383f-425e-8732-5a3a52edd172",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3d5c2292-74a2-439c-a755-dad8a4a47b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d28e07c9-3f72-4250-8093-2a5263f6ae7d",
        "cursor": {
          "ref": "244895f5-eeda-4eae-b8b5-55f19dc21653",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e0d7c915-246c-4fef-b2ab-d3f068575c41"
        },
        "item": {
          "id": "d28e07c9-3f72-4250-8093-2a5263f6ae7d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5d78ada0-cb50-4cc5-99cb-d84e9cf3dd0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d92d6df3-d4a9-4841-9d3a-065abe5ea2c5",
        "cursor": {
          "ref": "d94d9c3c-0dc3-42e2-b241-05bb06421e51",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "9e3898d2-e92a-4d41-ac6d-3d034ab73842"
        },
        "item": {
          "id": "d92d6df3-d4a9-4841-9d3a-065abe5ea2c5",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "67e0c65a-5720-4d40-848d-61f05b39b75b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263c57a8-3341-41f7-a670-6d2063ff1b37",
        "cursor": {
          "ref": "05d46e77-8630-400e-afc2-de1fabf78846",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f6746fed-a00b-4765-aabe-9aca4dbb4346"
        },
        "item": {
          "id": "263c57a8-3341-41f7-a670-6d2063ff1b37",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6dac7e5c-9714-4d31-83db-c350d065421e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "370a7a39-efb4-4752-99ab-8b35e34a796b",
        "cursor": {
          "ref": "34e3fce5-4706-476b-9dd3-37cb6bc65041",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c0f4e878-4229-49b3-8ae3-39238c79cab5"
        },
        "item": {
          "id": "370a7a39-efb4-4752-99ab-8b35e34a796b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3f7cfd2e-2dbf-47c9-85a5-a2661cef67ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca9cf6c-ca71-4b7c-8f7f-935174c53344",
        "cursor": {
          "ref": "5d2941b7-9679-4451-a4fa-33d7a9992eb5",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5c736e74-1e8f-45fb-ac21-9d659def6b1d"
        },
        "item": {
          "id": "4ca9cf6c-ca71-4b7c-8f7f-935174c53344",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b2b1ad10-b87b-4b7c-ab8d-750c6631210d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698b426f-f82f-4f92-a965-3867c5cc7836",
        "cursor": {
          "ref": "13a6869f-8d1c-4795-bf78-fc8b547a02bf",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "5857af3a-e677-42d8-be9c-a79ae54a3b50"
        },
        "item": {
          "id": "698b426f-f82f-4f92-a965-3867c5cc7836",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ed8ef502-6d7a-4f90-8a41-6de8a684ca12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07b3bbc7-86ed-40a5-be90-dbc59f33af5f",
        "cursor": {
          "ref": "eb8ee6b9-23d6-4ac8-9f84-57f32dda39e9",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "623e747b-2aea-4c0a-bbbe-d6e4bde17086"
        },
        "item": {
          "id": "07b3bbc7-86ed-40a5-be90-dbc59f33af5f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e944de67-fdfe-4622-ae10-74bffab6d54f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c31365-1754-49b7-9bf2-6109b5836d26",
        "cursor": {
          "ref": "37e754b1-2966-4aeb-86ec-5862a4fd72ca",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "23f9ae5c-9081-4008-9296-66c94224fb6c"
        },
        "item": {
          "id": "e4c31365-1754-49b7-9bf2-6109b5836d26",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0cae94f2-77a3-42e5-b1e6-ee68079aa004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af6b9112-9bff-4098-856c-fbc5929e5ffb",
        "cursor": {
          "ref": "df66173f-82ec-46a2-943a-b48af8854bc7",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "babb7dfa-1add-4c6a-91bc-429d600f092c"
        },
        "item": {
          "id": "af6b9112-9bff-4098-856c-fbc5929e5ffb",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "165e2ab8-3270-49f8-b4ce-a028078fdef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a0b2f5-f8bc-4573-8789-6ea1fc8fc24c",
        "cursor": {
          "ref": "804c5f76-2555-45e1-97bd-e0ed31a45e6f",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "eb98ef6c-6be3-4eff-b8c8-9d568c18ae6e"
        },
        "item": {
          "id": "82a0b2f5-f8bc-4573-8789-6ea1fc8fc24c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "03c542b6-28ed-4bed-b4d4-c4055b9bfefd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8525562a-1b0c-4cca-ac61-df5fbaf6caaa",
        "cursor": {
          "ref": "608b6c27-d545-4e73-a0e0-78be435fe2e9",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "5f948f9e-408c-463b-b6e8-e5eb6b168396"
        },
        "item": {
          "id": "8525562a-1b0c-4cca-ac61-df5fbaf6caaa",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "15d10a46-a8b4-430c-809e-add210499c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "397e2e6d-3025-4246-8a00-24c0adb2df9f",
        "cursor": {
          "ref": "24f0412f-4a7f-4ba2-985c-6452e60d7832",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "22514ec8-96e8-4a2e-b4a6-acf4119b15a6"
        },
        "item": {
          "id": "397e2e6d-3025-4246-8a00-24c0adb2df9f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "57334bf5-70bc-4d80-b51c-e2d73cde1914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "100ff76c-ed39-4176-97ee-5c4efedac9b6",
        "cursor": {
          "ref": "2248dd84-7e04-4242-bda1-af2ae8d2a1a1",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "76b41e24-411d-4ffc-8c30-738bd53a2fbd"
        },
        "item": {
          "id": "100ff76c-ed39-4176-97ee-5c4efedac9b6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "39e78efe-7c23-47e1-b5e4-886e0d807cfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11861a24-f182-4a07-ac09-3fce846d32d1",
        "cursor": {
          "ref": "4c3c633d-7d78-401e-9a48-4db6e87ee12d",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f7702c23-790d-452e-9288-ae341e521083"
        },
        "item": {
          "id": "11861a24-f182-4a07-ac09-3fce846d32d1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8a5ab371-6332-4b1a-977b-ff6975fdd2bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa08529-5af0-4622-8f21-f6ae16e20739",
        "cursor": {
          "ref": "2bf9b196-f945-4840-952a-8e7fe7d75806",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9706fe67-897d-43ff-ab46-5cddeb64ebbf"
        },
        "item": {
          "id": "5aa08529-5af0-4622-8f21-f6ae16e20739",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5165c272-ab67-41f4-930b-3ab7d226ee3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef89c76e-c6b5-4f70-9b2b-7f465e1ab37a",
        "cursor": {
          "ref": "12fe8e96-3852-4f2b-8a80-2da2783b8b65",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "fa021b7e-3709-49ac-bf21-ad92df7be92d"
        },
        "item": {
          "id": "ef89c76e-c6b5-4f70-9b2b-7f465e1ab37a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "cd6c07e5-8766-4d95-ae4d-e79108ecfa4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e275edff-af28-4afa-a786-05757601a124",
        "cursor": {
          "ref": "0abc3cc9-c8db-4bfa-ba65-93f9ebd37348",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "71235466-ed5a-49f5-be24-7758eb1d917d"
        },
        "item": {
          "id": "e275edff-af28-4afa-a786-05757601a124",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a7fdf42f-2b40-4556-9057-3ed59c49001d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33de979b-baff-4039-83ff-a008bb13072a",
        "cursor": {
          "ref": "4df474f5-a67d-4184-b34d-11120551e7b3",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "5ccb76d1-1af6-4639-a7dc-688f865b4fe1"
        },
        "item": {
          "id": "33de979b-baff-4039-83ff-a008bb13072a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "753acb7a-f5f8-4177-aab2-f194c1ac25b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04864e36-53f7-4899-bccd-4f5ceb8f7c13",
        "cursor": {
          "ref": "cdae19b0-e280-4d13-9315-7f5d76597e3d",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "cda5c9e1-8c88-4d95-a5e2-5a96b4a8f93e"
        },
        "item": {
          "id": "04864e36-53f7-4899-bccd-4f5ceb8f7c13",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ab1ce46e-7c52-49e3-acaf-f1bcb5ff9fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b9f4479-0861-43cf-85fd-d16410773352",
        "cursor": {
          "ref": "00646ce6-4c03-4102-b4db-b3c6a33a6754",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d84bb0e2-6168-4ff3-8f15-fa732bde973b"
        },
        "item": {
          "id": "5b9f4479-0861-43cf-85fd-d16410773352",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a72ee528-9271-41ea-8817-ec5ef8d64811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e1c5bc2-90c6-4dd5-9763-b420c16afcfa",
        "cursor": {
          "ref": "351375ef-47cb-487a-8eb1-7dbe1c923618",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d97ff4fe-5b39-4745-80dc-c99cad506190"
        },
        "item": {
          "id": "0e1c5bc2-90c6-4dd5-9763-b420c16afcfa",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8dce8847-9207-435a-8cbf-3c08eb1962d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46750fa2-1595-4048-b419-50ce76546836",
        "cursor": {
          "ref": "7c173b27-224b-4256-aff8-44ed40abad73",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c9f1e0dd-9045-4048-b239-6924c95d082d"
        },
        "item": {
          "id": "46750fa2-1595-4048-b419-50ce76546836",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3084e85c-12d8-4ff3-a9f3-d05ad2fc1968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a26da67-56e9-4929-a4f4-029da68f4da2",
        "cursor": {
          "ref": "c6d02bee-f7f8-4213-86d9-275b80cb0bf0",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "139e3e2b-4089-4128-9a82-8c71dc20ca8d"
        },
        "item": {
          "id": "6a26da67-56e9-4929-a4f4-029da68f4da2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "731db168-a235-4e6d-956d-d713abecfab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "019669d1-d29e-4693-a903-ead5353e798e",
        "cursor": {
          "ref": "9edd2bea-134b-4aa3-a306-347f60240b21",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "17bf0dba-8d37-4103-b4f0-0923f9a5e31f"
        },
        "item": {
          "id": "019669d1-d29e-4693-a903-ead5353e798e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "77c2567a-fd21-4a0a-8dbd-ab27b49f5990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bcf016d-8349-440c-af27-72c137c1b0d7",
        "cursor": {
          "ref": "aaad41f5-59c1-464d-a221-c33cb3681e09",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "3bd50d4b-477d-4d0b-a1a1-bba8613d9550"
        },
        "item": {
          "id": "1bcf016d-8349-440c-af27-72c137c1b0d7",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "e3fd9412-b2d8-49e4-a3b0-98d9d6b18f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e851471d-7f1a-4107-9192-103937eb2c51",
        "cursor": {
          "ref": "8d5f9c8b-0daa-4f0b-90fe-aaaccfd7b0d7",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a237e6d6-3eed-4ff5-b2cb-fc58f3a40ddc"
        },
        "item": {
          "id": "e851471d-7f1a-4107-9192-103937eb2c51",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "350fa751-92e7-4c13-b8e2-bbfed4093da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b94bfe27-ae67-4cbc-bdf9-7bd30b5cd40f",
        "cursor": {
          "ref": "bd8754d6-0fc5-4e10-8a8c-6a45820a841f",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e5081ae1-9976-477b-a904-3eb76f3988c4"
        },
        "item": {
          "id": "b94bfe27-ae67-4cbc-bdf9-7bd30b5cd40f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "cd1b6a4b-7603-44ee-9dfc-31758d7325b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b56fc6c1-6ea0-4924-bddf-289c138476dc",
        "cursor": {
          "ref": "79cd4cad-77db-4915-8815-1a8c15f6d91e",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "123bc345-aa69-4423-b6e7-e85836d252f8"
        },
        "item": {
          "id": "b56fc6c1-6ea0-4924-bddf-289c138476dc",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "fc84a975-986c-4705-ada1-5dfd6f654b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bfa7b3e-0e22-4c55-a5bf-269358fe687f",
        "cursor": {
          "ref": "6a5d8773-7adc-40f7-8873-90f0cc644e49",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "eda537f0-4241-49ff-b856-ce4121929f9b"
        },
        "item": {
          "id": "0bfa7b3e-0e22-4c55-a5bf-269358fe687f",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ee979ffc-b4da-4d54-a42a-cae8720f403f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a44a94-a8a5-4248-8d2b-3c3a87dc3c6e",
        "cursor": {
          "ref": "e706840c-4d0d-4cff-8f8e-ece3166cf974",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "67f79703-49fd-45f9-afb3-c732e6b11f91"
        },
        "item": {
          "id": "f4a44a94-a8a5-4248-8d2b-3c3a87dc3c6e",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "85226129-c7a0-4153-af37-431e7a2748e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c90fcc5e-89b0-4b82-8125-9509478ab7bb",
        "cursor": {
          "ref": "78b16481-649c-4ab9-9d8a-de4c2668ec90",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b230d76d-1efc-4ca0-897d-73e37d88ea5b"
        },
        "item": {
          "id": "c90fcc5e-89b0-4b82-8125-9509478ab7bb",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "08b99e42-417c-4ff4-b6ff-f071e9165228",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd65a153-9a29-4349-a108-98a74620995b",
        "cursor": {
          "ref": "3653810f-44ad-4a95-a754-167a8af539b5",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "06a35ac8-bb97-4003-9a38-5c2c1d460942"
        },
        "item": {
          "id": "fd65a153-9a29-4349-a108-98a74620995b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "07813d5c-e57d-4d0a-9515-a836c7875924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a390026-8c4b-4d41-8f10-e3ea15716abc",
        "cursor": {
          "ref": "1b0f49e2-b22d-4faf-9f1b-8ffd02f1b451",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "4c1225f7-4377-4e73-b8a3-bf1bd0bcd857"
        },
        "item": {
          "id": "8a390026-8c4b-4d41-8f10-e3ea15716abc",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "c33af71c-cbda-470c-999b-fdc0780dac5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d174d8-3a8d-49a5-a864-3c3f57850cc3",
        "cursor": {
          "ref": "afc73068-fdd4-4a1f-9757-069c11a146fd",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "7a8c45f3-07af-40da-8bfc-bf4e7d7bb892"
        },
        "item": {
          "id": "43d174d8-3a8d-49a5-a864-3c3f57850cc3",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "2d9a9fdc-7949-4a2c-9e2c-43a89b11389c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5fd92f-9338-4b28-a681-975831a7c794",
        "cursor": {
          "ref": "e7f04211-3718-4152-9d0b-42da175bdc89",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "a5e54098-9376-4897-86ad-791af68a3fc5"
        },
        "item": {
          "id": "3f5fd92f-9338-4b28-a681-975831a7c794",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d7ea49d6-d35f-4475-acd3-5afff8230dab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6aeee7c-8c6c-4281-93d5-5e92e95c7be8",
        "cursor": {
          "ref": "51e7d23a-c4e8-4382-bf18-009f02325fe3",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "20ebca80-93d6-4133-9ba3-420e4efe0dcb"
        },
        "item": {
          "id": "d6aeee7c-8c6c-4281-93d5-5e92e95c7be8",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2a7f6385-4722-4676-88ef-c44b9ffdb421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd19181-afeb-4241-903f-e196dff4201e",
        "cursor": {
          "ref": "cf588bfb-80e6-4591-8eeb-16c54383d922",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a11d49d3-9bef-403c-88d7-f1c9adc41a64"
        },
        "item": {
          "id": "fcd19181-afeb-4241-903f-e196dff4201e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f7706ec8-c038-4f16-b5c9-33e8358c2866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "927d2c9c-84df-4409-88f0-6f985f2bb8a7",
        "cursor": {
          "ref": "9513c788-1c51-44f2-ba6a-e48c5191fa72",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "4601ea64-3e79-49a5-afc7-596b43487f59"
        },
        "item": {
          "id": "927d2c9c-84df-4409-88f0-6f985f2bb8a7",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "7c95b852-f930-4662-8315-09ca0e6b7bdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "641e476e-adc4-4180-986a-5e032480dc13",
        "cursor": {
          "ref": "1380615e-0ce3-4a74-a83a-207f4a3ad79f",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "29ee8824-5397-4c84-b643-718c9fe98bf1"
        },
        "item": {
          "id": "641e476e-adc4-4180-986a-5e032480dc13",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "df045e1d-cec8-4d4e-8c88-0c86dee1324b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf8539b-96ef-40a6-a681-36e91a99afad",
        "cursor": {
          "ref": "7de68b59-3c15-455a-9620-6c2bf6f4801c",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b09edddd-bf24-4926-acd6-823515fc41a6"
        },
        "item": {
          "id": "caf8539b-96ef-40a6-a681-36e91a99afad",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "d33bd801-d050-4e53-8bdd-3972ff10e69f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b892f544-6895-4a60-a0f6-19c9d8407a0e",
        "cursor": {
          "ref": "6024ad33-6eaf-4807-9476-8d16d10005f9",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "cefaac57-60f7-4f2a-8526-8edbe70c859e"
        },
        "item": {
          "id": "b892f544-6895-4a60-a0f6-19c9d8407a0e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a622acff-382e-4843-bd2f-db8a447bf2ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0070b08e-fe31-4fa4-b4b8-1f98c6e97c2a",
        "cursor": {
          "ref": "a9a1adfd-e054-4d26-be81-f66adf8bc25a",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "1d14c0f9-8139-49aa-a993-eec335767e37"
        },
        "item": {
          "id": "0070b08e-fe31-4fa4-b4b8-1f98c6e97c2a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e042e49f-8723-4260-a04d-ba455fb71f93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d31f2a06-a650-4a29-bb71-73bd154f59aa",
        "cursor": {
          "ref": "8426e644-ced7-4332-8ce7-439395643475",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c07ee182-1e92-427f-9d97-57ec66de5e8d"
        },
        "item": {
          "id": "d31f2a06-a650-4a29-bb71-73bd154f59aa",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "7b751c06-45b4-40de-8af2-04deb3a07bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e7e6724-3dbc-42ab-a49a-fe40deb670bd",
        "cursor": {
          "ref": "4fc0fd46-8e4a-4534-91eb-55fd622fe97e",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "469f8efd-cdbb-43d3-b795-9449aa64128b"
        },
        "item": {
          "id": "1e7e6724-3dbc-42ab-a49a-fe40deb670bd",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d9b515d2-9bb6-487c-9f1c-ec5213130e97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23bcd2f2-1ae1-4e3b-9b33-4bce16f7ed2f",
        "cursor": {
          "ref": "d5021984-97dd-4994-a630-e26c64fed4e8",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9876a9dc-7476-4a08-b2d0-003129e6f78a"
        },
        "item": {
          "id": "23bcd2f2-1ae1-4e3b-9b33-4bce16f7ed2f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d1582674-1026-4b26-b0bd-de7107f08520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba93941-db14-4872-a60f-6fa93a2e5fe0",
        "cursor": {
          "ref": "049e9692-08a2-4a53-8897-0d2e293ac690",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "872880a8-0d6a-4138-b1b0-825431fb6ea9"
        },
        "item": {
          "id": "fba93941-db14-4872-a60f-6fa93a2e5fe0",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "15f62889-5007-4257-98ed-4d26efdbc6eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8acf6da5-a356-4e01-9f12-e1c3dd00ef28",
        "cursor": {
          "ref": "aebe2bb8-2ab0-4db7-903a-dd508202e9f2",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ddb56a90-f5a7-4048-9e89-9d0452c3f056"
        },
        "item": {
          "id": "8acf6da5-a356-4e01-9f12-e1c3dd00ef28",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "2a350060-82e7-44ce-b82a-414c331b72e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc18859e-e6bc-4732-b5fd-581a1cb9ab98",
        "cursor": {
          "ref": "0c07de14-f987-4962-ab92-f180ded2f21c",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f5abe066-e1fe-43c6-9896-01a97c081845"
        },
        "item": {
          "id": "fc18859e-e6bc-4732-b5fd-581a1cb9ab98",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "de628ff7-25bf-4ad5-8658-fb5c87a17379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "702e8ae5-f484-48e2-9981-c0dd926b9b25",
        "cursor": {
          "ref": "968f5bda-9759-4e73-a9d5-2a5330cce243",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "fa8545b5-8dd0-4dfe-be01-d7dedb9c9f82"
        },
        "item": {
          "id": "702e8ae5-f484-48e2-9981-c0dd926b9b25",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "5223eef8-bf9b-454d-a746-d9e2f992ba84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11866261-5f14-463d-9919-81ca3d2c5022",
        "cursor": {
          "ref": "9553628b-418a-48d2-bb87-c25661230757",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "607a2ddb-93ec-4d55-a171-83c8cc57e8cf"
        },
        "item": {
          "id": "11866261-5f14-463d-9919-81ca3d2c5022",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d64d9665-4ece-46f0-9b23-6fce01c8c320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1efa0f2b-c278-46e3-aec7-7cea1b511306",
        "cursor": {
          "ref": "6f160dca-4eb2-4c45-9260-53ca38642977",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "0946f29b-454f-4fc4-83a2-cc98a886e6fc"
        },
        "item": {
          "id": "1efa0f2b-c278-46e3-aec7-7cea1b511306",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "efe20090-6d86-4cdd-a5b8-11732d923580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a1b7b1-b0a4-42fc-b223-f3b758d299f5",
        "cursor": {
          "ref": "04e1f2f1-730b-4820-bd9b-8640465e4ccf",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "33227a86-47df-4a95-aced-329e35245df7"
        },
        "item": {
          "id": "04a1b7b1-b0a4-42fc-b223-f3b758d299f5",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a5d7b288-46ab-42af-8220-90d5d65df412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d1a448-6321-416c-bfc6-7ed3b4ebd9b4",
        "cursor": {
          "ref": "71a4f0a3-3cd6-4642-8a1c-b74be3f60084",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f8a9e24a-1ec4-45e0-9cc4-49078b41c04d"
        },
        "item": {
          "id": "c9d1a448-6321-416c-bfc6-7ed3b4ebd9b4",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "19b44707-baf3-48c3-adc5-dd7e20833225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4789065-7b9e-438f-aeac-e18dcf06bbf9",
        "cursor": {
          "ref": "95669f5d-1db9-4ce5-96f3-46e736f86676",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e5e3b21f-59aa-4dd0-8403-87d957ff02e6"
        },
        "item": {
          "id": "b4789065-7b9e-438f-aeac-e18dcf06bbf9",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c67a89e4-61ef-4a56-9909-3122b8f9e0ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8deca1-d9d3-484f-a199-0c19bb60728a",
        "cursor": {
          "ref": "a1b9c1c2-c374-4bce-8ebd-8bff9cd332a1",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "0ccc09ad-7059-4348-a8ca-8ee2d228c9c9"
        },
        "item": {
          "id": "7d8deca1-d9d3-484f-a199-0c19bb60728a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "75e76777-50a8-4768-8c8b-355d687dd98c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "642490cd-93b9-4c7c-b013-8981aa8f0460",
        "cursor": {
          "ref": "cf84b0c8-c011-459d-9609-67b218490433",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "cb285abb-ba56-499a-bd2b-27dbb7be98ff"
        },
        "item": {
          "id": "642490cd-93b9-4c7c-b013-8981aa8f0460",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2ddf2748-8b3b-4de1-9613-370fdf1c3b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 130,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4263340-6aae-415e-99c0-7eebf58e1aa0",
        "cursor": {
          "ref": "ddeda3bc-bb2a-414b-91ed-369aa2b8e55e",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "7d04a505-3fff-474b-b904-b34de090f765"
        },
        "item": {
          "id": "a4263340-6aae-415e-99c0-7eebf58e1aa0",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "6f0f9782-43cc-41d8-a622-776209608c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "464e2b4c-c8d6-4bcc-a76b-bbbff5f155ad",
        "cursor": {
          "ref": "fd6053eb-4d29-4d2b-bb52-74a38d754af3",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "1553c3c9-6ddc-400a-8ece-cf9a61b4062c"
        },
        "item": {
          "id": "464e2b4c-c8d6-4bcc-a76b-bbbff5f155ad",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c406ccab-7c71-4b6d-9bba-3327d74af4ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a48d5102-d0f4-4c09-bec5-2725f5e71d9b",
        "cursor": {
          "ref": "3296a2b4-acd1-4d1e-be9d-481b15740aec",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ddb7516a-0ae8-4962-9c5c-1f597d3caa96"
        },
        "item": {
          "id": "a48d5102-d0f4-4c09-bec5-2725f5e71d9b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "251ffec7-2637-449e-84a0-c90d11a694b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47455a8f-bcd0-495c-aa6c-6c95272fee12",
        "cursor": {
          "ref": "87d5f55a-c98a-4061-89e1-30b4c527ecca",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b88975ac-c0a4-498f-b211-0275409bf336"
        },
        "item": {
          "id": "47455a8f-bcd0-495c-aa6c-6c95272fee12",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e44231b9-a670-43c1-9a62-adec694c35a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3850d130-0b88-4ada-95ab-95a10bdbbfe2",
        "cursor": {
          "ref": "c546b236-9f75-4d03-be29-e3d699573876",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "11755742-12b1-4fc1-80d1-96daf3d35d71"
        },
        "item": {
          "id": "3850d130-0b88-4ada-95ab-95a10bdbbfe2",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "aa9bd16a-a9ad-4560-864d-881c9123ed6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d04cfda-0941-4dd6-9df7-973c66ec9c86",
        "cursor": {
          "ref": "0e417110-071f-4c5f-bb47-9221bf2593ee",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "1783645e-da16-44a0-b30d-91837c7f515d"
        },
        "item": {
          "id": "1d04cfda-0941-4dd6-9df7-973c66ec9c86",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "1db228af-0de9-46c8-938c-dfb798ac745c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad61b18-4878-418c-8b18-c839d8299583",
        "cursor": {
          "ref": "e298aa86-fada-40d9-8713-48af92cb1c46",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b729bce3-b3cb-433f-b4a5-d96e5704a238"
        },
        "item": {
          "id": "0ad61b18-4878-418c-8b18-c839d8299583",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f4c0fcf4-5c15-4229-91e1-83ede3b49857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1238b4d4-d299-42c5-a7a0-57dc1558f82f",
        "cursor": {
          "ref": "096c608a-d429-4a82-a3ad-70e38b814ee5",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f00dcce6-31ac-4702-9ea4-1c4434ef9a1a"
        },
        "item": {
          "id": "1238b4d4-d299-42c5-a7a0-57dc1558f82f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "6946781a-ed38-42b4-b1b3-5d69257aa223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25012b05-016f-4d57-8e7c-7d9faf80b320",
        "cursor": {
          "ref": "612d4f68-74ef-4538-8bf6-84c4ad9e8d7a",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0bfb6b1f-7270-4060-a535-a15113e7cb8e"
        },
        "item": {
          "id": "25012b05-016f-4d57-8e7c-7d9faf80b320",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "1bae9709-24c4-4329-ae57-e24500eb48e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f26dbf-2531-4ff2-9c4c-4f9f2169c14e",
        "cursor": {
          "ref": "0ccac64c-5157-4362-81f0-18b8fd009485",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "4be63aea-d7f6-43b0-ac98-884069014a42"
        },
        "item": {
          "id": "69f26dbf-2531-4ff2-9c4c-4f9f2169c14e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "051d27ad-b50c-476c-a1b1-a9477fe54ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e982c19b-a4a3-436e-8c73-298279c72b76",
        "cursor": {
          "ref": "464aae63-46c0-45da-82e3-00d66636dc71",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "89020dd0-577d-47f1-a164-716b440c00a3"
        },
        "item": {
          "id": "e982c19b-a4a3-436e-8c73-298279c72b76",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "887b0a98-4f16-4143-91b9-55453c708298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d3acfd2-4efd-40c8-83ca-cab30d118bff",
        "cursor": {
          "ref": "68ddd25b-6f67-4d08-bf89-b4a672ae2c06",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6cb70190-72cb-46a8-806e-e64d8592d4d3"
        },
        "item": {
          "id": "0d3acfd2-4efd-40c8-83ca-cab30d118bff",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c18c0f4c-d185-46e7-b27e-290c86f008b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd7d1e0-c892-4161-8ceb-94a063cb0955",
        "cursor": {
          "ref": "0744e006-8dc8-47e2-9a2d-059184001149",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "5fd921b1-3336-4e38-bf9a-e6b222e82692"
        },
        "item": {
          "id": "7dd7d1e0-c892-4161-8ceb-94a063cb0955",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "8c6ae568-a520-4eac-99e3-1b6c0b715f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaafbffd-9aef-4809-9489-f7618aa53d17",
        "cursor": {
          "ref": "de281e38-b5cb-4584-b033-72bea744b3b1",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "3dc9065e-d12c-43d3-b845-fc1b08aaef6e"
        },
        "item": {
          "id": "aaafbffd-9aef-4809-9489-f7618aa53d17",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1558e1e5-aea2-4dc4-badd-a9a543e8ab27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c5c9ab-be26-40ef-ac49-83e5f7f60710",
        "cursor": {
          "ref": "fdc89458-e3e0-4f64-aed4-e8da77ad2351",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "1bda7158-081f-4504-8a08-1b829c4592f2"
        },
        "item": {
          "id": "51c5c9ab-be26-40ef-ac49-83e5f7f60710",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "20716f9b-ecfd-4e00-8fbc-6d00e29e2b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f67c74b1-7d6c-441a-b110-49a37ae446c9",
        "cursor": {
          "ref": "24e384bf-a0b7-4931-bed8-aa4e3251a422",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "3a303add-bb81-4218-b463-710301b54b65"
        },
        "item": {
          "id": "f67c74b1-7d6c-441a-b110-49a37ae446c9",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "eaea826f-4448-4a03-876f-79e78df15844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "090b5d4c-cf9b-49f1-8e78-3c0e43eb46c0",
        "cursor": {
          "ref": "f14e2605-d2db-442f-84ea-549b6a9a8d66",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "50311737-d73e-4773-8f75-c8c87b62762a"
        },
        "item": {
          "id": "090b5d4c-cf9b-49f1-8e78-3c0e43eb46c0",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ea6b5550-2668-4b9d-8ac1-9b0dfd9430f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e14a243-193e-40a8-870b-6e342eecbed3",
        "cursor": {
          "ref": "b1e63f1a-1172-49e9-9711-65b1d97ea2e3",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f98a34a3-869b-45c5-a00d-14d19040001a"
        },
        "item": {
          "id": "3e14a243-193e-40a8-870b-6e342eecbed3",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "429dc0cd-596b-46b6-9b54-0ea149c07369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2716ef0-e67a-425f-9d05-93633904c705",
        "cursor": {
          "ref": "c8a21a7b-3b56-491c-8003-6409a9a24e96",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "3e9d8aa3-7312-47a1-b8d9-fd237763fcd1"
        },
        "item": {
          "id": "a2716ef0-e67a-425f-9d05-93633904c705",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "7c5e332d-bb73-4f78-854a-168a6a4262ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b2bf7e-0fbb-4c7f-a9fe-446df949b8e2",
        "cursor": {
          "ref": "85540863-2690-470f-9188-f3b3a42f5f6d",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "73770dc8-3a78-4848-bd2c-9587108210e0"
        },
        "item": {
          "id": "f3b2bf7e-0fbb-4c7f-a9fe-446df949b8e2",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b4819ac5-fcac-4a77-b148-5779ea7aab78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf7f6920-2300-4742-88e3-4de4e51c7cfe",
        "cursor": {
          "ref": "27865e67-df90-474a-bd27-400bc83bf8ff",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "14ceedf1-9313-49b1-942a-4b2db0c67ba0"
        },
        "item": {
          "id": "bf7f6920-2300-4742-88e3-4de4e51c7cfe",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "db3ee27b-08b9-4796-ad43-8f1faa25a38f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfea021c-4649-43da-9fbd-042923d59861",
        "cursor": {
          "ref": "4ec0896d-f003-464a-ab1f-7b53125df7f1",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "25e94c4a-20a9-4b59-a3ea-4a558d9a18e9"
        },
        "item": {
          "id": "dfea021c-4649-43da-9fbd-042923d59861",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c9dadbd4-62f2-4d42-86f2-a5d667b34df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3237e39f-3132-420b-8fed-464b89a3e951",
        "cursor": {
          "ref": "90e275d0-6705-44be-9fe9-a6b28a2a5a93",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "7bb027e7-a4e5-4814-8174-ffaf08ac5885"
        },
        "item": {
          "id": "3237e39f-3132-420b-8fed-464b89a3e951",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "db98e85b-5a7e-46dc-b390-afa110d56652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c524dd19-e283-492e-82e5-07501c76a22d",
        "cursor": {
          "ref": "eab6483b-de1d-4f4b-9f7f-7e212fae064d",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ae31f35d-a849-41a8-b853-8eb0faf001d3"
        },
        "item": {
          "id": "c524dd19-e283-492e-82e5-07501c76a22d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "03e51d97-ba12-433a-9067-70c970cc1343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de9d4a4a-99a6-4d17-a7a0-4fc52c20d689",
        "cursor": {
          "ref": "d1913c15-8a92-408b-ab48-ddc5422d04af",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "8b23f9d4-326d-4ee4-9388-a40327cc0b7e"
        },
        "item": {
          "id": "de9d4a4a-99a6-4d17-a7a0-4fc52c20d689",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e0e2d1b5-a760-41dc-9b81-97e36076d548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d143a8f-e297-4d76-976e-971b0fea86a5",
        "cursor": {
          "ref": "bb1a79b3-cc07-48f7-b61b-102c19ed798c",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ac8362a9-fc20-45b4-adf5-9f5ada93da04"
        },
        "item": {
          "id": "8d143a8f-e297-4d76-976e-971b0fea86a5",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "0919054c-f6ac-4d4e-9acc-7cbdec1d4600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc912ec-0207-463c-8c0d-a76543ed8421",
        "cursor": {
          "ref": "5aab54cc-b8a9-4099-a8bd-2a9476aeea13",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "5c860266-cb9e-4b22-a200-a1374b963151"
        },
        "item": {
          "id": "8bc912ec-0207-463c-8c0d-a76543ed8421",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "03ea9447-f994-4c24-a5fc-6b8191cbd059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "649b97b2-8908-4f6e-8f02-0e85a5202877",
        "cursor": {
          "ref": "5b1d88ca-017a-4c90-997f-9dc8e5b0462f",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ef9579f0-49b8-466f-87f2-8c074698ca17"
        },
        "item": {
          "id": "649b97b2-8908-4f6e-8f02-0e85a5202877",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "1622ce70-60b6-4f7c-abf6-01c2ca52269a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "888fd417-6022-4e44-84c8-f63c77d8b1c5",
        "cursor": {
          "ref": "2743130d-dc5e-41e7-a84a-22b298e38c3a",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2cabff60-0081-4cd2-ab21-fbd854278ada"
        },
        "item": {
          "id": "888fd417-6022-4e44-84c8-f63c77d8b1c5",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c3be0a04-f24d-4d71-8fd5-753835b8d907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01742ac2-42d9-4621-9222-f1c933581983",
        "cursor": {
          "ref": "408e421a-97b3-4599-9806-cb53d86e2c36",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "4b2caa05-3640-4ac5-8905-78995705ebdf"
        },
        "item": {
          "id": "01742ac2-42d9-4621-9222-f1c933581983",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "edcb3c44-cfa2-4f2a-a87a-96badb47c90d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86fcd03a-d33a-4836-ba56-c8e5f4dd9eb6",
        "cursor": {
          "ref": "5b0b4d7d-23bc-4071-825b-bd56174289b3",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e97e3cec-233c-4bfa-b688-53341f53b751"
        },
        "item": {
          "id": "86fcd03a-d33a-4836-ba56-c8e5f4dd9eb6",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b2a12e29-c45d-4197-a0df-7abef4464397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94bc02bb-3597-4ece-ad65-d10db1c5762e",
        "cursor": {
          "ref": "4783076a-ab75-4b8d-b391-14625de3f1ce",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "da73ec5a-f46b-4a73-aba4-c856e4d9877b"
        },
        "item": {
          "id": "94bc02bb-3597-4ece-ad65-d10db1c5762e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "983da86c-6c28-4e6f-ac09-ee82a77df625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b64ec54-cc03-4b47-8ad5-c37bfcd0a833",
        "cursor": {
          "ref": "a7e010e3-cb7a-414b-8bf3-96e83ca4b302",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "317282d3-faf6-4515-bbb8-a95614758520"
        },
        "item": {
          "id": "1b64ec54-cc03-4b47-8ad5-c37bfcd0a833",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "1f589def-da35-408a-8c28-f35b45e652e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71125240-af34-434c-a3f5-888dfc43befb",
        "cursor": {
          "ref": "c48d99de-19fe-4fe3-aaa5-2aaef714bdb7",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e826138a-8eb3-4793-b187-d5bcae1f9d7f"
        },
        "item": {
          "id": "71125240-af34-434c-a3f5-888dfc43befb",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d85eb290-6fb5-4455-8cb6-7dcb5e8ccb05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91aeac40-c0a7-473d-acaf-3cfc59f82cd0",
        "cursor": {
          "ref": "c3780d56-f673-41b9-9b96-9be0c7a59342",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "4ecd1c65-974a-4122-9d9f-632da4095989"
        },
        "item": {
          "id": "91aeac40-c0a7-473d-acaf-3cfc59f82cd0",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f4b599a2-7039-41c2-b10e-04213c08dab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc60353-1cae-4619-bba9-60115ebdae71",
        "cursor": {
          "ref": "ee0e0d92-aee4-498b-a1ad-74b49f5d3eea",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "82cfcaf1-2872-434d-accf-275d0745d766"
        },
        "item": {
          "id": "8bc60353-1cae-4619-bba9-60115ebdae71",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "30508967-9cde-41aa-bf63-ff27045d49f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68168276-b068-453b-907c-821cd85e14e3",
        "cursor": {
          "ref": "1d89d2c7-119d-499b-8287-a454e8ca59a5",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "baa718a7-3420-4c1c-974e-a6bd70c7bcb1"
        },
        "item": {
          "id": "68168276-b068-453b-907c-821cd85e14e3",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "79b2762a-8abf-4a22-a17e-1b3e245f54c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "123ae190-bc26-49c4-95c4-89ffc5421e88",
        "cursor": {
          "ref": "e9a28854-443d-439a-9c7f-4813dba1d597",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "3c0de1f0-309a-4a04-93cd-17796463623a"
        },
        "item": {
          "id": "123ae190-bc26-49c4-95c4-89ffc5421e88",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "7b3d745a-3fd3-42f5-92fd-e14fd3273de5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55baf54d-e213-45ef-b2b8-0fcaff666be3",
        "cursor": {
          "ref": "cc791a0a-f170-47c0-a533-ef13b6d229c3",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c14e17ae-1224-493a-95a7-b70bb428840a"
        },
        "item": {
          "id": "55baf54d-e213-45ef-b2b8-0fcaff666be3",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "efc4848c-f722-4d47-b62a-f2f7de43a0c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "107c4b0e-a5c8-434c-8de5-50f7bb880e8c",
        "cursor": {
          "ref": "bfd7868d-2405-44c3-a666-7961c05e8858",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "efc6734a-13fe-4d0e-8a43-e1a10a08a3c0"
        },
        "item": {
          "id": "107c4b0e-a5c8-434c-8de5-50f7bb880e8c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f2a10309-fa8f-4c82-9136-6a89cd2b7319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07227d21-ac4e-4fa0-b5ca-bbef50fb9803",
        "cursor": {
          "ref": "186d0f61-0a6b-4321-863c-1f1929240933",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "13cc6d6c-5d9e-48cc-8533-983705b8c501"
        },
        "item": {
          "id": "07227d21-ac4e-4fa0-b5ca-bbef50fb9803",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "cbefead4-d240-4f1f-8a53-dc9c42cf8ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d5db725-9f3f-4497-a7a4-70e1f83da3ed",
        "cursor": {
          "ref": "11a0f58d-00df-4695-8a69-34bcdf7eb64e",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "2e1ffcbd-8e93-4aae-8b00-afc9b972b8df"
        },
        "item": {
          "id": "2d5db725-9f3f-4497-a7a4-70e1f83da3ed",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "7e11b5fd-0a26-496c-9286-075a314e4420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4957acb-5e0f-47a3-bafb-bc8a677aee5d",
        "cursor": {
          "ref": "e48d11f7-ee38-4902-b546-c268cdb631c2",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e7a601ed-85ef-4128-9001-a07371114e40"
        },
        "item": {
          "id": "c4957acb-5e0f-47a3-bafb-bc8a677aee5d",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8ced6b75-0f00-46a6-9e2d-ae545daa8fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b00fd70c-c6b4-4662-b445-b8deec844dce",
        "cursor": {
          "ref": "207660fa-7441-476d-ac06-b64f3017e02f",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ecf1beaf-bb90-4776-901f-101f893aec19"
        },
        "item": {
          "id": "b00fd70c-c6b4-4662-b445-b8deec844dce",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f5a12ebc-745a-4150-ac1a-40e09c79caa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ced479a-79aa-4c6f-be1e-5a7136922c1c",
        "cursor": {
          "ref": "8fc76fca-0e4b-4106-8496-0a158b9f9d96",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e7d1c981-5568-4f48-8218-1672d1a6062a"
        },
        "item": {
          "id": "0ced479a-79aa-4c6f-be1e-5a7136922c1c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f0424fee-1ac0-40b6-9ed4-4c4a71ef4880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "617fd68d-6c8c-4f6d-8157-ce739d8fc2a6",
        "cursor": {
          "ref": "8b6824e3-8ab1-43e4-b916-fe2788e6a715",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "84fd8458-0147-489c-9533-48cb5c645141"
        },
        "item": {
          "id": "617fd68d-6c8c-4f6d-8157-ce739d8fc2a6",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e67231c0-e300-4e75-b1fe-b6a22226416a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb35759c-ecb5-4795-b39f-e6f53a97d092",
        "cursor": {
          "ref": "b3875c37-4e94-47e4-b889-5b286f784add",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "bef6f4c9-df91-4fcc-93d8-a50ea58f081f"
        },
        "item": {
          "id": "fb35759c-ecb5-4795-b39f-e6f53a97d092",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "df3d6521-337a-44b0-a951-9045a78d7e5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78248fd1-c0e2-4bf4-b894-04e1b30bb19c",
        "cursor": {
          "ref": "6cfe44a4-671a-40fd-ac42-00414dcdffb5",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "36f9a30c-3bc0-4c70-ad3a-658d4d2307fe"
        },
        "item": {
          "id": "78248fd1-c0e2-4bf4-b894-04e1b30bb19c",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "b86a0d98-b0bb-4c4f-afe7-a19140c60cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47eca076-c22b-4960-bf9c-cf0a7684a143",
        "cursor": {
          "ref": "65a107d3-cd9c-405d-8d72-50e2fe7f47a7",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "04ffe90f-e18e-42b7-b984-658cc03a1f61"
        },
        "item": {
          "id": "47eca076-c22b-4960-bf9c-cf0a7684a143",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f0ddf6de-a784-40c7-9486-5e0fb0c95848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51d39401-61e0-4fc2-a047-2005777f374c",
        "cursor": {
          "ref": "2232c76d-dcd7-4ec7-aed7-ec91a96d5344",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "46ee1c93-0194-4a94-ae74-f8d6e5c5225c"
        },
        "item": {
          "id": "51d39401-61e0-4fc2-a047-2005777f374c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c250a69a-c00b-48d3-a922-9f69b621a12d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d00c39-ad1c-420a-bade-72e90f1e770a",
        "cursor": {
          "ref": "58fda9e0-4cad-41c8-b270-982e5565bdb6",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "21c16984-4041-4751-b579-2b8c0306c0b6"
        },
        "item": {
          "id": "b2d00c39-ad1c-420a-bade-72e90f1e770a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "aa754ff6-f16d-4627-a02f-55d961262570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23224970-a5f1-4d28-9026-2e5b7eace189",
        "cursor": {
          "ref": "6f700b40-a3de-4e8a-888c-9d31487fa72a",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "ebed84a2-811c-4100-a4c3-e4bb87b8a9d4"
        },
        "item": {
          "id": "23224970-a5f1-4d28-9026-2e5b7eace189",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "5636d69a-700a-470d-8fd7-e30ca7963ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e652e862-7af8-4036-a73d-b0da492970af",
        "cursor": {
          "ref": "6e5e388d-d370-44e7-9c5e-fd1bca4cfeb9",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "3b7415db-dbc9-48e3-8a81-b2d622faadb9"
        },
        "item": {
          "id": "e652e862-7af8-4036-a73d-b0da492970af",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "777ec252-f79f-480e-a684-db1c3a053276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99bce310-f1f7-44ef-a084-d35ee49ad6cd",
        "cursor": {
          "ref": "f507934a-0b9d-4d1e-a49a-c9dfdbeb9225",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "b97557ef-632f-47d2-9a9a-f3cc199ad187"
        },
        "item": {
          "id": "99bce310-f1f7-44ef-a084-d35ee49ad6cd",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "75321ceb-80f7-4098-b067-7b971ed031b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b873d3f-4cdd-4888-87a1-63b145a3b526",
        "cursor": {
          "ref": "0b04956e-d845-46b0-82d8-ad40cbc943f5",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "9c38c47b-6dd5-4b62-a895-48c7d492a15d"
        },
        "item": {
          "id": "1b873d3f-4cdd-4888-87a1-63b145a3b526",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d66e09a4-7cf6-4786-960a-e1ed98c35353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60bf75fc-8f7e-48cb-a93d-8a1b19ef9254",
        "cursor": {
          "ref": "a119fc1f-b8bb-485d-bcbe-9733e4e4472d",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "674051aa-fdd6-479c-a681-d1704d5054c8"
        },
        "item": {
          "id": "60bf75fc-8f7e-48cb-a93d-8a1b19ef9254",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7f02238a-c917-402d-bb9a-fa3937a12b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf0a9eb3-e8a8-4e15-b3d5-0e6865e57507",
        "cursor": {
          "ref": "86ee764a-f48b-4a79-8420-a1d0374ff960",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "61b4d1db-872a-4c91-8e5c-2302aca74167"
        },
        "item": {
          "id": "cf0a9eb3-e8a8-4e15-b3d5-0e6865e57507",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "cf94ada8-1c09-4d08-8b7a-237daf9228a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "466bda87-5089-4070-a1bc-5253af5dd3bd",
        "cursor": {
          "ref": "251b90ae-d694-44bc-b2df-db018c60f75a",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "fc72c770-d403-427e-b269-d33d818e3544"
        },
        "item": {
          "id": "466bda87-5089-4070-a1bc-5253af5dd3bd",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "21b45409-5297-4e85-abfc-fd4c169bfdd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1527814-32b2-425f-8404-35290235d0a9",
        "cursor": {
          "ref": "4bcf90d3-aa84-4480-af2e-99ef13c8aea5",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "d6462640-e42d-4e23-b0a1-bfdadec80a53"
        },
        "item": {
          "id": "b1527814-32b2-425f-8404-35290235d0a9",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b9e1daa1-8aa5-4147-bb79-5021fea74c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9859dd93-d474-4a6c-a66b-616639fb1a30",
        "cursor": {
          "ref": "060eb8f4-42cf-4451-a655-40de4db2fe63",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "9e8bb610-4029-4146-af4e-90463e349cbb"
        },
        "item": {
          "id": "9859dd93-d474-4a6c-a66b-616639fb1a30",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "5513feeb-5c7d-4163-80c6-8ae6193c5907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6564e7c-86dd-4613-be14-f793223030c6",
        "cursor": {
          "ref": "b7184ff5-9912-48e3-b66e-c53b69c859ad",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "70d5e7f0-3376-45a0-862f-ed1c9049d9fa"
        },
        "item": {
          "id": "d6564e7c-86dd-4613-be14-f793223030c6",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "33270f9b-20a7-45cb-9e95-f2f978b417aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a309199b-25e9-4e5b-bec2-deb5dcbba3df",
        "cursor": {
          "ref": "4c315c7d-3fe2-4fea-b5b7-48554238d0c6",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "cf5ab025-87c2-4cf0-a387-e48aaf15af78"
        },
        "item": {
          "id": "a309199b-25e9-4e5b-bec2-deb5dcbba3df",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "484cf20e-f549-4b0a-aba8-79c5a553b326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d57c54-965d-4b5e-8ff3-bb0010232207",
        "cursor": {
          "ref": "64a9ff04-f28c-499e-b1ca-2cb566f92ba4",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "bd0a693f-dee5-4c70-bfd6-8f80d2b84a62"
        },
        "item": {
          "id": "53d57c54-965d-4b5e-8ff3-bb0010232207",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "45822b28-ebfa-447b-87d9-9f48348c1e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46674b05-35b2-468d-917b-729dda163b5a",
        "cursor": {
          "ref": "89354d48-c049-4253-9841-addb7ac4833e",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "7dc12671-3626-43a0-860c-f1f1da4ee684"
        },
        "item": {
          "id": "46674b05-35b2-468d-917b-729dda163b5a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "9224e23c-7039-4239-ac65-1b1a6f2f2f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f0b75e-a652-4562-b0bb-bae770e44a43",
        "cursor": {
          "ref": "472ffb61-c677-419c-bfdf-f19ba1bdabd6",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "19c99846-2e58-48ef-bf87-f96e55bbdd5f"
        },
        "item": {
          "id": "59f0b75e-a652-4562-b0bb-bae770e44a43",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "3f840fa1-d926-4828-a26a-490aec018dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3ea885-0d5b-4a1d-995b-51b7486770d0",
        "cursor": {
          "ref": "435fda86-1853-4938-972b-d3ff2a27ad50",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "2e95b770-0c0c-4676-a212-f02c2b2380b5"
        },
        "item": {
          "id": "7c3ea885-0d5b-4a1d-995b-51b7486770d0",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "7ab5dd19-47a9-450c-833f-b9c58ed0ae30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c2a1cb1-c725-4c66-81da-5a5d028ed400",
        "cursor": {
          "ref": "76b1688d-5ca8-4b18-a3f5-e76e252da607",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "afa81473-2ca8-4831-b5b5-bf6c64489138"
        },
        "item": {
          "id": "5c2a1cb1-c725-4c66-81da-5a5d028ed400",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "1c26f28d-cc9f-4fc3-a743-441f153f9693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e736dc7f-342a-4dfa-b52b-8aae57417cd8",
        "cursor": {
          "ref": "7e0605c2-6d21-491e-a8bd-1d6e1900ebfa",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "2ca65e27-e5f3-437d-a2bd-d56c62caa053"
        },
        "item": {
          "id": "e736dc7f-342a-4dfa-b52b-8aae57417cd8",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4c221f1c-f096-4406-8914-89136b145d23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e077362-f9c1-44db-aed9-5bf776ffe104",
        "cursor": {
          "ref": "73e73ff1-a281-48d2-8a33-04a1b637117f",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "49a430fd-c754-4f1b-8c56-89e5b5c501e7"
        },
        "item": {
          "id": "4e077362-f9c1-44db-aed9-5bf776ffe104",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "9af80a6a-9a07-456a-b609-f9c641cb54d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8106b075-8903-4fb0-b4b6-60a9be182a27",
        "cursor": {
          "ref": "f2ef3271-b0c0-4916-b558-6947609affb4",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "31ece164-e86e-41e1-94c1-ccdabf09977e"
        },
        "item": {
          "id": "8106b075-8903-4fb0-b4b6-60a9be182a27",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "5786954a-2c37-4302-b21b-664412d035a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13883db9-a97d-447c-9519-a84f12bd8b90",
        "cursor": {
          "ref": "ecad9a71-9763-4599-bfa1-ae6d13531ce9",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "6aa3a3c3-3c2e-4851-86b4-bbd0c187c254"
        },
        "item": {
          "id": "13883db9-a97d-447c-9519-a84f12bd8b90",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "f126b716-dc5d-4e3d-8816-9622c640e848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edbb801a-b73e-4e45-b6ad-b4944aac599c",
        "cursor": {
          "ref": "d61a0687-6299-4725-b514-af8e5aa5f3de",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "38e4c958-a9fa-4938-b05e-9f24736bb673"
        },
        "item": {
          "id": "edbb801a-b73e-4e45-b6ad-b4944aac599c",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "668709ee-5338-426b-ad92-2256efef6724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8eef1bc-806a-4ddc-84cf-e743d51b4349",
        "cursor": {
          "ref": "a7ff4afa-e3e8-4636-a95a-5f52e968d788",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "52bcf830-c7e5-4f20-92fa-565133a4478e"
        },
        "item": {
          "id": "f8eef1bc-806a-4ddc-84cf-e743d51b4349",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "989709ff-745f-4df5-89a6-347e51a73905",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5273e3da-e26c-4c71-b5da-e0e70b5e14c2",
        "cursor": {
          "ref": "43a207fb-baa4-4fec-b22f-a5cbdd00efab",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "4ccf229e-bf26-4386-93ca-6808defd0a13"
        },
        "item": {
          "id": "5273e3da-e26c-4c71-b5da-e0e70b5e14c2",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "a545990a-5117-434e-b8f8-c127ce163468",
          "status": "OK",
          "code": 200,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4258d4b-872b-4cac-a7e2-50b46e1335f3",
        "cursor": {
          "ref": "8bc46e84-f592-4836-97df-010a0b84a84a",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "d931f19b-5339-4747-80c6-573ce6c3d54f"
        },
        "item": {
          "id": "a4258d4b-872b-4cac-a7e2-50b46e1335f3",
          "name": "credentials_verify"
        },
        "response": {
          "id": "61a3c562-4abb-488b-8695-125ade8eb89a",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "91498b19-955f-46d6-9ba9-fd699930ca03",
        "cursor": {
          "ref": "101ab4e7-42cb-4ba3-ab6a-81da4769f97b",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "167ed72a-0181-4daf-bdad-bae6ca841289"
        },
        "item": {
          "id": "91498b19-955f-46d6-9ba9-fd699930ca03",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "25a0f43e-5b9e-4baf-b081-36303fbee0e5",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d97b80-edde-48ea-94b3-dc903b74e913",
        "cursor": {
          "ref": "2b5294f9-0372-464b-8cd4-d0a15089fbd0",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "52eccb8f-3870-4fb6-a488-6d49d9a0b11c"
        },
        "item": {
          "id": "64d97b80-edde-48ea-94b3-dc903b74e913",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "09d18deb-c821-49d9-b502-e0d299c8f720",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d97b80-edde-48ea-94b3-dc903b74e913",
        "cursor": {
          "ref": "2b5294f9-0372-464b-8cd4-d0a15089fbd0",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "52eccb8f-3870-4fb6-a488-6d49d9a0b11c"
        },
        "item": {
          "id": "64d97b80-edde-48ea-94b3-dc903b74e913",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "09d18deb-c821-49d9-b502-e0d299c8f720",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b116747-91fa-4093-9f79-6f7bfafd4146",
        "cursor": {
          "ref": "f0dbf981-0720-4abd-9170-ace75d4ff59b",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "3f91d8e4-bb58-4236-be75-dad9b953b26a"
        },
        "item": {
          "id": "7b116747-91fa-4093-9f79-6f7bfafd4146",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0a2814c3-343d-4fc2-9015-3c64377048ab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "155cd97a-db58-4438-bcea-8611ee25bad4",
        "cursor": {
          "ref": "20202f89-2f25-4cd1-b1ef-d88ed5247406",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "9ba78684-6e9e-4b40-9533-94702d267155"
        },
        "item": {
          "id": "155cd97a-db58-4438-bcea-8611ee25bad4",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "af04af16-a449-4a58-ae86-f9021c831c6b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}