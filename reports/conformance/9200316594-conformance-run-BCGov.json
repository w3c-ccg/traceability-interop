{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "5168edda-af98-4a05-9c74-d3d357d9526c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "9d5450f2-926c-46db-89bc-d60834bda108",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "df1d0ca9-b1fe-4c60-ae85-bdea374e7194",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "99708b55-042e-4b43-b0ff-4fe1debdb147"
                }
              }
            ]
          },
          {
            "id": "2eb82afd-e7a3-4082-ba6a-e763410155a4",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7c490ac8-d81b-49e2-b035-565d261d4014",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "770a1528-d3d8-4aa3-9344-68d92882d245"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ff68cac8-4efe-4492-9a8b-47967fc30ec0",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c9287444-b3a0-462a-8b22-4d6218c75416",
            "name": "Positive Testing",
            "item": [
              {
                "id": "48a1c906-b195-4261-9df7-433bd9c90ca9",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d26fd7a9-1e81-4a47-a653-17fa1ff82dd7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "12829533-36eb-4f53-8880-639925244881"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3568ceb0-f441-473f-b0e2-b4aca0d2d597",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ee024d9b-00ce-4e3e-bfaf-0633e25f62cf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3d9a5241-d99f-40e6-a40a-a1f62581864a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "041b4bf5-638f-4179-a9e6-c36bcb133c3f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "599ce0df-b4b2-47d7-837e-5b1b7eeb7248",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "d5722a22-281a-4f35-b2a7-c23c369b60f4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4cc8156d-e218-4d62-b25f-3c9c73e33704",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "82f0fb2b-456c-49f7-af0f-f41c7c4ae423"
            }
          }
        ]
      },
      {
        "id": "bf326126-978d-4574-8004-9ae9f7996b97",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c45cfa8e-fa8e-4b7a-8f53-64a365c1b6b4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "18f24d81-ad6b-4ca4-81a6-4ff58950ebae",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c94b6a88-7f35-4585-9987-164910ba2b2c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68fd1723-5617-4c71-a07f-396986eecbb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1112e5fb-cc8a-42f4-be0d-c3430a35d623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5e6dec5-99b1-4cba-83bb-01f2575f465c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1320d88b-7444-4540-bafe-4bc146122b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "349f29f9-2310-4dab-baaf-b9cf7d8227a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eeee353-963f-478b-bbb8-b9f5607cbace",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2ffcf71-eb16-4bd7-83d1-031d9d0a6e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1af460d2-0d14-4695-86b0-5056881ad0d1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "513dcf42-a109-4d81-8920-e43bb025bb40",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "740f0fb5-bc9a-4827-b404-5d194896b890",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f9cbca-04fc-4073-9dd9-e06e781dd935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "80a077d2-0984-4a43-932b-69431999d75b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e160819b-32b4-4479-a4d1-f75b788bd9c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5595db5a-0f24-44d6-8c37-51d19d139ff5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c4f0b4dc-8669-4f04-91f6-c6237b25b27e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f8f8ff05-f23e-4095-a158-8800ffbb8ac0",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5bf7039-7e96-4c19-ae6b-8e1b030e29e4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "2a57e0a7-62de-480c-848a-b7660cb6b4e6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e1e8a068-e051-41fd-a6c9-2c8f3b8785b6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c227f5dc-5d59-4d08-af0d-ee5de9b8b3c4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8212715d-5243-44e8-b5a0-cb0ad73e5d0a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2fccb111-44df-42a3-b881-d32355a9bd8d"
            }
          }
        ]
      },
      {
        "id": "e4f4c89f-c56c-432c-b90a-090f60c43489",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a8658695-f793-4720-ad70-dc2b6db838e7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4b77049e-110b-41d1-97f8-7de56323e45b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0431022b-5ab0-4cf3-866f-00f3374cf743",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6658b983-785c-4cf5-9a28-5a4120e79190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3679387e-b4d9-4f55-9934-b1592713eae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bce310f-b4da-4cbe-b5df-f0691cacb04a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "faf9afe9-36cc-4b82-b70b-4a0513eabbfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dde6099-2644-4e0a-b376-df5edfdcc188",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2863c1-1b30-4585-9f77-b04d7fedca49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2efdf15e-907a-4ef8-8824-2f6fdbe9a473"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9febf7c0-24d0-456e-b546-26d7b2a9f86d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b25fef10-c58d-428f-b389-ccdc0b328d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26bcb446-1248-4c38-8149-70527ba63fdd",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe41bce7-d88a-47e9-9159-aadf4c0bc493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84e10c67-135a-4e0f-bdb7-a4557f1b3fab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad4b56a-3839-4815-86ae-0a23827d042b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f1a38ae-51ce-435b-9eea-0b5121e71db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c9165ea-9492-4e9a-acf1-cf92be781236",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "992c7e9d-4ed8-447a-ac0a-3e4429ef1eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a791ed4e-7dd1-41b9-a448-86f92936fc4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e11e85-cc0f-4ab2-8dfd-a122510d8889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "062e505d-666a-499c-a1d1-8f3002502bc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e94ea18-f274-401b-b266-475af801c366",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ba120b-f97f-40be-9404-c639f0a9e809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe341c17-ebeb-4756-b1fc-8bcc60e78938"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c987e39d-5e80-434e-ac3a-35ff73ef8ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "91d66739-4665-4a73-b663-5c7d5642e06e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de9c60e-bbde-45b6-bb11-2db704840cc4",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d6c3fd8-d699-4c65-bf7f-1a7f64a59048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1225bc1e-c803-4e3d-99b9-9b1e2786b4d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35579a6-1bb3-4686-a9e4-eb00c4890893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00d98411-5618-4588-a636-bcad3ec0d3ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e089f41f-9e11-4d18-9c8e-0b3874243383",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0cd498-9b29-4947-8dbd-94fca5dc1bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03658ba1-3dbf-4d9b-bb79-a74328ec85f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f6f9cb1-7ac1-4642-977e-bc0846f32620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "607d2238-7933-4010-90bb-7d9f8510b682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d706d07-40b8-4647-8df3-f88fa64beb98",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e1d91c0-7b89-441d-a62e-c629edf77cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6e3e1dd-cf3f-4bbd-b838-6cca700a831f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a46ec5-c1af-4713-84b9-00b2abf708ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "277ab972-94d6-4d26-b544-17909b044310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e6aa96-98d8-4d55-a82a-de2c2c20441b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "009544fd-6b8b-4f1b-979a-81e8fbf818b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4f02b62-e7de-4135-aaf7-9d0f517303bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aba5822d-e93a-44f3-9ae1-d450a395f7bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9715eee5-899f-42ac-8046-5a95384a3dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "609c4d3c-2e0e-4f05-9e11-94786072a804",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b180a4c-2ef0-45ca-afdd-87afd54123a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f98ff63-4e2b-4ca1-a19d-a1aac70bc142"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0a7efbd-e034-4b43-b82b-13bc676dcdd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cabd2889-6d6b-46fb-a5b2-f59e79eae07b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2688f62-3a92-4cc0-959a-675616f62b7f",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75688be5-e5dc-4b5c-a9cf-21bcf3cff2bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec6fe426-5169-4134-9543-f874525e4768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197c557f-4380-446e-bef0-c3aad74887f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a211c71d-4d1c-4c4b-89af-510b6758dbb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b26846a2-7042-4aba-af22-3c5855f017ab",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c1cbff-9f73-433b-993b-a9a5febb8cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf7f2918-6a89-4737-80de-065df2013ded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51cde003-d602-4d34-aeb5-9c24ea947319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "038a2efd-ac2d-4bc6-826c-62eea84a10ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd31be3-5972-4e36-856e-c26842d80995",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46166676-9481-49d6-becb-8f3e8515f2d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5c054c0-41e3-4e8e-906d-70aae2df1814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47dadbd0-a086-447b-9aab-2878b5c3b61f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83bcf153-0410-4fc5-97d4-afa2d452d93f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd53a08-39cd-4390-862b-f82057122242",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3fc2617-93c5-4408-9dfa-bb9a048f12b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "102e3d87-1447-46d4-b0e9-14faee58e474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ad8dfe-8056-40e1-b4a7-791ca7b52cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9afcb104-5c59-4ce0-8db6-40b978950d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c61119-b4cc-4bca-bedd-48ef2b486fa4",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "977e5d5e-cd35-4b61-a1b0-cb94f8070598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bf9d86e-1c1b-419b-bb89-c7ed9e84c5c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a29700-009d-41b5-b977-d9e8ecc0173b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8245293-b20e-4358-b147-06be62f12d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3434bd31-6951-4450-a679-392479826df4",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ea7746-dbc1-4d2c-a531-e1e2cf20d148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12d5d799-8d5a-436a-b2ba-77b5f3ff124e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cba9003-9d93-447b-bcc6-940294039884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a2fd703-6227-45d2-aed1-59d6bcaf222a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e66dff9-b461-41ff-8404-ad704430f146",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b691b968-72b5-48a4-a82d-44235f0b1f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc6fbfbf-ca90-47f2-bc0a-7f37a26e0188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ddd5e1-ae81-4d75-8985-c55b25365317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d84098a-2ba0-4b73-a07a-cd843f29d622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3b20359-686e-46ab-92f8-747b38c3ffcf",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f49a2a4-1d8f-4398-86b0-2e1dd258b56a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca0dab69-9535-40c6-b435-d22f7097fc63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "411c86c7-c9c3-4033-bc35-493b7dc8aeb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "56abe697-923f-4b25-93c6-279632a9c010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfaa8bdb-dac7-4c9e-bc55-857b24628c0b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f281fe23-a738-4584-accd-2873d34af7e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ace786a3-25ab-4e90-91cc-33db4f87089e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "471e5efb-dd93-481f-9e9d-86d2dc6e123a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1eaf27e-108c-487d-bb68-0160ce274e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f0f925-0550-4be5-8de2-e248c6ec3658",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb214de-b18a-4be4-9bfe-d8395373c8a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5db19782-27d8-4651-9699-8ef43cade537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "994d8e51-4744-42d3-a0d7-051f7636906c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "88ee7610-b600-45f2-9548-928cfce8a825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae7c2c3-c840-4063-837b-7bf1e0b3c288",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d3c4c1-7a62-4961-ad4c-da9a7b2cd9d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "316d4395-5902-489d-a293-2719f018c841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fac15a8c-8269-48b6-a12b-adab888e02da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb1846e9-d730-413d-8a0f-6fb4e041b60f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92d93b70-cbbc-43f8-96ea-9cdfa3982053",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "663e933f-ed13-4603-9cd0-4b42b4fde128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cefce29d-acff-48af-9969-d5b193b33121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e69b3620-7e47-463b-afe8-176757b5f152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8fe40e7-7a40-4208-8d5a-fb4bc85902d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d05736-21c0-4aea-bcba-bdf3e3ec923a",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0066fcbe-220f-4ec8-989a-231281451dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b790088f-e967-4988-8844-454facfd44a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a186e068-73e4-4730-a12f-e86a25fa49b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "79f430d9-5cc2-491e-bcf5-f81ac619773b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9a05d01-0948-41a2-9e4c-413c29fc39f9",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50084636-b6b6-4bfc-85e2-109bde8201d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fdbcbd6-e2c0-4f8c-be7e-c21fc6f6963f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "434d39b9-327b-4538-a38c-22064fba0ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "93bcb30f-05a3-48ef-bbb8-58a402279785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef215295-8b02-4418-8f3b-a30500901d13",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e64d9b-9378-4423-8763-fc02ff173e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9ef25e9-8bab-4981-8f3e-89a0020a5386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d537d226-fec9-4de9-9bae-a9dde24cecdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "45c59971-d348-45b3-a32f-d520c57f2203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "366fc7e9-09c0-4c8e-8e3c-c3d139c31e2a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca0fdb6d-c22d-4dc0-b568-160c100101bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2ac899f-5562-4d60-9ad6-a3684c713a7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f7bd203-dba8-4a94-99fc-5245066b9ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "77347218-f2c9-4464-9ec9-30221c96a6a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e91d6740-2a5f-4d21-a846-e6162c67bacc",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f56ea28-f534-49e1-be78-eeb726afdc60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13563508-e9ee-47c1-bf91-1761d69ee22f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce00a32-3798-4afd-b9e3-28f0529f5d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5e83431-0878-4287-965a-c86fc632238c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c29a4d-9919-4e1f-8d63-42605ece6ffa",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45975a2a-2c2c-40f3-8c05-3434a2a7ece5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b02b33c-9760-4d3d-911a-9ae96fdfa37e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d43021c-dc71-4ffc-a419-9b40bf3f0097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed0c1463-a244-4e56-a3d8-14a1afbafb69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59bb15db-b866-420c-adf0-4843fce06039",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "582daa00-2545-4f74-8746-13393f5cb506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46e3da67-10a5-4698-8ced-492179c35586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aabfde4-18fa-4538-9b53-69665fa6b910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e108a1d2-b1ca-48e6-a753-ed5228eaa13b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1333fe5b-42cc-4aee-bbf8-1abc05594c1c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d64854-092d-408a-94e3-ae095167b875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37eae756-cc3b-465e-b056-e4e5048f44f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ed7afa-8bbf-4a89-9c7a-604ba56b4e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7862a99-38e0-4a0a-a9f6-4efdf157e709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abcc5aad-50aa-4cf7-8da5-f95a097c0c68",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd6356f-4108-4a70-a62e-15d9394f8f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba03b2f4-4c7b-4e48-8883-784063ac23c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f279cc27-b294-4add-bf39-6d76588df667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fc2d643-6fb7-471b-9359-ec0be4b5cd25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0a416f9-1a4d-4a72-b8a6-e0d337c562c2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0693c141-78b7-4046-9b76-f93d1e2ac1b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85c0217f-bcbe-47bb-a422-1bac93da82ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "000ded3b-e678-412c-857a-cc9d81ea5d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "24a05ca4-e4ea-41af-b9fa-c09c8188981f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77614960-8222-40a1-a68c-f082ab59004f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2671d45f-4b4a-4cd7-adec-1433f214e2f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42b08775-7cbf-43f6-98a2-3f3742075499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d5acb8d-d943-4309-bf70-9d164ac95ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa32b17d-eae4-4572-9d5d-554745860714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4412ba6-03a3-4fd0-b3fe-9331726519c8",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a485ed7-9857-4fa6-9a3f-772076392073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f001a207-95d7-4ca8-9e19-15f28c3f835e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb1486c-bf96-493f-92d1-58f886d09c4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "811418d6-bbd3-4284-beab-4698a965daf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8158f7-7bd3-4dfc-967b-e7042f564b3c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f55fb8-e86a-4f65-a85a-9f5277b540a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cd6bfb0-01a7-46e6-b2af-c5ef55f7296a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "485a1de5-f823-471d-adde-525ea68412ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "48b4f959-8df2-49f3-88f6-dc8df71ae280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e94b159-0f7d-4b79-9713-96b7bb5a3808",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9403711d-a7b5-40fd-b376-1d10b5713e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36eaed5f-aa0a-4dfc-a7e6-f948fb157d23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4100be02-a85b-40bf-b903-5f99c852107b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2aedb10c-a750-4ac3-96a9-edd2fefb59bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53caa38e-065b-4b10-9df2-ea1f47f2c8b1",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47493c56-b5a7-4a55-8e25-1095df7931c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eca50cbd-737e-4f93-8504-2c99446468a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a617c16-3c84-45b8-a2d7-c92684d6db52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a31ca28e-c173-4e98-9c5c-2f9be3650252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "623b8e57-01a4-4ddf-be8e-09cd41820966",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "926a7d98-eaca-4726-8353-0b3fe1eb7329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89439ec6-e2d5-49de-b211-2414d8f0ca4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "597e30b2-482f-4b87-aed4-fd855b193a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd65255f-afcd-4f34-91fc-2208f58307ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ce2e90-e45e-4f32-adf1-c262874ff603",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "455f6798-5c2d-4569-9c0c-0c3107aafdd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9f6b620-a2e6-4b1d-bdae-f4dad4c09be7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea4ce5d3-4293-4dcd-82f7-af9587e50cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "76cb0750-6324-401c-851c-8b22e39a9156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01333686-f565-4544-82b4-2b7f1bc8dff6",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d988570d-d1cd-4928-870f-bfb58771c632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3fa2195-a17b-4997-b7e0-5febd5ef939b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c8f573-a10b-45b3-96ed-67d17c5e293e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a223cd9-833f-4aed-aa39-b58146e456e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "932304b9-5344-4dc1-86a0-efe66fba9f1c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b211b14d-a84d-4084-8d18-0d9a527d3e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63dd704f-d422-498d-8645-984c70df5dd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb95827b-16d5-41b6-99c8-8ecafe5264c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6793a988-4b19-4c03-88d7-1e521c80e0d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf3b221-3a30-45cd-aa4b-de97664b4656",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d9a02c-ce92-426a-9e0a-72a293709044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af648d34-d988-4889-97dd-21086fe7f740"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f2d1e3-7eb6-4460-8859-79fc150d6720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "41a400a6-698e-4898-b49c-ee731ccddafe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c64536-874d-432c-80f1-55a364985e93",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3cfd9df-9921-485a-b7bf-9d275381b013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df2afe26-042c-4a3d-8e11-01dd24a53fdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d057089-bfb2-4d4e-a846-4d4e00e94042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "25e4202f-979b-4264-9418-090f53aa87be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc2c57fc-8c81-4d96-8362-08d78947f917",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51868aad-3b53-4905-9a1c-8937b4ba2b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89b8ccb4-9f9a-48cd-8d7b-b576cfaccf73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d1e6ac-80aa-42a1-aaf9-d36ccfb3e7f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd692ede-0769-4e6c-8a03-341ef16ca174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5dd41bc-d55f-49b8-8e5b-c37aebb1663f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7265e3e-c3f5-4c22-885c-4357d80c179d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f18531c7-50a6-4678-9a82-71c080bff881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37b531c0-bc45-43c0-a171-16749534cae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3766077d-26d9-4d3b-983e-41f1035c2be9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1bbc9bd-9bff-4eae-b5db-3864ade498da",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd6f94e-576c-4253-8021-f15ed47bf306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca78c294-d193-4977-a563-5a6a61ed7bd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4833dddc-2956-4617-bd93-78e65a5f5813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "484c7d3b-22d9-4964-b4aa-e21c21679c06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a392d6-acab-4653-a53e-148e0596ea56",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93459795-2d01-4450-939a-f6d3d93cdc6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac37370a-a099-4071-8de4-04312e3b6611"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "046a256c-7478-43a6-8538-68b2edd40fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a1eadec-bbc4-42ba-9010-903b687915d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4836d377-be8d-474e-ae23-5c87ade7e0a7",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78006578-2119-4c5f-9fde-903d80b58114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec2d5be5-d9cb-43af-9c69-dbcb04c35d99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc4ad9b-a200-4987-8e96-6531fb4599e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3025314-d090-4091-b7fd-1161c60b880f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cc7dbb0-b300-4514-b74b-40e5e8bd5414",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "651cb48f-198f-49de-8ae9-1ccee0da3398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "975211c0-c613-45b5-99c9-5f634d72be9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e2b072-ba7c-41c1-ba3f-152c92692d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7db0667-e56b-4846-a76b-070f6f79eab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "269812dc-5901-4a1c-a7e2-76e12cec0fea",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c39d1079-2bdd-4bf5-8da0-fe56093b0617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feb21de3-0bf1-4a29-9ac9-c4eae53dafc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b03168-83f9-4f42-b285-58d270b0d032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c0a03993-5ba1-4b4f-bf44-c38af03976bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96575cc9-ac22-4946-87e8-cb5f63706630",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1796623b-9174-434f-810f-eef02ed653a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d479af09-5bc4-4a84-8500-536bc5cfb1de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e167aa13-d09e-4f71-ab66-228af81a75ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d36aeb35-4a78-4180-a5a3-3516ccea1887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee74d81-5469-4a8a-b007-2237b61946dd",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91240fb9-5103-4d8b-91e4-7a904de73fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a33f494-f3f2-4fdd-8cf6-4c3083f2f871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1151d883-4218-43f1-af0f-68b3fec1b631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d659a452-1d75-4e3f-952b-d649f23bb77e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20dd78a2-0a23-4931-a760-3492ad92db28",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5952198-97c3-4f3f-84e6-5730a8ef53d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dabeac8-51ba-4b66-81d2-3abd001a25f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62b0ac3-3dce-4d90-aa51-374f2205ad4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "432ace67-c8b9-45c8-89fd-166b06d608f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "babacff0-cd6e-4531-bfde-d72c468977ca",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "427db462-887b-4959-a62f-d61f69f10375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b236a096-a30c-4559-965b-d959815acecc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c00da2-4012-44bb-ab4b-8a73e11eead5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3411abcc-01fc-4c9c-aaa6-2d32314bd4d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b84eb0b4-abd1-4a02-8583-4cadc70998fe",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ecb80d-890a-451e-98c4-945db89f8917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a9ca348-8cd2-4d0b-8336-25eb71c06e42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "078d6162-f361-4334-97f6-ef7cdceef748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3765955e-5e78-4414-b385-ab3fe7b2ba40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c39509-627a-476a-a225-ef2717ad0369",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e33ee01-afaf-46f7-af81-6ba35cf928a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79c5edab-512c-451b-b0ee-77b69f0c31ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c275246d-ff2f-4e17-8aa8-9a941ebb914d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f91920a2-c9ea-4c5a-86e4-2f49fa965f64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc95ed4-f2d9-4bba-af99-65905a5468ab",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe37290-1b8e-4c26-b1e0-12c8aa9d1c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81f4ba31-19fc-4b61-b659-01a3857b4ca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4142cb40-1c9c-4308-ac89-81d5c9bf2f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "066e18f5-9380-469d-8b10-d582381dca4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5fba91f-5dbc-4b2c-b7ea-2c89bf3f36b3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "160d13ee-6095-48e8-84db-13532810f29e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d100702-e687-4584-8abd-b1759d4e3584"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e2ac279-9898-4776-b9e5-fbfb5d90df47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d45be8bc-ce4b-4cd5-af07-75fe863542e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61c8815a-6914-40f8-9150-cd87f4499c13",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59fdbfa5-efc9-433e-a350-82e0cc1d5e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67695256-bf74-4935-b74c-83b9e7918ac3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94e3fa0f-3825-49ef-8355-91851ee392ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "75693580-9416-4843-afd1-6a7504bda7bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c3e3208-8c0a-46bc-955f-f89af06bfd77",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8150af5c-4ee9-4467-82ac-1b9677ed36ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db8168a6-f224-4afb-914b-6bb4aa418914"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc418c8f-03d3-4b51-a556-2331bd99c342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "553857bd-6f66-4a83-b3f8-9f0a1a2574fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19db7950-c050-45bb-8d82-9207189ae51e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac7fb7b-b7f2-48b3-a001-38f38c8599f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb45dd2c-aabb-4616-901d-91e7208d928e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d169c846-f897-45a1-8fcf-bb4c271e53d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2db6a723-67ff-4bf4-95e2-c32c76271c56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b422f784-619f-45c7-9776-a287aa633259",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbbab35d-b711-436c-8a84-16cdd130bfef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cde5d073-e3d1-4382-944e-5c535c45495e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5341f592-da2d-4505-92bf-71992798290c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d72f2d73-b4e1-492a-83bc-265dda88369d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ca4ebe-b14b-4c95-896f-0c4900b284d1",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f588867-b64b-432b-88b0-07d823e1813b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6730e01b-2413-4a9c-8179-b977764a9070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f1a0f01-93cd-43fd-bf7e-ca0266255ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3ddfc9b-f8b3-4943-94be-fe5fef4cbb6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c22e51f-a6c7-4635-be77-e2f4574f0484",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcbc6844-31f1-4410-ad00-48d8056ab616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca7ac8cb-5db8-43ce-b5e2-b3edd4da838b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ed7f8e-b156-4708-a32c-48dda0ebfbb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7744f59d-c595-4c35-b13f-a3761b6fa36e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d77795-2c33-4843-af8c-dafd640ad05e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4f46a80-f71e-4cce-bb79-215d882883e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d656fcc-1b58-4543-87c2-1d1d953bcfe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9950c16a-7c3a-437b-81e6-120c50869f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba070f8e-d23f-44c5-a2d2-94824747867b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b061b6b-f8b8-44d2-8b54-b9f2b3a02a91",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9791a8b7-1baf-4727-90ba-96d62c88d91c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c3b8a56-640f-405a-a947-c287ef6f3953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "236ab734-a684-4567-bee7-7fb286533c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab4b7eb1-5020-4230-88fc-d0946e787b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb5082f7-cc89-47e5-bc09-f5bbdd5be5eb",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b5597d-f23a-45c6-ae44-025f2330b9fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58142c68-b7be-48ae-bab6-873c6f5a879f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db56b03a-67d0-4d4a-a8c8-36a14a436794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ee3da875-809b-4638-9c77-de4f42b1c318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd6719f6-f573-4216-9ffa-315ab1d7e8dd",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d5cfc1-22ea-4d9d-abc8-c27dfac7a933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95af0edb-9745-4e21-b5c5-bdabfba5c842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb27477e-7aef-4c4b-b674-50d392a22b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d770c0ff-38af-44bf-9b33-9f8e6d14c7ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c60aec2-3b4d-4bbe-9a98-3e13a876d3a0",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2afa91cf-15be-4816-9024-88ce4db0f2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc0bcc64-598b-4106-bb25-a61a330a79e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6432fe5-07b2-4c8a-8c42-9e6e27f47ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c396d1e9-3399-4487-8956-ea316241326a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "769b03b5-7206-47fc-b08e-cc9d8bdbd495",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c6b24b-a2d6-4449-acaa-c82b01eb5b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5af3c70b-e07c-4d71-b58f-04e5936ee60e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22cf7107-8ca2-428a-ac09-54d397c990cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3ae8b0d-4fea-435d-b142-80368574c6fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae081eb-6d74-4a13-815c-3cd86b6f5aa6",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80cc296e-e689-4c1b-ad14-e4d7cc9b5120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d38e318-bb66-4a77-a3ee-94fb74a008ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9abc3d3b-d521-483c-9a88-2885ca84d38f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "26635216-fcf8-4174-9806-37da63aaa3f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1665217-2fe4-40a3-bd1e-6c92f9821c78",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba38ccda-f1fc-4878-9036-a362ece3cdf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6f21323-5401-4cb1-9a56-d389ac816a23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07bef5ce-80ee-472e-bf98-f79253f778eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "72097e0f-6536-4de2-83b5-7ca9dcb26361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c535b6e9-a2e4-44f2-9796-2bc3b6f4d57d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "893fd33c-3e8a-4aae-a590-717c33f8d7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a486c26b-5981-4747-96a6-bd9143bb2017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6555a3ab-c9ea-47e4-8ecb-a7e5b0c1a8be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d58f2ec-893f-4d4a-8e1d-6dee30fada33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47fcdf7c-5bbe-4c25-be0b-8ff5355d974f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b2105e4-45e7-43c1-9a22-b4196a0fed0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6454fe5e-8eac-4198-b700-766ca3791cd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "605011c8-9551-47e6-a3e7-341c8f9467ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c64f6b58-8c91-450c-b4b0-e28489e4b79d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35db60b4-a4b1-4ecb-8634-bd153c432782",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ba72fc-6c13-45bc-b5c8-3fe32506891a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12323b52-1a2b-4110-9af2-2ca1f56564a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a9d298b-7382-4350-a448-49cc344a6d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5883f5ad-4f9a-47ff-8057-504b115769b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b9a80b-1302-4676-96ad-1e19ab65ff60",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "951fdb1e-03fa-438f-ac3a-37f0b416c139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb66fcd5-9f36-4c57-8908-c3e7d6a94b42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad3bf70-aad6-4c9a-8624-4f3f1e40f8ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a5cb8db-337f-42d4-b41d-2577051db8bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7c18713-b69b-4a9f-bb4d-6a1657a4d90a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1516eb0-c488-49d9-be97-d1ba878749ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aa64cc9-8f5e-4408-92a3-cfe9a824924a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9cb86f6-34a0-4110-9803-bbdaf56cf37a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1445527f-7693-4d45-9eb3-02fb02c51fb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b871ac3c-c480-48a8-9502-c05b4f88b681",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64bd9f4b-7a1b-4536-83b3-651b781ea97b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b053ff14-2593-49d3-9e39-55ad49b4d160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9237f887-8b8f-4d77-842e-08194d7045cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a502de6-6b46-4fe6-bd63-a11106200736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37154297-cac2-4070-99f5-bb8bd97d0b60",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a302910b-3f64-4460-9ac8-b8e96589eadb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdfa0438-1911-4972-aca6-b70e8fa60d04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f24a5fc3-53e4-49ed-a5dc-efe2a7415a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "da9ff78d-a067-47bf-b97b-da186c7e126b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33854fe7-de2d-49c3-b692-f4f09ca54306",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe313990-e974-4ae7-ae08-2acc8de89dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37f4ac6a-1799-4a63-891b-29208c2803ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "462967ba-0edb-4fe5-87a4-0ca2e08012d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6a97526c-2515-4003-bebe-dd124e02a3bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a462f6-4b8c-4507-831a-4d0ab6df70f5",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9eaac51-eef0-4f39-9ba0-61644b35374d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9deb5899-498f-436a-894b-daf8d0611067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b01c51af-42c4-47d6-8aa4-22282d78c469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "62d56964-e783-4f4d-a6ba-75cba23cbb28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e16b979-58bc-4992-85e1-f5f13f75d586",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffbd947c-5c82-4bd9-a8ee-281dfdc63e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8920e88-664e-4233-98f4-832c5e11b7bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e38359ab-6fe6-4901-8a86-102ee8e66093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7bb281d-9b85-404a-8858-33c12d46a453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40fd644c-5486-4862-b8cd-499997374ad4",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39d1e15c-a6a7-4bc2-8bc7-67d3a30b08b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcb479d1-cb9d-4a55-aeda-2a041f8eefb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c61089a-2b14-4016-be80-53e7620af974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f44c396-2959-41e0-b094-7fc877d12543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c8b7b0e-7e02-4b81-ab8a-aacd9c91d9f9",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d05bb7-ca0f-4427-a175-dbb998fb5e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93d6fe96-4c85-4ff0-beac-eea9f32a0841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "769f0fca-dd9b-4432-9887-24551320c45d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "69d982b2-f352-4d0f-8e71-ba40ee568519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c04ca7cd-c457-40b6-a155-86d1a61b1104",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cab114e-fe5f-4e76-98c5-ada239838882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "698f4cd1-b874-4f27-ac70-ebec2c52c176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a2815bb-b704-4bb4-a331-6d063931f49d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bc1a6f29-8e45-49a6-93d4-e4a394f4dc63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc1088bd-bb87-4ef9-b373-f3ecc32af095",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "898d488b-6dfc-415f-bec2-1f6c33c91eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d1f6a0e-9a1e-4f01-af96-4dbef95bfcee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc5bdf55-dd74-4f2f-a8a9-508fc611de11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "da1833d0-dc40-4eaa-a218-30b69cf33b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3abb2520-698d-4892-8985-84bad35b6ebf",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d668444-8c38-460f-89dd-ef327603c414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5200bef-5cf8-4954-a929-77ef2393bf19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c735ff0-f2ed-4476-b08a-edc711bc6aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed1f28d6-c25f-40a0-b4d8-887f6c8d4dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01457bea-9d1a-4f2d-80ce-403a8bab03b9",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6650316d-6286-4b42-8046-61eaa6605bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68bf5795-1527-4513-a808-2e5b4048b701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28453389-2154-475e-a8fc-c84737f571ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ecbfa2f-74a3-4edb-8f94-a3169c847994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f67dd8-a93f-47c9-a77c-e4913be5b659",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba581c33-f82b-43b1-b1ec-19a0812445d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77d74b77-bc8b-4395-8410-1eb1d91c39d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a35edc-1933-41e4-a649-d64e522266bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e405e635-0e67-4917-954f-abca92abcca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "428509d8-d326-457c-8195-98c1c04427bc",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc2ff14d-6488-444e-91cf-1cec9c503ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64cef8af-15cb-4064-a7f9-aa435560f453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12a0a098-6c02-41e8-898b-f50092930f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d2104a2-39a7-458b-9baf-a56a19093dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ded929-0e85-45f9-8f7b-fef015340f8f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfbd1ce0-f084-4e42-a623-b2aa0fcc4346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f32f660-6a33-4a69-a37e-dc17265d23e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03e9a264-7481-4ac8-9ec6-527b01d99497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "08ca17aa-41e3-47b5-86a5-79b73f027811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69cec280-0546-4a27-ab7f-fb26addf280f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0317ce75-cae9-4773-a1a7-2fb680329342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2c18d020-6414-46c1-9cf0-99a21087ba4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bcfbbd6-5980-4a7e-8619-b436a8b15e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "839e87b8-06fd-4dac-9814-5c0c41a6bbc6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "02c5f6d4-67b7-4d0c-b6f0-996be9bcbd1e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "62e76683-b6c3-4ce5-8ba4-6d43767cf92a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1467b9a-7c90-4343-bf8d-cb1168192e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e61ebcc2-0e62-40dd-ad90-71da47724bf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb51269e-5353-428c-b1a3-0350c2dcaaee",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e312436-ea91-46f6-a5d5-5a8093cfd931"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5d4bfcb7-4183-4d4b-9eb7-3b092cdc6547",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8766aff5-cdc5-40ad-a530-0a0c14fd01a7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "40d4f1a0-c4bc-48d7-a717-c60f171155a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "46090e8d-8f4c-4c04-9052-39003dbf530d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f188b556-4776-4526-973b-91aafcd98d5c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "22a63c70-f9eb-41a6-b6e9-aafdb8d6669f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "dd40bcd6-fff2-4816-bb02-a69e4ced8158",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ed2d1393-8e91-416d-940d-c99c7326c47a"
                }
              }
            ]
          },
          {
            "id": "14b4926f-1f7c-409b-9d25-02ba8ef2c4bd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "03103e51-7ae2-4227-89b3-553f4b2b9833",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "395a2cb9-5031-4712-afed-c5d7ee645d5c",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b70043e-1a09-467a-b692-f0c9afce241d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8d1c6b17-734f-409a-aaf6-cd49f3135ac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e03d5b7-81d2-4182-8812-268ec03db0cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f93a070-0846-4003-9ddd-e720c4ab3a5a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7b578370-4982-47fc-be1f-d3cbdb31659b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c6bacfe-8500-4d94-ae9b-f284583a3cd1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2941df3e-cce7-4ca1-aec7-36320bfaa00d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a91a06e-ffb4-4f19-b771-9d5f0871f130",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c1370aba-a89b-4283-8e44-74124137c195"
                    }
                  }
                ]
              },
              {
                "id": "d9d993b2-680a-4c6d-ad5a-959678855373",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "105d6cd9-311e-434b-bf3a-1dfa8edf1d38",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3b505b38-5ba1-482c-af83-d2d8de481801"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9392a835-053c-4b5d-87f2-b773c704a3b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bb0b3025-fcbf-4383-ab20-34cca43826a8"
                    }
                  }
                ]
              },
              {
                "id": "a2b681bd-de3a-4fc6-8770-f798a4246e7a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c6df6eb4-c6ab-49d6-9a2d-557d88a02179",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "de120ed3-14b1-47ed-9d21-b6be567c0c68"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "04c80b4a-b185-4388-97dd-ca70064013f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f1ac3998-6a0e-41b2-9810-c540927f1e20"
                    }
                  }
                ]
              },
              {
                "id": "01c68858-84aa-4aa4-b4fd-3227361a2576",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d798c331-2ef5-4324-98aa-cc70bf3ed9f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3294cef6-1a9b-46c5-9c57-95c2d8a7d9b4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f17f4ea6-0c5d-4733-ac49-5fbe329f760f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e12b3b92-0eeb-49e3-8f46-8b4b5ef9c013"
                    }
                  }
                ]
              },
              {
                "id": "5294fc13-1dd7-47ea-9699-28a11bc47418",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d616c179-27a5-4676-b968-adc89e56b50f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "944632a5-c7bc-48c7-a22d-fcddac616a0f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a71792a2-8049-453e-afc9-f7c6dee46db4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4fd2e85a-8dd9-4918-bcd6-f1203feaf141"
                    }
                  }
                ]
              },
              {
                "id": "27d2aa22-f5af-42c2-81a0-0bfd0c279362",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "475a97ac-f47e-4461-a34f-533596e0815c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6f3e409b-2e90-445b-add6-6c0a66414fbf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "145bb9e7-ac11-4e62-b9a9-b87207b0092b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b56e6d97-0b50-4741-8f3b-fc6c2b3c10de"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1b52294c-b0a1-4025-9c6e-9353f75afe19",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "56a4cf29-dbe6-41e2-8964-db91b4a21bcf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a5cb9be7-2a84-4ad3-9a25-90f6b32009a6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f1a6ed24-d726-44bc-aa92-f010553cbff2"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "710714e7-b96f-4fcc-b23a-4f45f41a8345",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "a2c88a49-26d0-4162-9886-495492ea2e6b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f8705803-73e8-4ec3-88b7-08cc690a0075",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eaebe4f4-ce32-4bd9-9282-7f081ed08e4e"
            }
          }
        ]
      },
      {
        "id": "f71e5e52-c3a9-4615-b5dc-40bd3a558f7f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "6685ec1e-8463-45d9-b8c6-bf21c2b4af9f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d4ccce03-d5ff-4f8a-b14e-0445d1c39044",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8e3821c3-6cac-40a9-ab14-5bf88dc601d1",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "699ee0d2-a94c-42e5-b973-72cdd66d8354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22a7f673-5d9b-45bc-8730-7078f7c6da02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47f6c64b-f63a-4f7d-8f92-578bdbc09692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a71fb326-5c92-4492-8de9-c680587a1cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d1f26ac-559a-46f2-b226-d53fc4a0a29e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e77b19f3-6923-417d-9d71-468af00e29e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3466b25-7957-4671-9c93-c48dd47d1fef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96fdc962-dc3b-442d-9716-ab4023e8c0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "18fc82fe-b728-42b9-acdc-85d90d6dfaf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "550c9f47-c86d-4c71-ac5c-76eedce01b5e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba993008-ef35-45d1-ae7e-d285a14c9811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a5e5775-d456-43d3-8069-8a6a72c47cc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de9868b-668c-4a0c-9a25-9e057ca1518b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "468c67a7-98c2-4ab9-931d-a4dd50c50258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edea8c94-0a97-4414-b1e2-bdca366717f9",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82346ec-3f0b-4c4e-957a-d368391c6576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf9da932-b189-4c63-92ac-99da4103bf50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec46e337-ad11-4a32-b46b-c25d1836c006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8351e118-d37c-4f13-94f9-ac76d9302e52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55005ce-f5ad-48c1-990b-04f93aaf9b81",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64074ac5-18df-4a04-9dea-4b87dc84cda2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2096803f-dd7a-4925-aa19-a14441aa8f4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e94f905-d36d-4630-80d2-2a64a8197d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4db73864-612d-4a46-996d-76fdbcca36b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "083c5ca4-f0c1-4a78-9784-82c29450e929",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77264c9d-198a-4256-a2a7-98e29518c376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71c9b29a-34b0-4841-b398-c3ff6e52c1e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94ccef8e-3d4f-4ff0-a41e-a7dd50f8ffac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "894b8bae-1f13-48d9-a8be-ba0e12f4f6d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35caadc7-6ea5-4e73-8763-d2849cb07834",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd346668-6a88-40d3-9a34-56d49f3643fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52fa62f1-e16d-4551-bb90-639718ed89e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0198a9c-56da-43c6-9faa-05e954d20a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "40f3e741-002e-42d0-80e3-47260e8ff2d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34410b3b-1291-467f-a74c-b4e2ab271b38",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74739ffc-fda1-4b7e-89a6-36d884a3a380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cf8ef12-1bb9-42ef-9189-68224ee4b474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca60988d-69a5-464c-b762-01e416f6bf45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "78c93195-1968-4220-afed-0abdcd14def8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60edff12-1cb9-46cf-8621-2ea8c56d114b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15abc7ca-f06a-4eb3-a61a-10207cbe9e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e419d8d2-a821-4aab-876a-07f1a094482e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5101061e-d446-40b4-933e-5f2d8ff4e896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e913dc1e-cb4b-4dc8-9ab6-24c7f6504123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe84b074-5b37-4552-a2fb-8facdbfe979a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07bfeffd-0b6c-46a2-842d-3b9bf5a1a7f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0998fa6e-97dd-4acc-a862-35f49540e7b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "280dca15-c9b1-4208-bac7-d2c84080f154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd998b4f-b139-4b4b-800f-b9fda25043b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc4d904-e65c-48dd-a91d-8bab56c1be2c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf160ecb-08f8-4693-a118-2f4558f8fdd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "152ed870-b071-40e8-98ec-2cd3b91a525d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a0c5123-672a-499c-b222-a9653b02b9d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "91490db5-d80f-43f9-900e-205ccf0ba79f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf2f6561-68bd-4199-a3a8-034d1ff7916f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "638a22e6-0806-4f7b-b1e8-260704cc58bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18363edc-f85e-4c0c-bb58-95d48366559e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85defebc-c274-491c-ba30-86d7b596636b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "82b04e49-7c0e-4480-874a-f9c73f3f4fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19078572-4925-4e4f-a41a-4dd1861a4e80",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa712bd7-13a1-476e-bb12-7458ae35b062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "823f119e-730a-4839-933e-1a39a8699062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe3de5f-6137-49c7-87b7-2c7621f3d6b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d42460e-2866-4dbb-a02f-ea22870433fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdeebe25-d208-40bc-b87e-422e3c3da3a9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc0665c-ab6a-4104-a157-b8bb3ce73a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "420a5660-65df-4937-a546-2ccedd92e429"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9bd2d99-95f1-442f-b252-d7165b706ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e75769c-b8bf-4b44-9ecb-5575fa1cae04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab1f1c86-7ae9-4e5c-837f-254923f7882c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f15277e-75b1-4127-b552-cddfe0a06f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "630d1f6f-8b20-4578-ba8b-37cf57c4ed4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec69dff-f1f0-4b7d-8cf7-a29c30876e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "30fc26a7-bce6-474b-9be5-47790a19e450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f10f782-f2a7-4eff-ba92-bc2201bc07c0",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e18e6cc-0217-41c7-951a-189424e01620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3c27517-a398-480a-8a8b-ea920435fd21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c893f1c-1663-4288-8134-b7e5f9459677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "31cbdfb3-f1fd-4a4e-983a-e68353f3498d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f54cf5-d850-452e-b32d-66de72565c90",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8262802-135d-4dca-a11e-a87c7a429777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "089c1eee-1947-449b-87be-c341533053d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede65f79-cff8-4b26-b1fb-2ade11239a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "103cc89b-0191-4f56-b36f-c70208b02c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36855b3c-8993-4745-b8ba-59b61de7a16c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e9deb4-29d6-41c2-9e00-4a4914e666c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62c830f1-abee-4fc7-8e78-9e574c83c7b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "117dd6f2-3b76-43c7-884b-8a678c918b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a80b82e6-463c-4ce3-8eff-36c5d73641f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27419fdb-444f-4cfa-8207-0577db4f2224",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb86929-cc41-4bda-8f42-63edec3517f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "431c6ca7-9a9a-4690-ae15-ea74157f2586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8236238e-4bd3-43ae-9a07-6e7e0c90aa17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a70ac34f-0295-4c66-9b47-9c65bc1a74bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b94d44f-aa19-4406-a5c4-8721998a78fb",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f00a5b-d49d-4be3-ae37-8be4e9b92a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f17c3fab-040e-4296-8a2a-a4bafd0bb3f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "567e5b92-b4a6-4222-980a-366f833ff01b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ef605d4-3c71-443c-8c35-0ec167479f39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98825790-6737-45e0-a42a-7a4672d42b16",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beabf94c-2b78-404b-92c7-474000e0d19a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26f98f36-9a7a-4107-a50d-cf383f95a6cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "478afb10-0176-4673-a30b-8911f02ee7ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53b5dadd-13cb-441b-8ecc-7b5ff150ea78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7777009b-858e-4126-a37a-00a03dab89f2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b2bf5fc-f7f3-42c6-8330-ef03a9ce0a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e8eeaf2-cb2b-47d3-85b4-27249b961bc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b071fc6f-e416-4b92-a653-5d6c1ccc4fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b7061f9-4fca-4ae3-b5d8-b12fdac993f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0ee1ce8-bef9-45dd-b9de-48c42d0d4a26",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "781260ac-ce00-4b2e-8000-ba467618c043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3427d69-a83a-4ff9-9189-9859559b7fec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70658c94-bb2f-4cd4-896e-ec4c3d2159fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88fd74ba-d885-4955-aa34-c2ad15ebe353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60bc1601-d180-4485-ab9f-5a3f85de490e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63be376-88da-487b-8cfe-266ce4031311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c1ac347-9e03-4d1b-8f1d-9078dc7d6f7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cae1aae-ed7b-42cf-ab6f-1af637f694d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d276d7f-0ff0-4cc0-9a0f-73515e3fbd7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2db34a8-de8b-499e-a93a-ad6db9a07a24",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c843bbd6-d833-41d6-b144-a4205329c6de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "060ba7c1-cb9c-40a2-8570-fa2869052a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "773c8e51-9bd1-406e-9690-8632b6bbcb24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d3f9a72-59e8-4cc4-804f-36155cc33556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f041ec6-fdf3-4561-9a2f-8c145f4a9c34",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4758c3ef-06b0-4fbe-b632-672179370289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d10252d-e2db-426f-b367-d208f237cb62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c683ff52-cb88-40ba-bafe-0c23820bb332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ad2dbe8-22dc-4ad6-8a5a-7dea8374216b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff1a4fe7-14ad-42d5-a2f1-284ffb35ce5d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b0f371f-a07a-4609-aa41-7e983af2c0e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "227c630c-08d6-484f-ab58-029a48b91796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987f29bf-74c2-49b4-9a40-a254ef44d274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91cddf8e-263c-4960-aad2-3aee5ccc5a61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539d54b7-b5bc-40bf-9844-8767cf6b52c9",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b75663-243b-4b7e-9489-9bff03c87db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "785c5e8a-2b2b-4131-86dc-a511a2edb725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c81263-ed83-4d23-ba42-a4c277053355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e5e542a-11c4-4c08-94b1-23c9a8f11bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df0f76e2-5ac3-4d33-bb1b-5699f627e0a8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "628f39d3-a673-4c7e-b8e2-836f847110dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80d68a6d-2e25-4ff9-bbd2-3c8dc66abc32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b713de6-aa23-41fd-84df-33f11947976a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00db06d5-2f46-489e-aa17-3325b1bd87f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c57363d-8229-4d9a-bed3-ee6e78afa95d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f54b19-a7df-4b21-ae75-cff5953b355a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a730efe4-0e85-43d0-89a2-853cbcc7ce09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "768a0e18-90a9-435f-b282-a3f70d0d52b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbd145c4-6b4c-40b3-8d48-25cbf402630e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a2c73ca-5295-42cc-b0e3-649d5b16633a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e91d1737-4e3d-4e33-9d60-f9707cc0e3e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc34a66c-af03-49b1-b9f5-66f0312dfce9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e8ad9d-588e-4ccf-a0ef-b0a58070f1e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ea7fe3f-5df5-4a08-802f-9a2ca575de7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeacdcb9-b7b0-4f99-bd02-57cc0f282d69",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9383845a-bbe7-456e-aa9c-13841b3e5cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48e5f07b-a5cd-4e20-8c7e-7ac78038f339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ca8aa5-26f7-438c-952f-aaaaf253dcd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0a1f95f-f8e0-4e2f-86b5-cddaa6e09df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea36d608-807b-46ca-a053-0bb7dc30d3cf",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d11604-b514-4903-a99d-93b38158b804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6bdd6ab-65fd-4bfd-b2b1-8020e729f7f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a2d1089-5e0d-48c3-a73b-455b2ecd8b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3700b9b8-eacf-497d-9fab-9a6343dfe807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "582238ca-aac4-4a13-aecc-97a03305e8cf",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86665dfe-e349-429c-91c1-508e7bce6b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ede9b37c-52a3-46d1-89e1-e42d421f9e0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5629ece8-1838-49be-9563-93c0e6d67282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69475ec7-8798-4ee5-8595-ec296d3c5d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c58d73-1ffb-4657-9da2-53bfd1039782",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e569aaae-bc57-4abb-9bbd-a92580acb713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55d8f85a-c5ba-4e3f-96d2-7ee5827c7d8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f360010-6a85-42a8-96b5-0ae3e138b0f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5048bf1-f330-4e37-bad4-577a3d5eda9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0130f1d-3ba6-4cec-b2e3-4a0096fc2cac",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29407672-206a-4849-a3c0-252fe08d9084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78a2a6ae-555e-4bc1-85ca-350ebbf463e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39af69a9-0c3f-4792-a616-bec9f7a5446b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10d3caa1-10c6-49ac-85e0-516745d1edca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d66713-e010-44e2-ab3c-efbb6cea744e",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c6830f-4c00-4964-b728-27c0d983515d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80892df1-db84-4d27-bb91-2ff623f8dd6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3bd6523-f4f0-4cb2-bc5a-c6ea494f7484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51577a89-dfb6-4fd7-a6e8-7378f8c800b9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3bde48c9-38a6-4337-a09b-0e1fb0ac1447",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eca3db28-145c-4f0b-a2c5-981fc8ead44f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5813f86-f285-4ba4-b85c-3542eb07d18c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e4a9756d-41ad-437b-94af-349623a02673"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25fbae25-7c30-462d-b110-9c5c751c3d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "13e82293-057b-4d12-8b83-1cf658febbc4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e3f118ab-30fa-4aa6-b711-bb22320ef68d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8930b4e6-a6a4-438a-83ed-c4be1672240b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf5ca6b0-bd30-4f1e-9663-e4e8c9ad425c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "05444518-76b7-460a-a819-2345b021b839"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "501abc5c-2ffe-4cd5-87b7-d0b6e4207447",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "480d3c6f-c803-44db-9302-442e37cb1ad3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e9037e10-0337-458d-a147-d24b506ad609",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c868743f-1029-4edd-bd6d-4b3d936c1a4a"
            }
          }
        ]
      },
      {
        "id": "99ad7d4d-bcab-47fd-b52d-754415200c96",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c081f67a-ddec-45db-8e18-873df4709be9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9b0f8be3-0165-436c-ad6f-1ee2306ac737",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "08647dcf-bdea-482b-9fa6-d73af1b2b768",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b74eec-eb34-415b-b4c7-d1559867b670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b94e4c37-b622-4521-9443-a5d5fb97e875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08060f38-8af5-4aaf-a97f-a7f41933920d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c758720-5a1d-4de0-b679-78fadb15e444",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9d1d751-c2da-45fd-8e64-329a49c63140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bb16191-6779-4ee4-95c6-d606aa6612e0",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c9486e-efae-4186-ab8d-39cbe9b81c5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73181ca4-aeab-499b-8922-0ac6a9e1a239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c06864e-e13a-463c-9789-2b64e2f36aab",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8614fc6-819f-452e-b776-8b997c37abde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "580f3ca8-0d79-4db1-b441-940e8fa47919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa6a0b36-010c-486f-bbdc-9987151cdd6c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98006c85-8e6d-443c-8bd4-d89aa206abbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf37eb02-e005-4f79-a214-b489c23004bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84916e75-63d9-4ea9-a5c0-d7b8564034fa",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "377d7b82-4989-48f2-8700-1170a9fa9f95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bbcce13-36f3-47ad-8cde-303d86d756b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e12349-39e3-492b-adc0-4ce96172fe10",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "092adae9-017c-4354-b93e-ff46eed2f046",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1cf3fba-d386-483e-9c0f-7a4c1d58ede2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8fdde9-5a04-4b65-a228-bcd2effafbc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47c7b35c-33cd-40ac-bb2b-89aea0029741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ce324d3-d14d-436b-8bec-df5dd726eb28",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e8a7ce-f5d1-43e8-b40c-f8fb6983c9ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80be5d30-1c03-4c83-96f8-8f97bc787fc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fbea3f5-eb90-4b70-b078-87e993ba94db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eb111b8-4740-4a4f-9b26-455a6f44edd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c77007c7-66d7-4fcf-b8cc-a462fbc39ec9",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64047984-e2cf-4967-a73e-f7ae94e8d94f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "825fb7dc-b4a8-4dd9-9d1f-0d5a841aa241"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a026fc60-0257-49af-ab0e-585e661cbf38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2929b07-78c6-4baf-ac96-e1cad190c234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "283e3704-da74-4010-a07d-1947aab14de0",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afed9791-6747-4eb8-ab6c-c2ee927884dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "211a9777-9298-4521-90c6-4b0a87066719"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2e9314-295e-4286-bbb5-080f2ac9d3b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00d1a36f-afcd-49a9-a8bb-fad35e0fad65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67bf6733-80bf-45b8-a049-2faed094e905",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "626a77ad-0095-42fa-a24b-9ad15265fa60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b4d477b-6571-4193-9573-0246eab1355c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a77c35-25e7-4131-b460-45183166e451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14ed5304-c01d-45d5-aaa6-b2c05b338d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c09e3293-501a-4f49-bfd2-9912ed88fbcc",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b05b866-3498-43f7-8cfe-569ae248a9b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24d24e62-c8be-45a5-ab6b-88f193a56831"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e76ed46-06de-4511-a439-2fc013383cee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f861b71a-06bd-43df-bf45-489b1202883b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bedbfe6-4389-4b09-8bb6-867271b55e63",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2889d8c8-d086-4815-81e9-751cd9ddd912",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2863183-80bd-47a8-bede-bad27ca7d7e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a1975a6-5170-4afd-b5de-480ce8d59767",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a721a38-5517-478e-ae97-290f4f632d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af2fa34e-161a-4f34-98c9-d3c98ca37136",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae3204e-90da-406c-8e7c-945d2fe69942",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86a1b76b-13d4-418f-a1e4-a1fab0cc7540"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ce7ca10-3f9b-452c-a6a2-82962b81ca91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9800a1c8-042e-4974-b257-b0728cd67494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "035d677b-4ad5-4ffb-9a19-151f8db39035",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b035f19a-1612-4014-a241-4c7634a6a424",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05e73c83-37c0-4ead-ab3b-ced4302e0e6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4756a016-ffc1-416a-a459-1015fa1b5e58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cccd368-6564-41a5-8a8c-c35d239552b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59559a54-8dd2-4efb-aa78-6c54ad8de407",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee493ab-9f0c-4fee-85a9-a37616ca0d10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b5524f3-e39f-473a-9a08-97f714d98df7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ffe9ad-cbd2-45c2-bf4a-7661e80f0b01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f457f4af-077c-4762-b15b-38b62df05774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d2ce752-7046-49dd-9f85-498a81393be9",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df8e13ae-4589-4719-ac59-99073d3c0c7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d94970a3-024d-4a6e-8f3d-f6f349afbd79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e93c5e02-88ed-4d7b-977b-ed96b5696621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44795346-b8c7-4fef-8780-9e51272bd5d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed653a8d-17dd-4b7c-af7d-f78bc81bd6ab",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eea0f5d4-2df9-466e-bad5-6b8eb2f24dab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "300568ec-a49c-40a4-b403-3efd644297d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fcf4678-2d16-4a1d-adfa-1c6492b0d6be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0184e752-b39a-4c25-ae94-c586f7490689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0595dec0-3b95-4931-8d76-f49586182087",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c023c04a-a320-40fd-82f8-ac24e6c84bda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d7b7611-1c1a-4193-a20d-a789960cd733"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33cf9d5c-7887-4db7-b3d0-d9a5928d78ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "494048d2-32d1-4034-9e0d-24259e3f9f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ce44a4-a609-4022-8f84-80f02b25500b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841b0df3-dd7f-4334-ae1f-63d3f6598083",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a48465a4-d274-4e3a-938b-3fff17d50b70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac90fd59-fb9f-45e0-827b-c4df5dd0f073",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3ab2139-a106-4759-b0e3-b56086c9ad8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "327eb2f9-893f-4036-ba29-59d86a9d1833",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a978ea6-a26c-4b1f-adee-3327985073e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f145b0f0-9680-4273-8062-9685bf785fab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d35fc5-71a1-4308-ab1b-056d70d8fde9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf54d3c0-0fb0-479f-8241-40741f99c5b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d24d21ac-2b5a-4d3a-b6fa-63ff399e6068",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd079dd-0d96-4c4e-966a-061cdb300cc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31ac99d7-69b0-4b18-afda-c0c481fedf28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4737aa-51bf-405e-81f3-82f7eea90fcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2de0eca-1336-45e7-b4e4-cdfb4a5c09aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c26f2b15-9572-4df3-bded-74296cbaf7c5",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff3e24c6-cb37-4da8-80e8-562851a443fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e378bddd-fb35-4e3b-9c6e-76e0b3893eea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ccf9c29-e7e9-43ae-ba78-443d4dee71bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80be43b7-cbed-4e5e-8619-48f415ad12e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc8927c7-6a7c-4f2e-b5f2-2a654781c32e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1317d3b-949e-4fe5-92fc-89f75f99810b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ba6ab47-5463-4d2d-8bcc-fab1cceca74f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b99b44d-9d67-4097-92a4-8a4fcd4ce76c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "238e39d2-b8f3-4b15-b108-2ad2adbe103e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af58fe77-5ed3-4b4a-a199-ed02563335f1",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb4135a1-1bb6-428f-a1b7-519dcc52397c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b09f99df-1d7f-488e-8376-0fd4d5174c2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5757f610-6f6f-45a6-b2db-3d3507a1a849",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b047232-2a9f-49e1-9c88-ae9418718391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5172745-8497-44d2-880a-00189d014a71",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92688aa5-6707-42c4-a46c-0407a2329825",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab7808fe-5392-4405-b5d8-cad691dadc26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef39e84-e7d6-484b-ae8b-6ffb965426ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58d3969c-9aa4-437b-9fd2-ee031b264edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f5fe4e-853b-44a7-bd4f-13eb084e9386",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "265049e2-52c0-44ee-8295-f8c94799290d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d028a60-956b-4934-bd3c-0bc8501cab55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3788e7eb-e09d-443f-9cf9-0005443c1621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d191455-a72b-4447-9577-cc070b86aeaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a52582d3-8028-4ca3-8eb8-03b7217d566e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "906b2f22-d9b7-4cc6-aea6-9f1195762168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76021ee3-e872-4838-b662-795b29db82c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "242eb3b6-bb10-48bd-91a1-71b61f6f8afd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "643d4b23-a119-4b18-bdc2-7e7df487db68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c975bd2e-ddd2-4847-9ef4-4118b215f693",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5233bd6e-37c0-47e8-af0e-2777e2108f29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45fa4bb7-d8b3-4b7a-ac30-7f583ccf1d3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c2a7843-47e8-4a8f-8914-6ac553f20557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a76575da-3350-4e53-a65f-d24e8ff5ee05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab6d4683-1fd4-42a8-90e1-55ae90e5c4c2",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f26600-ceff-4f4a-b113-b74a782372e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96263edf-1977-4892-aa2b-78ee750a45dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf6a3d1-8acd-4301-857e-723f899feb4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7275b3c-d2a1-4f70-8a6c-d4711e3aea88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d8b88c0-d963-4433-9a87-d7fc1e42e82a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c80e2e2-eef3-4453-8eb0-ace3af42630f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d27ea76c-6b28-46a7-a450-9e50c7b6d944"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "317d9f76-b28b-45eb-ac2a-0101098e6f2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09d2d85d-cccb-446f-a717-a35928da4a42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "208a72d0-d12e-4544-bcca-f798d921b2e3",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea0465f3-00b0-43ab-beeb-7890244019f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d5a7c7b-bb36-4bef-8fd1-05e76d0d8469"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61fbc963-78cf-4709-a58a-365231ac91fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f46fdf8-1951-4ad8-9d24-4ab44d8a756a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6c7178c-98e6-4cad-8b83-a3d8861766e3",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b0f78dc-5cd0-41bf-9159-a9b4eb31b974",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e30a1548-5c19-46ba-88c5-3508f914e9cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddfaf579-4371-4976-b583-f4d8a20dadc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5b81286-22ff-4870-823f-e49a414cce44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "842c734f-a2fd-4d8b-861e-bbc01f197ef7",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51f7bf36-44cf-458c-b8aa-ff8f6709c781",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "953c89bd-90bd-43c7-89ff-7ce94c869ecc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b107b6-c63e-418d-a792-b2b5b5fcfdcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aeba749-adeb-4463-a853-03ea76bd88e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f577ae7-153a-4968-a8d5-ab38ae4f6abb",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea67467d-2d55-4310-b60b-f95b736fb87f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3e81253-78ee-4ecd-88b9-8a331afd729e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "864bf519-9a10-47ab-a7bf-39dc943c9b08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b2a1bcf-419e-4fcf-a1e1-f9b087d10caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c419fbd9-a302-418b-9dc3-d80ac220ba50",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9b8ed57-ddfd-4c1e-ad96-be4c419bd078",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e3a1f67-1606-4dac-9f5d-d1ce8be7272b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45905c38-50fc-4cb0-92c5-04a39bd6619e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7051ac82-d1a9-4a0b-803c-f91aef08602a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d2001c0-594e-4d82-859b-defe2b5a31d4",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46cb139b-ff45-47e3-b778-5d3a730c4c66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5bdf2c9-2032-47ab-aede-e74a1669330a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8b3cf4-7ab3-4898-bd96-ca332fc944f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ff8481d-edb8-4873-87d9-34301360207d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5600a40e-17f3-4299-b794-1a759734187a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd9c307-88fa-47f1-8d2f-12ceb890c18e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b55365e-4aab-4e24-9c00-80fe063b3330"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d613180c-a522-4e9b-9425-5208bbe7d76d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "345553db-b04c-4dd5-a977-9649fa60a058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053ba498-d826-47c0-bd2f-8937734be809",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7fecb81-4473-468f-ac3f-0a3a5cb35a5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "215ae6b0-095b-439e-ac86-3678ee026bed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13fcebee-0aae-4c88-8cb0-ea2b63adeb4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e053cfe-0014-400b-b644-12fe499a5d15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ef9ada-04cb-4227-9170-f0a00ccd29ca",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3fe1560-4cad-4132-a947-3d03fb21e013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ef502f9-8b09-41e8-aff5-16ddddcc2665"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c6551a-6b81-4334-99bf-c0d071523f01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "286a4462-ffa6-45bf-869a-423e331c6444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39789968-b37c-4457-99a7-316fdee960cb",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec6dbaf9-3213-4e6d-8ee5-bd5987987365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fffaf917-fbcf-490f-86cb-2be881f79320"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3be5637-3da6-4b06-b5dd-a9425842fb9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39462d27-4689-4397-8b26-e488cd233253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a939145b-654f-4441-8210-8a8131eb6621",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2560e101-4e5f-46af-b585-bbb7a4819a95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d6a4565-216d-4b67-9f40-b6adc61581ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00171b5d-f74c-4b87-8f44-adcb35fd61e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d5aacc7-fafa-4f0d-bdbe-d2502ec63072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b3a541-0a5e-4eb8-aee9-8a50b6fbfedd",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d76ea4b0-2c44-488f-812e-53432de59d73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51dacf59-5014-4b8f-9d15-1dbbf0a9c8d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a552bc07-8904-49fb-895e-76b78555f3d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7c1f9cd-a625-44e1-855d-8b5fde7e2570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af3157c-70b2-4543-be77-ac57b620313a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8837f55e-34f5-413d-8c86-b2339637e9e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec0c8e35-6e74-46b3-b489-d48e94c3fe42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef82557-d78a-4b62-8c20-acc98b4b777c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82d86fc9-fa02-4f7c-8ab0-e8bbf758fb04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe31b1b-3d04-4c09-8612-662c27cde0d4",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd81350a-b2e3-49ef-bb35-548dfa9ed360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ea0a1b4-a545-42eb-a681-5c90d601ca65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fffc166-edb9-4fe0-b4d7-8ea9db8877a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d556630e-701c-4bad-957b-b8f92a8c104f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d012199a-35ba-4192-a1ec-bae23a5f910d",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf1ca3bd-a375-48e5-872d-8018178f01e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c6290f4-aa71-4982-8adf-2876608e7296"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c395f788-f8b5-4cb3-bc76-3095db3196b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f52470f7-045f-49e2-88b8-56f44db69c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00a13761-1c08-46b0-84cb-6c48e30f6e11",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39aeb506-e06b-4640-bf4e-4f14333868c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a29d2c95-ed3c-4ef4-b0fb-4844768b793e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4d9ccf2-9f5f-4a2a-9895-6dd928c2ce03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd0ba372-4122-4b10-9239-9bc71bbcf325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8fa46a3-79b6-4ecd-b99d-9a76be851d48",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5221f2eb-c2a8-48b5-8082-8ab859a9d2bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50ebb191-34e1-4c05-b8e9-f80503f6d850"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba10a90-d119-499b-bde6-79bf20866488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "108c4516-331f-444b-b28e-b1be7fec890c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fafbc5e-b0ba-4217-b71f-62a87c3c21a2",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b736de8-03d5-4f1e-a0cf-e61d5ef9efba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d3fedc4-a039-4904-b021-b22d742bae6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee9e3de-1344-41d4-b762-a4c1e85c2b87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b6053cc-6aa4-482b-8ca6-15d8ee19fe9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8338678-b292-4db5-a3bd-e256ef6af66a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a45eeb-4f10-4d75-b6e3-7791a1a283af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f80c02d6-0c25-4f87-8509-326a81e6e8f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c573c2ee-cf8d-4f96-856d-a36e8fe30082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e1869eb-c272-49b1-b9ae-58e92b4fb9c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c152a0-9953-4c63-9dd1-15bc1a7c5d3f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb8f56f3-906d-408a-bd55-2b877d435903",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cace5158-8765-4366-b5cb-086bced3624f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "768f76c4-a5eb-4619-a085-b44f4f43a252",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b278a48-74f6-43aa-ac85-ac41e4547130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a49bdd4-7762-4a28-8c56-cd3fdb40d3c9",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57fe314a-d62c-4db1-a9d2-10680fb6791d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "126b64b7-ffa0-4098-9b49-03cff1952b90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d66a17b-493c-4a4e-9ec2-a248edd8aded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "849cf2de-d74b-4e4d-bf87-b3b290a4f9e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a1c1b99-1c3d-4561-9b99-f90d3e6f0de3",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9882590-a7b3-4a17-8453-57fadd60c859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "893c7439-8f6b-45c8-8fda-a1e4a866566d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c56d95c2-212e-49e4-ba45-fe941da35d5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abb85028-3841-43c1-801a-18ec6c3fa2c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0972c0ad-6366-42d4-8381-249da993a12b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc31ef6-01e2-4da4-8e16-ae3fcdbef046",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc14a9ed-a0ef-454b-b3c5-3ac27a8d8378"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cef5a09-9144-4ede-987f-354ba1af2092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "274070d5-c842-45d5-bc3a-a326fd167584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "874583ab-2833-4e93-ac99-aa29455b50b4",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5167e340-02f5-4b9c-84e5-dd06a435c117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aee55c09-9592-4df5-adc1-897f9851bd26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d5d6daa-1d0b-4f8e-b841-2dc787741d91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "280b32a0-10a2-4490-8f8f-de81c319e77a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1567506-8c7f-4661-a38b-43815840a20b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59cd7a97-f249-49a8-9e44-bb75c77f329b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb4436f1-066b-4500-91cb-ed98a336ba61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de9b4d21-07ce-49a7-8fa6-ba51dbc49b54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a10e991-0a7f-4876-8aab-adb6ddd14230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb56ef44-d25d-453f-842e-03d67f9bc43b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e1eecc6-13f7-49ab-b715-7bd249065e98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4abd6a52-a542-4dcd-8665-74686e417394"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d8eaea-5050-41b4-a200-74f097dd6edd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04ff5c5a-dcca-4d86-b990-f0eae96de5d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d36bc40-2f28-441c-8720-851ba1a15d70",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b1e23ce-22c8-4bd2-9a41-cc10e0e86552",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26a219d1-a4d6-46a1-9563-cb237272cb99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a77b21-b05c-4d84-a251-f4ee6ad3c793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b7ca5c0-6b43-4f76-8e10-ef1f3e58e2ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4ecb798-bfb3-48bb-94f0-66e1e8dd238e",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22960107-c59e-46a6-92ff-b14f5da3ab63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75bc67aa-4df1-40ff-b22e-1e39ddda7917"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6519ab79-64f6-496c-8fb8-4880c48d78f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4195c901-3fb2-410c-a577-0e1d8c00abaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf3168be-da57-42c2-8d01-65e92e9fdddb",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1768720-f09f-4ee4-95d2-27e12a2bf5aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4b606d0-bd33-417f-a050-751ff3460e62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88e45fa6-5802-4924-81f6-3c1394859107",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "218642fa-46d3-459b-aab5-de290f31c3ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "617076cb-e5b6-47c5-9349-7a3edb482bbc",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a097ad9-6095-4485-bfda-4da3c45ac512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3253a6b4-e961-4f91-9ba8-687aa71d1b20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28baaf3e-dce8-4a05-855c-979388f92ba0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfd5c17d-7dc5-47b1-b714-487d9145007b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c542033-d8ba-4deb-b1e0-d73184e9cdef",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "702902e9-8570-46c9-86a8-dc9a77b4ac9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8063e8ea-4a9c-4c6e-aec5-d37161a226d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf62072-9011-4a6b-8b38-d08d58013f0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4fcb07f-3b47-49d1-8df5-eef88f5fd97c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd1f853c-3760-4b8a-a440-9a47c76e8f1c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db4578c-ab71-457d-a4c5-54b88c34326c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88c319fe-ebc2-4614-b0c9-557cfe8d0850"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c2558c-9838-457c-90d6-f4b5cec49243",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f318707-ea16-4b65-989b-c1a3d0a5af33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c7ec0b-8990-4014-ad78-669aeea4c668",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8051eb5b-25fd-4aed-8a26-90fb08555027",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "839fa5b6-aa1e-455b-9954-f47fd0657826"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f19f6e11-9f14-4754-a7e4-a78f9e9411c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1588afcd-7681-4476-bb84-7474c7b3a703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d85256bd-1969-417a-923d-ba35bfe54408",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "492582cb-75f4-4765-add9-09a74c9089a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "546428e0-b589-4681-9cd6-a974788549df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e19507d1-138e-446c-8d8e-08072d07c9f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5846961-8593-40fe-a6f8-69a658e5d873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d0e6921-87f9-49ee-87bf-e72ae5367b68",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f0cd68-1dca-46db-be9b-607f866ffcc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb4fe54f-70fa-4859-8d1c-c8505988eac8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b7ffc1-1e19-4d6b-aa3e-244f6b4e1111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e7a30fd-8356-4c21-bd6e-87aff22b49fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c79adf6f-86b8-4987-a1ca-5be93961d02d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8725bfbe-5f21-4c55-accf-978e8363848f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df52308f-4396-4c52-8e11-ae8e53af3e28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac2a178a-295f-4d26-a899-895587987c2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd8a31ca-11c8-4d1c-8937-a5fd0bb94ccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6254346-2913-4f31-b28a-69e7ee7aedea",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad817a13-104d-4d1f-9350-32af7f76dd46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1b69875-5370-48b2-ac18-ebce5e6aedb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a25d71b-fb77-4a23-84c1-baf4a82226a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82d2ee56-0ae3-425f-b15b-5c634084e672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e626b6a7-15ba-4ed5-89f6-d8221979668f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ccb7738-8f71-4ffe-a6b2-eaf774f6603b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6b57105-6a33-493f-b790-84de596c593c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdbc4341-3502-4bc5-bfde-a9b101eb5a29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff367d32-e1c4-42a7-b4e5-fd2fc10d420f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "243e8938-f0e8-44e8-ac9a-9495f788d7a3",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ddf0544-6751-484c-b43e-77b786cabd4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "846e176b-6c80-4abf-b7f4-28395f9e6504"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b2ba8f-4c0f-4cad-ba57-980ed7ef9211",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8916c095-c44e-4627-9e64-f8e93e7e5076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb8d2aa1-00b9-4881-bd6b-7f7e68a93e50",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "499e39f4-e096-468d-98d5-87523532ee5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9533217-09b1-4546-9b99-46d864954eb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50de7a29-d64c-4d30-8605-ce8a55e81a5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36927c8f-7ecf-4a4d-ba1a-1c6e9bf7503a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e220389-e647-4c96-9d1d-6ce1c0dac5d6",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c454a3-0cb6-4324-8ae2-22d7048d503c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d46c63e-d105-439e-a421-66f49a4ce8f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b75b346-6e45-4e61-9f75-be3ec57f32c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7155ab5-d03d-413c-b009-fc3d2d67e7e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26cf745f-3262-42d9-a841-1ebe4261f0df",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e0c86a-60bf-4a59-af36-1021c6bf1013",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb41c9e1-aa6f-4b77-bd11-359ba9a0c62b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32404391-d536-4391-8a96-176895c4ef5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "110284d2-7e4e-4d2f-bab7-9ded777caa19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a69b11c-0bfe-42af-bc05-b3a0930b8134",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07437493-7ff1-4b96-bd23-77f9dbc99f10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba87a959-6258-4a9b-926d-cfcccc210194"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc74478-ba26-41a4-9475-cc4215ca9fb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d12b8809-5063-4e86-953a-c2e82c87f728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "327ecb38-c486-4ae3-8fe3-9b47b446d634",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c47794b0-9da6-4a37-aec5-0fef2fa7f517",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afc91bc3-ec6c-4a21-91cb-946831de94ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b55f2fab-49e2-4ca2-8094-265195780e66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3d51b08-9549-4d08-93ea-0eaba4fb534b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31d3b4fa-bb10-4118-bdd7-f3714e856b07",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5468441e-b4a1-4fa2-820c-c7c899c12995",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e5688a6-406c-4e3b-aa32-c6a7e7fdec43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f734011-e17c-4047-9263-fb519a91ea3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0cf12c3-0687-4763-8e1b-95e9ed621814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f2bcfd-2678-4878-ae7e-1bd2a3e0bc15",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81776537-a1a2-4e4d-803c-417fb18db674",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5484e3f-4fd6-4868-8af2-b231e2ce158a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27476204-34ea-449b-9b15-2059fc36b3cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f018a23-2842-43c2-ae34-61da75c426dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a47ff3be-883a-4fe5-a7c6-cad7fac76db6",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b9accd6-9c77-43a3-a00c-a5179291a32a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5fea1da-e4e2-4ed3-bd39-02188264a88d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a21ac08-5a5f-4e82-99aa-e163e79c72cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2229178e-4789-43fc-9ef4-6b6b031956f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "281a78bb-eff4-46ea-b794-e12bce84011d",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "defc01db-a535-4713-87af-da707c92440d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47547a9d-479c-429c-b955-4ac0179b1777"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0f39e5-0ec1-4b56-b57e-1d39671082e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cae3dcc-01b7-43a9-a0d8-f9f32b1c697a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb1964df-65f3-4ef8-82b7-573caf47180d",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "007632aa-dd1f-417a-ad24-e5f5f0038907",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16fef653-38de-4f4f-9604-8dfef059c3ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04712fa2-9d98-449f-be0b-aa6f220fb900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87c96743-06c9-48cb-95ae-11aa1855be09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc80b80f-4c9c-4904-b3a6-586f26993f5d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "637d3810-23d8-47e2-867e-8544319b6dc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c944d0d-1e74-4c4d-a04f-43a05ffbc3ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6901087-a445-4401-a537-67ab8af4b48d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7283368-1b3b-420e-b89b-19d18350d963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f04d1d9a-5efe-4783-aa8b-82db034ba9c7",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2baaec6-9650-40c7-90e0-a3510a87245c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5f8abc1-8521-46b9-9e8c-4b85e348cf73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be86917b-07f7-4c90-a377-9bf350090b9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73ad7c03-db38-4e9f-a431-921b57dfe735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34717388-7b67-4f25-b57c-d1bbabccad7f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bad2cf56-100b-4574-888c-29f6f068a39a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bde1d606-1acb-490b-a841-a0915ff40ae4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "454f3f5b-c400-4b2e-b9bc-e9f562842ef0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbdbf777-1f18-4bc8-94e3-076bff377407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619e43a6-ff60-4e5b-8519-17725775c19c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e873e3-2c9b-4470-a2c7-c67706bd4f2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e9e552e-b859-4e2c-897c-123642face7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82750aee-070e-4c3e-abb3-d5ee7b9fe589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a981d8ae-7f13-4009-960f-fa1a48c239e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30424661-f711-4b70-a670-3cde25c0987b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdee5743-58a2-4117-b38e-b5fd105b3cfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78fbe1cc-c817-4ef5-bb52-31a18a461f0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f67b4f12-6afb-413b-bb12-680f9dd477a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a750877f-37a3-4310-b35d-f047a2ca12ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98791ace-24c2-4b98-a97a-e850be2a6b0b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb47338e-1351-4a7b-8b5e-b400b7a85110",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94767286-157f-46b7-914b-003280762102"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f86352-cf22-4504-9f2f-ab580bea50d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eea271e-cb95-4c81-8652-5e3142925543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c7d8e60-c311-475a-8a9b-e5b6fc1e125a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0350c9c9-b684-44e1-a77c-4e239f4eeba7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24bf05b9-69fa-444a-b0b9-16aa285beb7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be81e2cd-9f5d-46cb-98ed-e586677874dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22a673fc-dec9-4a76-976f-7ec283b194ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "369bade1-ec33-4ac8-8bc7-89ab560c83ba",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c373515-826a-474d-a158-a01eddbabb9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e861960-05ca-4d3d-bccf-a5cdf887d920"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3755e72d-3b3b-4154-9445-51fe5b0a4b7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b3ca8b3-cb35-4214-acec-530c1f5356b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c271ab5c-9915-4f9d-9cbb-8c95650f3f84",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4babc0a-db83-44e9-9399-b9351791ec2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "646aab52-27b4-43b5-ba35-f5ff84a381ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a69d22-415a-4e9b-b8c1-c28d7a31e8d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b86c818c-f03b-44ee-96c1-7df8a4043cb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66b09f8a-e715-4cb8-aa2a-bbd2f98ed3ea",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62df038d-b548-4d5a-84b5-6283b52b5a4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aae14318-756a-49c3-9811-ccdb434a4215"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "261f7543-ab80-42ad-99c4-b34d47010411",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a24ea28c-c917-4087-afcd-d75c4c9a7135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd71a838-085a-4455-a52f-7ba124a91f5b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d8ba492-d4b8-4451-a4a0-da3390468ef7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00f6b51f-652d-4149-b817-b017c160abd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "283f6393-f969-4214-8800-cb55c42d727d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1fb5b01-d77c-44b1-95a3-37f6b37f18c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eb62156-aa75-4e0c-98bc-eb7d8fdf9127",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84001c84-3ef6-4e51-8fb0-2d4f63c34c89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc3fb9ec-75d0-4667-a626-cefc985fd5cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d4e2a6-1548-46e3-a08a-313abf3bb694",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e721af4-9db0-455f-a861-8bb2eb0c9b57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad4ef87-aa5c-4437-adff-2d7288fefda2",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14219a98-6780-4971-b2a6-4abee09a40b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac140675-c858-415f-9bfe-0e1d908b043d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8e20e02-0486-4b2b-8475-172ca44dfcf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94909615-6ae8-4502-a325-6046c2ca47a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ba9be76-60a8-4ca4-b0d3-d1706cb541c8",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac0cb07f-0914-4546-9bd7-f4886ec90d64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1102b6ee-446e-46bb-888f-309a87543922"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a7ac0b-ecfe-48ff-b0cd-611b891dfd69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "508501d6-dd61-4d5a-8bf8-2fdeb3f9dbae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41fec0f9-65f3-4da8-a06a-e85ffc43606e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dad94d2-7f0d-420e-9b95-4db48085bced",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8641e5e8-d371-4ad5-a6d0-4a812e140fd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a14138-ec22-4c93-8748-eeb2334f6e9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad4fe6b4-bf67-46ff-833a-97a00b6e8ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c1fbe4-ee60-4691-9388-b150caf7c806",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ead75c-6a5f-4d7a-89a5-0c73d614ef2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7597bb2d-89c4-402f-8423-84d11d65178b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc4cbb4f-59a4-4808-a6e1-e924d288741f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "295a4809-1dd3-4a69-9014-1b6610d55eb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "352570ff-01dc-4417-86dc-a296f2f2d46b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7a182f5-6073-4ee0-9e9b-72500900883e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c776d9ad-d6d2-47b3-9eed-91d158eae76b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cfed465-9375-4a1e-b17b-1895aca4042c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c81e300-7eb8-4f5b-8998-7e6a8203581a"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0711a59-bd85-4691-83dc-589958f1eeab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "706efa5f-f8dc-4c7c-a582-89efc089b665"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ecc2e492-7d2e-4a91-9546-e681d785a5ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a8fda827-515b-4d18-8d54-cb81621d823e"
                    }
                  }
                ]
              },
              {
                "id": "bc1d6b8f-6f94-4c36-a765-4464e62d947c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "de314b1d-1aae-46a5-ba63-50b077f32375",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aaffc3a-2f00-42c3-87f0-213744b5b6fa",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8c5cd9a2-f179-4076-baf0-ef91f330be1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd94567-ff7f-42ba-a1bb-10be14a0da36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d117b988-c0e7-40da-a921-b2f40da22162"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0945d26d-dca5-484b-bc63-0f3ee9ee6051",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ab486e41-4bf7-479e-bfa4-c5c2239d2072"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1eaa5523-2c9c-4314-81e8-9c30d917121a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1024f6f3-bdd1-47f4-bcc7-966aaca03fbd"
                    }
                  }
                ]
              },
              {
                "id": "56a6b3f0-ff77-4eb5-82bb-95b637ffdec5",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "762dd218-0c77-4cfc-9f0c-db60d480420b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38072f0e-566f-4f99-a5d2-de7438eff18f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b48e524f-f2de-4a4d-8b93-018ec4a63cd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "617c4442-727c-47d7-83c4-e695d7a2a0e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e3faae9-cd15-43e3-a9ba-7e4bbd55c2b0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "41550067-60fd-462e-99d0-a47ce50341d3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "77544050-efa5-4448-82b5-b1860082057a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e96ccb6c-180e-45f8-9921-477e96df84a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "32d7a27f-bcee-41bb-8198-3295a3b6faad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "15486d78-d617-4f64-beb0-c7fae1a3c2a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a43f739-010f-4efc-aa9b-955a42d060c7"
                    }
                  }
                ]
              },
              {
                "id": "b5eeec8a-c3de-438a-9f34-7f8bf4707272",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "46dc45f9-f6ca-4cdb-9b24-586852e48d03",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "18e65ebc-2162-4bd4-8fac-16fce8cb582d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e68c0afc-1cb6-465a-9add-3d7141dc5a81",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "936df219-0020-446d-ad2e-8ccbcd6479fc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1584acfa-2486-432d-8b0b-4a8410d89e5b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "30d0803d-94a7-4147-a4a9-93c10e0f6044"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "78fec632-f981-412c-b9d8-84cceb352f03",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5fc1aa1b-e538-41ab-b795-445bdf880ef3"
            }
          }
        ]
      },
      {
        "id": "bd98cab9-660e-474e-a948-9b66a4e65d74",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "32f705ef-5244-4d47-84dc-6b4c5a591f32",
            "name": "Negative Testing",
            "item": [
              {
                "id": "260e1bfa-9113-4dff-9f55-8c97e2d5f542",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "607eaae5-2c87-497a-b9c9-143a9dfd2399",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78872f02-c558-41fe-b838-65169cc85a7e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "761f0d1e-a747-495e-a991-59ef6c733edc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a9b205-e70a-4bbb-8d4c-6eb41d7cd3a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a14d5141-8830-4bee-9704-dbc9d247a9a6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b05141c5-41c8-4740-81e4-3de3472a2dc4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "abfd5291-bf9f-4ef1-9082-d8869513c7da"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f59f054e-62cd-4353-a50e-3c34d73f962f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a82d2009-028a-4770-87f9-0d39911e75ba"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "25c2ad89-f556-43ad-a160-1834bbc2f457",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "77eee3f6-ef7f-4454-9726-1c3d30644899"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cb442642-9b67-49be-b7dc-df62e5429e1c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d3091def-4520-413e-99f8-c5198e9c4e58"
            }
          }
        ]
      },
      {
        "id": "22d17fbc-8ca2-4e8d-843d-aa902ebadf6b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d78f0c15-eecd-4ac3-aa16-918f3e21b8cd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bcf0ea9b-093d-441a-bcc3-777b62e3c07b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "73973a9a-e17c-42f4-a4d4-61d2076d4aa9",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f180c7-c9b0-46bf-bdfa-a59d187daa40",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2befbc25-e03a-4e97-abf4-e699846a355f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c4cd37c-7f7f-4496-8402-78f3e3734b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b92660b-6dff-4a5d-8415-8906547b79e5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "51ff1c3d-cfda-4927-a78f-86f72b90e3b2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "89c24eae-59ea-4457-974d-4de6a7ae65bf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "98217ca4-9b83-4868-bf40-db26b58fc8fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "02945b39-bffe-4d64-bd2b-c363a8683fd4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "43007156-9c6d-43a3-be3d-6a73b0c971bb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "786a53a6-b161-4885-a620-6e4719666eb3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "954f67ea-eb22-4125-9c45-c8cc974fb661",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b9c859f5-4258-423d-ace4-53252530c939"
            }
          }
        ]
      },
      {
        "id": "2f07da05-a2a8-4a81-9fd5-2a5e057a8dd6",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "785b204b-c852-4710-a058-3bf3004fd26d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "86831b2a-0e6a-48d9-ab33-21f8457752e9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bbdf22b7-78b4-4b06-be08-8c4bb2e8c30b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ecf12d-2bed-4477-8bbb-6001b6facf62",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "afa6b394-0b01-4020-a557-b50fe58b4b21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78ec2da8-f929-4973-9385-390131a809c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9fc9798d-25f1-4908-8780-28ac3da116b6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "97478058-d3a9-476c-b64a-8be5aa4e0787",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ec08c1b-6df2-4396-9225-48fd887bd7e1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "94aa6da7-a084-4e5b-b6bd-4e8c87c32d8d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "879cb873-7ed0-4fba-9a21-9a0e7bd42111"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ce94cd8d-3202-4269-bd6e-dcb4d7bde8b2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "53e04887-9be0-4976-8497-279ec5f4b8db"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "caac1569-9b1d-4f71-a559-047b425e2e04",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "96f810bc-7aa5-4e40-8183-65cf5dd3c045"
            }
          }
        ]
      },
      {
        "id": "b34f5a35-8520-43a8-b681-589624136b1d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3011e843-a476-48e0-a74b-2d7de32041aa",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bb6b257b-b33d-4d07-ba3d-38444a7c60f5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "6e9b76d5-8a64-4d81-8c8f-a6809a50488f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "64e3ccdb-7ad4-48e1-b19b-a67fb4591c6d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7389c7cd-4839-47d7-a3a3-02099c3addf5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 7
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 251,
        "pending": 0,
        "failed": 4
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 35
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 7
      }
    },
    "timings": {
      "responseAverage": 132.70564516129033,
      "responseMin": 7,
      "responseMax": 3082,
      "responseSd": 366.97628643666036,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1716424595251,
      "completed": 1716424636262
    },
    "executions": [
      {
        "id": "9d5450f2-926c-46db-89bc-d60834bda108",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9e5b07bc-d246-4846-89c3-4ee67692e7b8",
          "httpRequestId": "9333f26d-e3d7-478d-a706-018fbd69421e"
        },
        "item": {
          "id": "9d5450f2-926c-46db-89bc-d60834bda108",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d66d3dc8-3a95-4557-b2c2-b53fedc68d09",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 0
        }
      },
      {
        "id": "2eb82afd-e7a3-4082-ba6a-e763410155a4",
        "cursor": {
          "ref": "02fafdde-cea1-4f39-9fbb-9edea795a81d",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f8e32fcf-acc5-490a-b34e-8c0282ac8b1e"
        },
        "item": {
          "id": "2eb82afd-e7a3-4082-ba6a-e763410155a4",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ba8fec29-ee62-4c8c-b185-4bc2df59283e",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "48a1c906-b195-4261-9df7-433bd9c90ca9",
        "cursor": {
          "ref": "9fc22d7a-29be-439e-babe-e435df043ccd",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "3ba805d6-b2a8-4db2-b770-808e2adc319a"
        },
        "item": {
          "id": "48a1c906-b195-4261-9df7-433bd9c90ca9",
          "name": "did_json"
        },
        "response": {},
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:3)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token u in JSON at position 0",
              "stack": "JSONError: Unexpected token u in JSON at position 0\n   at Object.eval sandbox-script.js:2:3)"
            }
          }
        ]
      },
      {
        "id": "c94b6a88-7f35-4585-9987-164910ba2b2c",
        "cursor": {
          "ref": "abed78f1-dea0-4f5a-b2ce-c4b032a81920",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e2da5850-6bd1-46aa-92a5-21b645cb223c"
        },
        "item": {
          "id": "c94b6a88-7f35-4585-9987-164910ba2b2c",
          "name": "did:invalid"
        },
        "response": {
          "id": "707d83a8-d70e-4c45-83db-6d20a378c72f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2022,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c94b6a88-7f35-4585-9987-164910ba2b2c",
        "cursor": {
          "ref": "abed78f1-dea0-4f5a-b2ce-c4b032a81920",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e2da5850-6bd1-46aa-92a5-21b645cb223c"
        },
        "item": {
          "id": "c94b6a88-7f35-4585-9987-164910ba2b2c",
          "name": "did:invalid"
        },
        "response": {
          "id": "707d83a8-d70e-4c45-83db-6d20a378c72f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2022,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5e6dec5-99b1-4cba-83bb-01f2575f465c",
        "cursor": {
          "ref": "299fe633-91ea-4bbe-81c1-5624f9cb382c",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "3179c455-c877-4dbf-b725-873aacd1945d"
        },
        "item": {
          "id": "f5e6dec5-99b1-4cba-83bb-01f2575f465c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "45928f9e-87ce-4bd8-bfa5-84ba8315c697",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2582,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eeee353-963f-478b-bbb8-b9f5607cbace",
        "cursor": {
          "ref": "c0ac327a-b474-48f6-810e-bafd9e56755f",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "62d21eab-0f5a-4459-9153-fbb469644833"
        },
        "item": {
          "id": "3eeee353-963f-478b-bbb8-b9f5607cbace",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "0116f7f2-fa9a-41f0-86b8-ad21acb4e6cc",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2347,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "740f0fb5-bc9a-4827-b404-5d194896b890",
        "cursor": {
          "ref": "0dadafac-c701-4985-9f2d-f39cb3ae40d9",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "759ecc16-d34b-4a8c-86ca-54d6bccd7079"
        },
        "item": {
          "id": "740f0fb5-bc9a-4827-b404-5d194896b890",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "2f383688-c0a5-408e-854c-b947becafd94",
          "status": "Not Found",
          "code": 404,
          "responseTime": 240,
          "responseSize": 22
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 404",
              "stack": "AssertionError: expected response to have status code 401 but got 404\n   at Object.eval sandbox-script.js:1:7)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:7)"
            }
          }
        ]
      },
      {
        "id": "f8f8ff05-f23e-4095-a158-8800ffbb8ac0",
        "cursor": {
          "ref": "34a85c20-22cd-444c-86ab-921998235cc2",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5e2b61b0-9d79-4ba9-b026-7e0c66ab1b97"
        },
        "item": {
          "id": "f8f8ff05-f23e-4095-a158-8800ffbb8ac0",
          "name": "identifiers"
        },
        "response": {
          "id": "4e9836c3-effe-46fe-bf69-834027479190",
          "status": "Not Found",
          "code": 404,
          "responseTime": 73,
          "responseSize": 22
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 404",
              "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:8)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'didDocument'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'didDocument'\n   at Object.eval sandbox-script.js:2:8)"
            }
          }
        ]
      },
      {
        "id": "0431022b-5ab0-4cf3-866f-00f3374cf743",
        "cursor": {
          "ref": "b4989721-5ab4-4e94-847f-3241500debfd",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3344c8d4-5c02-4ed5-8760-7f65016d3f76"
        },
        "item": {
          "id": "0431022b-5ab0-4cf3-866f-00f3374cf743",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3b67fb8e-88fa-4d41-8ec4-4ac3e1975135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dde6099-2644-4e0a-b376-df5edfdcc188",
        "cursor": {
          "ref": "3da6dea0-7f38-449c-b722-2eeef1cd3371",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "cb0cf5af-d3ab-4c76-84c1-16cd542ca93b"
        },
        "item": {
          "id": "9dde6099-2644-4e0a-b376-df5edfdcc188",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "2ddfd59d-0bf6-41ad-bf12-0c2383dbb2fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26bcb446-1248-4c38-8149-70527ba63fdd",
        "cursor": {
          "ref": "82fab617-1b6f-4057-a7a1-e58f0ce05b98",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "087edeba-a3fc-42dc-8c65-a902d64b384c"
        },
        "item": {
          "id": "26bcb446-1248-4c38-8149-70527ba63fdd",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ddde3401-f96f-4dd6-8d5b-f4c7125f9143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c9165ea-9492-4e9a-acf1-cf92be781236",
        "cursor": {
          "ref": "a1d0d77f-4938-448e-bfa7-fa6d2c571135",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "7249ce54-258a-4eaf-8362-166203cd3bfb"
        },
        "item": {
          "id": "6c9165ea-9492-4e9a-acf1-cf92be781236",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "df1c92f7-34c5-40da-937c-592d1bac77d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e94ea18-f274-401b-b266-475af801c366",
        "cursor": {
          "ref": "24b70343-dfc1-4ff7-b1a0-9099781d0f5c",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2dc9365e-f236-4e53-a097-784fc25de77c"
        },
        "item": {
          "id": "7e94ea18-f274-401b-b266-475af801c366",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c5b50c47-340c-448b-a88b-afeec282cf98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de9c60e-bbde-45b6-bb11-2db704840cc4",
        "cursor": {
          "ref": "0066be4f-abfb-4511-80a7-5a6ae07ff6b2",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e338b39e-c436-42b8-a72c-6f2b38ce2328"
        },
        "item": {
          "id": "0de9c60e-bbde-45b6-bb11-2db704840cc4",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "6727bbf8-d1d9-4c47-86d3-897ffe7a5f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e089f41f-9e11-4d18-9c8e-0b3874243383",
        "cursor": {
          "ref": "dbf35717-6943-4371-aefa-c7f751971345",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "0f060934-4a6a-4b95-9a4d-e33e53fe81af"
        },
        "item": {
          "id": "e089f41f-9e11-4d18-9c8e-0b3874243383",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "bc7c0f3f-1343-49e7-9b1f-b610a733a6ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d706d07-40b8-4647-8df3-f88fa64beb98",
        "cursor": {
          "ref": "902fddda-36a9-4842-9fe6-1c089552d839",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "124863d8-9bd8-417e-b97f-97bcd2196aab"
        },
        "item": {
          "id": "3d706d07-40b8-4647-8df3-f88fa64beb98",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f593c70b-96ea-4334-a525-bf5190a81b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e6aa96-98d8-4d55-a82a-de2c2c20441b",
        "cursor": {
          "ref": "e29f2171-9445-4215-b764-089b75869485",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "2bfd2c00-37c5-40a1-a372-088e8168fe4b"
        },
        "item": {
          "id": "17e6aa96-98d8-4d55-a82a-de2c2c20441b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "db4598fc-4b2f-430c-b437-21e04832f9c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "609c4d3c-2e0e-4f05-9e11-94786072a804",
        "cursor": {
          "ref": "a62015d2-832e-4a38-86c1-e9f09f8569ee",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "218b8c7f-b85e-4edf-9391-49f90e2c62ed"
        },
        "item": {
          "id": "609c4d3c-2e0e-4f05-9e11-94786072a804",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "0b01832f-3657-4269-8a79-51ba844f2848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2688f62-3a92-4cc0-959a-675616f62b7f",
        "cursor": {
          "ref": "c2ea0014-7a08-43b5-8601-1a27267b76a5",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b24b5d57-93b5-4179-8612-f41f2ab75589"
        },
        "item": {
          "id": "f2688f62-3a92-4cc0-959a-675616f62b7f",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e95c841d-95d7-4304-9e1e-38f39533998d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b26846a2-7042-4aba-af22-3c5855f017ab",
        "cursor": {
          "ref": "ef50ef99-c617-4978-a958-652fa184d4a0",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "27697c6c-a854-4e4f-b4d3-5e1b2f1d0489"
        },
        "item": {
          "id": "b26846a2-7042-4aba-af22-3c5855f017ab",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "45a58523-cfc2-4281-92b3-293dc0beaa77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd31be3-5972-4e36-856e-c26842d80995",
        "cursor": {
          "ref": "c4ed2c7f-cfca-459d-950b-c392f2073364",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "2801d196-5288-433e-94a5-d4abd9aece0b"
        },
        "item": {
          "id": "cbd31be3-5972-4e36-856e-c26842d80995",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c627bbb2-54e7-4131-8075-ceecc9aa820b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd53a08-39cd-4390-862b-f82057122242",
        "cursor": {
          "ref": "adcb474e-8fef-4b73-af2b-8b6cdfc6dbde",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "438f2b26-5cd9-4627-8290-b21674cb589c"
        },
        "item": {
          "id": "4cd53a08-39cd-4390-862b-f82057122242",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "d2f6ab0c-31fb-412b-a262-65bb47a75a53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c61119-b4cc-4bca-bedd-48ef2b486fa4",
        "cursor": {
          "ref": "71dad2c0-5e17-45f7-8ede-198f9cf64dc0",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "3d91e934-8559-454d-9337-d67e5df1c01e"
        },
        "item": {
          "id": "f5c61119-b4cc-4bca-bedd-48ef2b486fa4",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "81a9c866-1856-4dfd-a6c4-16cd346e63f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3434bd31-6951-4450-a679-392479826df4",
        "cursor": {
          "ref": "468b9e15-b528-476b-b34a-795e19a1bad8",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "0dd94fef-3e40-41ea-8f31-96ca9091b4cf"
        },
        "item": {
          "id": "3434bd31-6951-4450-a679-392479826df4",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "00d233bf-f7bc-4942-b79e-372618fa2fe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e66dff9-b461-41ff-8404-ad704430f146",
        "cursor": {
          "ref": "05310e36-16f3-456b-9370-4cff72d22abc",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "44e650a9-3ac3-481b-8164-109148a62153"
        },
        "item": {
          "id": "2e66dff9-b461-41ff-8404-ad704430f146",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "eeb92832-9621-477b-b5f1-d5643a945912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3b20359-686e-46ab-92f8-747b38c3ffcf",
        "cursor": {
          "ref": "eae79e8c-b071-4a89-9058-275d64321706",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "ae028d1d-67bd-48a4-bb47-339973cb9308"
        },
        "item": {
          "id": "c3b20359-686e-46ab-92f8-747b38c3ffcf",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "52a2df9d-6e3e-4cc6-9745-1cd6e616fc6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfaa8bdb-dac7-4c9e-bc55-857b24628c0b",
        "cursor": {
          "ref": "4429b035-6de5-43b8-b11d-974244837a39",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "77f5e17c-949e-4847-97c8-7f02d5118d7b"
        },
        "item": {
          "id": "bfaa8bdb-dac7-4c9e-bc55-857b24628c0b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "822a4aef-a6e9-40cc-86a9-cab0150a6e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f0f925-0550-4be5-8de2-e248c6ec3658",
        "cursor": {
          "ref": "21f06618-2ce6-46fc-b4d4-726fe71a7968",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "3f118579-deee-42b9-a69a-07d469ef5c99"
        },
        "item": {
          "id": "d9f0f925-0550-4be5-8de2-e248c6ec3658",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ff3c3453-4b74-4ee7-bd21-350a66dcc839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae7c2c3-c840-4063-837b-7bf1e0b3c288",
        "cursor": {
          "ref": "8e4405ff-9ba0-4f52-93f2-d44e611813f5",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "3e204d50-8dea-442e-8145-363bd649073e"
        },
        "item": {
          "id": "bae7c2c3-c840-4063-837b-7bf1e0b3c288",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f52fc948-805b-4735-bd47-057032467825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d93b70-cbbc-43f8-96ea-9cdfa3982053",
        "cursor": {
          "ref": "acaabce0-e86c-4035-ab39-ef529abece4c",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "c4aa8c25-0198-4160-b627-83972c6d9753"
        },
        "item": {
          "id": "92d93b70-cbbc-43f8-96ea-9cdfa3982053",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c8acc7a2-8cfd-4a82-b9c2-0d7ec37d3c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d05736-21c0-4aea-bcba-bdf3e3ec923a",
        "cursor": {
          "ref": "f0912c7b-7634-40ea-ae98-fb0bb988ba53",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "88acd8b4-90a5-4771-a357-3091aa9f8dfd"
        },
        "item": {
          "id": "f9d05736-21c0-4aea-bcba-bdf3e3ec923a",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "8105b43c-fbb8-4fe1-9da1-65451eaf853e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a05d01-0948-41a2-9e4c-413c29fc39f9",
        "cursor": {
          "ref": "abedec3c-6123-4c2e-9159-f0ae6e686c2e",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7ae40f09-6564-477c-81b9-c9a2da3173e4"
        },
        "item": {
          "id": "b9a05d01-0948-41a2-9e4c-413c29fc39f9",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "81835b29-2546-460c-be62-48bc86dea101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef215295-8b02-4418-8f3b-a30500901d13",
        "cursor": {
          "ref": "ffaa21bb-95ec-4189-b999-ae701fb58f39",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ff5da9f0-6933-4e65-8658-0fa6e37c26c7"
        },
        "item": {
          "id": "ef215295-8b02-4418-8f3b-a30500901d13",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "6b2cca89-6bc0-4a49-a4f8-1392bc311bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "366fc7e9-09c0-4c8e-8e3c-c3d139c31e2a",
        "cursor": {
          "ref": "e7456f94-f226-4de7-b868-1e47af179023",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "230c6dd2-54cd-49b8-a865-44434e38db46"
        },
        "item": {
          "id": "366fc7e9-09c0-4c8e-8e3c-c3d139c31e2a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "40b78120-1656-4276-b473-91d56a589ae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e91d6740-2a5f-4d21-a846-e6162c67bacc",
        "cursor": {
          "ref": "2ce46280-774c-48e0-a1c5-3016495ff139",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d51413ee-ff66-49c8-983f-d6231b0ea7c1"
        },
        "item": {
          "id": "e91d6740-2a5f-4d21-a846-e6162c67bacc",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "d2cc0214-aff6-4136-a815-a76e1db1c9be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c29a4d-9919-4e1f-8d63-42605ece6ffa",
        "cursor": {
          "ref": "09310e5c-fe26-44f8-b9fc-2a9b9e4a451a",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f62341d2-b884-4e46-a372-fc97bfac7e70"
        },
        "item": {
          "id": "a5c29a4d-9919-4e1f-8d63-42605ece6ffa",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b88b17ba-c903-4346-a6c4-0fd564dc989c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59bb15db-b866-420c-adf0-4843fce06039",
        "cursor": {
          "ref": "6637b7e4-15ee-4c92-a66a-0154e46c3e42",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "3f77de67-767d-4b52-a694-f7d865b85d19"
        },
        "item": {
          "id": "59bb15db-b866-420c-adf0-4843fce06039",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "5af33cdb-29e8-4cd2-9a3f-a4f6fac8a55f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1333fe5b-42cc-4aee-bbf8-1abc05594c1c",
        "cursor": {
          "ref": "c99ccf9d-f381-4f97-91b0-20cc02b4f50c",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "01b28d56-383e-4181-bac6-92467a0f5a55"
        },
        "item": {
          "id": "1333fe5b-42cc-4aee-bbf8-1abc05594c1c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "39de0203-4a1e-4b52-9282-dfc8a19a5c2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abcc5aad-50aa-4cf7-8da5-f95a097c0c68",
        "cursor": {
          "ref": "7993eb46-a650-4213-bba1-b670c75c7cd6",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "fd90861f-5983-4c3f-9e7f-44a2f586cd9f"
        },
        "item": {
          "id": "abcc5aad-50aa-4cf7-8da5-f95a097c0c68",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "06ce4a1b-eece-4c1d-b8af-22be87cbeb9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a416f9-1a4d-4a72-b8a6-e0d337c562c2",
        "cursor": {
          "ref": "a8e2bbc1-1979-46e0-bc99-c6e397b51bdb",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b2c29e65-4f4b-4cc4-a535-f2a802e519d0"
        },
        "item": {
          "id": "e0a416f9-1a4d-4a72-b8a6-e0d337c562c2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "42d58043-7dbf-4b48-af23-13765a79207e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77614960-8222-40a1-a68c-f082ab59004f",
        "cursor": {
          "ref": "356b3df1-fa93-4522-a785-3bdef2377daa",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "7a0c73bf-c67e-4d0e-8ccb-88ea98df1be6"
        },
        "item": {
          "id": "77614960-8222-40a1-a68c-f082ab59004f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "4cff0ccd-2c56-45b9-9496-0ce3ad990bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4412ba6-03a3-4fd0-b3fe-9331726519c8",
        "cursor": {
          "ref": "9a3b3268-b2ef-4940-a9b9-cb4a18ec649a",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "132c19b5-5c55-4a56-92f6-02be947eca6c"
        },
        "item": {
          "id": "d4412ba6-03a3-4fd0-b3fe-9331726519c8",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "5282a1a0-654a-43d2-96e3-ee5b8db32434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8158f7-7bd3-4dfc-967b-e7042f564b3c",
        "cursor": {
          "ref": "524ba93a-8dec-480e-8412-5fb9ff7e1a2e",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "81724202-16cf-437c-92bc-542513dcd411"
        },
        "item": {
          "id": "af8158f7-7bd3-4dfc-967b-e7042f564b3c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "29810a6e-ec8d-4003-89b8-0dcc54fff358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e94b159-0f7d-4b79-9713-96b7bb5a3808",
        "cursor": {
          "ref": "5081b2d4-e641-475f-b39b-325caa4bc32b",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "8baf84aa-bd49-4687-a637-ec5d264a70c5"
        },
        "item": {
          "id": "8e94b159-0f7d-4b79-9713-96b7bb5a3808",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "dc067ef1-737f-4e14-add0-f2fca66532e4",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53caa38e-065b-4b10-9df2-ea1f47f2c8b1",
        "cursor": {
          "ref": "3873f9c6-cedb-493a-8852-c5afc1f5c9f9",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "7f1f0f8e-fcf2-4f81-a767-8bb1c4404aa1"
        },
        "item": {
          "id": "53caa38e-065b-4b10-9df2-ea1f47f2c8b1",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "1d9df8f9-1f18-412b-94ba-17447370e538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "623b8e57-01a4-4ddf-be8e-09cd41820966",
        "cursor": {
          "ref": "1a29829c-5ace-4541-9714-1b9e5948d044",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "22b943fe-f33c-4e37-a82f-3dd5bdab4950"
        },
        "item": {
          "id": "623b8e57-01a4-4ddf-be8e-09cd41820966",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "a5e261da-468e-4be8-9876-d05edc99b5f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ce2e90-e45e-4f32-adf1-c262874ff603",
        "cursor": {
          "ref": "91b527b1-cea4-4e34-ab71-6e2c967e12a7",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "7c880970-22fe-4a60-8cb5-ab7b771f5c5c"
        },
        "item": {
          "id": "07ce2e90-e45e-4f32-adf1-c262874ff603",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "2625db4a-a881-479c-9893-755821bcc592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01333686-f565-4544-82b4-2b7f1bc8dff6",
        "cursor": {
          "ref": "a499d8c1-d7c3-4284-a6a6-a07102089499",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c8f9b94c-b158-423e-bd59-352eff2567b7"
        },
        "item": {
          "id": "01333686-f565-4544-82b4-2b7f1bc8dff6",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d4e8bbf6-8519-4a41-b11d-d465b7682235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "932304b9-5344-4dc1-86a0-efe66fba9f1c",
        "cursor": {
          "ref": "bdfbae70-1657-4e3f-bf01-07e47b7b771f",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "40e83184-7751-4bc4-855f-3a2611806620"
        },
        "item": {
          "id": "932304b9-5344-4dc1-86a0-efe66fba9f1c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "6f081f63-b591-4c06-bfbf-ef3f63356b78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf3b221-3a30-45cd-aa4b-de97664b4656",
        "cursor": {
          "ref": "1c6774bd-2dff-47ed-8fbf-24bb5d53e5a4",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3881480f-3c60-4d1e-a346-91e3eb6b23e5"
        },
        "item": {
          "id": "adf3b221-3a30-45cd-aa4b-de97664b4656",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "9985d71a-001b-4733-a30b-ea4d7a9cacb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c64536-874d-432c-80f1-55a364985e93",
        "cursor": {
          "ref": "75a91e03-fb2d-4726-972a-dee3c54ad7f8",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "0aa3d33d-5edb-400c-84bf-89ebdcd56906"
        },
        "item": {
          "id": "14c64536-874d-432c-80f1-55a364985e93",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "3b8d2945-9d35-40a9-bbd6-7ff36562c3eb",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc2c57fc-8c81-4d96-8362-08d78947f917",
        "cursor": {
          "ref": "319ecd75-8ce7-460c-838a-c895f1b38b69",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e7e74841-aa64-42e3-9057-cad66729631d"
        },
        "item": {
          "id": "dc2c57fc-8c81-4d96-8362-08d78947f917",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "14f2bb4e-627c-4a49-87b0-49add61bb7b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5dd41bc-d55f-49b8-8e5b-c37aebb1663f",
        "cursor": {
          "ref": "5ebd1fda-1cbd-4e32-bf3f-0abf0e768c27",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "639872d2-a38f-4e5e-9b0e-ce10361977f3"
        },
        "item": {
          "id": "d5dd41bc-d55f-49b8-8e5b-c37aebb1663f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "6da4ec9a-8e9a-4328-bb1e-b4e61e3e952f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1bbc9bd-9bff-4eae-b5db-3864ade498da",
        "cursor": {
          "ref": "e12bd390-b83a-48f7-a9e2-51216bcdfe7a",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "4988b567-42f7-4cab-b6d5-449b094058f6"
        },
        "item": {
          "id": "a1bbc9bd-9bff-4eae-b5db-3864ade498da",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "5de3b20f-2f67-42c6-9e84-4cd3e456b1ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a392d6-acab-4653-a53e-148e0596ea56",
        "cursor": {
          "ref": "841fd784-1346-4a01-8f08-3bc41bc4abf7",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "557c86f3-26c6-4437-bdaa-42a2c2c42596"
        },
        "item": {
          "id": "19a392d6-acab-4653-a53e-148e0596ea56",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "78bcfc4e-1f64-401e-9913-e8dbd3a8a47c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4836d377-be8d-474e-ae23-5c87ade7e0a7",
        "cursor": {
          "ref": "8de1d9c7-94f6-4724-b681-3d602937be0c",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "058fd53c-8cdb-42ef-9a33-f8971dbedebd"
        },
        "item": {
          "id": "4836d377-be8d-474e-ae23-5c87ade7e0a7",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "0a98a3fc-4116-4b20-ae74-fc55fe7bbb0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cc7dbb0-b300-4514-b74b-40e5e8bd5414",
        "cursor": {
          "ref": "b928c523-a983-4ef3-bcfa-969e95ef27d0",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "0887356e-9905-417e-bd6c-a4a0f40fd52d"
        },
        "item": {
          "id": "0cc7dbb0-b300-4514-b74b-40e5e8bd5414",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "9e74fc42-2900-4fbb-9a29-2c7456c7a5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "269812dc-5901-4a1c-a7e2-76e12cec0fea",
        "cursor": {
          "ref": "c290aa10-d520-4fa9-a5b9-22152964a738",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "46b8faf5-7de7-4b08-b966-06dfd35412cf"
        },
        "item": {
          "id": "269812dc-5901-4a1c-a7e2-76e12cec0fea",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "16cd19e5-5bae-421b-b6ee-4b88a8c73ad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96575cc9-ac22-4946-87e8-cb5f63706630",
        "cursor": {
          "ref": "a6c489af-e9d0-47cf-a3a0-4ca10933c606",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5b379a45-86f2-4472-a5e3-2eb2d58e375e"
        },
        "item": {
          "id": "96575cc9-ac22-4946-87e8-cb5f63706630",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a238fa6a-312a-4722-b348-a4a22eb7b820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee74d81-5469-4a8a-b007-2237b61946dd",
        "cursor": {
          "ref": "775165b6-36db-4156-8fef-8d1d74626935",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "60bf557e-6ad3-44bf-8c97-e923c3f2adf0"
        },
        "item": {
          "id": "9ee74d81-5469-4a8a-b007-2237b61946dd",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "13e474e1-69ca-4287-a699-232e0defe669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20dd78a2-0a23-4931-a760-3492ad92db28",
        "cursor": {
          "ref": "d6f9937f-debd-4c40-83a1-96dda476a8f3",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "fb28ceed-8875-4230-9baf-89bce221f5d6"
        },
        "item": {
          "id": "20dd78a2-0a23-4931-a760-3492ad92db28",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "586b94a1-f186-4a92-9bbe-e0f8082fdd30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "babacff0-cd6e-4531-bfde-d72c468977ca",
        "cursor": {
          "ref": "1373247a-891f-4482-85eb-ed845aa9db56",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "cb68e9d9-07f4-4f98-87f9-e6c06a32516e"
        },
        "item": {
          "id": "babacff0-cd6e-4531-bfde-d72c468977ca",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b9d1ac72-deca-46c6-83cc-0daa223b3531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b84eb0b4-abd1-4a02-8583-4cadc70998fe",
        "cursor": {
          "ref": "67961935-7d24-47b7-8a99-e1bdb213ebeb",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "0a398036-0f34-4451-bd82-f95242addafd"
        },
        "item": {
          "id": "b84eb0b4-abd1-4a02-8583-4cadc70998fe",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "00d08ba1-9a68-46e1-9418-ff593eadea3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c39509-627a-476a-a225-ef2717ad0369",
        "cursor": {
          "ref": "a2c67c71-b0dd-4b72-b87c-06b60f697c86",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "75b6ed56-53e5-49a1-bf66-9bc42de12037"
        },
        "item": {
          "id": "93c39509-627a-476a-a225-ef2717ad0369",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8caeee40-3e61-4d8e-b085-568cf8543326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc95ed4-f2d9-4bba-af99-65905a5468ab",
        "cursor": {
          "ref": "6881b139-ec15-4f59-935d-561b302057c7",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a82bc7ad-08a8-416c-a9c8-eab550f1e361"
        },
        "item": {
          "id": "7bc95ed4-f2d9-4bba-af99-65905a5468ab",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a2f1da61-b491-4d99-99fa-cc5838da42f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5fba91f-5dbc-4b2c-b7ea-2c89bf3f36b3",
        "cursor": {
          "ref": "499067c1-6da3-4b37-aa9a-b7294d4b395f",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "89db15d1-0fec-40ef-99a1-73f67fe26fcc"
        },
        "item": {
          "id": "a5fba91f-5dbc-4b2c-b7ea-2c89bf3f36b3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b4dbf89b-68ca-4d90-82a5-03c699a7d6fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c8815a-6914-40f8-9150-cd87f4499c13",
        "cursor": {
          "ref": "2fde1318-2c68-440d-8f91-74d376494bc8",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "963de8fc-424e-41e3-9e42-f83810c57e1f"
        },
        "item": {
          "id": "61c8815a-6914-40f8-9150-cd87f4499c13",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f37ae4ce-f360-43dd-b828-f059ddb8d53e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c3e3208-8c0a-46bc-955f-f89af06bfd77",
        "cursor": {
          "ref": "54102121-1f00-4409-8085-4240521c0235",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "7c445e6b-4d80-41a9-a11f-9377c94badec"
        },
        "item": {
          "id": "4c3e3208-8c0a-46bc-955f-f89af06bfd77",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "fa96529a-549c-44e9-8b07-6b77d72488b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19db7950-c050-45bb-8d82-9207189ae51e",
        "cursor": {
          "ref": "d037bca3-f155-4ecf-82e6-1ee49b419821",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "35caa5c4-4075-4481-b8b2-096e956e6928"
        },
        "item": {
          "id": "19db7950-c050-45bb-8d82-9207189ae51e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "1dd4f1bb-dd94-4181-ad1a-4268f047055a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b422f784-619f-45c7-9776-a287aa633259",
        "cursor": {
          "ref": "8b464421-8b6d-4e26-8352-ab1ff164f5c6",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c3a87454-a4e9-49ab-a346-1bb0b7d06cdf"
        },
        "item": {
          "id": "b422f784-619f-45c7-9776-a287aa633259",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4a158bcf-e1e1-4395-ab4d-90be2c17521f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ca4ebe-b14b-4c95-896f-0c4900b284d1",
        "cursor": {
          "ref": "be838b1d-a475-4a2c-a130-f838ee474286",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f0fedeb1-b1bd-4a0c-9e2e-7e599de6bfce"
        },
        "item": {
          "id": "57ca4ebe-b14b-4c95-896f-0c4900b284d1",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "2a3b9fcb-6c35-4f85-b15b-29d32cce77c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c22e51f-a6c7-4635-be77-e2f4574f0484",
        "cursor": {
          "ref": "e6199a8a-0b47-4314-86e5-c47128998a90",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "cf41aee6-51bc-41ef-ae3a-0e5921bc4f15"
        },
        "item": {
          "id": "0c22e51f-a6c7-4635-be77-e2f4574f0484",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "cb943b96-16cd-4a4f-a4f0-956f050a6c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d77795-2c33-4843-af8c-dafd640ad05e",
        "cursor": {
          "ref": "f3d9eb69-c75d-44da-be81-992f08008534",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "7861d755-5530-4707-9cbe-bf79bf6e7034"
        },
        "item": {
          "id": "21d77795-2c33-4843-af8c-dafd640ad05e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "8412bebd-9e45-49aa-b94a-471197c602ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b061b6b-f8b8-44d2-8b54-b9f2b3a02a91",
        "cursor": {
          "ref": "94098ec6-2812-4be1-bca2-85f0bce210cd",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "68ec916c-faa2-4050-8a0c-4aa0b6976c20"
        },
        "item": {
          "id": "3b061b6b-f8b8-44d2-8b54-b9f2b3a02a91",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "21f6b19b-2216-4541-99ed-cb0ff3d12567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb5082f7-cc89-47e5-bc09-f5bbdd5be5eb",
        "cursor": {
          "ref": "db89fe07-ef61-41b9-b380-41778a4370d5",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b3ece87f-aeaf-4579-b2f6-b09133ca74c9"
        },
        "item": {
          "id": "fb5082f7-cc89-47e5-bc09-f5bbdd5be5eb",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "194016a7-d57c-4097-8ff0-33f8f11c97d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6719f6-f573-4216-9ffa-315ab1d7e8dd",
        "cursor": {
          "ref": "ca02bb7e-e1e9-4834-8e1f-3a22b85de44b",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "aab0daa5-fc17-471a-bc86-9b9737eaa28b"
        },
        "item": {
          "id": "dd6719f6-f573-4216-9ffa-315ab1d7e8dd",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "91de76bd-f3ed-4680-8e83-665714f29809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c60aec2-3b4d-4bbe-9a98-3e13a876d3a0",
        "cursor": {
          "ref": "a9207e16-814f-43f3-9b24-4963bb650c25",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "71ffd6a5-b92d-4efb-b8f8-d5779f5714bb"
        },
        "item": {
          "id": "1c60aec2-3b4d-4bbe-9a98-3e13a876d3a0",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "0a28d0c5-ebdd-474b-9f34-4c2a7e07f0b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "769b03b5-7206-47fc-b08e-cc9d8bdbd495",
        "cursor": {
          "ref": "0a7a5183-6ce5-4a40-ad93-82bfc91138e9",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "f142dfeb-f3c2-46f9-bf53-981560482397"
        },
        "item": {
          "id": "769b03b5-7206-47fc-b08e-cc9d8bdbd495",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "1d764c10-a5bf-4ef3-8fce-e9209d385153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae081eb-6d74-4a13-815c-3cd86b6f5aa6",
        "cursor": {
          "ref": "30730508-7715-4d21-b3d2-43971c12b4da",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "e394d7cb-408e-4d91-befb-3032183a1409"
        },
        "item": {
          "id": "6ae081eb-6d74-4a13-815c-3cd86b6f5aa6",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "8a0ce5b5-b6f5-4f44-aa7e-41508163784b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1665217-2fe4-40a3-bd1e-6c92f9821c78",
        "cursor": {
          "ref": "a0f9b2e8-c98c-419f-bac0-a7e8eac6fc4f",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "51a03cf4-7376-45c9-a080-48452ff17c47"
        },
        "item": {
          "id": "f1665217-2fe4-40a3-bd1e-6c92f9821c78",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "75878d28-5cfe-4c16-bcdb-f819ca65cd91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c535b6e9-a2e4-44f2-9796-2bc3b6f4d57d",
        "cursor": {
          "ref": "b93bd81e-ab64-45f4-b0f9-a8926a6ea1d3",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c85f2ddd-0149-44da-a132-407e9dcd4bf6"
        },
        "item": {
          "id": "c535b6e9-a2e4-44f2-9796-2bc3b6f4d57d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "fc5f1aaa-ae37-46cb-9531-52ee3424367e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47fcdf7c-5bbe-4c25-be0b-8ff5355d974f",
        "cursor": {
          "ref": "8b674207-2344-4fed-9a11-f7928521ebbe",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "8b2c6c36-a7a0-4163-85fa-0aaf1f8fc10f"
        },
        "item": {
          "id": "47fcdf7c-5bbe-4c25-be0b-8ff5355d974f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "3a1c5f58-6663-476f-a249-c55e43728842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35db60b4-a4b1-4ecb-8634-bd153c432782",
        "cursor": {
          "ref": "af4a9378-4f1f-45cc-9fbe-b0e6bc787d10",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "1ecebf5e-113f-4d14-833b-6e9a0c666512"
        },
        "item": {
          "id": "35db60b4-a4b1-4ecb-8634-bd153c432782",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "76928e9a-6101-45cc-b94d-f58cd2d190aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b9a80b-1302-4676-96ad-1e19ab65ff60",
        "cursor": {
          "ref": "85cdd1f9-5aca-40ec-b99f-4f21be409cea",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "973f4228-51e4-4a9a-92d6-a81ca33b1c15"
        },
        "item": {
          "id": "d7b9a80b-1302-4676-96ad-1e19ab65ff60",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "1af8d23e-f97d-46a3-9499-2c8a9bf86f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c18713-b69b-4a9f-bb4d-6a1657a4d90a",
        "cursor": {
          "ref": "b6b37e4e-ec15-431f-9fdb-8530807bc565",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f080caba-0f9b-4e33-9ce9-1db67479880b"
        },
        "item": {
          "id": "e7c18713-b69b-4a9f-bb4d-6a1657a4d90a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "4b3213cc-3d68-4c53-9af6-0c02d36be485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b871ac3c-c480-48a8-9502-c05b4f88b681",
        "cursor": {
          "ref": "1aa1dd94-a578-46fd-a539-355fc70d9a2f",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "fa655432-3452-4e6c-978d-f31a0ff0c3bb"
        },
        "item": {
          "id": "b871ac3c-c480-48a8-9502-c05b4f88b681",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "5762e720-b774-4a27-a2e4-64a6c06cc3f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37154297-cac2-4070-99f5-bb8bd97d0b60",
        "cursor": {
          "ref": "bb4973cd-cc00-4465-b825-ec2ad830c771",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "0430e2b4-25f0-4bbd-affa-b89bb924d93a"
        },
        "item": {
          "id": "37154297-cac2-4070-99f5-bb8bd97d0b60",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "aa7342cb-64e6-42eb-8f53-b679e0334600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33854fe7-de2d-49c3-b692-f4f09ca54306",
        "cursor": {
          "ref": "8fee40ec-0a68-4cdb-a100-88c2324fa22b",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ec8cd7e7-b71d-452f-b2d2-3f2c72939eb5"
        },
        "item": {
          "id": "33854fe7-de2d-49c3-b692-f4f09ca54306",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "fc36e260-b99c-4540-820d-701a8962d9c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a462f6-4b8c-4507-831a-4d0ab6df70f5",
        "cursor": {
          "ref": "4b24eb9c-f252-4a32-8f67-381cf95f48ec",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "04419970-2a2c-4864-9b21-aa0343cb08bc"
        },
        "item": {
          "id": "15a462f6-4b8c-4507-831a-4d0ab6df70f5",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "013ab8ad-e179-4aae-b413-4522265d368d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e16b979-58bc-4992-85e1-f5f13f75d586",
        "cursor": {
          "ref": "ec5400cf-8648-4eb9-a401-7faf888ebe0c",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "0b68253e-c9a5-45b7-8bb0-5fcd023f9caa"
        },
        "item": {
          "id": "6e16b979-58bc-4992-85e1-f5f13f75d586",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ee721a73-1e66-4eae-a390-e690bfb66d0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40fd644c-5486-4862-b8cd-499997374ad4",
        "cursor": {
          "ref": "5662779b-6ba7-4e88-99d0-7db93a6ab34e",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "fb7576be-f5f8-40c8-bf00-f93733c7db53"
        },
        "item": {
          "id": "40fd644c-5486-4862-b8cd-499997374ad4",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "47b0ce76-bee2-44d1-81e3-596bec890922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8b7b0e-7e02-4b81-ab8a-aacd9c91d9f9",
        "cursor": {
          "ref": "ff9057c2-dbb9-4ed5-8fd2-cd5b04795e32",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a386d4bb-05c6-48fc-8b47-0a3fc1f15547"
        },
        "item": {
          "id": "2c8b7b0e-7e02-4b81-ab8a-aacd9c91d9f9",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "7e59de6f-fca3-4b0d-bb7d-f29a8d89201f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c04ca7cd-c457-40b6-a155-86d1a61b1104",
        "cursor": {
          "ref": "ad37862c-856f-4625-8fff-3c775f6baea1",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "2d4e8186-4ddd-47bf-a7d8-0bd9c0ae6bfa"
        },
        "item": {
          "id": "c04ca7cd-c457-40b6-a155-86d1a61b1104",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "3d2b8e2a-8156-4bd7-8f17-d8c0faf89122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc1088bd-bb87-4ef9-b373-f3ecc32af095",
        "cursor": {
          "ref": "172a304c-cf49-4a5f-9fee-4c8d99d0bd26",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0296eaf3-44c4-4869-9944-b8381acf4d0a"
        },
        "item": {
          "id": "bc1088bd-bb87-4ef9-b373-f3ecc32af095",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d8b83b72-2ee5-4931-80ca-0e9d1d226eed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3abb2520-698d-4892-8985-84bad35b6ebf",
        "cursor": {
          "ref": "6e2ab5b5-acd4-4379-988a-5c1f4f30c06c",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e3aaedd9-895a-4e60-8ed7-fa94d0d5428f"
        },
        "item": {
          "id": "3abb2520-698d-4892-8985-84bad35b6ebf",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "0af3aa6c-d4b3-431e-9907-ba29409236bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01457bea-9d1a-4f2d-80ce-403a8bab03b9",
        "cursor": {
          "ref": "fe6a56c1-e9f9-4497-a5dd-7175b340e53a",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ccaa7887-47c5-4695-a5f0-4f364154123e"
        },
        "item": {
          "id": "01457bea-9d1a-4f2d-80ce-403a8bab03b9",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d8182787-daf4-4c52-98dd-fa6d4a715ab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f67dd8-a93f-47c9-a77c-e4913be5b659",
        "cursor": {
          "ref": "de14777c-0a25-4253-b237-a98270d7fb26",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "be194522-8428-4230-9f2e-86309b48ca26"
        },
        "item": {
          "id": "52f67dd8-a93f-47c9-a77c-e4913be5b659",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "367fd075-af2d-49a1-aa51-c0db59fc93af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "428509d8-d326-457c-8195-98c1c04427bc",
        "cursor": {
          "ref": "5713f912-7c40-443b-ad24-58de90e1e01f",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "3422a2d0-6d3a-409a-9a15-b88a9d7cfab0"
        },
        "item": {
          "id": "428509d8-d326-457c-8195-98c1c04427bc",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "79ae5d9e-4bb0-48af-ad25-071f931c86c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ded929-0e85-45f9-8f7b-fef015340f8f",
        "cursor": {
          "ref": "1c09b5c2-bc28-4186-9c58-6de653696d23",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "cdd0adf7-b057-446e-98a3-98f2f78137aa"
        },
        "item": {
          "id": "56ded929-0e85-45f9-8f7b-fef015340f8f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "04bf4776-25d5-4278-b219-12c26eda5d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69cec280-0546-4a27-ab7f-fb26addf280f",
        "cursor": {
          "ref": "7e982714-bf5f-4f3b-b974-295c97283815",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "317406a8-1ae0-4b88-9109-2512b89a4ec1"
        },
        "item": {
          "id": "69cec280-0546-4a27-ab7f-fb26addf280f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "4754ce0e-0a88-4e26-a976-e00cef80ff8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62e76683-b6c3-4ce5-8ba4-6d43767cf92a",
        "cursor": {
          "ref": "28f0749c-1e58-4e66-8d0f-15fcbcb18336",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "5eaaf17c-8150-43ad-b13f-7265f74d39b6"
        },
        "item": {
          "id": "62e76683-b6c3-4ce5-8ba4-6d43767cf92a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "e0c71a1a-93a4-428e-b2fe-965e3c16d6e6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "395a2cb9-5031-4712-afed-c5d7ee645d5c",
        "cursor": {
          "ref": "084223af-f631-4513-a425-3df517666c45",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b16d0387-718f-4d19-853d-0d9284e8cc5d"
        },
        "item": {
          "id": "395a2cb9-5031-4712-afed-c5d7ee645d5c",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "3e2d6bf4-640a-45ff-82e2-27b25673d950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "7b578370-4982-47fc-be1f-d3cbdb31659b",
        "cursor": {
          "ref": "4aeb9a04-d1d5-42a4-8669-af1283a33cc5",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "2cffa333-78b2-4b73-ad46-704da388b3c8"
        },
        "item": {
          "id": "7b578370-4982-47fc-be1f-d3cbdb31659b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5d24b9c9-3bfc-441e-a305-91fd67934de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "d9d993b2-680a-4c6d-ad5a-959678855373",
        "cursor": {
          "ref": "eb01972d-382e-4c53-bc2e-13b76b0050b5",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "8f230cc1-69c4-431e-914e-08067fd3e4e9"
        },
        "item": {
          "id": "d9d993b2-680a-4c6d-ad5a-959678855373",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "087eb698-ad08-4be1-ba91-973ef26eef71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "a2b681bd-de3a-4fc6-8770-f798a4246e7a",
        "cursor": {
          "ref": "b644f899-4598-4a02-9efe-f8320085c467",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9439f3ca-de7b-489a-bb98-874b93520e29"
        },
        "item": {
          "id": "a2b681bd-de3a-4fc6-8770-f798a4246e7a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e5fe2acd-de1e-4403-b0c7-da5100c1d065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "01c68858-84aa-4aa4-b4fd-3227361a2576",
        "cursor": {
          "ref": "b7aa9c9e-a471-40ad-bfa7-5b254964b423",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b285fea1-9feb-423c-8c39-33dd6973596b"
        },
        "item": {
          "id": "01c68858-84aa-4aa4-b4fd-3227361a2576",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "5975a0c1-5adb-431a-8d28-3e2f9312fa3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "5294fc13-1dd7-47ea-9699-28a11bc47418",
        "cursor": {
          "ref": "90547475-79d5-4bf2-9353-e9afd56d7565",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "bc21bfe4-33f4-4570-8ab9-8b02e75c0bbf"
        },
        "item": {
          "id": "5294fc13-1dd7-47ea-9699-28a11bc47418",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "f1e131d2-6d2b-4a07-b50d-43f40e0b793a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "27d2aa22-f5af-42c2-81a0-0bfd0c279362",
        "cursor": {
          "ref": "01a94ae8-0873-429f-a267-710016925f8a",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "6c2e171e-5a40-4323-8ee7-8d547846da0f"
        },
        "item": {
          "id": "27d2aa22-f5af-42c2-81a0-0bfd0c279362",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "0cc3c38a-4e2d-40a0-b45b-9290b4e8f569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "8e3821c3-6cac-40a9-ab14-5bf88dc601d1",
        "cursor": {
          "ref": "dd71e8d2-c8ba-4f4b-8eb7-1155a1133e46",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "6a6be9a5-d699-4de3-9b1e-e5e511599f1c"
        },
        "item": {
          "id": "8e3821c3-6cac-40a9-ab14-5bf88dc601d1",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "17252b9d-1a74-44e3-be18-93c0766d29dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d1f26ac-559a-46f2-b226-d53fc4a0a29e",
        "cursor": {
          "ref": "813b63aa-cbb6-492a-ac03-fee95d6ff311",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5c71afb1-b899-40ef-ae74-0e3626068f92"
        },
        "item": {
          "id": "0d1f26ac-559a-46f2-b226-d53fc4a0a29e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6adfdedf-9fdb-4e44-8457-d2b18f2f17e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "550c9f47-c86d-4c71-ac5c-76eedce01b5e",
        "cursor": {
          "ref": "a7e7d9fe-2e95-4ad0-bcfd-0764b44df57f",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ca33aa10-78ad-48ed-a773-af76465dd5f1"
        },
        "item": {
          "id": "550c9f47-c86d-4c71-ac5c-76eedce01b5e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "da791cf0-3a81-4a3d-b9c9-68d638ad439d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edea8c94-0a97-4414-b1e2-bdca366717f9",
        "cursor": {
          "ref": "9bef1f83-838c-432d-9172-ae029b0fecbc",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e0249456-66eb-4941-a390-644bbc333c83"
        },
        "item": {
          "id": "edea8c94-0a97-4414-b1e2-bdca366717f9",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "889019e8-389a-4e4c-bfde-f53cb90e778b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55005ce-f5ad-48c1-990b-04f93aaf9b81",
        "cursor": {
          "ref": "950df402-1fc3-4c2c-b3ca-60427b3d81c5",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "77546e71-ea40-4e30-a96e-4b27fd7485ff"
        },
        "item": {
          "id": "c55005ce-f5ad-48c1-990b-04f93aaf9b81",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6dcc4088-581f-4cba-81c4-9c521de36924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "083c5ca4-f0c1-4a78-9784-82c29450e929",
        "cursor": {
          "ref": "01d09ff2-5bb3-4617-a0c4-ea3a13cf0b73",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0540226c-990a-4a01-8d7c-19962be93f31"
        },
        "item": {
          "id": "083c5ca4-f0c1-4a78-9784-82c29450e929",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "305127d4-01be-4c6e-9b39-35de599e3436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35caadc7-6ea5-4e73-8763-d2849cb07834",
        "cursor": {
          "ref": "217cf506-af86-475e-bbaa-37de90f3949f",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "daf3398b-aa42-492b-a49d-b93e987d673e"
        },
        "item": {
          "id": "35caadc7-6ea5-4e73-8763-d2849cb07834",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c345e4dc-d536-42e7-b70c-cbb85d5a62af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34410b3b-1291-467f-a74c-b4e2ab271b38",
        "cursor": {
          "ref": "85e97762-7c50-4899-a031-ca3c3db01b91",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "31650081-0294-4774-babc-881f2b39cec9"
        },
        "item": {
          "id": "34410b3b-1291-467f-a74c-b4e2ab271b38",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "34f3da26-518d-4ade-8c93-64b029541fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60edff12-1cb9-46cf-8621-2ea8c56d114b",
        "cursor": {
          "ref": "1c27fed8-da82-46c4-8dd7-423f34d00705",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "706cd60c-121b-4300-b12b-de52117d7181"
        },
        "item": {
          "id": "60edff12-1cb9-46cf-8621-2ea8c56d114b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3e026453-da16-4d23-9565-a2fbb530bbfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe84b074-5b37-4552-a2fb-8facdbfe979a",
        "cursor": {
          "ref": "9f28f67f-d2da-42bc-8a97-2bc9ff58a890",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "9a1a4f19-bbbf-4094-b3a0-563bdddc893f"
        },
        "item": {
          "id": "fe84b074-5b37-4552-a2fb-8facdbfe979a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "60c18e0f-fe96-4319-a6ff-7bea937bbeb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc4d904-e65c-48dd-a91d-8bab56c1be2c",
        "cursor": {
          "ref": "f65d2f0c-f7cd-4950-9e44-5b9aa3a82289",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "26ac18da-a770-4e10-b1a8-473aa4b5e587"
        },
        "item": {
          "id": "4bc4d904-e65c-48dd-a91d-8bab56c1be2c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "631225c9-4bf8-4285-b97b-fedfefc9a50e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf2f6561-68bd-4199-a3a8-034d1ff7916f",
        "cursor": {
          "ref": "1733bed2-bbd1-4366-9754-fe02df51e6bd",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "0dff41b2-2e88-4fdf-aa42-2400deda0cad"
        },
        "item": {
          "id": "bf2f6561-68bd-4199-a3a8-034d1ff7916f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8bdc68dd-a77a-4e72-976c-4544453c373f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19078572-4925-4e4f-a41a-4dd1861a4e80",
        "cursor": {
          "ref": "285161cd-be83-48d6-8424-043a151a7b0c",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "0e986e5a-f212-4eb2-b79a-36af0eef1d16"
        },
        "item": {
          "id": "19078572-4925-4e4f-a41a-4dd1861a4e80",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "10304cc1-75ae-4073-b58f-9233d52bb511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdeebe25-d208-40bc-b87e-422e3c3da3a9",
        "cursor": {
          "ref": "03874a46-aeb1-4819-adc0-1ab69136bd98",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "fdba1b40-55a8-42b4-af51-ccf5db3a986b"
        },
        "item": {
          "id": "bdeebe25-d208-40bc-b87e-422e3c3da3a9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "238cddd3-debb-44da-85ac-2f86390aedb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab1f1c86-7ae9-4e5c-837f-254923f7882c",
        "cursor": {
          "ref": "2b31fba7-c487-42fc-ae98-36dd870d1ff4",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "7a57c9b0-4845-43ad-9973-bad4018b54bf"
        },
        "item": {
          "id": "ab1f1c86-7ae9-4e5c-837f-254923f7882c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "11515070-59dc-4bf6-b06e-c27a6d772613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f10f782-f2a7-4eff-ba92-bc2201bc07c0",
        "cursor": {
          "ref": "f792717d-8ade-4832-8b36-35c84ecbe51b",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "71d169be-52c7-4815-b809-9cd0eda5aa9d"
        },
        "item": {
          "id": "9f10f782-f2a7-4eff-ba92-bc2201bc07c0",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2fffa9ce-9ece-4980-95ea-8e910dc39dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f54cf5-d850-452e-b32d-66de72565c90",
        "cursor": {
          "ref": "db75739b-6f27-4811-9af3-65f52f796bc6",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "f5d1e5e8-5c0b-49b7-8261-d7b615875d8c"
        },
        "item": {
          "id": "78f54cf5-d850-452e-b32d-66de72565c90",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "63295e77-a0c6-49f5-8425-0e9541d44d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36855b3c-8993-4745-b8ba-59b61de7a16c",
        "cursor": {
          "ref": "fdcc58e7-a525-4b72-aae1-69180b53a620",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "48d4c184-789d-420f-b72e-42667bb5243a"
        },
        "item": {
          "id": "36855b3c-8993-4745-b8ba-59b61de7a16c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a67936a2-9643-4f03-a22c-19025a7a1845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27419fdb-444f-4cfa-8207-0577db4f2224",
        "cursor": {
          "ref": "7ffed621-554d-4a21-aaff-7ddbb1096842",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "134c66bc-0a72-430a-8d4e-837914cdbb8f"
        },
        "item": {
          "id": "27419fdb-444f-4cfa-8207-0577db4f2224",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "65de3ab8-3c7f-4596-9048-3b1127af2daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b94d44f-aa19-4406-a5c4-8721998a78fb",
        "cursor": {
          "ref": "f2d60814-3eab-4177-a533-7c2510f20ced",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "da806149-96b7-47e6-a006-6840165f003c"
        },
        "item": {
          "id": "7b94d44f-aa19-4406-a5c4-8721998a78fb",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "15849e3c-83a6-4fb2-a92c-04781c80f9af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98825790-6737-45e0-a42a-7a4672d42b16",
        "cursor": {
          "ref": "2168ff7f-5b6a-4ac1-9908-cf6aa3b16f5b",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "4a8226af-b0b0-421e-967b-6685e2885ddd"
        },
        "item": {
          "id": "98825790-6737-45e0-a42a-7a4672d42b16",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e1e07586-aadc-45bd-80e8-27c716cc4cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7777009b-858e-4126-a37a-00a03dab89f2",
        "cursor": {
          "ref": "94336246-1708-49d4-88bc-68af13309193",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "5779afbf-9ea1-4183-b6e1-f421528bb126"
        },
        "item": {
          "id": "7777009b-858e-4126-a37a-00a03dab89f2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8b258b3c-afa1-4f0d-87ed-bfe66cdf7fe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ee1ce8-bef9-45dd-b9de-48c42d0d4a26",
        "cursor": {
          "ref": "0384538e-2c7e-43a7-a7a9-df72b3356ab1",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c15a2e52-3f83-4a63-ac30-60911ffcc611"
        },
        "item": {
          "id": "e0ee1ce8-bef9-45dd-b9de-48c42d0d4a26",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "25586af6-709e-4a4c-adde-61fc8badf386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60bc1601-d180-4485-ab9f-5a3f85de490e",
        "cursor": {
          "ref": "f18d7ced-55d6-47b6-ac51-652f79322ef8",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "4bb78534-5bc6-4b48-ad5b-79fca163d1d4"
        },
        "item": {
          "id": "60bc1601-d180-4485-ab9f-5a3f85de490e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "25c96ab4-8074-41a0-83f3-e615cac6b78a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2db34a8-de8b-499e-a93a-ad6db9a07a24",
        "cursor": {
          "ref": "04f1f590-65c9-4f38-b2e2-50ed73385ee1",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "9743b9d7-64bf-4f08-90e9-81fe9bc9104e"
        },
        "item": {
          "id": "e2db34a8-de8b-499e-a93a-ad6db9a07a24",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ea73e8b0-5e6f-450c-8eca-61bef5efdc96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f041ec6-fdf3-4561-9a2f-8c145f4a9c34",
        "cursor": {
          "ref": "1836dfca-1e59-4649-b5ad-1ae3ef088c82",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e6fe8793-f02e-4141-ac7a-7ab9dca609b9"
        },
        "item": {
          "id": "8f041ec6-fdf3-4561-9a2f-8c145f4a9c34",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1c6bd2cd-06cc-4624-8a7d-41bde55d26dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1a4fe7-14ad-42d5-a2f1-284ffb35ce5d",
        "cursor": {
          "ref": "b775733a-4287-4a27-826a-3a7c391c1f38",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "5ca21c78-9dd8-422b-b068-c4e8cb23571c"
        },
        "item": {
          "id": "ff1a4fe7-14ad-42d5-a2f1-284ffb35ce5d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f09bdc58-5bae-437a-bade-bed788776978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539d54b7-b5bc-40bf-9844-8767cf6b52c9",
        "cursor": {
          "ref": "c912c8f2-ff86-42e1-b74d-6082976f2382",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a5e11edb-32e2-4b33-998b-a67de4a7f015"
        },
        "item": {
          "id": "539d54b7-b5bc-40bf-9844-8767cf6b52c9",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "074bc3bb-f446-482d-88cd-cbf4c9d5ce52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df0f76e2-5ac3-4d33-bb1b-5699f627e0a8",
        "cursor": {
          "ref": "f7328f88-237d-46e9-ab2c-238fcc50f9d9",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "55a5cf52-6cce-4475-8092-8eff01c6a004"
        },
        "item": {
          "id": "df0f76e2-5ac3-4d33-bb1b-5699f627e0a8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6559a055-6956-4cbe-b06f-21a9ac76d18a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c57363d-8229-4d9a-bed3-ee6e78afa95d",
        "cursor": {
          "ref": "40106224-aa82-4046-9953-b25ef4f0e2e0",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "240a7b3c-0f8b-445f-b549-d0f647953bd4"
        },
        "item": {
          "id": "7c57363d-8229-4d9a-bed3-ee6e78afa95d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "38f703e1-6aa1-4af7-98d5-e0c0699b8fc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2c73ca-5295-42cc-b0e3-649d5b16633a",
        "cursor": {
          "ref": "b2cb8735-7afc-4136-bfb6-eefab3744338",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c320a9e8-3135-4714-988f-7cf04a150615"
        },
        "item": {
          "id": "4a2c73ca-5295-42cc-b0e3-649d5b16633a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "15853a84-13df-4851-a6ba-14d76780f0f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeacdcb9-b7b0-4f99-bd02-57cc0f282d69",
        "cursor": {
          "ref": "a93c94e3-15c5-4a7a-b7ac-c2c2001ee9c6",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3a204216-e71a-4d4c-8a6e-4e74e94ae7dc"
        },
        "item": {
          "id": "aeacdcb9-b7b0-4f99-bd02-57cc0f282d69",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f849ac44-53ba-4779-958d-4fe04ae2763b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea36d608-807b-46ca-a053-0bb7dc30d3cf",
        "cursor": {
          "ref": "ef30180a-1af5-4f1c-9c94-2840c36846fd",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "29b522be-0a47-4918-9751-180373ec6a43"
        },
        "item": {
          "id": "ea36d608-807b-46ca-a053-0bb7dc30d3cf",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "74a5149d-749d-48d0-8a80-441f642d7f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "582238ca-aac4-4a13-aecc-97a03305e8cf",
        "cursor": {
          "ref": "fbe8cd6a-668b-4e87-9d32-a2f26868fc48",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "1a24cd42-83ca-4428-a62b-5def995277c5"
        },
        "item": {
          "id": "582238ca-aac4-4a13-aecc-97a03305e8cf",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "6935b8d8-21f9-4d91-af6c-0740555a1d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c58d73-1ffb-4657-9da2-53bfd1039782",
        "cursor": {
          "ref": "90a5961a-d39c-4af8-9450-eca24cbaa17e",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "bef57fdb-ac19-4d47-8e6b-8d0042ddd140"
        },
        "item": {
          "id": "01c58d73-1ffb-4657-9da2-53bfd1039782",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "266414f9-44b9-4f71-8e0b-eec659e81035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0130f1d-3ba6-4cec-b2e3-4a0096fc2cac",
        "cursor": {
          "ref": "16b098f6-cc1c-4fd2-9609-e751cdae6c16",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "756bfdce-066b-4c86-965b-33a99f6e0847"
        },
        "item": {
          "id": "a0130f1d-3ba6-4cec-b2e3-4a0096fc2cac",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ee5eff00-7348-4397-847e-8524665b231b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d66713-e010-44e2-ab3c-efbb6cea744e",
        "cursor": {
          "ref": "daf62d74-fc81-467a-97df-9692c8e70595",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "702bce47-0fd7-4e0f-9398-6d14f170298a"
        },
        "item": {
          "id": "c0d66713-e010-44e2-ab3c-efbb6cea744e",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "1ef367f8-84d9-4243-bcc2-fed6f19c3564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca3db28-145c-4f0b-a2c5-981fc8ead44f",
        "cursor": {
          "ref": "59a9687e-f5d2-4cb1-8b74-07cf0a3caa67",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "5df906e7-b357-457c-af62-4841e6ff907a"
        },
        "item": {
          "id": "eca3db28-145c-4f0b-a2c5-981fc8ead44f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0ed218eb-c8b9-4246-87fe-47123f815c03",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08647dcf-bdea-482b-9fa6-d73af1b2b768",
        "cursor": {
          "ref": "537752f2-3dc9-4e41-8ea7-0f5d0a8d49cf",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "aef42f5b-bd67-4256-8ed4-1b768af4bf1b"
        },
        "item": {
          "id": "08647dcf-bdea-482b-9fa6-d73af1b2b768",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d4dc9180-b8af-46b0-9162-b1863fab8d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08060f38-8af5-4aaf-a97f-a7f41933920d",
        "cursor": {
          "ref": "7ea3a81e-4cd0-4b30-bc72-07e4f32ad13c",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "0fd58422-c7b0-4519-bbc6-6282cdcca86d"
        },
        "item": {
          "id": "08060f38-8af5-4aaf-a97f-a7f41933920d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "6ecaaa6a-c226-4b4b-9574-8678dd9188ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bb16191-6779-4ee4-95c6-d606aa6612e0",
        "cursor": {
          "ref": "d312e8b3-ec14-4311-8bca-247f97c59b48",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "53424c2c-59df-4634-80c9-5938a3abd0cf"
        },
        "item": {
          "id": "4bb16191-6779-4ee4-95c6-d606aa6612e0",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "0866d5a3-725f-4f98-a9bf-ddc102d5c76b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c06864e-e13a-463c-9789-2b64e2f36aab",
        "cursor": {
          "ref": "a49485d3-6e94-4de8-b39a-b05cfa5c53b6",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "9f167742-06b7-4b4b-866e-aba111772e44"
        },
        "item": {
          "id": "7c06864e-e13a-463c-9789-2b64e2f36aab",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "40902c4c-2cf9-4f4d-90cb-853dd895d29d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa6a0b36-010c-486f-bbdc-9987151cdd6c",
        "cursor": {
          "ref": "275f4f4b-1388-4d75-a531-4a8a03806ea3",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "4a71b8e4-3644-49b4-92e5-eed69e98281c"
        },
        "item": {
          "id": "aa6a0b36-010c-486f-bbdc-9987151cdd6c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a5b57c35-cc49-4516-a757-3e2e053fda75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84916e75-63d9-4ea9-a5c0-d7b8564034fa",
        "cursor": {
          "ref": "143997df-8ec8-4a8f-a73d-6d1622df059a",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "eeeeaac4-ba8c-4d76-9b3b-622e8d6a32b5"
        },
        "item": {
          "id": "84916e75-63d9-4ea9-a5c0-d7b8564034fa",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "150597f9-a606-41c9-a1a7-9e68cdc82aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e12349-39e3-492b-adc0-4ce96172fe10",
        "cursor": {
          "ref": "ca860a3b-f373-4fac-951c-dfd879494c30",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8458c460-ee21-4e87-8e98-9b35ce20df86"
        },
        "item": {
          "id": "26e12349-39e3-492b-adc0-4ce96172fe10",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "1ae5d171-d3c8-4697-976c-06a58135c786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ce324d3-d14d-436b-8bec-df5dd726eb28",
        "cursor": {
          "ref": "86a58b52-4403-4660-bfd1-1bdf0687afe4",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5cdaa6ba-e7b0-4717-b266-73b4c28cc55b"
        },
        "item": {
          "id": "1ce324d3-d14d-436b-8bec-df5dd726eb28",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b46f4a4b-aa06-4050-beaf-e615d97a0e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c77007c7-66d7-4fcf-b8cc-a462fbc39ec9",
        "cursor": {
          "ref": "f949268c-6038-48a4-a003-823377547f9e",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "714ecf49-884d-4bd3-896c-141dc90e09f6"
        },
        "item": {
          "id": "c77007c7-66d7-4fcf-b8cc-a462fbc39ec9",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a5a53ec6-0902-4e79-94b9-a42deae5adbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "283e3704-da74-4010-a07d-1947aab14de0",
        "cursor": {
          "ref": "3c338898-ee03-4ab9-a779-9e6e3fdd830b",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "0e074f8c-67e9-4f25-88e0-cec78575ee2f"
        },
        "item": {
          "id": "283e3704-da74-4010-a07d-1947aab14de0",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1cff2f83-3dc6-49c7-b185-209e06f02e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67bf6733-80bf-45b8-a049-2faed094e905",
        "cursor": {
          "ref": "7ac364ef-045b-491d-a04a-1c6e21e84183",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a68b816c-4aa5-4e3f-bf18-4076aff0eb47"
        },
        "item": {
          "id": "67bf6733-80bf-45b8-a049-2faed094e905",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "eadba82c-e6d2-4811-9b27-6fade99eb616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c09e3293-501a-4f49-bfd2-9912ed88fbcc",
        "cursor": {
          "ref": "50ad9d3a-dac5-43e8-87f7-ddb122b14746",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c747f7d2-45ee-4651-b2c9-fbd14927b988"
        },
        "item": {
          "id": "c09e3293-501a-4f49-bfd2-9912ed88fbcc",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "27f9ae73-abe2-477e-8f3e-14a33d4f8fca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bedbfe6-4389-4b09-8bb6-867271b55e63",
        "cursor": {
          "ref": "2ac5638c-eb2f-4113-9f0d-39f748fc6c1c",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2c418c0d-7e34-44ac-8595-5702e5bed846"
        },
        "item": {
          "id": "8bedbfe6-4389-4b09-8bb6-867271b55e63",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f67574cf-4e80-4c3d-83fd-d3e1fe4c13dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af2fa34e-161a-4f34-98c9-d3c98ca37136",
        "cursor": {
          "ref": "aa129ca6-7eed-467e-aac1-333d66e730bc",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "7cd7c3f4-ff40-4fb5-b7b4-544a8a42f1b4"
        },
        "item": {
          "id": "af2fa34e-161a-4f34-98c9-d3c98ca37136",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1bf7813d-55ff-4426-9d06-f86748cf2ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "035d677b-4ad5-4ffb-9a19-151f8db39035",
        "cursor": {
          "ref": "dd337333-f3a0-4ed1-82a3-b55e0b296171",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2226200d-cba2-4abc-a416-1de2c09ad9f8"
        },
        "item": {
          "id": "035d677b-4ad5-4ffb-9a19-151f8db39035",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "8d1c2add-0b6b-4757-aa7f-740bb9ba75f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59559a54-8dd2-4efb-aa78-6c54ad8de407",
        "cursor": {
          "ref": "0a2130e1-5871-47b2-9465-e3701dd9e63a",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e4906ba1-1157-4c9c-b042-0aecff9b0038"
        },
        "item": {
          "id": "59559a54-8dd2-4efb-aa78-6c54ad8de407",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "55586ef3-a3a0-4901-a937-ff326788a4ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d2ce752-7046-49dd-9f85-498a81393be9",
        "cursor": {
          "ref": "fe5c6057-a19e-4491-bcf9-12efb39f30d4",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "b98c77a9-a8eb-4125-9132-846012b0bac3"
        },
        "item": {
          "id": "5d2ce752-7046-49dd-9f85-498a81393be9",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "29ba3a91-654f-4309-9529-b5078532869d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed653a8d-17dd-4b7c-af7d-f78bc81bd6ab",
        "cursor": {
          "ref": "1fd10774-166a-488e-88e5-91955af8d07c",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "42888403-5ce7-4c4c-9b60-0b1b0da94a6c"
        },
        "item": {
          "id": "ed653a8d-17dd-4b7c-af7d-f78bc81bd6ab",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "3b1f498e-a8bb-49a0-96d4-0b2d2e8611c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0595dec0-3b95-4931-8d76-f49586182087",
        "cursor": {
          "ref": "181f31aa-4fe7-4d81-b0e4-e4a9b177d661",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "67830bc8-e8a8-495e-b0c6-fd4eb0497c98"
        },
        "item": {
          "id": "0595dec0-3b95-4931-8d76-f49586182087",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "319bae12-b422-4266-9ef7-330426415303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ce44a4-a609-4022-8f84-80f02b25500b",
        "cursor": {
          "ref": "188d0f41-85d6-4f46-90d2-a6800e902ef0",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f433e7cd-2798-4482-9021-4007ad59aadd"
        },
        "item": {
          "id": "a0ce44a4-a609-4022-8f84-80f02b25500b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "11deaa73-2592-496a-a4c4-630f0baaf5a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "327eb2f9-893f-4036-ba29-59d86a9d1833",
        "cursor": {
          "ref": "0388e412-eb4b-4c16-90ef-e85e24dce7cb",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "102a8de0-56d8-4811-8a21-1d78af1b8391"
        },
        "item": {
          "id": "327eb2f9-893f-4036-ba29-59d86a9d1833",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "2ef74e13-f8ea-44b0-9a48-76739ec5f7d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d24d21ac-2b5a-4d3a-b6fa-63ff399e6068",
        "cursor": {
          "ref": "c8dc7af5-87b2-4248-8a4f-9318c79809bf",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "4ef5e4a7-e548-4d87-a016-6feabc339cbc"
        },
        "item": {
          "id": "d24d21ac-2b5a-4d3a-b6fa-63ff399e6068",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4dc4d051-b97e-4f43-bcd2-1b0fbed8543b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c26f2b15-9572-4df3-bded-74296cbaf7c5",
        "cursor": {
          "ref": "bcdc5376-ead1-44f2-b503-e105588d546b",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9559492f-373b-4e78-8936-3d5114cf31a3"
        },
        "item": {
          "id": "c26f2b15-9572-4df3-bded-74296cbaf7c5",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4fffa14f-6e5d-41fb-8c5e-429ccd3ca9f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc8927c7-6a7c-4f2e-b5f2-2a654781c32e",
        "cursor": {
          "ref": "e730980d-b146-42ab-b7dc-1a56ae6f4aef",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "f88f4db8-5826-4be4-a1eb-0c2ff19a25ee"
        },
        "item": {
          "id": "bc8927c7-6a7c-4f2e-b5f2-2a654781c32e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "25215451-3970-452d-97d0-6087e5f14083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af58fe77-5ed3-4b4a-a199-ed02563335f1",
        "cursor": {
          "ref": "7afcac99-cf2c-44a3-9860-2e1b1ddbde27",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ad7251cd-63df-4fe6-90bc-9371a88f0a8c"
        },
        "item": {
          "id": "af58fe77-5ed3-4b4a-a199-ed02563335f1",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "b4a2e112-0398-4112-a01f-4d1f0c901eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5172745-8497-44d2-880a-00189d014a71",
        "cursor": {
          "ref": "f945658f-d8ca-4893-a02f-eb284dca993b",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "24950e49-3d3b-47d2-9714-dd95458149ec"
        },
        "item": {
          "id": "f5172745-8497-44d2-880a-00189d014a71",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a39aa3fa-67b7-4a93-8039-a44b88e8ed33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f5fe4e-853b-44a7-bd4f-13eb084e9386",
        "cursor": {
          "ref": "36e9b9a7-66ab-4fc3-8af8-29bde4674f5b",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "85bec710-a3d9-4615-aca0-3059cd890212"
        },
        "item": {
          "id": "27f5fe4e-853b-44a7-bd4f-13eb084e9386",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4fa69683-a49b-47c3-8170-d6dc667dcc6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a52582d3-8028-4ca3-8eb8-03b7217d566e",
        "cursor": {
          "ref": "473ecac6-32d0-4c4a-965f-fb7de44b8887",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "f7f67180-4426-42f0-bae1-e416d65a7706"
        },
        "item": {
          "id": "a52582d3-8028-4ca3-8eb8-03b7217d566e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "eb2b5931-c7bf-4c17-a87c-397c0d796fd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c975bd2e-ddd2-4847-9ef4-4118b215f693",
        "cursor": {
          "ref": "ab942269-a27c-4870-b3c9-fbc003560861",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "822dad72-1565-492b-9980-4c044efa85cf"
        },
        "item": {
          "id": "c975bd2e-ddd2-4847-9ef4-4118b215f693",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d9d1de5f-83ca-49e5-a832-3764a7e85680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab6d4683-1fd4-42a8-90e1-55ae90e5c4c2",
        "cursor": {
          "ref": "90349f62-a38c-411f-95aa-4a7956a8f74a",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "65bc5a84-9592-4b79-b956-ba213d224dcc"
        },
        "item": {
          "id": "ab6d4683-1fd4-42a8-90e1-55ae90e5c4c2",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "13ce2c42-a7ca-4cbf-a8de-30244cc20ae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d8b88c0-d963-4433-9a87-d7fc1e42e82a",
        "cursor": {
          "ref": "63141ebb-a67b-48a0-b2ce-87ec71346cac",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "233ec848-861a-448f-8401-9341563cae7e"
        },
        "item": {
          "id": "0d8b88c0-d963-4433-9a87-d7fc1e42e82a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c3b80d42-0ecc-410b-949c-9d93e7e40d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "208a72d0-d12e-4544-bcca-f798d921b2e3",
        "cursor": {
          "ref": "7893aa72-cc92-4f2b-8f11-faae2fbc50b9",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f2d1d26b-e642-42e2-b7e2-77058face000"
        },
        "item": {
          "id": "208a72d0-d12e-4544-bcca-f798d921b2e3",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ade88364-7f18-409e-8802-605416b1a65c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c7178c-98e6-4cad-8b83-a3d8861766e3",
        "cursor": {
          "ref": "1b17cd8f-9130-4dd0-83df-6cf3599b90d6",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "635b1381-6437-4896-a18f-8ffd1767c5ce"
        },
        "item": {
          "id": "d6c7178c-98e6-4cad-8b83-a3d8861766e3",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "31cc4beb-8210-4baa-a0ec-b6f6e73df31d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "842c734f-a2fd-4d8b-861e-bbc01f197ef7",
        "cursor": {
          "ref": "734c6b31-2aef-43df-bd57-69ae657c28d0",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d7d23d32-15c5-499c-9402-a6f310f013fc"
        },
        "item": {
          "id": "842c734f-a2fd-4d8b-861e-bbc01f197ef7",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ce3f3773-d602-4126-bd0c-b7479b2fa08f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f577ae7-153a-4968-a8d5-ab38ae4f6abb",
        "cursor": {
          "ref": "62f70345-0a12-4f2e-a351-9455d023f828",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "9814b5a4-0f34-4dab-a066-a2725ca4392a"
        },
        "item": {
          "id": "0f577ae7-153a-4968-a8d5-ab38ae4f6abb",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "465ca6c9-daf8-4196-9168-744d47e12087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c419fbd9-a302-418b-9dc3-d80ac220ba50",
        "cursor": {
          "ref": "94ae6fa3-cd4e-4888-836f-5c86b19a7266",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "764c01bb-59e0-4ea7-8d57-2681a2e76ef7"
        },
        "item": {
          "id": "c419fbd9-a302-418b-9dc3-d80ac220ba50",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "7e157df1-8ff0-43b7-8adb-ae9ee86b5951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d2001c0-594e-4d82-859b-defe2b5a31d4",
        "cursor": {
          "ref": "fd8a7269-eb48-411f-9c4b-280be23eb4a7",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f7fbb15e-a9a1-4f86-86b0-d7bc1c62dbd5"
        },
        "item": {
          "id": "5d2001c0-594e-4d82-859b-defe2b5a31d4",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "0ff46cf2-625d-4694-b6f3-6b22a596cc67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5600a40e-17f3-4299-b794-1a759734187a",
        "cursor": {
          "ref": "6061634e-d6d9-4dbd-9406-e1ee59d459b1",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "37442895-2a19-472b-8ea9-cfd1bf4f6083"
        },
        "item": {
          "id": "5600a40e-17f3-4299-b794-1a759734187a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a2812d26-5a54-49db-8338-30c1389add70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053ba498-d826-47c0-bd2f-8937734be809",
        "cursor": {
          "ref": "5a7635a3-b4ef-4f26-9426-00981628c845",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "cf164a36-19d2-4100-b907-43a244f7805f"
        },
        "item": {
          "id": "053ba498-d826-47c0-bd2f-8937734be809",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "facc07da-a83e-4ea1-8824-a49f1b4d1e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ef9ada-04cb-4227-9170-f0a00ccd29ca",
        "cursor": {
          "ref": "43ce2d57-60d9-44a8-845a-adffcabc62cb",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "ef7d1510-2854-4176-a863-0cdff2effb7c"
        },
        "item": {
          "id": "95ef9ada-04cb-4227-9170-f0a00ccd29ca",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "9b31f223-c039-4eae-a6cd-8ce64d7efa47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39789968-b37c-4457-99a7-316fdee960cb",
        "cursor": {
          "ref": "00bb7fe7-0bc2-49b1-a4f8-4e9ecbf97abf",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "26b9a64a-d47b-4ab0-afe7-a06a900aa4c7"
        },
        "item": {
          "id": "39789968-b37c-4457-99a7-316fdee960cb",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "59e3c1c7-0ccc-47ec-81ab-66f5a0483181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a939145b-654f-4441-8210-8a8131eb6621",
        "cursor": {
          "ref": "73b131ce-52b3-4483-bc6a-8b28a73cd069",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ff3ebde0-19bb-4001-9835-cc32a8728eb9"
        },
        "item": {
          "id": "a939145b-654f-4441-8210-8a8131eb6621",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "8fec7a48-ce3b-4feb-9143-e8415e7e4fbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b3a541-0a5e-4eb8-aee9-8a50b6fbfedd",
        "cursor": {
          "ref": "842131f8-c550-4b5e-a277-16642489a84b",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "60a399cf-e583-4dff-8e05-c00dcea67dba"
        },
        "item": {
          "id": "06b3a541-0a5e-4eb8-aee9-8a50b6fbfedd",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "acfea420-901e-4b33-b3d4-e2c1eac87bf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af3157c-70b2-4543-be77-ac57b620313a",
        "cursor": {
          "ref": "4bdd137d-024d-48f7-99e4-e2d9a72c9e58",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e3a3dbeb-657a-4449-939a-12fc433ddccb"
        },
        "item": {
          "id": "8af3157c-70b2-4543-be77-ac57b620313a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "aaf1ff81-03af-4cb3-b8cc-eb913cebd479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe31b1b-3d04-4c09-8612-662c27cde0d4",
        "cursor": {
          "ref": "5f9ea87e-7904-4215-add1-d5b16ec216b9",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "cd17bfa8-4df1-491e-8169-97266b38c925"
        },
        "item": {
          "id": "1fe31b1b-3d04-4c09-8612-662c27cde0d4",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b3777ee5-fa3f-41c6-81e8-281b8732bc7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d012199a-35ba-4192-a1ec-bae23a5f910d",
        "cursor": {
          "ref": "e4c9508b-1a95-4edd-8428-53797e10b40f",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "31f4a565-d02d-4b89-a291-945843d45603"
        },
        "item": {
          "id": "d012199a-35ba-4192-a1ec-bae23a5f910d",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "af33b6a6-b2ad-4d52-b506-69b819d993ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a13761-1c08-46b0-84cb-6c48e30f6e11",
        "cursor": {
          "ref": "d83cadcd-7ebc-43b9-b91d-7076bf5403e6",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "53836d19-1fdc-40e3-84cf-b5f97c0ff87d"
        },
        "item": {
          "id": "00a13761-1c08-46b0-84cb-6c48e30f6e11",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "674432ac-dcef-408c-bb8e-2076f097b401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8fa46a3-79b6-4ecd-b99d-9a76be851d48",
        "cursor": {
          "ref": "c088f628-9156-4c14-934a-3a33d252f505",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "0c35aacb-fb28-48cc-8076-a491e0259781"
        },
        "item": {
          "id": "b8fa46a3-79b6-4ecd-b99d-9a76be851d48",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "bf021082-b41c-4eca-b8ea-18aa046f0138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fafbc5e-b0ba-4217-b71f-62a87c3c21a2",
        "cursor": {
          "ref": "711b3d02-bb38-4597-a652-5978aa5e9bcf",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "28147c5f-7037-48b4-a672-e3217665b2e2"
        },
        "item": {
          "id": "0fafbc5e-b0ba-4217-b71f-62a87c3c21a2",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ac44155a-45a4-4c57-b8a1-0e19d7908f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8338678-b292-4db5-a3bd-e256ef6af66a",
        "cursor": {
          "ref": "30f728dd-1c81-405b-b806-9ec8501f305b",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "a4b4978d-f71e-4714-a4bb-451c1c476ab0"
        },
        "item": {
          "id": "b8338678-b292-4db5-a3bd-e256ef6af66a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "780036e5-b141-4930-94cf-d567bbb689ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c152a0-9953-4c63-9dd1-15bc1a7c5d3f",
        "cursor": {
          "ref": "01840958-4b4b-48d7-9f21-33d01e4037d4",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "28920de4-0dc5-4b70-ae89-f6afcd327ae3"
        },
        "item": {
          "id": "a6c152a0-9953-4c63-9dd1-15bc1a7c5d3f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e3e67fa7-0793-4946-bd1d-213489262942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a49bdd4-7762-4a28-8c56-cd3fdb40d3c9",
        "cursor": {
          "ref": "ab06b899-1016-43ba-aa2d-04bd14297bc5",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d7429d37-c161-427d-9f17-8a1b752de089"
        },
        "item": {
          "id": "7a49bdd4-7762-4a28-8c56-cd3fdb40d3c9",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "098c8325-c697-49db-8ac7-15b10398fa82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a1c1b99-1c3d-4561-9b99-f90d3e6f0de3",
        "cursor": {
          "ref": "8d66b69a-c387-4ae4-839c-e5da62184c8d",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "0d4e245b-e75f-431d-a0ab-260e059fb173"
        },
        "item": {
          "id": "7a1c1b99-1c3d-4561-9b99-f90d3e6f0de3",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "af97487d-054a-4f36-afdd-4b1d8dac4a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0972c0ad-6366-42d4-8381-249da993a12b",
        "cursor": {
          "ref": "9f7c619f-31e0-4963-84a7-dde509abbe36",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "287eac42-8649-4513-be8d-9b65369423e1"
        },
        "item": {
          "id": "0972c0ad-6366-42d4-8381-249da993a12b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "790294e0-e188-4b1c-9f58-317d87ab4923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "874583ab-2833-4e93-ac99-aa29455b50b4",
        "cursor": {
          "ref": "03205e20-a1de-4db9-b206-6352b8cde0b9",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "86eab721-06d0-4b08-b948-b0df76eddb33"
        },
        "item": {
          "id": "874583ab-2833-4e93-ac99-aa29455b50b4",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "24a8dea8-572b-40d5-aa9e-a93dcb1c1998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1567506-8c7f-4661-a38b-43815840a20b",
        "cursor": {
          "ref": "ecde2228-64e2-4993-84ba-c4cdd5f373df",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b4fcd31b-8790-4641-80fe-12d16d83fddf"
        },
        "item": {
          "id": "e1567506-8c7f-4661-a38b-43815840a20b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3ab2a328-1dfb-4c9d-88a9-51abf9bdb72e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb56ef44-d25d-453f-842e-03d67f9bc43b",
        "cursor": {
          "ref": "2ba5e3f0-759f-410e-9905-187dbec76fac",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "38f469d0-5bf3-49e5-8350-1d5a1a300b86"
        },
        "item": {
          "id": "bb56ef44-d25d-453f-842e-03d67f9bc43b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "921ac1a0-8c2d-48cf-8c17-c3bd8adba312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d36bc40-2f28-441c-8720-851ba1a15d70",
        "cursor": {
          "ref": "e6df3c2e-d868-42af-99fb-24c83162124b",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "497795d7-a2cc-46e7-b766-f510a11470b8"
        },
        "item": {
          "id": "2d36bc40-2f28-441c-8720-851ba1a15d70",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a0556d32-2db6-408d-a477-831c1d31295e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4ecb798-bfb3-48bb-94f0-66e1e8dd238e",
        "cursor": {
          "ref": "5afcd72b-8832-4b81-8800-e6d13225c885",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "dec8d3c5-df1f-4197-b573-710490f71066"
        },
        "item": {
          "id": "f4ecb798-bfb3-48bb-94f0-66e1e8dd238e",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b7c78454-baf7-4148-990a-1f406a6219c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf3168be-da57-42c2-8d01-65e92e9fdddb",
        "cursor": {
          "ref": "c770b052-d703-4e85-81b7-332888f02782",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "889e84ca-eb38-40a0-851d-b5384ad3925d"
        },
        "item": {
          "id": "bf3168be-da57-42c2-8d01-65e92e9fdddb",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "8b371597-b9f0-4311-8c88-78f8aba08c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "617076cb-e5b6-47c5-9349-7a3edb482bbc",
        "cursor": {
          "ref": "177cdd59-0559-48f5-9708-3df24ba96642",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "c938be20-d39a-4502-b7b2-db31822fabbf"
        },
        "item": {
          "id": "617076cb-e5b6-47c5-9349-7a3edb482bbc",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "3083518d-fb4e-4344-9671-d362ff01e905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c542033-d8ba-4deb-b1e0-d73184e9cdef",
        "cursor": {
          "ref": "1d996e55-1796-4bf1-8ba8-ee2e6281e55b",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "8c0c9a06-5d18-48ee-b665-c1a393837e54"
        },
        "item": {
          "id": "7c542033-d8ba-4deb-b1e0-d73184e9cdef",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d2034be5-1064-4b80-97f7-d929b054f86c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd1f853c-3760-4b8a-a440-9a47c76e8f1c",
        "cursor": {
          "ref": "298d5500-e804-4bf3-b35d-8e5af7cb14e9",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f573d982-5d1f-4f5f-b333-76c3acfc0c4a"
        },
        "item": {
          "id": "bd1f853c-3760-4b8a-a440-9a47c76e8f1c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "51fdaae6-e842-417c-b2a2-5e6046ba8fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c7ec0b-8990-4014-ad78-669aeea4c668",
        "cursor": {
          "ref": "dc2ad3ee-9bf2-4860-b848-82c3c393ebf5",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "01421818-7acb-4b99-983f-21ad7e47ed4a"
        },
        "item": {
          "id": "49c7ec0b-8990-4014-ad78-669aeea4c668",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "9bbac93e-28ff-40c2-922e-001acb9339a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d85256bd-1969-417a-923d-ba35bfe54408",
        "cursor": {
          "ref": "2c65d7bb-56fb-4320-a2b7-39055d2e4048",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "1769ae61-79e4-4613-9d53-3896868c5f84"
        },
        "item": {
          "id": "d85256bd-1969-417a-923d-ba35bfe54408",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "3f4cca2c-9243-4d7f-9bbc-91019e4b8e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d0e6921-87f9-49ee-87bf-e72ae5367b68",
        "cursor": {
          "ref": "3c8e43da-01a8-493a-8573-232f68dfff39",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "c1c73647-2dc6-4dbe-9f4b-910cb666a42a"
        },
        "item": {
          "id": "4d0e6921-87f9-49ee-87bf-e72ae5367b68",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "892ed078-94b9-4f3c-8b89-1a4afe65157b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c79adf6f-86b8-4987-a1ca-5be93961d02d",
        "cursor": {
          "ref": "95141281-72e5-4a1a-90fd-31fef576d6cf",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "30ca2c4d-3c3e-4d90-809d-432c472cb8c6"
        },
        "item": {
          "id": "c79adf6f-86b8-4987-a1ca-5be93961d02d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "9ab56086-63b4-439e-a8ee-62b3429b7b67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6254346-2913-4f31-b28a-69e7ee7aedea",
        "cursor": {
          "ref": "74489500-c9ec-48d2-9503-c8060669f5ab",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "cca57979-b987-409b-a51a-3f2dc0b95503"
        },
        "item": {
          "id": "f6254346-2913-4f31-b28a-69e7ee7aedea",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "694f8590-7423-4b16-b844-486a9833ae0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e626b6a7-15ba-4ed5-89f6-d8221979668f",
        "cursor": {
          "ref": "56b430f6-2cae-40eb-863b-de0de8424ca9",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "59d790f9-1ddb-40b5-868a-b01875507db7"
        },
        "item": {
          "id": "e626b6a7-15ba-4ed5-89f6-d8221979668f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "3ce5a25b-a4ff-4cb6-be4d-d338929fe663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "243e8938-f0e8-44e8-ac9a-9495f788d7a3",
        "cursor": {
          "ref": "c7e008de-f138-4b3c-8369-de6ae2232091",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "917c3f6c-8b2c-4aa5-90af-a30a45891362"
        },
        "item": {
          "id": "243e8938-f0e8-44e8-ac9a-9495f788d7a3",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c6c12895-696c-46dc-ae15-e0b4e3bcc13a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8d2aa1-00b9-4881-bd6b-7f7e68a93e50",
        "cursor": {
          "ref": "7a8f1a4e-a351-4943-be0f-9749605def2f",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "7e2fd3eb-81b1-4a58-9e38-e4704378ad5d"
        },
        "item": {
          "id": "eb8d2aa1-00b9-4881-bd6b-7f7e68a93e50",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e7158cbf-57a1-45cf-8fc9-45dc36247a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e220389-e647-4c96-9d1d-6ce1c0dac5d6",
        "cursor": {
          "ref": "77393be3-2e13-4c03-9bce-96dcc09fdba2",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "7633a6cf-1332-4e9b-97b9-041f9f106724"
        },
        "item": {
          "id": "1e220389-e647-4c96-9d1d-6ce1c0dac5d6",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7fba8969-b9b8-449c-a6df-d8b61eb306fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26cf745f-3262-42d9-a841-1ebe4261f0df",
        "cursor": {
          "ref": "9a308f89-02e7-4492-89f1-3f6cffeeaa41",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "85c9f21d-00a8-466a-aff9-3d062ef0f6a6"
        },
        "item": {
          "id": "26cf745f-3262-42d9-a841-1ebe4261f0df",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "b20e40a4-af61-4af8-9fe4-7a3a00408b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a69b11c-0bfe-42af-bc05-b3a0930b8134",
        "cursor": {
          "ref": "566b94f9-6be4-41db-bad2-9685bda943d1",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "2cb0d451-3840-4f27-9d16-c3849548d580"
        },
        "item": {
          "id": "4a69b11c-0bfe-42af-bc05-b3a0930b8134",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "2fdb2078-3669-42d4-8d06-64c50457787e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "327ecb38-c486-4ae3-8fe3-9b47b446d634",
        "cursor": {
          "ref": "ab9542f5-8862-4ffa-ab30-40d78ee9a62f",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7baa4881-821c-48d4-bba5-ff7fe998b183"
        },
        "item": {
          "id": "327ecb38-c486-4ae3-8fe3-9b47b446d634",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b3b4e6ac-7921-4ab8-9681-e08856af6d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31d3b4fa-bb10-4118-bdd7-f3714e856b07",
        "cursor": {
          "ref": "2b0b4c51-ba5d-42b7-866d-f477cc5ee4ae",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e4f38a04-6623-4958-8f03-35b429829c34"
        },
        "item": {
          "id": "31d3b4fa-bb10-4118-bdd7-f3714e856b07",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "7ed38d83-3267-4fbf-a1b0-4ed12407c80b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f2bcfd-2678-4878-ae7e-1bd2a3e0bc15",
        "cursor": {
          "ref": "8cf4830d-5bf5-4b3a-b610-f9c8274c144f",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "7987211b-16e8-4953-972f-0705ac2d20dd"
        },
        "item": {
          "id": "38f2bcfd-2678-4878-ae7e-1bd2a3e0bc15",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "4b718c2d-f3dd-42a2-9df4-3bec7d084e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a47ff3be-883a-4fe5-a7c6-cad7fac76db6",
        "cursor": {
          "ref": "921bdbbe-3849-4d8b-acdc-a60fdcae7be3",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "61857a0f-be22-46ea-96de-b10a64002c14"
        },
        "item": {
          "id": "a47ff3be-883a-4fe5-a7c6-cad7fac76db6",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "3310f372-737c-40a6-99e4-00edae99bf19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "281a78bb-eff4-46ea-b794-e12bce84011d",
        "cursor": {
          "ref": "b9d01ee4-c8ac-4406-866d-72a65ce8fd64",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "67426f07-47ca-4b4b-8ba7-a8e03deb0c5a"
        },
        "item": {
          "id": "281a78bb-eff4-46ea-b794-e12bce84011d",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "769c87e8-cded-419e-9768-17b2c7af7cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb1964df-65f3-4ef8-82b7-573caf47180d",
        "cursor": {
          "ref": "2a3bebeb-17ac-458c-8328-72d100c8f596",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "ef2db2b7-239a-4790-b9a7-9bcbb0507ba7"
        },
        "item": {
          "id": "eb1964df-65f3-4ef8-82b7-573caf47180d",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "80c11ae6-deb7-4a0f-949d-9437e8ae1e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc80b80f-4c9c-4904-b3a6-586f26993f5d",
        "cursor": {
          "ref": "c7b29bcd-7614-4325-947b-c6929a0498ca",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "2663728a-a39e-43b9-9025-772135307827"
        },
        "item": {
          "id": "cc80b80f-4c9c-4904-b3a6-586f26993f5d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "69aea001-872c-488c-a830-439e74058601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f04d1d9a-5efe-4783-aa8b-82db034ba9c7",
        "cursor": {
          "ref": "4ed57bf4-4538-4592-a845-e4528d4e8627",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "b9f26a8f-dd29-4a86-ad28-dfb0df5cc0e5"
        },
        "item": {
          "id": "f04d1d9a-5efe-4783-aa8b-82db034ba9c7",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "f22175c8-f057-4f35-9b48-4b73cd7ea3ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34717388-7b67-4f25-b57c-d1bbabccad7f",
        "cursor": {
          "ref": "6a397c49-09b2-414e-9352-090d5f1026ed",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "48482fc5-f691-4e91-9fdc-120ed03babbf"
        },
        "item": {
          "id": "34717388-7b67-4f25-b57c-d1bbabccad7f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2bbb519f-01dd-49e7-9e9b-c6d21c189532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619e43a6-ff60-4e5b-8519-17725775c19c",
        "cursor": {
          "ref": "398acdfb-43e0-4572-b41b-12b7a57f994e",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "825c0aac-29bf-4c93-b1a2-6d7c3e174fe2"
        },
        "item": {
          "id": "619e43a6-ff60-4e5b-8519-17725775c19c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b9103970-6533-42ba-ad41-e361700dd7fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30424661-f711-4b70-a670-3cde25c0987b",
        "cursor": {
          "ref": "ed7091b4-869a-4dbc-99a9-432622401d9f",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3fd5b13f-a92e-4e39-9689-9d02cc959221"
        },
        "item": {
          "id": "30424661-f711-4b70-a670-3cde25c0987b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8b28e4c7-54d5-4886-8ced-93027751607f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98791ace-24c2-4b98-a97a-e850be2a6b0b",
        "cursor": {
          "ref": "e788396d-a539-4438-886e-5e3fc0a4a469",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "13a00ff8-a20e-45bd-a750-1834c39f2731"
        },
        "item": {
          "id": "98791ace-24c2-4b98-a97a-e850be2a6b0b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7ee23bce-de4c-419c-baa5-dcdbbb5363db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7d8e60-c311-475a-8a9b-e5b6fc1e125a",
        "cursor": {
          "ref": "2cd23845-5338-4a2f-9f7e-a1def22923bb",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d448d0c1-d1b2-4a0b-900d-779ae3e38ed5"
        },
        "item": {
          "id": "0c7d8e60-c311-475a-8a9b-e5b6fc1e125a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "0e940313-d09d-4fcd-929d-b3bb316227b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "369bade1-ec33-4ac8-8bc7-89ab560c83ba",
        "cursor": {
          "ref": "079dad29-5a00-4821-846e-29f5b8a6ec6d",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "4a2af131-7781-4e19-b62d-513ce57951ae"
        },
        "item": {
          "id": "369bade1-ec33-4ac8-8bc7-89ab560c83ba",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "9c33be0d-d0dd-4e92-adda-e001631a12c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c271ab5c-9915-4f9d-9cbb-8c95650f3f84",
        "cursor": {
          "ref": "0d885261-5971-4f57-80ff-cbf680d8e197",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "46b1c5b0-c4aa-403e-975d-ea365455581e"
        },
        "item": {
          "id": "c271ab5c-9915-4f9d-9cbb-8c95650f3f84",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b94e4a8f-ab72-49b7-87a8-42424e498699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b09f8a-e715-4cb8-aa2a-bbd2f98ed3ea",
        "cursor": {
          "ref": "bbc93550-4856-4c37-83be-e96bfbb6fdc2",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b2d9269f-b6be-40ac-bd52-507f2692c9d1"
        },
        "item": {
          "id": "66b09f8a-e715-4cb8-aa2a-bbd2f98ed3ea",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "86250c3e-7248-49f2-b689-26291b4b5705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd71a838-085a-4455-a52f-7ba124a91f5b",
        "cursor": {
          "ref": "a8ada296-afb4-4b70-b87e-7fffa7d68b5f",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "5fec5bbc-25af-43c4-af0e-610ca58a4096"
        },
        "item": {
          "id": "bd71a838-085a-4455-a52f-7ba124a91f5b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e5fa6bf0-80d5-48cb-815e-4eb7ad6b95cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb62156-aa75-4e0c-98bc-eb7d8fdf9127",
        "cursor": {
          "ref": "0cff0b2b-7f26-43b3-933b-76305f451d5b",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b8cf55f4-71e0-43f6-9b38-ddbfe9fdcafe"
        },
        "item": {
          "id": "4eb62156-aa75-4e0c-98bc-eb7d8fdf9127",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "05316cd5-4c23-45b9-a621-84621524fea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad4ef87-aa5c-4437-adff-2d7288fefda2",
        "cursor": {
          "ref": "a41ee434-8b63-4f55-a4cb-a25fd7d5a922",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "98f557dc-2bc3-4124-b42a-c823c45fe904"
        },
        "item": {
          "id": "9ad4ef87-aa5c-4437-adff-2d7288fefda2",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "1fce8c8d-541f-479c-8061-be81b70a6ac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba9be76-60a8-4ca4-b0d3-d1706cb541c8",
        "cursor": {
          "ref": "96645a45-42f0-49bc-9c68-5642f9ecdae4",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e36b0004-87db-4861-9b8e-6046e1438fa1"
        },
        "item": {
          "id": "7ba9be76-60a8-4ca4-b0d3-d1706cb541c8",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "45996d0d-0366-4535-933d-8428600ba74c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41fec0f9-65f3-4da8-a06a-e85ffc43606e",
        "cursor": {
          "ref": "dda21735-4d26-4eac-81f2-942bb7193866",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a52ef468-9d0b-4e66-b950-2a21e104bcad"
        },
        "item": {
          "id": "41fec0f9-65f3-4da8-a06a-e85ffc43606e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0e714cee-61ac-451d-ac43-2bece71fa957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c1fbe4-ee60-4691-9388-b150caf7c806",
        "cursor": {
          "ref": "3056a737-ac53-49ca-bb93-290dbb592d8d",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b5ca579a-9253-4826-b5a3-d847dad3641b"
        },
        "item": {
          "id": "28c1fbe4-ee60-4691-9388-b150caf7c806",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e4715b24-6951-41b5-bf7e-4e7286825870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "352570ff-01dc-4417-86dc-a296f2f2d46b",
        "cursor": {
          "ref": "70bc9a19-932d-4a9a-8ed8-d9f94d4989e6",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "473ea11c-9fa7-4d34-801a-de24093a5fba"
        },
        "item": {
          "id": "352570ff-01dc-4417-86dc-a296f2f2d46b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b5e8365d-cd20-419a-9d91-ba8ba681a622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de314b1d-1aae-46a5-ba63-50b077f32375",
        "cursor": {
          "ref": "91d5444d-0b1b-42d1-94cd-6356d1902ad3",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "64e0e3f3-bb8e-4218-88d5-6303d935a4b5"
        },
        "item": {
          "id": "de314b1d-1aae-46a5-ba63-50b077f32375",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "61dbf3d9-1f95-4f7c-8d4c-8502e3cf6804",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "762dd218-0c77-4cfc-9f0c-db60d480420b",
        "cursor": {
          "ref": "9b228a15-114f-4254-b2e7-19ccc860fdb8",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "857d6036-0705-4c24-87c4-ce5454bbe4de"
        },
        "item": {
          "id": "762dd218-0c77-4cfc-9f0c-db60d480420b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "fc8c1891-94be-4141-b124-c41ffec98d32",
          "status": "OK",
          "code": 200,
          "responseTime": 2036,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "77544050-efa5-4448-82b5-b1860082057a",
        "cursor": {
          "ref": "f094acc2-98c1-4054-9f94-147e331c460c",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "161a9898-aa0d-4ea8-8f76-381b1103294a"
        },
        "item": {
          "id": "77544050-efa5-4448-82b5-b1860082057a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "aba7cd91-a803-4140-8d65-94cc16e3c5e5",
          "status": "OK",
          "code": 200,
          "responseTime": 3082,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5eeec8a-c3de-438a-9f34-7f8bf4707272",
        "cursor": {
          "ref": "ad0be8df-7f10-4af1-84de-8eb5ff5cd791",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "512b0735-65c1-4125-8ff7-e3400aa14c06"
        },
        "item": {
          "id": "b5eeec8a-c3de-438a-9f34-7f8bf4707272",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "412381fe-90e5-4e0f-b7e0-7420cef1f8c2",
          "status": "OK",
          "code": 200,
          "responseTime": 2490,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "607eaae5-2c87-497a-b9c9-143a9dfd2399",
        "cursor": {
          "ref": "cb88d7c7-c610-4d3c-b13d-de7abb339b5a",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e11bf5d7-8504-4204-9f5a-44bccf16b11f"
        },
        "item": {
          "id": "607eaae5-2c87-497a-b9c9-143a9dfd2399",
          "name": "presentations:missing_auth"
        },
        "response": {},
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:248)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token u in JSON at position 0",
              "stack": "JSONError: Unexpected token u in JSON at position 0\n   at Object.eval sandbox-script.js:2:248)"
            }
          }
        ]
      },
      {
        "id": "73973a9a-e17c-42f4-a4d4-61d2076d4aa9",
        "cursor": {
          "ref": "2c53b65e-f9f4-49e9-9f57-b17bcce0c7e9",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "33c1f766-79b0-48c9-9d26-36f93edb535a"
        },
        "item": {
          "id": "73973a9a-e17c-42f4-a4d4-61d2076d4aa9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {},
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token u in JSON at position 0",
              "stack": "JSONError: Unexpected token u in JSON at position 0\n   at Object.eval sandbox-script.js:2:249)"
            }
          }
        ]
      },
      {
        "id": "bbdf22b7-78b4-4b06-be08-8c4bb2e8c30b",
        "cursor": {
          "ref": "34db4c6f-7ad0-4488-a47f-d080b7b47ee5",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "cfbbee37-8f2f-4db1-b9b0-402f3f27de2d"
        },
        "item": {
          "id": "bbdf22b7-78b4-4b06-be08-8c4bb2e8c30b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {},
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token u in JSON at position 0",
              "stack": "JSONError: Unexpected token u in JSON at position 0\n   at Object.eval sandbox-script.js:2:250)"
            }
          }
        ]
      }
    ]
  }
}