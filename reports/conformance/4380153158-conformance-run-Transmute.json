{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e556405a-24fb-4d38-9224-31a040ef2328",
        "name": "Clear Cache",
        "item": [
          {
            "id": "f80478d2-6330-4fbf-bda2-1416e2120233",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c4cdcde9-dd0b-490a-bcc8-d3f2de57a95d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "11c7f550-840e-4d6c-814d-92b18df310a0"
                }
              }
            ]
          },
          {
            "id": "3f062221-50a9-4297-8977-8ebef030e2dd",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "64293326-d365-476e-884f-8095a2847e8b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "701f3515-4e41-4088-a3ef-e006e47e5331"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "479e8201-af0c-4655-98d8-6a12b02912ce",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "f2197978-3821-488b-89d5-eef858fdf300",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c5f9600e-a781-4883-81e9-cf9430aca229",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d568a16-395c-4040-a332-c2c2c081f5ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "92fa5caa-51fb-44fa-8c4a-7afea04f50e7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8c581f25-d0f3-4735-9140-7d8a92d91ce8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "303b605a-4813-4692-bd7e-4d46f5bb2e15"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c6578492-7052-4630-b9b9-f820e55d473c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8969080f-aefe-48ba-ac02-081f446e4e09"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dd53347b-d5a1-46cf-b5d0-3c7a4cb592b3",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c7694986-71d3-4653-9964-0871e01d0c9e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d1ffca4a-c790-4ea8-88d4-700a7d6a01cb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2ec6ac76-aabb-40b8-afe0-874568b34503"
            }
          }
        ]
      },
      {
        "id": "23291f2b-fa46-461b-b515-e5f2014eb7bc",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "31bcaf61-c7ad-44d7-a8c6-6cec1d101118",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d8b9fc7f-c648-470d-8b46-b8983860340f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2d229c0f-2618-437d-a10f-2b1b841a0944",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b274c330-6734-48a6-bb89-1517aa345f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "785479f3-e832-400f-b5cc-2032e4b51355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d6a188f-daa5-46a2-bd11-9a0af3eb865d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "047c5948-0842-43be-999d-1c96843ce5ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4bebbbca-5956-45be-805a-a9d9bb878d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91aea3ea-5197-4cd1-8b5f-a80342c8a8a4",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "153376db-9651-41ad-9c7d-1cac17c8c879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "50484597-72cc-4fea-a036-24444ef2953b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d873533e-355f-4773-91db-cffd5b4c33c4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3a6e17a6-a208-454d-9f29-f33bcd875639",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4d5b6e-99b9-4ab2-a26e-91ca7f758e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1242355c-adfa-4ca0-b5a9-e2c1ec7c91ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "369288bf-4152-45d4-a516-9255a68bc3dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4822324c-f559-4ebd-83b0-37b30f60f636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d400270-afb3-4985-af92-92088426ce96",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "490c9e2b-4c87-4dab-9086-950885dc35ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "23b0680a-eb3d-43ba-8110-72399ea387e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af4b7d4b-9d9c-4865-887e-299c93a73074",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "68034e9e-b510-420e-b5a2-04d06466a62f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6a2d8332-f022-43d6-91bb-ad997690b093",
            "name": "Positive Testing",
            "item": [
              {
                "id": "71b27cae-63b4-425a-804a-c2dad4e662cc",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "32a62c4d-a961-478e-b9dc-6371cde1f691",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "589bde4f-9d20-4457-812b-63b5ad42909d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dd43d1f5-6d6f-492a-ab29-d5d0e34ef7a7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "42d9752a-0a9d-4dff-a74c-3f42efe7fb4d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e9d61f55-f088-4489-88b5-4fb5b90a004e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5b37057b-ceaf-433c-8c25-4c0b91185741"
            }
          }
        ]
      },
      {
        "id": "05ebb8fc-128d-4970-8c64-45136a847678",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "90373e92-d22d-4846-98b6-ddb5f2a72744",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a134690f-8819-4413-ad49-db6bfb80a9bd",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "bbda5e38-9fe6-4696-8f66-ea4df2948fbb",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac5b4dc-1d84-4b2a-ab4f-464e8c2f797a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f21fc863-a75c-4860-9733-39e58fb13f8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "585d90fd-e676-4954-b185-4f6a83a48d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7cedb7be-bab2-4a9f-ac7c-d42a1d95d31e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47659375-06b0-41dd-8a97-176c715967ec",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "307b9c80-72f7-427e-8762-5324bf46d3be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c584f84f-40d7-4536-bf05-b57152c14d06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "120bb587-cf9e-4cd8-8af4-f0ae52ec5f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ffac2cb9-0323-45c8-933d-99bac65092fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "972684dd-04bd-44fd-877e-629ee95b4187",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "334e1c0b-2e47-4269-b9a4-08add6d8cec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "198880e6-d531-47d0-a2d4-17b381b5e7b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc7c6dc-42f6-4e06-b665-ba766ace07b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c11ffeac-c906-408f-820b-0fc51a2124db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55f32031-effd-4359-9c73-25fa85b585a1",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d8a885f-64ee-4ba9-8e18-098b4a9dfd14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3d12b32-c729-4e1f-a9ad-d14cc97958df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc9eba9-3543-4392-b954-a103472957d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67dfa82a-8db1-45b6-9bc1-c0fff15840e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de7edaf-7529-4bc9-b4d7-18581a4b6ac5",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0306d7d4-3d8e-43dd-a3d2-f54e001adc57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "228a86fb-87e0-4ad0-9c1e-e79b15ee213a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d2ef390-6581-4e13-946b-4059563d3b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca47e4b1-6a74-45d0-a0b9-155b5c1a1f41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac93340a-d607-491f-b9ee-207fbf6266e3",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb54d8da-edb4-4a65-b54c-20ab79f0d109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b990cbd0-1036-444f-92aa-1e90d654a690"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "993d27bb-81a6-4548-a718-2ed0b003ca17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2445de12-c761-497c-bb8c-78a951a00683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db7aa83a-6382-4eb3-a783-af740ad7b482",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed4c57b2-c9ff-496a-a49f-fae2e23ad212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b137be99-0fa1-4268-88fe-68d9d137fa3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e3435d-2aed-4b89-a576-20146e98eeb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f4d1783-3682-4f4a-945d-c91fdaeac5bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b5ba0f-09bc-4771-ae00-94b416081529",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e15dbf1-05b0-4c6c-a844-bb3031521900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f482e5ae-3750-40ea-8d2f-656b9f650cb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e19a30d-ed30-4b46-935c-c30caafc8496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47880ff3-700f-4d18-8dff-c0b8d205c62f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41b2e6d5-9cb9-44d7-a991-c02c5205c81a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d33b635b-4166-48b0-87ff-19de995e7267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46befdb3-d71e-4b32-95f9-48a059a0fedd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5cc7b2a-9a41-46f9-b850-5243779187c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e981424a-d7c4-4739-a5c7-69888b6b6036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "077bc11f-390f-421c-bfab-bb2668b4fa17",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a2c3ef5-5927-4090-b77d-b81fb0ce8c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5bc4910-70e6-4066-b9cc-b1cd7f327e56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea12c8a-6ca4-470d-9d45-ccbeca2c5d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f00769e4-681f-4d16-be1f-9657f9837d30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "487036e6-ad94-43d8-a606-9ee96ee0a89b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af0519f-f3e4-48aa-aa20-54be1427cd95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "951d2783-9e71-44b7-963c-8aba6805ca43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ccc743-6948-4062-b046-6d8c4ca1c317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c22cad18-667f-4f9a-8331-d0bd833bea47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc56522-cce1-462b-b4f2-322b69c49c09",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc99591f-45cc-458d-a4bd-675412737779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b04ed679-3dcd-4801-a646-752cf2d0713d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92111b4e-bbd5-43d3-b20e-b40455fac405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8c977d8-7d08-45aa-a61a-ac8496219e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "240cc798-0304-4464-b265-4ae33ba55896",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5765c054-2ca8-4ea0-a5fb-825c389bd201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1f19316-4d41-4733-9d0b-6e1f4c563a8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de32758-da63-4a23-8f94-17bd190595c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "faa4c978-fc26-48f8-9333-f1cd45245e45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03322adb-91dc-4f4a-9c4d-97155f1ffd7d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e158ee-edc6-4500-b858-94bafd3fa62a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93fb3641-cf1d-4e05-8283-847b2e98963c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bdbeeef-018c-4124-bfe3-ec39e6477942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63417ad1-eb27-409c-8882-1e6fb39d571d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76873c51-c2b9-4129-b2e4-1998ae6d83ab",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00a9dc29-3481-45e8-8c4b-fa958f2461f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd6857f3-2c0c-4ef3-8b89-4cf7c9edb718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d9a0347-60c3-4185-a953-58d04acf294d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da5e148b-75b4-4976-9813-e8b1e55af016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1330410b-d380-46d1-ac19-203d3973113d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b111809-1fba-47cd-b5ea-fa37b5a908a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4551f78-2527-40b5-922f-7478cbb40283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6611374-ed08-4aac-affe-c3cb13792840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d360342d-1e3d-46a4-836c-51ae596761aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dcda894-9ab0-4d50-a0c3-98b0ff22a338",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f6c37fe-e838-4e2d-8a5a-78d9fa444bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0714c045-0f8a-4a25-83f8-818d039aff40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dd4afbf-6d71-446e-bf12-c313cbb21650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a309044c-7092-4c5e-a3da-2b954c81091e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90197d8e-438d-4b53-b7bb-82ff1ea1798f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63eee4e0-f0cf-4be7-b0a9-90218088e382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "139bab51-cae5-4851-81f3-26b9ca4abb80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f06a2f4-d303-49a1-ad13-82593615a89a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d8a727b-bf7c-4a6c-a019-0080223adbf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daf6b808-17b9-4bb6-9351-905c98bae16b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "023a742d-c2d1-4d51-aec9-9aae8adc1908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed3543a0-9593-4872-b524-6711da2df90e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a92b1d9-e6fd-4eda-a5a5-1bde638628e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c2ecfb6-e756-4d82-b98b-54449005e064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1e31c6-d030-4ec1-aaf0-6d03d569dc5f",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfce1d4e-4969-48ed-ac92-a8b31c2f3c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c24ae415-a982-4bcd-b05e-ee3a7c7fd775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b40d6ec1-1dfd-45ca-b9b7-97cf55148f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9a9e88e-956b-433f-9092-85dbe8183cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90fd8f45-c040-45b8-a043-cbde8d917bec",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06a963c9-90ca-4b0d-b044-5b95ca34923b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3e662c0-ebbe-4d1b-8ece-c99abc566e9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f30b81b2-31c5-4fd7-8fcb-e1188e17ab47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7a63f46-62e5-4d11-8d18-150830b8fc90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e05044-1ee1-4478-9166-1600e655eba3",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1534c14e-53ed-4f32-a824-6545db478cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15807e14-e898-4522-a503-8d91b8c2a417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed83af6e-5ae0-44d4-9bba-7d1efa1c9fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "de0c94e9-56fb-4cd8-bea9-0c523418da99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dae1c775-5f8d-4467-9d17-ac312588e6ac",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1dd87cb-7183-4731-8c0f-a675017d0022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1474ba9-fa13-4701-a7e6-f6450afaecc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "908f261e-537a-429b-ad0c-14181396d624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bd4f1e79-77cd-4d5e-94c6-21bd64eb3636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca675022-e6ea-4def-9a58-645f200e44c0",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6623d8d2-7f4a-460f-b380-5c89bcf1b451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46f47eab-e4e0-4594-a3ae-b242e49350e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633330e1-26e8-4304-b79b-b4e8f2c6fb86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "152d3532-bb66-4d0e-9ef2-0d516c7cde4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "036e058f-1532-4641-a3d9-00f09461cc5d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1029bb0c-1ffe-44e4-abfc-b7fdba80deb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73cc418c-8c1e-4f68-8747-d2e93e06fccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df76fad-b2b1-479b-b292-e6e15465266d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "663b6e24-c771-4b90-a6dd-c9e6d85632fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "484ffe1d-2ddb-4a50-8a37-44b80b0139b9",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "889600a9-1f62-4081-a0e1-e78e3e06aee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cd0c616-65a6-47cb-a18a-3174230a4b4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a87a02-7ba1-4bd2-b914-d2af67a5dd00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aadb7d2d-36bf-4463-ba77-31f81a158f0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91cef864-ea0a-403a-bba1-b469c8f03863",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "212996f0-af6f-4356-943e-7092f1bc0ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "756084d6-fedb-45c7-8ec5-e099513404c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d38dcb09-61d5-4edd-8711-0fe97ac7690d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c506f7b5-9f00-484d-8712-48d8df651c47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "342798f6-ed95-4af9-bf23-3b2d3616f723",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4eea3bc-7792-44b1-9733-159b21b9c473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd54a1bb-00ff-4472-802f-2640850e7850"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c4ca2e1-f709-4613-9596-29cc071ffdb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "608adf02-5cce-46d9-bfba-cede7cdd14cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55a510a4-ce88-4cf3-a7d6-7b094a8c2162",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe9f4ee-e194-4dfe-a066-b44d0763e334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7ba7664-ed50-4e4e-be2f-07ed843429bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "726e807e-1028-498f-b5d1-888a89a636f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9983e1bd-03d8-439a-bfc9-83d29fa2ee6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d73550-65a2-4c23-aaad-269964e6edbc",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b608bd62-9907-4a3a-9c7b-1566494f9ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "497e49ad-582a-42b5-bdc6-892b157128a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7931dd6b-ffe0-468e-b737-2e2405c9f357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecad8a65-c8fb-4e9a-a4df-e8a1829f56d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5bf9ffd-ca45-4d5f-9e61-3bf2ad6a10cd",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00a96712-9493-47b8-90e9-06c5105b2302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf68b096-122d-4dcd-bf41-d2cc02d304e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05b7eee7-d7b3-4e92-87c5-0a6dbb3f1171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d3a18bd-757e-4de6-bc42-9640f45a7508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74658ca5-aeda-4db6-9525-f8744ce7ff78",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaae8a0f-384e-43be-8e00-11bb06081980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "115df993-1742-4ae5-a53e-f69e4fd79c15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e8441a0-38b9-4423-b0f6-c08ff67e34e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "46265ead-247e-41ea-b619-4f0b5625ea37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4938ad4-71a2-4d3f-bbe7-0a16f90992fc",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca82a22-b2b0-487e-a702-b76da2497ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86ebc20d-086a-4a65-a422-63b0782a40af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd65dadb-96ae-4c0d-a14c-a6b6b30fc0c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d016127a-8514-46c4-9b04-3c320f33def8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7a2b16d-cdcf-46ac-82ff-15dc5329b8ab",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c8387aa-318a-45b0-bb10-f2e4e4b3b486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb4779c4-3123-4dee-8841-64262feb1555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb94f9d-b29c-4579-823a-fb9dbfc10dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4ff1728-2298-46ed-8b0d-f9d32fb2893d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee22225-ce76-455e-a0a5-e0efd366f364",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f1d060-2246-4951-8916-2b5cbc7cf0a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95d78f3e-66fa-4fa5-badd-7a396b2bb9de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af3febe-ff22-4647-867d-ab667eb3ad06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "9b45ed4b-a57a-425d-99a7-2a463c3eea47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14fa99ae-dff2-45e6-875c-9581d6e5ae0e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a3f05f-d2a0-44d6-9f37-add9cb75b9e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "86d1b776-ad3e-4fbf-91cb-00baaaf86067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baeab9ae-50da-4704-ba0b-4e16a3965a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "90aebd2b-6ae9-44c7-a0f5-e9812c84d816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "732645f8-47cc-47aa-bece-8adcee1217b8",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea92cc8-89db-4238-a350-75724834bc89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e886d4ae-2799-455f-81c1-c6ac5d898ad5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f3586d-5f82-4312-b7ef-83e225558ce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dae9f5f8-7099-481a-9252-e111a8627dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "291ecf7a-d527-4a04-81ce-13db8d0f5f48",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88994fd6-df95-40ee-ac47-b1b982d8a07c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eed3fa35-866a-4ec6-bd71-24cdbd1fa6a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa91be15-ed2a-4ad0-9a4a-43439d18b5b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f42310c-541f-4ea1-82fe-2ee434b3f75b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "012edf3f-bf3e-443d-89d9-087e59bb0376",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "375a81f6-a225-42e6-a8e6-20c86157408e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d05fb694-be45-498d-a578-3f5ebe4a75ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6268fa75-a4af-4f63-9ea3-44fc4724e904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0f48585-489b-49c1-919a-7393d041aab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a66643-c365-43e0-a690-a905a8c29e5b",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "850ccb6b-7c23-452a-99ab-90837811aeb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "311b587c-6db5-452e-bfa5-cbca64fee4b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e276f1a9-73f2-4b06-bb1b-3acf41448167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "706e3ba6-5886-4d06-85c8-7074eb4b43a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6704e89d-7996-47f6-a26d-dfd14ce15f76",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08538ae0-d093-4ed6-a5bf-619b41288d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11072425-9438-45d6-8d92-0b14cf034656"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffe7ebcc-16eb-44ea-b612-e6ffc6a7421f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "469ca4ec-4e72-4921-b664-f7d9cd1e1f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe4697fc-ca89-4478-b2db-457197132e47",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14eb3b3a-9499-4a9d-86dc-4c9cd0100415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f131b31-f09b-4d2f-9b66-ed8f0cf8dcad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c627303f-bb89-455e-afc0-997fa9144e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "446ce6ed-9074-4a51-b9e5-1aa892e4d5e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d9dfd1-a9e9-4308-beea-a82e1cb2446f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6962a0b0-cc21-4ca5-aa2a-0b1a3d89308e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c21c1b7f-3826-4f72-b55e-9ef7f867c08f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85f6281-c530-4df8-a1a7-2ec110060f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8df41956-3dd4-49f5-a303-17084e9827f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "303c7fa2-adaf-4675-89b2-8f42217b66ee",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09382a23-2468-4da3-9102-8c5867f55cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "743dae8d-8a16-46f1-8e25-7ad14215fda6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baed1d6e-aab7-410f-b998-032e1efb1251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "67e60683-c55c-4ce7-b454-8daebb45270e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61fe7d77-5cbb-49ab-b717-a62017cb0aba",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d09e7834-6cc9-45d7-b72c-ead3b50898c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3a61eeb-adac-406c-ac7e-0d4c168d0632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5332077c-de29-443f-89f2-a3ead8784c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3887a2bf-ac2b-4af4-9845-58946b345f1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49013546-0e4f-45b0-8595-6c8f06244875",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d1cd604-a70a-4f58-82f0-a11767dc1ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adf0cf15-0944-426d-a9df-c872a10b7c5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c060d3cf-9692-4fd3-9baf-39823bac202c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5c155f7-a8e8-4146-a1b8-fabd65c3c451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe3287b-ab44-43c7-92fc-30d4d202c907",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "040a09dd-d721-4cc5-9e3c-e0e6d5f035ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5adb7ce-850a-426c-9a77-4dc667542de3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30fba31c-2015-472e-9643-7d2b01d944fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "db0b6409-1df3-4cf8-ae85-d8f7b37da4b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b252861-0678-447e-8ac0-41374f632ae0",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b5d1117-60e7-4a50-b004-32cef9aa48c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ae1c465-3e79-4280-8e4d-13ff8b416a63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c45ed5fd-ddb1-477a-9c1c-798fd4de065d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bfde1fe-17f8-4aac-88ae-9fbbc1344d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b184ba99-3457-456e-a23e-9ff48cfb7059",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f040e9c2-1411-40fc-a6dc-83cc4ffb6b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e81c748-3cbc-4fe9-b344-e63950877426"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2632b7a7-4837-49bb-8b51-70c9082c0c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f6ef5cf-9362-4b1d-abdd-423df6fac18b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f299257-0a85-4a76-beaa-bec1967b2b18",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac7a3a4d-029a-40ca-9b9e-df9b53b4548f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a349b45-757e-429f-8377-71e409dcb8f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8274506b-2144-41f2-b3b7-4169260615df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "67a0ace0-5a6b-4787-8400-646e287f720c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b1115e-d52d-4b16-ad73-333804358bad",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd1473e-751e-4d71-9089-6fc1f9d209b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abc33afd-2a8d-4a3b-ae7e-6f60b8c123b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9971f101-88c3-4f5f-a2d0-bc7b09f8243e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc912dc2-40ce-4b24-8750-b7df842cdfda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ee67fae-4984-4f2f-b6e4-8d903b503990",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c4abac8-d408-4af8-87f8-e1d512abc002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68ff82ae-289a-4d2f-8294-a436ef13ed79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa65bb89-fe84-4e9e-ba67-260978b66c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "918e868c-88dd-4f28-be76-f71b54f49fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c57ba69c-38a1-4141-8269-a234fdfe4fc6",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af48d4a6-0342-4fc1-80a7-1d1cc35ed7e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d05083c-337d-4788-85b6-c94c3c53226a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475e066a-6ac2-427e-957b-0f9f6df41bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5373d4b5-5f57-46b0-bec6-24ba086744a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11efbe12-71a5-45f9-a5d7-d233cf42011c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd2910d-d8e7-42d5-aa9a-46fb68d3b04d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "167d5b1b-e1d4-4814-beff-a3dbea4590cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "affebdcb-7fd1-493d-bd95-55c05b066fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "02fcb1b0-05ee-49bb-82d7-f5af2b74e4fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1cbd461-8f30-4ade-851b-804de3434382",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2fbb281-8c78-4c7a-8e0a-78ce3c35e37b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cdbb9f0-c54d-48e5-a4be-d9f73cf479e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b00267d2-e6bd-4e68-ba46-8c882f79766d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "88bdd495-7a56-46bb-b477-394b07d10ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d4d579-a238-495a-8d0f-b5245fbb8bae",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f4735ca-9569-4edf-a4d9-f8eb9bd011fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edd51939-5a3c-4995-8c34-3ab16106e179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8bd944c-93ce-4ef4-98b5-6fa5f4a58135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ad1f24e9-470d-48d1-aa8f-69d12814f99f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0914d905-944b-4dc2-8e3d-34e466f24fa6",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e847a9c7-fe40-407b-ad0e-e20dd436c1c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f38a7ea-68b2-4a34-8e0f-02d41c3f130c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede58522-64b0-4d69-acb5-69195e387ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "47a014bf-8efe-41eb-859e-304324444142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84240371-bc8a-4d64-a4be-451fd9b0c66a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6cea65d-fb1f-4dec-9c7e-2297b41f51cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1e7d467-55e0-4182-9d2a-2d31ec277aea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51863a71-a845-4fb2-945e-09ed8831c8b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0310ade-e37b-4900-89db-19f0145f2aa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77200f9a-b00f-432f-9fad-28a911514580",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7adc546-aa15-47b6-993b-b11cbd65642a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aee3a777-c33c-4924-be9e-35d7cf75ccf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "155495a8-3d0a-4f5f-bfbb-0f6d7e48a51b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa61925b-7a32-4bad-9985-04b46416b4c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6cde8a-286c-4941-9a3f-8d514a27d403",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c47eae05-868d-4626-aae5-719ed46e2c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19310284-40ce-42fa-af82-b8c56a729b57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c3e0ed8-c088-4ccb-ba03-46e9c65d9d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "13e86393-3b56-4645-9e9f-66c57d16ce0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a02f7f-3304-490a-876f-21bc0988f9eb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c994ff1e-b68b-459d-b66f-dc038d1cceda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38fcaf7a-59e1-4989-9a5d-f8ab8153ff99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d4dd0f-7ee0-4c44-bd97-846caba8a9e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5e8da2f-9b8f-46c6-b2bf-5c9c3298791e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5be5293-15e9-488a-90af-366b99d49ea1",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae08fd0-3e54-4220-979c-01523e3cb74e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42c71fba-14cc-42c9-a3ba-50ed84fff183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af46ce55-fea8-4b8d-9ccd-2301a503b73f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "81c28371-a596-4590-8fc7-e982c898a2ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ead197-0831-4d48-adf6-f6ed3326471c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee5feb1-3397-4efd-b4bd-00740cb46537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06d1a64f-79e2-4c92-b65a-94146db6dd76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "790275ab-d721-4b2d-a9f5-e1d62f3fa5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4a0cba2-7054-4de2-a29e-8d8972933d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5907249-7f39-48ae-a3da-143ce49db7d4",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "633f1bd0-ab36-4c16-9f14-d442aa0d6da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d741d75-b2e4-49ce-bc97-0895c377bda6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd7a2c1-2bd0-46ef-87d2-d5e6611edcd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "10e3b5a5-853d-4dac-b937-ab8f8d9bee98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d910e8a-ea04-451b-8d40-61065445f11c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e9386e-b865-4e85-bf68-45ac961c8c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1e31105-01b1-4a9a-86b5-32f8dc56e3e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77beba1e-a738-4a5c-a601-5b853a50ab39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "67304480-94d5-4c12-95d8-e119a60ee0b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7abec46-0c05-49f5-bec5-fd68dd6ef42a",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a24b497-baca-49f6-ad9b-acdad8b95bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2189eab-e969-4565-936b-b83d16eebb24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ceef3ec-271c-46f0-846b-bd94fc199d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1a89f5a-0918-48f2-847a-eed60258db0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e3bbbf6-3f9c-44be-a270-b307f678a268",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95664be5-db3b-42b6-9701-c1fc8a199671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "199b3210-9e66-46a1-bb56-fa01b1a11a9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3222a23-88d5-4dfe-a0a4-2a1d0dae762d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "165c4915-2f7f-4b37-9195-a12a5ef55efc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f3486d-9f6a-4f56-a1f1-3eaac8985d85",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a29e6e2e-aa7e-4b56-b7bd-3af60744b22f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24ba76b9-070f-4372-b9c7-52e2e42ca337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e94f43d-1331-4bc2-b61c-60a4ddd6ca8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b74079e3-cbd5-4f4e-93e4-f5a7ce915f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da2a641-5cdd-4d62-83e0-ef9e920ab971",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "180fa5c2-8560-4a84-a165-d7fbd1713da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69f73058-c9c2-472b-92a1-e2b3dc9be2e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c07fae-d395-4311-9be5-45cb272451cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c0f2b75-2312-4ddf-9363-459c5a77f04e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23df7c5b-8676-42db-9b0a-c07fa45d2e64",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3336c83b-1c72-4a1b-94e6-24b09788d34d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f5be3f4-71ac-4622-9d72-a9acc46073c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e2c6ca7-a289-41c0-8bea-14b8255c6a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f9b60af-ddbe-4671-a24e-cf90b62b4355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c388f13e-f80d-42c4-a5ea-8431c0e5e1fd",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6079028-68bf-4d82-85e2-52b006acd5ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0b1f2b1-9224-4fbe-8749-eac922bc8832"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b8fce4-50c8-459a-b8a2-d1976250995f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "16686468-d408-4797-b79e-dacc17bcee19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "008900a7-3718-4eaa-92b0-7c20d32c9fc7",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e04a208f-b748-468f-865a-801659753263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6889ee61-7f38-4373-8f82-5130ff686cdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4034585d-b8a0-475c-a4da-6e23e3182cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "73ee1f94-5389-4f1d-891f-b208ebd05808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b3b9771-f894-42a3-8660-645efe105b38",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43aa2ae1-a8ef-422a-becc-0e4cfa2bb8a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00998798-3641-4b53-815e-0e5cd839de58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af6c17d-e427-4b62-bfa7-f2391dc92a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d3d7504-2db3-4a8b-986f-7a4f18c4e303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b2b52c-dd3b-4208-9735-9e82f9083fa4",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b67bc44-4038-4ea7-a64d-2d9d05b7e5d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d315b326-dd39-4f06-a9e5-1fda88285b5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2321530b-85fb-4325-a601-ada340b4d915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f77dbc14-aa54-4887-af21-c7f14724c9d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e184284-7859-403c-ae04-2b30448c7e4e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "525c63c2-3cf6-4156-80fc-104445aca2dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b62e2c8-8de7-4401-803e-1e0c10ed3555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cfcb442-ba11-40b4-bc28-e1140e01fd8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1724570e-c6b0-43cf-81d3-894ca4b0c58f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8766d44c-2286-43ea-9dc5-0b2501f096ee",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea9f6d9c-07f5-4992-a83b-1bec0dec7e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7cda0ee-bbcf-4ba2-a7a5-cef85f8337cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b683cc-8b79-488c-b80a-77977421e07a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "63a179e0-8b53-44c5-9418-a27d73bed119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c99f303c-bd64-41d3-adca-3a3ac03d1a1f",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d13a1633-fd5c-42fb-bffd-cfd5cb41578a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa0084f9-c92b-47cc-ae5a-cacb04ddcf0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db19abb-3fe6-49c2-bc99-b56c6ddee5d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "be6f235b-c73d-4ed7-8b4d-86f180a074e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3f9cf45-9b84-4709-8b87-b7da30988ae3",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb813874-2c27-4697-b875-bd47d1d9cf33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d77b094-6024-4e84-b5d6-1d257102a3f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e15fbc05-a0ac-4388-a8f2-d049ba60ae70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8692dae-a096-497b-b3c2-bdb8c9fe3bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab4dc922-3047-430b-a5ad-818a1bdfda6d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a3a6382-b103-454c-a78b-cf37ee94c573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3d7b184-9d80-484f-b61c-0b43138ce0fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc79f76-6adb-46bd-b44f-1a967d661ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6b82f52-9e5e-43b2-9874-d13ce283e947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b0ebc15-6088-4ca7-9cec-72db1af96176",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc13b14-e7cf-4782-8f84-aab35bce111c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97666f13-d7aa-4b0a-8ba8-ea942637eec9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a60aea9b-6833-4c70-9657-7f8ab8427e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "853107b3-12ca-4ba6-b543-68aa49a9f52a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a390c237-db52-497f-b61a-bcfef83b266b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a53c9990-2cf4-43d6-9111-5b9e40bc65c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c37c296-b715-4dc3-9895-fb3e1ddf8b7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17fac905-e61d-47e1-b61d-ad7522413c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "50326116-b812-4cf8-ae39-abf86fd213b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6496436a-7187-4089-a601-79a5d1c13163",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b677abc8-e191-40e5-bb39-b5e761884a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "811bff75-f5c7-4176-8846-8d666789adb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e43b5a8-66dd-4434-8190-a0d01037dcbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b09cc984-b775-456e-b0c6-0198e32cbd49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6945bb56-1674-47a6-9fe4-1e7db269331a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27717923-1a53-4ed2-a024-d3b4259911e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab4d5051-105c-4d97-a0fc-d0ddfc248d59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86aa7729-f578-4913-b966-daddec8df3e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc809c8c-3c08-46bd-9a07-32ef2590c86b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fc0fe20-14d3-4db8-aca6-52026b71190c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb874d8-c337-41ad-b3dd-e04f15d038ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd32d932-1d80-4e16-baab-86738e87235d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d2637f5-d78e-4790-8ae3-7dceb4aed50c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "37aad8be-f64f-405e-97b2-c6b92ad0496a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7abb8afe-ed23-41c5-8b8e-d2176ad1123b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd46732b-728e-4b67-b2a8-b17e1b24daa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3f07dab-2e6f-4f33-9d48-a3288ebd1454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ab85766-72a3-4e67-82a8-17af20bf4ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "037cef62-5260-4180-a535-974a5f203c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204adf18-caaa-4daa-bf4d-eba5bd82d9df",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67241c0c-175d-49d1-ba41-093886b5f1e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e53208c-afcc-49d0-a0f1-ea0052fe1a86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a98b78-dff5-42de-aef5-07ade0a1652f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb6efd7c-3326-427a-8864-b564ecaa8ba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc415635-1d50-43bc-a3cb-75bd05b4a449",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f400f6ee-a175-41fa-9570-0920a495bb25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbbba409-a74b-4da8-86ca-4ffc85baf8ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f865db-caa5-4042-8048-8688e7f2c77f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "668db158-473c-44cd-b4b3-d9b76b5a43d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4825db58-605f-4202-8194-a30c39047c24",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b94285de-c1b5-4f12-b784-f612ae422d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4f248ea-9752-42ee-ac48-4c5f18c285ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ebd90ee-68f8-42a8-876d-00c5a7633313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f19ce212-f5f7-41bb-8ad3-272d436f7a7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bef2efa-91ac-4e96-a658-5f953c7ac5a0",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd3c54a-eb8a-41e8-9fb7-3b414382016e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75c92869-c192-4fd0-9b4a-b954053cd06d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba46f28d-692a-49cf-b931-dbcbe67c0495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c43b751-3b77-4a61-bbc2-c1d1dffe4fbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b651d41-aa46-43a5-9512-d1dfa6215ec6",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a35865d-bb0f-4dc3-8c15-9064d0175097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a39482df-eca7-4bc3-9876-184c6cd1c2ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d304940-25a1-40ff-902c-b8c8de9af9dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8162cdba-8106-40a3-b272-17c5ec7f274b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d5458f-13b4-402f-bdd2-f92fc77c6c82",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70af36fa-dad8-4c47-87df-29e89fa2bfa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf306b0f-475d-4b9d-88a1-97c0ab87e65c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adfbc8f1-4b12-4425-92b1-886b58022bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d1bb927-8d73-4b09-ad78-3964f85f4bb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a433b798-2e43-4e68-89b4-3f798e0f82cb",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4faeba29-a864-4373-9a2d-b14148e5f319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9fbbcd53-7491-493f-9816-99d137bfb366"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca08b3eb-4ed9-470c-8c77-dca35a845604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9a4b5d1-a51f-4ca5-bca4-cdb284ca4209"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "69ce3a85-99e6-4af7-a961-c7a711fa5330",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e95e1bec-68c8-4b1f-be10-feca251c30f1",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d3cfbe-e264-4c64-8e64-000589949c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d1d96a9c-3b02-4755-8327-c2830a45da8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0cf31a5-0e44-48a9-be73-58368f01991e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "75f207c5-75b1-40f2-81e1-7204847c1846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c042b2-254f-4280-80bd-cca2069ed0ff",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd6bf923-f379-4181-8345-e4af69a99cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "966171dc-58e2-423a-9639-750b7dfd7abf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c7b5a2-a9e8-47f3-8c64-775aeb5de48c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "283c3cd8-aa32-40dc-b8c4-784bf464080d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75f4bc89-2492-446e-95e6-8a482cd887e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba6939bf-4909-4578-a3d8-c2aa79949aaa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d618294-8e0a-468b-8448-e31fd48be885",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "687e1b24-bee4-46d9-a800-1338f30757a2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cf7983d9-019b-44d4-a49a-cf8ec64eba7c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "826fdee6-a2c8-4640-9f92-ae9e594f33a8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e68934c6-3d64-45a7-926a-f878a9e2803e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c033c110-e537-413f-ae8d-18d17028129b"
                }
              }
            ]
          },
          {
            "id": "24866acb-0098-4132-b508-de92d191d418",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ba55c180-3da3-411a-8a80-1ef46a881fa3",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "445c6260-cee8-4e9b-87b9-52f426eef375",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fcb3c64a-8597-422e-be9c-0edb829a26cd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7253c861-c2cc-4475-9559-1dcb043d9bbf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "34b9bc5e-2e36-4654-91e4-3fc33d94526f"
                    }
                  }
                ]
              },
              {
                "id": "5f105800-50b1-4f77-92ef-d605d96f8adc",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bbb46205-a2c9-4a97-9ddd-87e207c3b904",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "49868688-08fc-4f1e-9933-0a84f7441578"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a0a6910e-83df-4aff-9dbf-1fee8998b4bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "723fd0cf-6127-47cc-8054-7bcd52832777"
                    }
                  }
                ]
              },
              {
                "id": "a466fb91-1f82-4c30-81b8-a4471fede6df",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2060981-3fef-4158-a4e6-cf0806114778",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d82bbfc8-3b86-4623-b533-6c2068f033b4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b2f05f0b-ddaa-4be2-ac95-1d20f039d91e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "83358612-2528-4968-88ae-193caed53038"
                    }
                  }
                ]
              },
              {
                "id": "dc0346b1-02ab-4ba4-84a6-cfca922f1089",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "41022bb2-cb66-4034-bcee-66bd10b49bca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "46a8b98e-d8a7-4ffb-b4e3-2a5a515aab01"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cbb8711a-0543-4d2b-8642-72aec7639345",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "bf06b587-3cfd-43ff-bd2c-997aa99fda8f"
                    }
                  }
                ]
              },
              {
                "id": "a6dcd4e3-7258-41f4-aba1-1bc5f1dbab37",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "48c99899-675b-4ddd-961f-65193e00f007",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cfa35838-005e-4757-8e8f-6cd64707f29e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b794fdc-3324-4e81-8795-a32f99f9004e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "984300b7-ba06-4306-975b-30048e7120cc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "17697b17-71ec-4ab5-a7f0-a885959887c5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1c36dcb9-52a8-470c-9061-676726f80465"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "383e6ddb-83c3-4920-ac44-81d6103fa140",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c334c233-4064-431f-9588-b92ea2f6af7a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6febeaab-80b5-42b3-a3cf-176b51d70078",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "2603f802-ca68-416e-af61-f86e4773f519"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c3c2e275-0468-4f01-9f8d-c3bea39500a7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "efa0868f-8dd1-4db4-b750-aab3ed303dba"
            }
          }
        ]
      },
      {
        "id": "959c4543-84d0-4279-8b69-04130fb6c778",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ea563974-8230-4f62-b8a8-819ad064dd74",
            "name": "Negative Testing",
            "item": [
              {
                "id": "162a748f-23b1-4815-99d9-1ccf47c03e89",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ee83d72c-c8f8-4f8f-b2fb-d0b1be00f929",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "437c7cb1-f1f1-4d2e-aa28-a574ed45c8e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b9675ad-82ee-4d60-ba12-387f285a9337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42498bd0-c33b-4789-87de-7f89bf6e8f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e10a2c2e-d64f-4bd2-83bd-517824c1a7b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c50850f-8e29-4049-be95-e68129c68b23",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a9e5da-c48e-46ad-aacf-949904b1d2fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31bea90e-5105-478e-bd42-dce787c375ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfa6a01d-2679-4d71-ba51-c5056e562726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d17a2bab-0365-44ca-a6e8-a92fe8ba9c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ddd2c79-7ec1-4167-8f50-21fff59762b8",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a38ad5-1227-4f6d-a41e-4888d8de5898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15a87557-311d-4bfe-941b-849f4ccdaab9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f08b710-5113-47c4-95f4-1df5ce888197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c1feba0-5223-4b6f-a365-55ac6c2c8c4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbe2aa2e-2eb9-4351-9f42-4a405c3915db",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d44b4b27-415e-4044-ae10-dbce03fe16e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c948e79-a76d-430f-818e-52ca25b48774"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36fd1ac1-e1c4-41d3-9e75-65579fcc9786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f8a1ca4-fb7b-4f34-90b8-edfab967ac59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e15a27-a515-405a-80ad-53efacf9a990",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e731fbc1-0635-47d1-bc76-929679290423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "231fb9c9-194b-49f1-90fb-d2de18675eaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57df6136-5c96-4b5a-9075-535bc851bf0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c31244c3-ff47-48dd-b001-a01d46612924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d2e94d2-13e3-4889-b04c-b86b631fa2f7",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b26d7218-582c-4760-a4dd-d33572c614a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa75e08d-1fe3-4992-8b1e-cb18d589336a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e01f917a-8fbc-40ef-a483-30637dd85645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "02c4ca6b-58b4-4871-bf64-29a243b04376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a23ff2-41dd-4e25-983e-7be70e086367",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "001f9b1e-e1ca-4c9a-8c08-0abdaaa379d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18067192-6e76-4438-a34d-b0195e72cff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a0760e-63b9-4710-8de6-e8713ab87dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2d394ea-ad7f-4705-ab0c-9a653160c17e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f47cdff-2115-4bcb-a4f5-13ad12afa6da",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1afb07bf-aa67-4116-a443-27302a670310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55c853e8-54cb-437f-8db7-7f27ea76d72e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16a559a1-4538-489b-8450-8b352ade7144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "79f863a9-5c77-42d9-adb7-21ce5542fb1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a887fccc-b729-4a05-8ee7-d1bb041a654b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ebc25f7-9389-4a7f-97f1-59fab95926e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91dda00c-2f2c-4d36-bbd0-3ddd5a3093e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32ee5f54-6b2b-4169-b94d-5cf4a68dda21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e77233e8-bd2d-451d-a611-7ce1dff1fda9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee29edde-49aa-46eb-b077-96b78257b89b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba2966c-a951-4df5-b699-4a3bd4f64afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d93948dc-31aa-4ddc-a8ae-3674543be503"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57fec7d8-c8fb-4145-a056-04bcc2ce948f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbd754b7-5201-4d94-b709-d63adc5194c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a32bb2-dea5-4b01-9f9e-d854dc52eac3",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26467fae-7a58-42bf-9bc5-90d8ee7ac28c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2426a3c9-2b4a-4714-85c2-6a48edda568c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5c21cd0-5ac2-4813-9160-8da51d2be42a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "afb47873-9201-4d5c-be03-a2cbf9c898d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed19181-a6c1-4407-9013-10f8200d9f89",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d663a4-d281-4f4c-ad75-60c9a6c5897e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab49ad2a-2c36-41cc-9f96-571ad51d6573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e1ae4a-2114-4f5f-bc66-1ba073970208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "67dcf14e-f0d8-49ef-a18c-10621185c904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad15fa2-691c-48d4-80f7-2eb6f9296c3a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1369559a-2764-4b59-8cb9-6a888c2a6d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "936c77e9-9dfa-403d-9458-2b536cf3b829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20210c58-bb7c-458e-948b-c13f7dda06ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "18d9f3d6-a758-4db9-80eb-67c29cd85a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d548365-45d6-4620-a95d-2e1d8da2d40d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a88edf8b-f2d6-4ccd-8961-0f48d767936d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43dd5b21-b17c-475f-b8f8-dd620c1ab31b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0e58271-7078-4a37-bf73-d3b1eaeb9ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd29552e-733e-4947-8a63-e073ccb101d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab935ca-05a6-4f1c-896f-9c3351f922cb",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd64d408-fc7d-4bf7-94f2-749ed264c576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4eae76d-90b9-4254-85ab-177cb4a2313c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a66cd5f-3f5c-4917-9643-a350776e5930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfb57e60-98a2-4ede-a59d-47eabb2853ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4caa3f85-d8b6-4dfe-a2fa-b9b414447948",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7505b87d-f4af-4b15-8a98-0e9ddb35f6a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e3edd96-d79b-4c12-b137-8ac17fe979c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0113f14-b799-4573-846a-ca102f9bc4b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4b5a81f-b501-40e6-be84-cf0ab2e8ff7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "688d161a-94f7-45f8-a328-f6d526367dab",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d47ce8-2363-4698-a121-3abe03fd60fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "392ea6d7-9678-4812-bcd3-0ccf5072e92e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c06862-f7ca-4424-a69c-ed3a3f691f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8917fa21-8545-4bc0-92a3-c20b1a98c109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3074614b-2f85-4d2f-ab03-a00abb7ee2fd",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f72152e3-06e8-4e7f-be7d-2b0e4f969d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b026d83-aa41-472c-90f3-842bc2a1a493"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9b2aec3-c038-4273-a860-3a08df36fb43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef5681b7-ec89-409e-ad8a-f9e4924be1a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d172c9f7-4710-498a-99ea-1cb917164ecb",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2190889d-89aa-41b2-b5f3-271e17fec9c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36b90c16-fce8-4ea5-9411-f997b5ac4ff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb243b2-d57b-4eb6-9e86-6f9c5a580207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfd6566c-8d9f-46be-ad8b-f73abd425d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c342cc96-fcdf-424c-bdd6-145b1c1cb988",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e01eaa52-f738-40ec-a902-0efa58d9197c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1e27231-3685-4fca-a974-2b44ca1f851f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc679a92-da63-4c35-8923-5a585158b1ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f42010fb-ed26-47dc-adde-58e9b4eeb9c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f72d280a-044e-43cd-81f4-6069023b85df",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e98a46-9309-48af-b81e-342e8bb41499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0148f83-3b39-406a-9428-05379e65211c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b8ae2d-8fa4-4f22-92ed-c48b661ce546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7f91906-3e35-46dd-a137-b966c8cdef4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e8ae32-399b-4ae0-895e-d6cd1e049e12",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f67e15b-aeab-418a-af85-0c42b14c1908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfa0acab-eea1-479a-aff1-5187e096c21f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd0f3c15-e8ce-492d-be62-c9b325170aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "faf151a8-81f0-4036-9876-1fb9854606f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb164cd-02d6-4bd5-ab71-476d1f576014",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16339ffb-d95a-48b8-b6b1-e1b2b61c8bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94b8a0e5-eebb-4b42-8fd2-0367e699e15e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2eecfd2-7f12-4521-b65b-051141c544ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0524a086-245b-4a07-83f9-8515140b78c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc8b048-3da0-4e9b-b464-4e3851364b0b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b277f1-35f4-4d9e-ad13-1f0bc1f9b16d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd627d5a-b454-4e9b-baef-159e64f78ab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75bc5327-c373-47b2-86d9-7c0c7a3588e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c828cf41-fc9c-4a58-a8fc-eb394aa97e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cd38b92-e1f3-4264-ba92-a8df9cd18afb",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9add6e96-822c-4c2f-a695-ba0ea852761c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbff6a4e-0298-4413-9f0b-14f6e4e915e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cf67942-d8eb-4c5f-993a-ec6809f8b6d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3086c322-44bd-40be-9c15-bc0104240cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b13cd4e0-c749-47a5-a4c5-e286d4dd9486",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f907be-c424-42b2-bead-6fe066b0c92d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef1d3aa3-94a8-42b8-94df-42c3f05b8a5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa9b60b3-b7b2-4c60-b93c-a3f0eeefb829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fb2b14b-b563-4df9-97bf-312f1cbc1141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659bed60-8d53-4846-99fb-91f934df81b3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9407eeb-a537-4c97-ba89-64a320bd51ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c7e7def-346b-4f76-8d8e-884eba3dcc2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec0e7fe-e38a-4435-9133-ca70c6fda628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75cc8cea-841c-4e6a-b997-6c02481a6d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3444989a-0b0f-426d-ae1f-aded62254d22",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e985e7-663e-498e-8014-037939ae0670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c500608-10f3-44cb-b008-901910873055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe28d84-6676-4058-9a60-74bc89d9c063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "507b9ad6-8153-4759-a9cd-fcfeb0be9710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7415d0f3-7cfe-488d-9ec3-e2532d71bf4a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f0c614-b0f3-4aa2-a583-78534ce8f1ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8dc3e06-9aeb-4cf3-8bae-b86ddc8f18d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b82d5e0-e19b-4855-8ba4-ee2139f6bb2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3db772bf-3e81-4896-8a9d-035588abdf18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c415c349-8628-499a-a89c-b60fd2b92f40",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36cf9c50-94b6-4e4b-95a5-615ae2aea7b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e450bd08-28ea-4c2b-9520-a23569553dc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d8e209-69a6-40e3-a8e7-cccbbe5d7cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb6d61de-58ea-4aca-b2a7-2a5960ff4594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b867f33e-affa-4f50-b118-301e476f339a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c19f5e04-ec3f-4f57-bff5-a2bb819a0138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "105fc869-25f8-4e08-9b7b-bf26dc4c02e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee2fcd95-755b-4007-86c4-59b6ac211d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "646fda47-55a2-4206-809c-e7b784dc1454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "475694eb-ffad-49bc-b34d-3bf34cdf0fa6",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ea3787-35b3-4251-89a2-f50a346f457e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "398bba27-e3e6-4d50-81a0-d4350987779c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c5604f-a698-4ab1-a5cf-b907b7765340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36f4cac7-5bdc-4255-bd41-ae8b4bea608c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "945776ca-4c23-431b-ad9d-a394016607d6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fcf2138f-44c9-4fbf-b5f7-248c5128ff00",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce8d9ce5-e71b-479e-88fc-3083fade2716",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5c425417-1582-45c2-bf7c-c6072d4acef3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "066e6be9-4fa7-493a-b300-94c604bd15cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "86fb28f7-b5e8-4ef9-8848-9f4b5f092e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a32ff2-5fca-4607-a3e7-d3fdb21732c1",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0503a1a-5919-4614-af3c-2bcd72acd802",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "43c5ad08-a4cc-40eb-a775-87198b7a25ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b0cc09e-9c86-4518-a4af-5b03b34560e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "00dfacab-6fbe-4e06-bb83-9a9e7c0f9445"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a24a9cf-accf-42af-a810-9d216e2d7a89",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "008d82b6-15b3-4378-a9ac-49ad401012ff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "804b2969-816c-4a74-aae0-07ea119a9227",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c839aa2b-8fd1-4ae1-8a09-49a861f6f014"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8971fd75-04d2-4e63-a61d-a48a797d83f4",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "db646c02-e28b-432e-a576-c29ccd091c93"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b2208b8d-7708-42e4-9fe5-129a139d086e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "97aa4d81-31b7-483e-88e3-c63e9de94020"
            }
          }
        ]
      },
      {
        "id": "d7c5218b-521c-4f20-bd87-112b593f0425",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "74313ee4-bd32-4fe2-a048-936b2e0298fb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "295646df-781e-4623-9dd6-3424e46e3170",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "17baf980-26f4-4a23-b449-3cb038f9c4ea",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e31b3121-8e31-4065-8203-43cdb69fef13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d123f32-dcab-4167-8082-7cb9b332c50a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e6c849d-7469-48b6-92b6-4097c31c37c9",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bef1a2c-bc61-4e3f-8754-ed5662dee3ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b18ee8a2-656d-4e87-b3f2-4fb5a890d7b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb7d27f0-8f06-4ebf-8268-fa41cfbd9856",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c20b7f-a2f8-42cd-bc6a-b56184cf9ade",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c15b81e3-194e-4426-bd4b-fe378e899a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d43f6389-40b6-4927-8086-bd63ce9a58dc",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f39d640d-7183-4855-acf1-1cf337f7b11d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8655b14e-3fdb-4326-8daf-edb37d1048ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8191f3be-75e4-4f34-83a8-b5927131b323",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4725dc5a-56fa-4f07-9b65-388d0795e1e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b49fac2b-b0bd-41eb-ae45-dd49531564e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e1d1697-7b94-40ba-ac57-04cebb5a4748",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "349a88a7-f550-40a9-a4e3-ef100acbb8fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f869c00d-2b0b-4370-8687-b3229cc79320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb8cf4f-747e-4722-9f15-c57813b2e84c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c59e0bd8-c4c4-4109-a69b-30f1653f3051",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1464896-9be9-407f-9e67-9d806a2eada3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92bc0fa8-2e34-4aeb-8be1-43f7a48f9368",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec5bcb31-9c4b-4d03-a971-f85f506b35b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15384e2f-6fb7-4e4b-bf03-7c970ab20719",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a55891bc-958e-4e06-b5f8-87fdfc89de99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "278f39f6-4a74-407d-8691-59500ae3b000"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f7fa926-0af5-44bc-891a-090555e5beb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e3c1bc8-ea02-42db-abea-5c2440db6638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b30189-0a5c-41ce-9760-9bf8e942f1e9",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "873e91f3-1e71-4c86-a1cc-fa6c7e15fae2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7588086f-a11f-456b-8a62-94fbffa614b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc36efaf-c1f8-40bd-b355-03b082fe84be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e357eef-fb57-4137-868e-63b9724d6527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a70ab67-95b4-4a74-8df7-5802098ab9dc",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33a7fa29-f3b9-4bbf-9c6a-6398b2e1966c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a0a4a07-f932-44e6-ad99-e569d5c3bbd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a627e1-ab07-4c35-a151-63483c063c92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85cad9bf-59c9-4958-99bd-eaf7f478abe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f45e062c-0928-42df-ae9f-c3d064777ce4",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a9fd5e3-81e0-4f40-ab1a-ab1c42f2834a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c60f8eb-074b-43c8-8f5f-43e6ac9f45a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e679f267-38cc-44f6-9aad-93179a9dfafc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed30653e-a118-47d0-be49-a5d5a4eb7ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "178db7d7-c6ba-4370-8ec4-255edcef4631",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b9a9be8-1ce8-4388-9916-e5b328d56be8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d9c406e-d3ed-4a27-8f3c-8115bf5ecc0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd8ff61a-c27a-4f73-b2ed-bc5e53fb2fa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03685d72-86f3-4126-83ac-2344043b3ba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22424181-7803-4c41-9ea0-eb625a4d5b20",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5886d0bf-a21e-4327-9a2a-cef2976c15e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efb0d35a-df3b-404e-8928-4f439500b0b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "226e51da-fb79-4523-9eee-c5dcca16c9ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70c7892b-987b-4cd6-af92-75a5a8392c5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf27880-c24c-4985-a8e8-4f35f4bc05a3",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa81044-2367-4f7b-9436-3f56faa15356",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e72d2d1f-f9ba-494a-aff6-0f546ade072b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9479ae3a-a95c-4e4e-a4fd-d91b5cf6a8cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc0f3c9e-9fa6-4302-91d6-ffa4ddf889e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dce67af9-8ca4-4dbb-bdb0-6543842d2ff8",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aff5e55-965f-4a65-a895-5883f2a2e829",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0150b3d-67e3-4b26-b65f-d01183de642c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0cfa8b6-18bb-4af7-a5fa-8279aed0f8ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2968c1ef-1486-43b5-914e-3614532f8aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c188af1c-440e-4b3b-a89a-705836144d12",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1fba90b-b2b4-4597-b649-21f26bc7fbdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2f29dc6-88e7-4e36-bf75-aeac0fc4a895"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26092377-8117-4f9f-adfe-a2dba65f75fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adf40ddb-d7ce-45e6-af38-4e999f631654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c337a896-1afa-4a9f-aae8-b7cedde02730",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09fd4e94-870e-48fb-b50d-98ec838fc9d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbf459ea-7400-4274-b698-16fcebda19de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce721d5-6f1f-4e1d-be46-2bb3e5def53a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00a06422-aed6-41fc-8942-10f5648baf13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b4a6f5-222c-4e38-a9c3-4d4ab037689b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac9059f-cf7b-474e-8914-1b817c8cc6c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "362728fd-c62b-455b-bfc3-81bd7ba9b82d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e04056-e44b-4db4-bd9a-7615efb04389",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a779569a-f6d7-40ab-a973-7e8d5875cbd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d58cc0-b4b6-44e8-95f2-9f96c56cd589",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a985a03b-8a38-49d9-9c29-01fe611ec987",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aed1ea8-236a-4156-96ff-89175b3b8426"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15bd8b3d-7bc2-43d9-bad3-a4803a3e152a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e2d15f6-26ba-4f2e-8bbe-9a712a35d8b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d96796c-595a-4408-97e5-207bf7ae4c97",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db41298-d2bb-4e60-bf62-061f833511db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f078b3a-9f63-4282-a369-a9c5d0a7d8d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d098aaeb-6def-436e-897c-924bc70a54d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02f6a467-aa0c-4cd0-844c-8835681db566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "977eda11-fdc4-4fb3-981c-17bd53d656b8",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "836c54c7-bb6b-4cce-bfbb-ddad0cbdd8da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0640b904-82de-4d2d-8934-f08926f31397"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a22009-0f45-4d89-bd65-76826d41a678",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e8baef5-d9af-4ced-9dc8-6b93e7226ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b455f84e-0112-47b4-9a62-e31ae86ab299",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c34513da-8dc7-4f1a-a398-87858c77b8c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8152071-f7e1-4d33-aada-507616a1c680"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b90dc675-e852-4800-b0b6-32fc949659f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "029d62aa-4731-4b7b-967d-c5e3922d0bdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "102c3599-6e59-4e33-b56c-8fcbbb641646",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "685f2c88-4ec9-4244-a16c-c753655364cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fa3e6a6-90ec-4a26-8487-196beb8d7bda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab2fde5-0296-4230-babe-dc87541a720c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ac52def-ded6-4693-9600-336b6f5b79ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6bed8f9-e561-44a9-85dc-0a7f55faae16",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ee4d34-a33b-436b-b8bc-4cfd0ce62199",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3e23116-b1dc-4d7d-b280-598a80ff0b59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19868a7d-9098-43d7-9348-52d3918ae965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab60ed26-2d40-4080-81fd-1bcfe7cc0986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e8b487a-6bcd-461d-a894-8eee0ff0abbc",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "559f289f-3fc0-4a5c-8203-23b8f6f4e48a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1596060-5ff5-41ff-ab3d-d7a99fb5a488"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0206d211-588d-4ecc-9ce3-60d47455f967",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5594e6b9-5309-408a-ba95-7b3e26c34036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e92f7dea-5310-4aa0-a73d-29028c1c43ee",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d36af425-56d5-4292-8200-02007fa491c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acfba9e5-f990-4631-9ad2-7b02f30f777c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7118e019-224c-4ad7-81aa-e7bb0827c5be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a4108a5-f810-4476-992f-5c8b60054afe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9dd9cbd-0008-409f-a724-3ae53b725465",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b098b51-c73e-48b3-86dc-cfb1ec3d7159",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4370b90-daa5-4514-9ad6-ce29e20bb2f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d52fd54-80e2-4f09-9679-2eb25d5df25f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20e1a39e-19dd-4c69-903b-d107ed7c8dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e33c00-c70f-48cd-96c5-e39c064891b9",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee38f798-7075-4db9-bf88-0e90044b8b81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a6a6663-2bee-4ce3-9b42-e839935faf1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5dbbb7d-3d6d-42c7-ac56-4fe1834a9968",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7683596f-0827-4480-9306-658106b6ecd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "093a5208-3789-445c-998e-3f05307b7479",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6d9f7d2-dbc0-4341-b6b1-6b667a815773",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e21d2511-9933-4f8f-8fbc-31354248e9d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d618db93-e6fa-408d-9c67-123acc819ec6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8e173fe-9069-4758-ab8c-2b2c8e8606f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "237e89c4-d8d7-4daf-ae73-85333a38683d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eeef674-196c-4db5-8d35-8d7e037a97f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86156239-bd6e-491e-a2e9-56f8086880c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "348e8863-deaa-4f6e-af1e-0f9b53316644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d33c669-35ac-434c-8bd9-f4242084ad51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "075c37b7-b420-4cfe-a55a-cc04feaf9758",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a30c105-0b3b-4150-a701-6703418cf197",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d417380a-6134-45f8-ba9c-a648c5e73ab9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d89466-497a-4908-abd8-f26b41347afc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dffbd6b6-cfb1-4694-ba32-4a55c3446196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f7603be-6272-43db-9a8b-f747572d7317",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "728d65f7-1eb0-4b1e-8a10-c840c791f5e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0be320c7-5b06-41de-a71a-628bb4868ead"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2baa477e-4229-40da-93a0-bce0ee210825",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60c0f816-8e3e-4784-ac40-ec0b768f5ffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f3feaa-c602-4f2d-8098-b97f6d8e133a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6ede7e-c38f-462e-bf6b-066c57923743",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28dd5bf6-a051-43e9-b7cd-944be41b63fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c191f5-a3e8-44b7-b1c9-985db0fc5570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26c4e2f9-b70d-44ab-8a7c-4efcfaf1ed76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8299f4e2-708c-4591-896c-38acfd0bed77",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd899f3-701b-4112-89b5-efc631facce3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "524db983-6071-4dbe-964f-289f7c62e808"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a9543d-93ba-4739-926c-cdfbf1a9e1eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ca2158d-467b-4b24-af1e-cbeb81f4c23d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18240fc6-565f-4e0a-a441-ca098e84db70",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2993673-fdd7-48f3-8c0b-b28fc8691385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bef8b344-2d2c-4fef-ad1c-2ff14eca88d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e37cc7a-6c74-4478-82a6-5cedaf46fbb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f006c98d-60e6-4977-a610-0280672dd37f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e922ca-81d9-48eb-babd-db9ad5336630",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54da0448-4378-44e1-aa07-a256fc0a6f65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceb2ee16-0cd2-42f6-933b-20e962559dda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e147692-fcf0-48d7-9070-e18d62965b58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f36e76c-38a4-4380-8eff-c2d4240ab81b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b922d298-a230-4cb0-8997-9ef6f98d8bbd",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cfae1c4-15cb-4551-b0bd-7e70dbda40e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e26101a-1627-4d4d-b841-c1390e6debb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "422822f0-be86-4d26-a824-4cccc53feee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47352c77-b63b-48f7-8823-4bd94d3e7f23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5857b54-2827-4bbe-8272-c13da1c9c4c2",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1498e29-7919-498f-97a7-3b6506dd1fda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f71b86fe-98ac-442c-bfb4-f1d8e8b69ade"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c3b2be0-bac3-46b4-be24-edb655254a42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b63214a-87d0-43fe-bc6b-aa80d2c465d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0215b3f2-e16b-404f-95e8-8825dfff7ff2",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a008a378-5478-4c60-a476-712e36988d11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fced8c4-17ac-4fb6-a5ba-e59868d36d6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "835b934c-74b5-48d6-9688-e4c78c01b68c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90ae8d88-45a5-46c6-aa16-fda1e59a4778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e2a0ae7-8d86-4e0c-9ebf-c32a0826c8a4",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed1e8aa2-e583-45f0-9466-1327e4ece234",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ff1df96-24be-4d91-b745-301836462a1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e648402-4a1c-4ed3-befd-9390e6557479",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b47a654-4df6-4651-b113-3a2120264663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d50f7c5d-6adc-4464-9b26-c327a948db12",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "907f9050-c4d2-4a88-a7df-a14057001a17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3192dc9-f5a4-4cf9-8624-4aa5b58833c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be278699-3bc8-42e4-9247-353965f4073a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00d5b8c1-2029-4617-a27c-8d5b317ba835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "736db9d7-6e01-4eb8-8583-bf6d7de2969e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d034d09-6d4b-473d-9a53-51a563743335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5858ad77-93f6-4ab2-a20f-a635b8d2f5d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0adf7baa-3bdf-4e79-b07c-c6a12c549c87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ec35a42-7c84-48dd-9406-ae0d493f4a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f090642-668d-4d6c-855b-205828c43ccb",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b600b7-6924-4213-8559-8c0defc7957e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85a18908-e80c-406e-a110-27d8a53706a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09413101-4114-4493-a1d2-8ac7b034fba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a2c6ca8-f73e-4fc4-8c11-dea0e75ff97d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeacfc4b-3042-44cb-8495-d7443701ded6",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e77b57-0239-4322-bbe7-15c40b0e9656",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56719ae5-872b-4fd3-ad49-86d112588142"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e408b3e-0a9c-4654-990a-6e6d2150986a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6fd87d2-832f-4c22-90aa-59e7435cdbe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c10951-d45b-48de-8421-efc68706b19e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6209793-2b18-4d67-afae-de036aab7440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "710adf05-57f9-4a74-bcf3-cbc230ae9831"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f08c4ec-4a6b-4288-b785-cc9f0d1a9380",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80216d1c-3f11-4616-ba49-350cec61d2f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b99e2418-08ee-42ee-808d-d3c78aae05e7",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4860cc31-0030-4138-bbd3-7c1eda9b1869",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a6e0106-4062-4a4a-a96d-269967fbddd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be28d0a8-2c32-49df-83ef-1b0e5712a526",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54da7b81-1d20-4fb0-a3da-4bdda21e3834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e391e8-9a32-403a-aa2f-fa2c443cb9ae",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e34d13cb-c34d-428b-afbd-4c536bf5c093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c5731de-b19c-4a2c-afd1-79f4d0b2164e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79962665-d7f2-4dc1-a8bb-6f753e5028f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cab1bd8-fdbe-45a7-b2b9-f2adad9ee9f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf4dba5-f458-471e-af87-28d0632c6f3c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d81a3d4b-eda2-45e0-9f3d-243b24f87145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "168da92e-7f56-4767-910d-cf1373e2a8fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "409a81dd-5bcb-4af0-a186-385d7f56230c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bd16d22-2abf-4e68-95ee-8180fbd9400a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4023c8b7-2461-440b-939e-ecc971f5a34d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a54ac776-5819-4cc7-826c-a7061a88979d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8de52cf-41b8-4102-b563-27a5279be2bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a607f37f-3f46-4dbe-b0ac-87b2d965b895",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "090ff991-c33d-4c2b-9961-f8ff1c775141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4666c34c-269c-4921-8a64-48d1b8f61736",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "499faec0-fd49-4263-8b72-6eed2d1c1eec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "681fef6d-8361-4d45-8fd1-75cb5b9ed6dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edda56e1-b8f7-47df-80e7-dbad9ffe8590",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "151512c0-8c0d-4247-9da3-5c31adb088fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6120dc5-6e59-4ddd-a1a8-96454d7b2576",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25fa2f2f-1b3f-4e19-a05e-9d4cb4bd07b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "820a05a2-f83c-4d55-991f-369d4c116213"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fcf3841-f7ac-437b-894b-5e8c8d004175",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db36226d-0338-4781-85c9-2dd3b40d9af9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3450056-0533-4db4-944d-cc9d75bf464d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce35d784-bc99-470e-ab88-6069e646af2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c516e5ba-b030-41db-bc83-f1714eb18663"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52475a43-d904-4262-b755-0639719e2a6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fc9f06e-f3d8-49f8-aa92-2e6b96b542ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb4a680-01b3-46ae-b03b-68f30845b668",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dbeddfa-198e-4340-b5c2-99a1e09a805d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "768903a7-43b7-475f-a358-b834cae9b0ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad49e156-f997-4338-b303-1e16c67fe9d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85aee863-244f-46d3-9547-afff0c2a62a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425b0e7d-2fe8-47c3-9253-f00d8738f4e0",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa3824d-3ae2-4857-b53a-0cbf5eaa19e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edf139d3-f98b-4d89-ad66-c641c556e46f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6627e7de-2ba8-46f8-abb3-39b0a55b084e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a706f4b0-c668-4b9d-838f-40213847e7e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60befba5-f462-4fd8-b189-b07731c57328",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4378dd85-ccf5-42b8-8407-39aff1f6e45d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04bdeee2-7fbf-42f1-9457-988d06051e9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4728dd01-931d-4fc0-813c-6704ed527712",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9adce686-befb-4abe-b1f9-effbcb24e121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8408b2b9-7e21-486d-b091-910042397bbb",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f226515-d1ff-41ce-b981-7b255a9ee3db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08dd70b4-aa61-497e-8e87-de447af5954e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ebe3f1-04ee-4c4f-91e4-9fb20618b9ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc3bed1f-38de-46cb-83b4-4d9f9ed5f14c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "845f2456-0450-4a1e-8897-acc1a08e79cd",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45999fe1-1c4c-4c14-901a-fbbdc1c3095d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dd0bfc9-a14d-4733-9403-b8be1dcd60ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a12455a-731c-4d68-9e37-c3c46d5cf0d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "020ee99c-37cf-4f29-97bb-096128a92fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf58dce-926e-4e50-86fb-ddb889e4ef85",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe92b241-2e95-404f-96c7-aff65aba859d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceb0b99c-d63f-49bc-ba54-056382991679"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b7f2e89-b32d-4078-888a-b93e6d0ba3c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39f8aff7-41c7-4731-8efe-93db100b927f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bed1f40d-dc10-4518-b040-0738ebfd8e6f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d985fb17-668f-4a3c-a34b-21f1eb0a1a31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bc38c57-cbbe-4e1b-8823-46de3456a8af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a14af344-47e1-4f61-896d-6906abe5c049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47628c71-ebea-499f-9201-0ab10868d92d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24f0434c-9f80-4caa-8d15-2f85be5f9fbb",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b2f4c85-6edf-4786-adee-7232bad63d4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a13ca64-694d-4a08-b060-12db61148fa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc0c772d-085b-45b2-a29e-9eda4607c1d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e63eeae-beca-4101-95bb-39ab44552a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f3f03d7-bc4e-4c85-bb02-8eb0b40560d2",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97476412-c7f6-42d8-a9b9-26f5cd2b8636",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c14fa011-d93a-4657-a06b-73697b328b8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c440c22-1340-4237-b73e-a0a3c2f5f3a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fe98b68-0bfe-46e6-ac86-1c039a0a0a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0a8db1a-077b-420e-b815-116a4775f95c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a7fd7a-29c7-4f70-80de-a12033fb1a22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38396ae5-0e67-4767-8484-8ae810be587c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52eb2817-e55a-4416-abae-1be4a0540a71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16e1a352-5e39-4b18-9c94-5d078173b306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4294a13b-62e1-4c62-b3c7-7294bb5a48e2",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "279324d7-cdb4-4514-a549-eec19b9d7a1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85600887-fbe2-4dc0-933c-aa6e24c3d79f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86368690-b30d-41e0-bc8c-93cd8dcdbc03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ef2059a-37d8-4eea-ba38-4e201ef3e2c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc9facb-289d-4e60-b0d5-a73c9b359c22",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f20c90b8-977c-4c2b-8597-dcaa24aedb4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c7fc854-9dfd-4654-a083-1ffe8a142285"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adbbeee6-c5a8-4bb9-b0fc-14f98d8f1022",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59fec395-f71c-40ce-aeff-ed96648d15bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49da464f-c461-4295-905f-8d85704e92de",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "641693a1-af26-4c0f-b172-b4c277cd649b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ec8c7a9-4eec-49c4-913f-d47378c540af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "515a33d6-e5f1-40f2-a84c-c79678fd1567",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf1f1491-613d-4aed-bd7f-5f060e420773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "397f07de-ce74-4aa8-bee4-74acb1c50640",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bbb087f-b2fa-41c5-a080-e78b2e61491a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd907f9b-8435-4803-8ff3-3b13f71323e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c5a656b-d99a-4b93-a49e-c911a570ac32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b477fa4-432f-472c-b51c-0f435ae3e440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b4133d6-6de0-4d55-aa37-b64b8a1314f6",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47204086-9a9b-45d5-9652-2b2f6f660317",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "639f356a-a894-42c0-a0be-cb007ac62552"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e4a409-c020-4d90-93f6-9845b5c7a3f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64fddddd-69aa-4822-8244-6fe75ad6b03e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c9f898-743f-4043-9924-3ec90e0e812b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39e0e6a5-571c-43db-9f9a-6d0519fee158",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe63319f-73fe-4a7b-8f55-d0e833ed3502"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d71abe-4e58-4c5f-a6d6-8244fc444816",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e6cd154-8f1a-403e-9cb6-34d91da33657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d61b394-2cf3-45bf-8c4f-7ab5329ec826",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "935eb6bd-d359-441f-9ef6-70901e98d445",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e2a6ff5-128d-4931-b4eb-1ac720db57aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e2a4dd1-867a-4762-81a8-882a9d42d3d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97305bc4-b884-4066-b5a4-904efb1641e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c4d463-db14-48e0-bddb-34bf848fe6c1",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "255f9dbc-0f57-4ad9-919c-b296a0583fc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7e3ecff-9516-4270-933a-65cde94e5628"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f7042c-8ad5-4d05-8ddf-e32c79711d82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4cc1d95-0126-451b-bd57-b659b3bee359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80f45695-76b1-4e34-ad09-315ee3e1e345",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6274806c-5028-48fa-a771-a938da45003f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec28e2b1-1ed8-468d-9173-6a7fbc521748"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "050cfb1a-e961-4722-bb63-1b55051063a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76da57c0-3687-4759-b85d-679f7785a710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed41843e-d3a9-470f-8963-8317bed6e671",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c42902b-89db-4dc0-9dfb-96dba5e8ec7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74e54f3b-ed0e-4a3a-95f1-040d0ceabc0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6b376c1-48b2-43e3-8acb-415ebc15c700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a869a28-3659-4555-bfa2-ad9aaafb0312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a3dc90-46df-466e-b4c6-7e0d4ba994a7",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f73c514-776a-44e6-9fa3-3c1941171b1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1acf8101-2866-4cfa-b975-8168c422d2b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc4574a5-71cf-4f40-b9e7-195055ff267f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5299813a-c0a9-43a0-8787-d4e316da5e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07bbacf7-eaf5-4ae7-8b2c-0872b76ff324",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "216986f3-5882-4116-854f-7584eadb0170",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b0e5df9-fc80-407e-ab8d-547769f7492c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29808a0a-f58e-47d7-9718-8098b7ce2092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56daa5c1-6f07-4d65-8796-2742b3dde3d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68091030-8da7-40bc-8687-3611fa45ae13",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dbc0b68-09b0-4253-ac2b-23f0bad05739",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5282250c-9b00-4bdc-a427-0a19fcd461f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b85ad46-31f2-4b22-b85e-d85a77b7c7f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d97943b9-2ef0-4384-93d2-67d7c0f44bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1391b217-168c-4287-adf8-5cc18572b7f8",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67725bcc-9ce3-4cf6-8ba8-ec8ba4306f29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2efe4487-f457-4f33-9495-63288de96e3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a2ee9ee-26fb-4792-8108-1c565522f18d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86469207-63f4-4172-a431-a25a6b385baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc1377c-571b-426a-9f2a-29437bab412f",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ff26f6-bdcd-4e73-aded-20e5bcb0af1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "633846e2-7610-474a-bd98-f27e61f6a37d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "374c3547-2af5-487f-a94d-6cceb729c0dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1e0e06b-ddbf-435a-b2fb-ad7354705102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc0bf4a3-8355-4be9-8d47-6d46d1276c24",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d162260-b19d-4b14-b560-7aa906abe629",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "512b2047-31b3-4beb-bab7-2fde503a813b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c9c5fd1-2f69-4243-9748-b3718389f512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25bf7c33-2cfb-42e0-bc3e-0beaf10cf7d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c3b9683-74ce-4042-b652-fc8b5f78445d",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3fbaee5-7851-41a6-b6d1-436e1bbc70dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ed423d0-f395-4875-b756-0656f252df35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9cb95a7-48b2-4934-842a-4a527464905b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00257f7d-d1eb-4115-92f6-909e5329b8dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef311533-57e5-4713-9a18-733917bdbda9",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fef1b3a-01c5-4b1c-a029-6c172fd77311",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93000ad8-1784-464c-bd0a-cc2d9fe675ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66bfdf94-47c5-4a36-9082-726b10dc2911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "398ae841-42a9-4dfe-b04c-3e0fb18ce5ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51817b68-20bb-4908-a79d-cbe274a2f146",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3af2ff6f-f874-4aec-ae61-0e3d721b58b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dddbe04f-b7a6-4f09-84a9-b779d541827d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "996fb598-a8e2-4d67-8188-6c5df7cb0bd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ed8c85a-972e-4c20-accf-b3067687cbf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64fc2bce-7f1e-4161-9e3f-b22d2baf164f",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "140892fb-a760-4aac-9098-7c171d59e72d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76fbc89b-9b1a-4614-bc66-7e6d3ac02207"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "351cd6c7-34ae-46a5-a9a3-71c032645057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d174cff-8377-46d1-8e09-df2a1fa81429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d0d445f-aa27-4caa-af6a-507ca9d68de6",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cce7a99-280b-420a-bd9b-102e7387bc32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff364800-9028-4f7a-92e7-3382ac080815"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56adf85-c8cd-42ea-b045-b7d15646f9b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69babbd3-a414-4297-b173-c25fce5f6485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26592a7d-3e8e-452f-977f-83f05768076a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71025845-4eeb-4bdb-b510-76656d5252e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64bcd781-13b0-4595-9e48-448cbe8223b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c416cd33-bdc6-4635-9b9b-c7b6c3b0995a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5394d93-028e-4718-8751-78800044ff72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66413dcb-9b96-4820-bfde-e8fc7bdef8aa",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdaef871-72e6-439d-bdbb-6b0d1699075e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7442642-3166-4109-9a8d-7a5f60679636"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "430c0855-ce78-42ab-9f81-9287c0834f22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c3a2828-6043-43b6-a0df-1e2858863c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d0ec54-3c5f-4f14-a644-c86c7731a8ea",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e22cdb0a-7e1c-4fb1-9244-827f9c565913",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0114aeee-8f9c-4207-ac7f-bcd572712ee1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7cb295e-4d7e-46cd-8a5b-6bd3c12bcee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f8ffceb-1aa1-4560-85ab-31c2dd44d63f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "072dc65d-ef07-4f1c-b2e4-2b71847a07d9",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b6ce3e4-7885-4d91-b952-a6a825a8a3d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a3dec73-cb0c-494a-885f-578691da1968"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb56949-e2a3-4c77-a981-7c18084a5890",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aaaa3c8-7d9c-44f3-bddc-eb466c586364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e42884-7e8e-4fa1-97d8-763339bb5f43",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3c520cd-4386-4f08-a379-b10fc8de65e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee9dcc8f-e936-488d-9d59-a860e2252b3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42446e9e-5376-40ce-8060-60ab17e834b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38a1127c-d376-46ea-9060-f27e7af433c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49205174-7bd4-499b-a21e-ca52931dfe30",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd7da572-6b6d-401f-b4f0-24343812ae03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc21bd10-b125-4806-b9ae-219fd07eff58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f7dd00-6962-4c21-bc92-fe38a2ec7c5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3335846c-8f05-4d45-bf5c-4330d0e72fb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f13b0cba-9e0d-41ac-aaef-3d444497e141",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c74f4521-9b42-45c7-82e7-68290e032f24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4587e1bc-75da-4f72-9575-fb5dd762d245"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45f1bc78-085a-4efd-b8be-d9a05c0e44de",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a569105b-1492-45ca-8c9f-922cc2e1c4a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3067e4ad-595f-403b-a12c-251ba1bef2f5",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a889b4f-769b-46ad-bd78-73fb10e30b50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ccd6351-b406-449f-a4bd-e21f5264241f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "483d0501-7106-473c-bcbb-31c5b151eb65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9152cde7-58b6-4bfa-b06b-8e204b680dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f430d72-deb4-4e0c-88b2-3a5db1cdab8d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de9a01e3-2b1f-4f76-9d36-15f8de4a1ae1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf44d5ab-3ef6-4e44-9114-84f4aba29d32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78941bb8-d343-486e-b49f-fa2b911426bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e2acfc1-8ed0-424b-a753-3b17537fa1e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe8e177-96cd-4545-8210-ceb55a1141f9",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbfa5491-4192-4624-a705-c5a8072d0f5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "050ce0a0-b64b-49bc-98db-f9cab89ccb4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a32bcde7-50c7-4e1f-a9ea-b940ef7b44fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12b17445-73a1-46c2-ab8a-13b3a5659f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fca3abb8-6186-4844-ad28-dcc39c695ce9",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccda832c-d3a7-442c-bc4d-2e8b9e83b6c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4569ea48-689f-4231-96e0-5895554209af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "229811fa-176a-43d0-802c-ce84f85da8c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac92b656-b175-45be-8144-d8a3033ad1cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a74277f-895d-47d4-a9d1-eb408a1c70e6",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de131370-4a76-4ff6-9ea3-c9543e6cfcb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0680a2c-bd05-4239-b0f2-543bc94f93a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f09e4b11-c14a-4110-bab5-d686853d6b45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "502b55aa-49c1-4d3f-b9bc-b8eaa915afcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e322620-92b8-4452-b01b-669d4aa78bd5",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6acf040-0e91-4553-8560-d9f01b107ac9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a128c8bf-327a-4206-b9f7-0a32929df9b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f349452-8afe-4230-8c46-0106f25fcd26",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2811f92-be3a-426b-abc6-46d043bd4e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baca6dea-ce56-4760-9730-0c4e6a137dae",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "157c6c9f-b487-43b6-b34c-cf39ed26e6cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f3bb46e-d6b1-4198-94f7-35e7f452fdb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7208949f-6de9-44a3-9e16-13a93d49ea2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75cb1ca0-11d2-483d-b368-8a44ab5ac8ba"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad252f6d-0eb8-46ee-a340-620e3ccbfda2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f5636bd3-a693-40b1-9627-c6aa05b82681"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2085915-e177-4a63-bafc-99f364d8b6d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "40f0f97a-396d-455f-b443-8c5fd6a9edd0"
                    }
                  }
                ]
              },
              {
                "id": "3f091a7a-9a5a-4d3d-b60a-f99fd6af080f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "93d06c2d-46cd-413d-8ee7-aec6dcd712d3",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f5bc556-2c80-4ca1-90ad-3ede32431445",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4748417b-caa9-4834-adf4-203c455d5887"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce08c92-7574-489b-a9c9-e1cd95c7a7ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "febe061e-d8a9-473f-a48a-044736a94bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "557e888b-2f74-49a5-acd9-2c9bd696d0f9",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae30b64-e89e-4f63-82f4-98095f0865cc",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b9ab97fe-5555-4512-94e4-3d3bda135818"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d058e55-d94c-4df2-9623-99a4065a3503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6785220d-b744-4c61-9cf0-250f4a191228"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "afd07921-1c2d-4f48-a5f9-6cf730b0da34",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eaed19c5-8d25-4f8b-bcb8-121e0a117974"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4308998-baa4-4394-b183-407643e83b48",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6804a96a-fa43-42ff-872a-690e5f5c3459"
                    }
                  }
                ]
              },
              {
                "id": "4d4f3b1e-824e-43fb-801d-f1b6090bde13",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4fdf001d-bbdc-44c1-b3e8-bece820a366b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b087a6ea-c84c-4603-871f-1702b1a00bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6a388853-7979-43b2-854a-099e31878140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86c38654-78a5-4483-9480-df4198274947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b6c0c41-6814-4d1d-9de3-234a16cf9222"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "eb9136df-98e6-48ca-80fe-a431b748f009",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1f77ec34-9281-4e88-b82b-81743d266dee",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c3c74e1f-67af-49eb-a2b6-863aafaec4a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "195e32d9-2f3f-4656-9a66-31adf08666c0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cffcea37-d6b4-47f9-bfa9-4d0737e8bb85",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e48424b8-e7e3-4898-bf6b-3813dcc7214e"
                    }
                  }
                ]
              },
              {
                "id": "7b81769a-794d-4eda-bb6e-a7124c926249",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e65d51ca-5dd0-4d3d-85e7-38397de8f0c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "76173187-6b8e-404a-8223-ccfbcfbd4261"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f3cb587b-14b7-44ad-b938-690668381ac2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac82a26a-d335-47a8-91ea-96fa6f3b419a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "335b7978-c4e5-495a-9608-9991db63ac5b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "6852322c-47f3-4df0-bb1c-c47012879171"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "91ba3ba4-0602-4af3-9d75-245636ea28e7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b7fd5c59-6eef-4113-9b6a-66553e09191e"
            }
          }
        ]
      },
      {
        "id": "063512cd-ceef-432b-a3af-e8fa709d1dc9",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "7b55dde0-0285-4206-9487-32d02e2b393e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b6424f22-7e63-4c38-a3d6-4be1a5d8e3c6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "37911042-9cc1-4ca8-b486-344c28ee122f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498173c2-ca05-48ce-9918-1f9ccfb6c34f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a7123334-7282-4bdd-9ba5-993dad85625c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b73c38d2-a470-46d1-92ab-6e8ac8c95343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8864f50b-649d-4386-8ef2-c008bbd283e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e57bd409-4c6c-4348-8b16-2c826bc5e765",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "090cbb86-48fc-4a5e-b444-8e60950d807f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e43e01e9-dd7e-4f2b-a07b-71320f19354d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1595222c-3554-4508-a31c-290f0e7c41ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "41ceb27f-0234-4768-8f30-696d362d43f8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92df8d30-9299-4a9e-9125-56daa495e0e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "923bd478-91c6-4b4a-800b-d1b44ac45a0b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d570a9a5-6fa7-4468-8b39-9fbedcf86121",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "05bf399e-38e3-46c5-b6d4-b9275720f451"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7345ea88-672f-45f5-ad04-022d54cfa93e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "48bb0767-2319-4ef6-841c-a66308e605cb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "826c33ec-a5bc-49e0-a253-6b3b5399bae8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9c3aa349-2680-4902-b7b6-9ddeef9f21aa"
            }
          }
        ]
      },
      {
        "id": "ada4b81d-751b-4c71-8504-8940efbb60a5",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "97166817-58e3-4198-b5bc-5f85874734f7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ce91b7c2-20da-4d3e-9732-f0d34d43fec6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "35236ad9-226f-4fce-ae57-2ec6927db141",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dadb267-bd23-428f-8230-99858c8a0066",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72c64e8c-7b52-49fe-a88e-a9a0c968f391"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d0b6ac-a5db-4bea-b284-9d521681651e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b4d2f61e-d239-4805-86bf-3a8041108eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe752722-bfd8-4c34-a689-248fda980101",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd4bf700-ea4a-4b10-a05b-4e0199567ef2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7d683455-57d6-4e00-bd4e-cda64851e786"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feeb02ff-2e15-467e-82ad-6af1280b4f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4a82662c-3ae9-4a2b-8e3e-404fd1549fb9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6755b2f-2316-4784-9533-ccece0df74b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1a84e9d-1de8-4b5b-85a9-b836438f2735"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6fea95d8-dd5a-4570-8e77-08efa96e4328",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d80d340-36e4-4908-b250-382ffe9215e1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3f76fd95-da99-4028-acd5-fd885563f479",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "34270ff1-576d-4702-a7b3-201cb4fa000c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "443c8da4-9aab-4a99-9af3-85062b685cc0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "18b93af7-efc5-428a-9aed-5a7d24eae475"
            }
          }
        ]
      },
      {
        "id": "08f77a33-68f5-4598-b676-659093de4456",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "287c9654-d1d7-40dc-bf90-a0116e5bc493",
            "name": "Negative Testing",
            "item": [
              {
                "id": "26fd7d5e-1e73-4d3c-a295-6f25d152885a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f0f29eb9-8c01-4330-beb5-17c2b34e8ba1",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9554adee-8123-4b2a-8b9d-4cc60bd6ad79",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63b6d00c-aece-435d-af87-622fb8796414"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df5f96c6-b9e1-4ced-b242-451802b4a6d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dccce157-8423-4a8d-9394-64461952df45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63b52f22-0828-4dc6-92c3-04385ba7b3a7",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22852bbf-cccc-4d5c-bee8-acc5c1df5102",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a2892236-1500-497b-87d9-d8838b15f9f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "616f9daa-7efe-4a38-ba1e-6b64ab736181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c06894c4-914b-4ec9-8932-1eab2fe37999"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cb1fbc54-4473-4270-be26-40ba462428cc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "45aadbd7-5371-42ea-a72d-4bc1e8cdf166"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7044811-c75e-497b-95df-f3a54e8a7e8d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c87bd9ca-b947-4fc3-9042-ecc73fd60166"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a66a55dd-0c74-4f4d-b1a3-4b56305dcfde",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6a69b75e-55a8-4945-b3e0-5ba9be85720b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2bb0f24e-2724-4d1e-98ab-dbe7ef6c912c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "62202265-f17d-443b-8705-04092d91be86"
            }
          }
        ]
      },
      {
        "id": "5897fc6d-6720-42e9-8ef0-4630cc9f427f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ccc5fcad-8ae8-427a-9047-0c70eced4a7d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1477b00c-4a8c-4694-af62-659ad0af5fce",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "55342aaf-8f52-419d-b3d1-55bb6b711e17",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cbb3676f-929d-437a-8acc-c8be4634292c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f1452f8b-fcc9-4f25-a1e5-9d5f7e703b88",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1901,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 259,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 955,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 946,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 632.8841698841699,
      "responseMin": 14,
      "responseMax": 6448,
      "responseSd": 730.1891290546318,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1678408907964,
      "completed": 1678409082438
    },
    "executions": [
      {
        "id": "f80478d2-6330-4fbf-bda2-1416e2120233",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "03409379-8096-4f7d-91a7-be86d8c673c8",
          "httpRequestId": "6c869e4b-775f-408e-ab33-cb1b3022043d"
        },
        "item": {
          "id": "f80478d2-6330-4fbf-bda2-1416e2120233",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "33e09678-d261-4362-b410-d20fe9e6834c",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 0
        }
      },
      {
        "id": "3f062221-50a9-4297-8977-8ebef030e2dd",
        "cursor": {
          "ref": "a1d6bc59-b8b9-412c-ab45-37027bc07314",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "742a3854-8c83-422c-9d4c-7fb2e9f2326d"
        },
        "item": {
          "id": "3f062221-50a9-4297-8977-8ebef030e2dd",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "aa50e242-2be7-4fb2-842c-cd5299f3654e",
          "status": "OK",
          "code": 200,
          "responseTime": 14,
          "responseSize": 0
        }
      },
      {
        "id": "c5f9600e-a781-4883-81e9-cf9430aca229",
        "cursor": {
          "ref": "767b8921-c58a-4889-a1dd-6fb943c8f115",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "78978e9a-fb38-4ed9-9e40-ad2804f76a87"
        },
        "item": {
          "id": "c5f9600e-a781-4883-81e9-cf9430aca229",
          "name": "did_json"
        },
        "response": {
          "id": "b7378fdc-b2c4-4abd-9d18-0c83b6490016",
          "status": "OK",
          "code": 200,
          "responseTime": 1127,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d229c0f-2618-437d-a10f-2b1b841a0944",
        "cursor": {
          "ref": "81dc01bd-dd4d-453e-9a12-86b447441eef",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1922e4a7-dc2e-4c2a-b413-e5eaaa6ee3b0"
        },
        "item": {
          "id": "2d229c0f-2618-437d-a10f-2b1b841a0944",
          "name": "did:invalid"
        },
        "response": {
          "id": "ea4d01dc-0703-4689-9c15-069183a5909a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d229c0f-2618-437d-a10f-2b1b841a0944",
        "cursor": {
          "ref": "81dc01bd-dd4d-453e-9a12-86b447441eef",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1922e4a7-dc2e-4c2a-b413-e5eaaa6ee3b0"
        },
        "item": {
          "id": "2d229c0f-2618-437d-a10f-2b1b841a0944",
          "name": "did:invalid"
        },
        "response": {
          "id": "ea4d01dc-0703-4689-9c15-069183a5909a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d6a188f-daa5-46a2-bd11-9a0af3eb865d",
        "cursor": {
          "ref": "f842db3b-0ebf-40fa-b296-6d590f012d38",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "36247796-1205-411d-a873-29167e3033fc"
        },
        "item": {
          "id": "1d6a188f-daa5-46a2-bd11-9a0af3eb865d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "3b80db19-8659-4cd6-a42b-e85f2fec4aad",
          "status": "Not Found",
          "code": 404,
          "responseTime": 771,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91aea3ea-5197-4cd1-8b5f-a80342c8a8a4",
        "cursor": {
          "ref": "b844c24f-7644-464b-8820-b8e63afa18f0",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e6d9885a-187e-481f-b820-bcdd5bd1ddff"
        },
        "item": {
          "id": "91aea3ea-5197-4cd1-8b5f-a80342c8a8a4",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "732b95cc-f350-4d6b-8615-8cd4c0952fa2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 547,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a6e17a6-a208-454d-9f29-f33bcd875639",
        "cursor": {
          "ref": "d26600c6-fa05-4d34-8dc5-bcf95d960345",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "61b1e4ea-39f9-4b87-b05c-b6ffb95213d2"
        },
        "item": {
          "id": "3a6e17a6-a208-454d-9f29-f33bcd875639",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "cd2c4504-23d3-48b7-b69d-e1c194ee0209",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d400270-afb3-4985-af92-92088426ce96",
        "cursor": {
          "ref": "8b54c82b-3881-42ed-bd3b-54d940f18f85",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a60f0d53-9883-45de-96e1-066ede5e4c0e"
        },
        "item": {
          "id": "5d400270-afb3-4985-af92-92088426ce96",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "038431dc-930c-4a80-ba73-daa208baca1e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 614,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d400270-afb3-4985-af92-92088426ce96",
        "cursor": {
          "ref": "8b54c82b-3881-42ed-bd3b-54d940f18f85",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a60f0d53-9883-45de-96e1-066ede5e4c0e"
        },
        "item": {
          "id": "5d400270-afb3-4985-af92-92088426ce96",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "038431dc-930c-4a80-ba73-daa208baca1e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 614,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b27cae-63b4-425a-804a-c2dad4e662cc",
        "cursor": {
          "ref": "e6ae2b78-9568-4126-97fe-1a8dc145a0d2",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "cd2f7d54-7a89-41ca-b0c9-fbd1a6c03f0b"
        },
        "item": {
          "id": "71b27cae-63b4-425a-804a-c2dad4e662cc",
          "name": "identifiers"
        },
        "response": {
          "id": "9120e1c6-6b04-466c-9160-a787dd85447c",
          "status": "OK",
          "code": 200,
          "responseTime": 968,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbda5e38-9fe6-4696-8f66-ea4df2948fbb",
        "cursor": {
          "ref": "dc5340c6-d1a0-4aef-8723-200050423c0e",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "06c1a3da-f291-4361-8014-edcde8a4eeb5"
        },
        "item": {
          "id": "bbda5e38-9fe6-4696-8f66-ea4df2948fbb",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d5910850-e0c7-41a3-a545-3135c538ce72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbda5e38-9fe6-4696-8f66-ea4df2948fbb",
        "cursor": {
          "ref": "dc5340c6-d1a0-4aef-8723-200050423c0e",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "06c1a3da-f291-4361-8014-edcde8a4eeb5"
        },
        "item": {
          "id": "bbda5e38-9fe6-4696-8f66-ea4df2948fbb",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d5910850-e0c7-41a3-a545-3135c538ce72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47659375-06b0-41dd-8a97-176c715967ec",
        "cursor": {
          "ref": "e3a45d7f-2b97-4fa4-a77a-fc569409ac88",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "858d8ae6-67db-41af-8dfb-73029dec3ae5"
        },
        "item": {
          "id": "47659375-06b0-41dd-8a97-176c715967ec",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "81819a76-9884-4ef2-86e1-bff2d285b8d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1156,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "972684dd-04bd-44fd-877e-629ee95b4187",
        "cursor": {
          "ref": "9d51422b-ac1b-4318-bf47-147f11c4aae8",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "fe507c35-eced-4bfc-a25f-9a87682651cb"
        },
        "item": {
          "id": "972684dd-04bd-44fd-877e-629ee95b4187",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d7a27937-736b-48bd-8dda-7a6621f15a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 898,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55f32031-effd-4359-9c73-25fa85b585a1",
        "cursor": {
          "ref": "b90fb736-06ee-48f8-9a6f-3bee33a6fbdf",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "d7836097-8f9c-4c08-963a-794f29dea0f7"
        },
        "item": {
          "id": "55f32031-effd-4359-9c73-25fa85b585a1",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f3af4f15-4db4-444e-ba71-6d091e836a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 813,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de7edaf-7529-4bc9-b4d7-18581a4b6ac5",
        "cursor": {
          "ref": "7aa3150c-e35b-4ba6-bc3c-5b211cd2fdde",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8896fccb-1257-44aa-8c5c-6e4097b1f2c6"
        },
        "item": {
          "id": "8de7edaf-7529-4bc9-b4d7-18581a4b6ac5",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9100afce-27c6-4654-a535-bedb95c44fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 733,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac93340a-d607-491f-b9ee-207fbf6266e3",
        "cursor": {
          "ref": "e5c081ad-a747-4e3c-878c-9a652d70e9d1",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "9b98dd3c-6c32-4150-a13d-766d29beef77"
        },
        "item": {
          "id": "ac93340a-d607-491f-b9ee-207fbf6266e3",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "0dfee371-2d57-41a9-a85a-eb1af78e258a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db7aa83a-6382-4eb3-a783-af740ad7b482",
        "cursor": {
          "ref": "6d59e946-c64a-4264-9aa3-3e802949a6f9",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2604748d-5bf9-408e-89c0-64eacb0eb702"
        },
        "item": {
          "id": "db7aa83a-6382-4eb3-a783-af740ad7b482",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "0f032cac-fd7e-4ace-836a-cceccdece94c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b5ba0f-09bc-4771-ae00-94b416081529",
        "cursor": {
          "ref": "11645d66-6699-4508-a7d6-a61a6668d7cd",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "4a9f14d2-4b9b-4a5b-bcb5-f72ebbda8abe"
        },
        "item": {
          "id": "a8b5ba0f-09bc-4771-ae00-94b416081529",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3f0726e9-b911-4b8e-9a70-e9ff7aa1bc06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41b2e6d5-9cb9-44d7-a991-c02c5205c81a",
        "cursor": {
          "ref": "59421921-8837-4fb2-ad2a-dcfb09701f39",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d2ce9ada-bc25-48ea-96ae-e7260adc8f71"
        },
        "item": {
          "id": "41b2e6d5-9cb9-44d7-a991-c02c5205c81a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "8b5c7068-ac90-4f56-bc76-348166575193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "077bc11f-390f-421c-bfab-bb2668b4fa17",
        "cursor": {
          "ref": "3f07922d-b848-4775-9f39-7f8627228232",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "958ebed4-e18e-494c-8bd9-2882c713db47"
        },
        "item": {
          "id": "077bc11f-390f-421c-bfab-bb2668b4fa17",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c97dc78b-e98c-4424-ac9f-9d5abc415362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "487036e6-ad94-43d8-a606-9ee96ee0a89b",
        "cursor": {
          "ref": "67f5df96-1378-42a7-9378-5656785b13a9",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f8bd336c-c8ae-4f62-a9a7-94532839f5ad"
        },
        "item": {
          "id": "487036e6-ad94-43d8-a606-9ee96ee0a89b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "2aa24788-a42d-414b-91ee-a806c7d75a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc56522-cce1-462b-b4f2-322b69c49c09",
        "cursor": {
          "ref": "018e8d7d-7911-4a2f-adf5-6c34f459c68a",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c56ca06c-42b4-4687-a767-997b9fee0595"
        },
        "item": {
          "id": "8cc56522-cce1-462b-b4f2-322b69c49c09",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "79b6b255-674f-4efe-9344-fbdc48074560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 699
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240cc798-0304-4464-b265-4ae33ba55896",
        "cursor": {
          "ref": "c8dfbcdb-2e9e-4acb-ac16-91d88f05a87b",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "bd05afb8-19e6-4fe1-aa8a-afda089d591c"
        },
        "item": {
          "id": "240cc798-0304-4464-b265-4ae33ba55896",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "0744e254-d528-4299-97b7-df120de576e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03322adb-91dc-4f4a-9c4d-97155f1ffd7d",
        "cursor": {
          "ref": "d3360ced-8e35-4afc-b928-2563fd552855",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "95abb020-9fe5-4e74-bf45-f0c9c5e6ad56"
        },
        "item": {
          "id": "03322adb-91dc-4f4a-9c4d-97155f1ffd7d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "722f1aff-8620-4134-85ae-0964886fd1e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76873c51-c2b9-4129-b2e4-1998ae6d83ab",
        "cursor": {
          "ref": "5201a2bb-fe04-403d-8d1e-24ea258e75eb",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "4a2a25be-bdac-42df-875e-09e93e4ec1e6"
        },
        "item": {
          "id": "76873c51-c2b9-4129-b2e4-1998ae6d83ab",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "240a0646-46b6-4988-a742-14d159e46c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1330410b-d380-46d1-ac19-203d3973113d",
        "cursor": {
          "ref": "f7db3059-d1f1-4512-bddd-3af95056a8b6",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "4242c4d0-0180-4e53-bae3-2479bb48395c"
        },
        "item": {
          "id": "1330410b-d380-46d1-ac19-203d3973113d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "05d5d5da-51e4-43a3-a1aa-f04c17961b12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dcda894-9ab0-4d50-a0c3-98b0ff22a338",
        "cursor": {
          "ref": "b49e45ca-e276-4a99-ace5-a635c9eb9c51",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5e35218d-72b9-41d8-8b3b-5c7a8e15659b"
        },
        "item": {
          "id": "9dcda894-9ab0-4d50-a0c3-98b0ff22a338",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "711e0985-a8a8-4c9c-a510-6fbe7e014b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 824,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90197d8e-438d-4b53-b7bb-82ff1ea1798f",
        "cursor": {
          "ref": "93b03be5-41b1-4302-ac26-c364457ca413",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "8117ec62-2518-4881-9329-8111e25352b3"
        },
        "item": {
          "id": "90197d8e-438d-4b53-b7bb-82ff1ea1798f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "4ba316ab-a619-4dcd-ad73-293389345673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 953,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf6b808-17b9-4bb6-9351-905c98bae16b",
        "cursor": {
          "ref": "2cba638d-83ea-4da4-8f43-bbc19f5816e1",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "7ef29f55-5a03-452a-aad6-c0808c0fa445"
        },
        "item": {
          "id": "daf6b808-17b9-4bb6-9351-905c98bae16b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "7c67af03-c57e-48e4-85c9-9cb842b3aee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 838,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1e31c6-d030-4ec1-aaf0-6d03d569dc5f",
        "cursor": {
          "ref": "472a3d4e-c17b-4c1c-b071-37287b93147f",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "9fbe8e35-4269-4ed9-9820-6c779325bb5c"
        },
        "item": {
          "id": "8d1e31c6-d030-4ec1-aaf0-6d03d569dc5f",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "617080c4-6d90-4758-81e7-9386b07d01a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90fd8f45-c040-45b8-a043-cbde8d917bec",
        "cursor": {
          "ref": "edff7f76-7673-4e5f-bea0-34ce6c6ae5d3",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "497b1721-8583-4fc1-b05f-c17eab567fea"
        },
        "item": {
          "id": "90fd8f45-c040-45b8-a043-cbde8d917bec",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "c34bfade-67f5-45ea-8bb7-8e7c6818499d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e05044-1ee1-4478-9166-1600e655eba3",
        "cursor": {
          "ref": "1f1d5e5e-640d-4c73-bd1d-96451a84c618",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "6ae2e21e-e211-4d12-9080-421a23395466"
        },
        "item": {
          "id": "47e05044-1ee1-4478-9166-1600e655eba3",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "18ff1330-8bdf-49ff-bdc7-447c5102fe67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dae1c775-5f8d-4467-9d17-ac312588e6ac",
        "cursor": {
          "ref": "731a903d-85a1-400a-a220-ab346668fcbe",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "148c38cb-c544-4274-83ab-02017727474f"
        },
        "item": {
          "id": "dae1c775-5f8d-4467-9d17-ac312588e6ac",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0724b446-d338-45d5-90da-196d9a5259e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca675022-e6ea-4def-9a58-645f200e44c0",
        "cursor": {
          "ref": "607e6d1d-e806-416f-a52c-cb2e93f29a73",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f5bda3a4-bbb5-49c8-b047-04c726c389a2"
        },
        "item": {
          "id": "ca675022-e6ea-4def-9a58-645f200e44c0",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "5e842b0a-561f-4d88-b93e-5ea91b21305c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "036e058f-1532-4641-a3d9-00f09461cc5d",
        "cursor": {
          "ref": "0ab51f3c-7d1b-41b6-af3c-fa0a1ff2536d",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "8bb3e376-3af7-4a1a-b1d9-af1dc6a2510d"
        },
        "item": {
          "id": "036e058f-1532-4641-a3d9-00f09461cc5d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "acaede8e-1651-4941-9d7b-bb70166b917d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "484ffe1d-2ddb-4a50-8a37-44b80b0139b9",
        "cursor": {
          "ref": "6433ddc3-ef21-44be-a230-c9ae4a6b50b1",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ba53d7a3-bc7e-4784-8524-ab587606f109"
        },
        "item": {
          "id": "484ffe1d-2ddb-4a50-8a37-44b80b0139b9",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "83a68dab-f2b5-4ff4-8de6-6c7ccd7c0e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91cef864-ea0a-403a-bba1-b469c8f03863",
        "cursor": {
          "ref": "0b76ad73-f471-4f4d-a1af-28dc075a6d72",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b445fa25-239c-4bfa-a41f-338d14bf0ff4"
        },
        "item": {
          "id": "91cef864-ea0a-403a-bba1-b469c8f03863",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f72f0a8f-6e0b-4fe7-b833-41c6d7d43cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "342798f6-ed95-4af9-bf23-3b2d3616f723",
        "cursor": {
          "ref": "4b9d47d0-d5a0-48fe-80da-b08f1651e85b",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "2a254333-63ab-4216-8f45-84c9216d32c8"
        },
        "item": {
          "id": "342798f6-ed95-4af9-bf23-3b2d3616f723",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "1b80a2be-1af7-4dea-aae5-b0b313929c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a510a4-ce88-4cf3-a7d6-7b094a8c2162",
        "cursor": {
          "ref": "bc986080-464c-41d0-a81c-a6b13e9c3a3b",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "93114ae7-3325-47f9-b56c-76ad71e722e4"
        },
        "item": {
          "id": "55a510a4-ce88-4cf3-a7d6-7b094a8c2162",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a66b605e-56c8-44d1-8417-1e7dd8e79134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d73550-65a2-4c23-aaad-269964e6edbc",
        "cursor": {
          "ref": "2f81f9a6-9bd6-461e-a143-39046eaa9956",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "691a9fd2-aefb-4438-8170-cdedfa30da3f"
        },
        "item": {
          "id": "d9d73550-65a2-4c23-aaad-269964e6edbc",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "524e563d-4bd4-426d-bf9b-67e9e8f2cbf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5bf9ffd-ca45-4d5f-9e61-3bf2ad6a10cd",
        "cursor": {
          "ref": "24a3f229-f349-4a47-b449-aaebbdeabbaf",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "25a80287-fe44-40a8-b392-6d7d1ba421f3"
        },
        "item": {
          "id": "b5bf9ffd-ca45-4d5f-9e61-3bf2ad6a10cd",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6869db1b-3381-492e-bd83-cc87b3e17487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 1099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74658ca5-aeda-4db6-9525-f8744ce7ff78",
        "cursor": {
          "ref": "6b0898c6-8569-4eba-aefa-a15f18dd9e01",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "63fde22f-c9f1-4314-bdd8-41939eb0632b"
        },
        "item": {
          "id": "74658ca5-aeda-4db6-9525-f8744ce7ff78",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "974312df-81a9-4410-afb7-b502aeaf320a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 1028
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4938ad4-71a2-4d3f-bbe7-0a16f90992fc",
        "cursor": {
          "ref": "2f5d9284-ec22-4645-a998-8ee9025a4c25",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2d4ca015-4a05-4d59-9a20-7bfa0b595033"
        },
        "item": {
          "id": "a4938ad4-71a2-4d3f-bbe7-0a16f90992fc",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "dd732f1a-c944-4b6f-9de6-8138bfea8732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a2b16d-cdcf-46ac-82ff-15dc5329b8ab",
        "cursor": {
          "ref": "6b44ae6a-c7b0-45f8-a8ca-fdda806ef7a5",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "800aaa16-5ab2-44e7-b585-d63e296de520"
        },
        "item": {
          "id": "f7a2b16d-cdcf-46ac-82ff-15dc5329b8ab",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "6377416f-a700-453b-a065-cb2e9c8947a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 1027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee22225-ce76-455e-a0a5-e0efd366f364",
        "cursor": {
          "ref": "312407d6-656c-474a-aa77-0dacfc87b6c6",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "cfcc6022-998d-4cb4-8695-f95f311c8c4b"
        },
        "item": {
          "id": "5ee22225-ce76-455e-a0a5-e0efd366f364",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "8664ebf5-025f-4662-bb16-97696d475c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14fa99ae-dff2-45e6-875c-9581d6e5ae0e",
        "cursor": {
          "ref": "d1ec0cef-07b1-481d-b1b4-dfa82b3bfd84",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "07e3776e-8dbe-4758-af3e-dbc2b11b6ccc"
        },
        "item": {
          "id": "14fa99ae-dff2-45e6-875c-9581d6e5ae0e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "3229931c-33fb-47d5-8654-1ff20fbe5992",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 656,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "732645f8-47cc-47aa-bece-8adcee1217b8",
        "cursor": {
          "ref": "c76d770d-1db7-4784-88c0-b838b3873475",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "4f7f321e-d222-4158-a0c5-d0f39df559a9"
        },
        "item": {
          "id": "732645f8-47cc-47aa-bece-8adcee1217b8",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "a8fbe6b0-ad85-406a-aa30-43856c5f8a25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1058
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "291ecf7a-d527-4a04-81ce-13db8d0f5f48",
        "cursor": {
          "ref": "97b974af-4d89-4532-9113-599dea198386",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "5118b5dd-54c8-47f2-9144-ec2e8a13554c"
        },
        "item": {
          "id": "291ecf7a-d527-4a04-81ce-13db8d0f5f48",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "06265b81-2940-434f-a3a0-653fecae8a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 1438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "012edf3f-bf3e-443d-89d9-087e59bb0376",
        "cursor": {
          "ref": "55bed509-d5c3-45dd-abd7-ace618dd7835",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "3ae5a17b-97c8-47da-b7c4-3f86c26e793d"
        },
        "item": {
          "id": "012edf3f-bf3e-443d-89d9-087e59bb0376",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "28047418-0675-4d1e-9c86-4d62921491c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a66643-c365-43e0-a690-a905a8c29e5b",
        "cursor": {
          "ref": "a545d634-9edd-4bdc-afd7-9d289bde8a46",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a359c29e-594b-4a54-8459-111ccc32af42"
        },
        "item": {
          "id": "e6a66643-c365-43e0-a690-a905a8c29e5b",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "80b586e7-4757-44c9-ab5c-d36ed3145e9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6704e89d-7996-47f6-a26d-dfd14ce15f76",
        "cursor": {
          "ref": "80a10c5b-f658-40e2-8251-350335311242",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "5b5f5b9c-de0f-44cf-acfa-1252b24bc38c"
        },
        "item": {
          "id": "6704e89d-7996-47f6-a26d-dfd14ce15f76",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "11c00f53-d969-4773-bcba-587c58ac66c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 1366
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe4697fc-ca89-4478-b2db-457197132e47",
        "cursor": {
          "ref": "98d91aac-96ab-4d0a-8c9d-874ecd499f51",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "0ce6d996-0772-43f0-b7da-0960dfa2aa09"
        },
        "item": {
          "id": "fe4697fc-ca89-4478-b2db-457197132e47",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "bea32e85-7e66-4db4-8ad4-8e416747cc1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 1769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d9dfd1-a9e9-4308-beea-a82e1cb2446f",
        "cursor": {
          "ref": "b810998d-64c9-46d4-912f-b522046ad1e6",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f5d930ee-f836-485c-9b12-e591fcc6e663"
        },
        "item": {
          "id": "44d9dfd1-a9e9-4308-beea-a82e1cb2446f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e6fdd685-fc8c-4fc8-83bd-c0d69676e1a8",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 677,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "303c7fa2-adaf-4675-89b2-8f42217b66ee",
        "cursor": {
          "ref": "daa399c5-9780-4c5f-ae2e-36c1784604f3",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "f9c0beab-67d2-4119-abd2-9594cf1c441b"
        },
        "item": {
          "id": "303c7fa2-adaf-4675-89b2-8f42217b66ee",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "ead92516-9a0c-47ee-acfe-0fc63e1b090e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 657
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61fe7d77-5cbb-49ab-b717-a62017cb0aba",
        "cursor": {
          "ref": "243dd577-9fad-4d09-b676-cf3d66b3a7c2",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "6140a30a-0095-4d2a-b756-b8f2cf9b83fe"
        },
        "item": {
          "id": "61fe7d77-5cbb-49ab-b717-a62017cb0aba",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d2ee1c3d-946c-4873-8596-191fe4c4e2b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 935,
          "responseSize": 681
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49013546-0e4f-45b0-8595-6c8f06244875",
        "cursor": {
          "ref": "d5c98fc3-5834-4329-8c08-8569fab961fe",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "6876a6ad-760a-455b-98b0-f21672c605f9"
        },
        "item": {
          "id": "49013546-0e4f-45b0-8595-6c8f06244875",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "74e34d65-182c-44d0-b1b9-10b011f60ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1097,
          "responseSize": 662
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe3287b-ab44-43c7-92fc-30d4d202c907",
        "cursor": {
          "ref": "5e1aa76d-c7a5-41eb-a32f-bf9180ad6cc4",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c4d8acbd-8125-44f3-9822-ba00c517a6d8"
        },
        "item": {
          "id": "dbe3287b-ab44-43c7-92fc-30d4d202c907",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ef7af05d-bff9-4e0d-b8db-911b8e3ab136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1263,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b252861-0678-447e-8ac0-41374f632ae0",
        "cursor": {
          "ref": "4f047641-f40a-4ef6-9ab5-dfc44ecf91bf",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "302cab72-554a-490f-b599-eef470eddb13"
        },
        "item": {
          "id": "1b252861-0678-447e-8ac0-41374f632ae0",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "3641991d-99cf-4fc0-8fb5-e3372ee1a85e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1446,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b184ba99-3457-456e-a23e-9ff48cfb7059",
        "cursor": {
          "ref": "9ac27edd-eacd-42d4-8f66-c32fd816324c",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "7000c029-7018-4637-994d-fbd47b7b79bd"
        },
        "item": {
          "id": "b184ba99-3457-456e-a23e-9ff48cfb7059",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "e8852140-946a-4c16-a154-369aea85b0a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 883,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f299257-0a85-4a76-beaa-bec1967b2b18",
        "cursor": {
          "ref": "43a22a64-23d9-4115-957b-4701935962b2",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "c58eec22-67f6-4655-adf3-73e8d1b751c8"
        },
        "item": {
          "id": "4f299257-0a85-4a76-beaa-bec1967b2b18",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "097bcdd9-f8c4-4d14-80cb-09c642cc0b01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 936,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b1115e-d52d-4b16-ad73-333804358bad",
        "cursor": {
          "ref": "5610209d-6b00-4ea6-8dab-731fe147696a",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e36459f8-9140-427e-abe9-228744e11a2f"
        },
        "item": {
          "id": "d5b1115e-d52d-4b16-ad73-333804358bad",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "66d7138f-6d25-40df-93ff-14d19497ad74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 783,
          "responseSize": 682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ee67fae-4984-4f2f-b6e4-8d903b503990",
        "cursor": {
          "ref": "548234d8-b8c2-4faf-9727-3d96f13e0eec",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a868c26b-e0a9-470f-b41f-7277f1663fe4"
        },
        "item": {
          "id": "2ee67fae-4984-4f2f-b6e4-8d903b503990",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "5629797d-c630-499a-a493-66f4c4213577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 1153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c57ba69c-38a1-4141-8269-a234fdfe4fc6",
        "cursor": {
          "ref": "d236e9b2-5b6d-475a-80ca-020dbb7d0b7c",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "8a9149ef-de66-423d-92bf-6c27ce64940c"
        },
        "item": {
          "id": "c57ba69c-38a1-4141-8269-a234fdfe4fc6",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "319e5028-dc3c-48ad-bc33-993cbd6457bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11efbe12-71a5-45f9-a5d7-d233cf42011c",
        "cursor": {
          "ref": "fa37efa3-7dcd-4ad0-ba11-478184420396",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2567b1d1-7dcd-4665-a063-c02a06eda001"
        },
        "item": {
          "id": "11efbe12-71a5-45f9-a5d7-d233cf42011c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "06423532-8f27-4cfc-9243-c6ec7c50682b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 959
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1cbd461-8f30-4ade-851b-804de3434382",
        "cursor": {
          "ref": "481f192b-913b-4587-b0fd-774355cb4652",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "5b5211d5-fd4c-439a-9a78-63438cae1c86"
        },
        "item": {
          "id": "a1cbd461-8f30-4ade-851b-804de3434382",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "fac3d6f2-045e-4387-bb9b-351e84dfceee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d4d579-a238-495a-8d0f-b5245fbb8bae",
        "cursor": {
          "ref": "214fee5c-261d-40c3-97e0-4aa97ede214e",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "6aaae942-9d40-4f3b-aa76-6f7e141258a4"
        },
        "item": {
          "id": "d4d4d579-a238-495a-8d0f-b5245fbb8bae",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "5ea0802f-7070-4352-ac84-c258cb900b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0914d905-944b-4dc2-8e3d-34e466f24fa6",
        "cursor": {
          "ref": "ef39a45d-9b1a-4ef5-b3c0-fb8d73ca8c6a",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "aea122d3-dacd-401f-82a7-e31edaa9de12"
        },
        "item": {
          "id": "0914d905-944b-4dc2-8e3d-34e466f24fa6",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f7e6eb20-ad35-4ab3-b763-8967926250dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84240371-bc8a-4d64-a4be-451fd9b0c66a",
        "cursor": {
          "ref": "07626017-4e7f-48a6-8fb9-51dd48d48ad0",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "fc5ea97a-a5fd-4471-b868-fa6249afbd67"
        },
        "item": {
          "id": "84240371-bc8a-4d64-a4be-451fd9b0c66a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "d5f5ca86-037f-48b6-9502-28596355c1c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 1454
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77200f9a-b00f-432f-9fad-28a911514580",
        "cursor": {
          "ref": "b18ed436-8bc3-4479-aafb-8b72776bee21",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e0341030-5d97-470b-9451-220e360e1910"
        },
        "item": {
          "id": "77200f9a-b00f-432f-9fad-28a911514580",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "166d0a73-c489-43ab-b79d-f1bc6437f13a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6cde8a-286c-4941-9a3f-8d514a27d403",
        "cursor": {
          "ref": "eeca4c45-1ee1-46c6-b98f-cfedb75d3b9e",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4e50c449-34cd-47e8-baef-5258a882759e"
        },
        "item": {
          "id": "6a6cde8a-286c-4941-9a3f-8d514a27d403",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "70cd0965-3f06-48a8-ba5d-d41ffb754740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 1453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a02f7f-3304-490a-876f-21bc0988f9eb",
        "cursor": {
          "ref": "a38fb228-5e5c-4bbf-94ed-ea3ae3dc5e57",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ffe52b86-1df0-44bd-9d74-276fcb530fea"
        },
        "item": {
          "id": "d6a02f7f-3304-490a-876f-21bc0988f9eb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "27ab8b00-0cca-4eca-af25-bc3f7680e852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5be5293-15e9-488a-90af-366b99d49ea1",
        "cursor": {
          "ref": "dffbe485-85af-4fb4-8ce6-32e32548e157",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c702407d-3298-4e3b-a40d-65058dcf6bf0"
        },
        "item": {
          "id": "c5be5293-15e9-488a-90af-366b99d49ea1",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "143b9d9e-aa92-4f22-acbd-b46fcc53c068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ead197-0831-4d48-adf6-f6ed3326471c",
        "cursor": {
          "ref": "48d5a9dc-235e-4072-b52f-b49bc1fa4898",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "4513e379-0d85-4673-87df-325d9a96eeef"
        },
        "item": {
          "id": "77ead197-0831-4d48-adf6-f6ed3326471c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f42b9e56-595b-40b2-acf0-4c08599bb200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5907249-7f39-48ae-a3da-143ce49db7d4",
        "cursor": {
          "ref": "49722f3f-e485-4479-af3c-597cfc55276a",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e3873371-fd74-4def-a57b-7e740ccb7c89"
        },
        "item": {
          "id": "b5907249-7f39-48ae-a3da-143ce49db7d4",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "5492d665-97ab-4be3-bafd-411ac1ff135e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 613
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d910e8a-ea04-451b-8d40-61065445f11c",
        "cursor": {
          "ref": "d438f3b5-e7a2-4247-bfba-029612b3c78f",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d282334e-84ea-45e5-80bf-9cc792a9bb48"
        },
        "item": {
          "id": "8d910e8a-ea04-451b-8d40-61065445f11c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b1b436b6-2c68-41c8-b1b5-4c39693e15e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7abec46-0c05-49f5-bec5-fd68dd6ef42a",
        "cursor": {
          "ref": "6e2d78cf-3ddc-4cd7-b496-e7a657e861fd",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "017ba466-5368-4189-b940-72441a893ddd"
        },
        "item": {
          "id": "b7abec46-0c05-49f5-bec5-fd68dd6ef42a",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "2efd7c1c-4cf4-4473-856b-8000df2ac27d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e3bbbf6-3f9c-44be-a270-b307f678a268",
        "cursor": {
          "ref": "49af9a9e-f5ab-425e-ba90-f234ed2c2b27",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8e12cc3e-5416-47d1-b5ce-37c594366506"
        },
        "item": {
          "id": "0e3bbbf6-3f9c-44be-a270-b307f678a268",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "fab30ebe-d813-46f2-a056-44ad8fae43ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f3486d-9f6a-4f56-a1f1-3eaac8985d85",
        "cursor": {
          "ref": "1aec4b14-9d28-4385-921f-22e960a70b0d",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "aced621e-cb78-46ce-9b90-21aa933e6885"
        },
        "item": {
          "id": "a4f3486d-9f6a-4f56-a1f1-3eaac8985d85",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ad44725b-b2c1-49a0-aed2-22a21be14d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da2a641-5cdd-4d62-83e0-ef9e920ab971",
        "cursor": {
          "ref": "845ef8cc-e1cd-4d21-8a41-4670a1d6b044",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "aabc6ccb-4689-4125-a291-dcf89651e1d7"
        },
        "item": {
          "id": "0da2a641-5cdd-4d62-83e0-ef9e920ab971",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c3206eb5-99ab-446f-87fe-dbb21b58e020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 889
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23df7c5b-8676-42db-9b0a-c07fa45d2e64",
        "cursor": {
          "ref": "c3e2c259-1b10-41c6-83cb-bfdd1d1cfcbe",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a3214bac-950e-400d-8b44-3f9e832996a8"
        },
        "item": {
          "id": "23df7c5b-8676-42db-9b0a-c07fa45d2e64",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "212cf13c-ba2d-440a-822f-5d0aa623a39f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 870
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c388f13e-f80d-42c4-a5ea-8431c0e5e1fd",
        "cursor": {
          "ref": "27a34f18-d114-442a-b872-ccb5784ebba2",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "120c3f87-8123-4364-aef9-a01061b2d648"
        },
        "item": {
          "id": "c388f13e-f80d-42c4-a5ea-8431c0e5e1fd",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "6ee8355c-778c-4bf3-b419-7aa6a285941e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "008900a7-3718-4eaa-92b0-7c20d32c9fc7",
        "cursor": {
          "ref": "aa22d1b1-5287-4cb2-968a-f721ed9f03ae",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "42e1a373-3a80-4d8c-a15f-c656ab14898b"
        },
        "item": {
          "id": "008900a7-3718-4eaa-92b0-7c20d32c9fc7",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f3e28b10-a669-4431-9c99-7f793f74cec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b3b9771-f894-42a3-8660-645efe105b38",
        "cursor": {
          "ref": "f4be5ca8-58f5-422f-8e16-a7101360fb58",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "2d8bff1a-e4a1-477e-a542-1e19280a21b1"
        },
        "item": {
          "id": "0b3b9771-f894-42a3-8660-645efe105b38",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "94888778-9183-4ffb-8fbc-bd12e3e05c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b2b52c-dd3b-4208-9735-9e82f9083fa4",
        "cursor": {
          "ref": "77a1e159-17e3-4c28-8bd8-f7d9bcdfdd8e",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "86230fba-efb7-43c2-8e20-abac3ed7d828"
        },
        "item": {
          "id": "48b2b52c-dd3b-4208-9735-9e82f9083fa4",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c2d3acdc-ad68-4643-89f2-a6b108031fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 738
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e184284-7859-403c-ae04-2b30448c7e4e",
        "cursor": {
          "ref": "ee0a12dc-71b5-4747-9f77-55556fbb74fa",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "22b9eb80-6277-4dd6-9cce-a28ea54dfd65"
        },
        "item": {
          "id": "9e184284-7859-403c-ae04-2b30448c7e4e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c088097d-0dd1-4386-a48b-f70ee9795294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8766d44c-2286-43ea-9dc5-0b2501f096ee",
        "cursor": {
          "ref": "2b8ef596-a3b9-4b67-afb3-47f69a58ab3b",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "9699c7ea-cda7-46e4-af7d-68c11bc69dbb"
        },
        "item": {
          "id": "8766d44c-2286-43ea-9dc5-0b2501f096ee",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "c9b93447-523d-43f3-97ed-7809581b7eda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c99f303c-bd64-41d3-adca-3a3ac03d1a1f",
        "cursor": {
          "ref": "95d58e33-3411-47ba-934b-9755e455c022",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "7edfafa8-c5a2-4bf8-a304-8e530da88bd1"
        },
        "item": {
          "id": "c99f303c-bd64-41d3-adca-3a3ac03d1a1f",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "293ff4ac-9a68-45db-8c9e-5b50e1b75d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f9cf45-9b84-4709-8b87-b7da30988ae3",
        "cursor": {
          "ref": "e3d32001-14d0-4ccc-b854-8d754dd71988",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d7e3eb0d-60ac-45e8-b4ab-4c628f97ec53"
        },
        "item": {
          "id": "f3f9cf45-9b84-4709-8b87-b7da30988ae3",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "8a5e8a06-d53b-4856-953b-c675d32b2af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 686
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab4dc922-3047-430b-a5ad-818a1bdfda6d",
        "cursor": {
          "ref": "3c8c31ad-f058-49cf-9785-ef1fb4e6bf1d",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a8cbce9b-0a4a-4a66-9a9a-897440a20b0a"
        },
        "item": {
          "id": "ab4dc922-3047-430b-a5ad-818a1bdfda6d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "624daabb-c78a-4357-9098-d78758bf64ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b0ebc15-6088-4ca7-9cec-72db1af96176",
        "cursor": {
          "ref": "712e3c9b-8000-4c52-b78e-f043948a037b",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "1d59d204-f093-42e2-b7c4-78bc9ae22aa2"
        },
        "item": {
          "id": "9b0ebc15-6088-4ca7-9cec-72db1af96176",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "4766fe9f-943c-481b-942c-19924e5fcc3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a390c237-db52-497f-b61a-bcfef83b266b",
        "cursor": {
          "ref": "e2d934d1-238a-42cb-93da-0d1fd5b15b32",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "702527aa-ba04-4067-b035-56ae9b16fa5e"
        },
        "item": {
          "id": "a390c237-db52-497f-b61a-bcfef83b266b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "ce1e8d34-ee82-4bf7-b693-ca03dc367457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6496436a-7187-4089-a601-79a5d1c13163",
        "cursor": {
          "ref": "f964a6c1-015e-444d-bea9-3620686cd305",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "dfa2de2f-a916-4b45-86b7-0e8fcce6fb02"
        },
        "item": {
          "id": "6496436a-7187-4089-a601-79a5d1c13163",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7e0d818a-e99e-450c-88de-08cbed4a6799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 709
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6945bb56-1674-47a6-9fe4-1e7db269331a",
        "cursor": {
          "ref": "932eff8f-ae00-4f95-9ae9-cb2d436ad28b",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "735afdc7-9da4-4bb9-af7d-b5490231dc91"
        },
        "item": {
          "id": "6945bb56-1674-47a6-9fe4-1e7db269331a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "24eb5aa0-7a81-42ad-b364-e59b345f6397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fc0fe20-14d3-4db8-aca6-52026b71190c",
        "cursor": {
          "ref": "720e8349-ae95-4dc3-930a-e8f67d3bb303",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "4eb282dc-b308-41bd-ad9e-f360db4659f6"
        },
        "item": {
          "id": "3fc0fe20-14d3-4db8-aca6-52026b71190c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f2c1c631-652d-4bc0-9a5f-be13ce351fed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7abb8afe-ed23-41c5-8b8e-d2176ad1123b",
        "cursor": {
          "ref": "064a16b4-a9f9-4b1f-878b-23f380f375b8",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ff933d02-8507-420c-9592-8a605264c1f8"
        },
        "item": {
          "id": "7abb8afe-ed23-41c5-8b8e-d2176ad1123b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "27db1403-517c-41bb-a57f-a2e1d1aea9b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 730
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204adf18-caaa-4daa-bf4d-eba5bd82d9df",
        "cursor": {
          "ref": "ee6e4ff4-ad70-4d64-a609-68986d4d6c6f",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1047c2c1-c621-4666-a8c5-0427f952ae7f"
        },
        "item": {
          "id": "204adf18-caaa-4daa-bf4d-eba5bd82d9df",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "45a56614-4ffd-4cd9-9c9c-2cb0bdcd40b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc415635-1d50-43bc-a3cb-75bd05b4a449",
        "cursor": {
          "ref": "ac6ace5c-e0fc-495f-a398-681ade3b093d",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d34bc000-bf5b-4beb-92cb-8c6c862a8ccd"
        },
        "item": {
          "id": "bc415635-1d50-43bc-a3cb-75bd05b4a449",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b2315cea-15fc-4b25-975e-ed137e44b858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 1006
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4825db58-605f-4202-8194-a30c39047c24",
        "cursor": {
          "ref": "7d3f9371-9b93-40aa-bae8-d7bd6aaafc23",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a60cdd6a-3bdc-4604-97b8-0493107deedf"
        },
        "item": {
          "id": "4825db58-605f-4202-8194-a30c39047c24",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "8de70013-e271-4609-b737-803f486bd441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bef2efa-91ac-4e96-a658-5f953c7ac5a0",
        "cursor": {
          "ref": "c53efe11-e5cc-4d64-982a-c83cfa88fcf2",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "7cb2b887-9615-4fd6-bdb2-d8422fe2c293"
        },
        "item": {
          "id": "8bef2efa-91ac-4e96-a658-5f953c7ac5a0",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "07968aeb-b51d-42b7-acd9-3939481acfa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b651d41-aa46-43a5-9512-d1dfa6215ec6",
        "cursor": {
          "ref": "14614a79-dd65-4828-ab3f-8024bf5db777",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4ef50865-1158-4c47-bd80-8c1ac2de1f35"
        },
        "item": {
          "id": "8b651d41-aa46-43a5-9512-d1dfa6215ec6",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "15e66cf8-0d41-4b92-9683-507974220f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d5458f-13b4-402f-bdd2-f92fc77c6c82",
        "cursor": {
          "ref": "ecdca370-a434-4f71-a2fb-bfab35fc8461",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "6518dcca-101c-416e-82e2-0866f44d38e9"
        },
        "item": {
          "id": "68d5458f-13b4-402f-bdd2-f92fc77c6c82",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "0f29b2ee-101a-477e-a857-60a3abe87501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a433b798-2e43-4e68-89b4-3f798e0f82cb",
        "cursor": {
          "ref": "4bfd4ab3-a459-47ef-926c-321098da906b",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "56c8f453-e8e3-4826-bbaf-426664b99b5c"
        },
        "item": {
          "id": "a433b798-2e43-4e68-89b4-3f798e0f82cb",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0a3c6627-0560-43ba-bd9b-9d2df7918b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 806
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e95e1bec-68c8-4b1f-be10-feca251c30f1",
        "cursor": {
          "ref": "2c5d4119-c487-4355-b8ec-73ea1e3616fc",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "3af2edfb-b099-4f5a-a73d-2db1c9b3d0c1"
        },
        "item": {
          "id": "e95e1bec-68c8-4b1f-be10-feca251c30f1",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "484c8178-5495-42ee-a5eb-d18c1f60a191",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c042b2-254f-4280-80bd-cca2069ed0ff",
        "cursor": {
          "ref": "f783e1bc-1d0c-4c2f-8ba7-7a299aca69bf",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "35ac2641-afc0-4946-a404-7a08d7463b02"
        },
        "item": {
          "id": "e1c042b2-254f-4280-80bd-cca2069ed0ff",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "6b8510ec-9700-4bd3-b15d-73547f07b38f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 554,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba55c180-3da3-411a-8a80-1ef46a881fa3",
        "cursor": {
          "ref": "4c505b96-4195-4d8e-a13d-643f9707835f",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "9ae9c768-04ec-441a-8bf0-382197109ac9"
        },
        "item": {
          "id": "ba55c180-3da3-411a-8a80-1ef46a881fa3",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e412d54e-2784-4bf8-98e9-96a7ca876d91",
          "status": "Created",
          "code": 201,
          "responseTime": 5213,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f105800-50b1-4f77-92ef-d605d96f8adc",
        "cursor": {
          "ref": "bd148e31-19d3-4eab-8867-f61edb45bcff",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "76e8fcd1-a070-4226-8644-2fa9d271fc34"
        },
        "item": {
          "id": "5f105800-50b1-4f77-92ef-d605d96f8adc",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "8e3c8b23-8979-464a-b7fb-6002e7af08d1",
          "status": "Created",
          "code": 201,
          "responseTime": 6276,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a466fb91-1f82-4c30-81b8-a4471fede6df",
        "cursor": {
          "ref": "9ab1d0d0-f6cd-4b3b-8755-2fab4a2d3a22",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "0a2c08f3-81a2-4f48-8a63-74d4663889a1"
        },
        "item": {
          "id": "a466fb91-1f82-4c30-81b8-a4471fede6df",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "548dba7c-5f89-4702-b033-5000f3a1512f",
          "status": "Created",
          "code": 201,
          "responseTime": 6448,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0346b1-02ab-4ba4-84a6-cfca922f1089",
        "cursor": {
          "ref": "7282ce14-bbcc-46c2-aaf9-d396f1d40597",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "127c1a91-8325-4f98-8827-1f168e9d3413"
        },
        "item": {
          "id": "dc0346b1-02ab-4ba4-84a6-cfca922f1089",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c3312948-909e-4d6f-944c-0ae7aea8645b",
          "status": "Created",
          "code": 201,
          "responseTime": 4526,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6dcd4e3-7258-41f4-aba1-1bc5f1dbab37",
        "cursor": {
          "ref": "7445f872-2dd9-4bba-ae19-6bb56e4c3b1d",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f8c758c3-9f40-4865-9437-ff9ea1842e46"
        },
        "item": {
          "id": "a6dcd4e3-7258-41f4-aba1-1bc5f1dbab37",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "8dab152c-e7b0-434a-b4dc-c036eefb1baf",
          "status": "Created",
          "code": 201,
          "responseTime": 5251,
          "responseSize": 1090
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee83d72c-c8f8-4f8f-b2fb-d0b1be00f929",
        "cursor": {
          "ref": "ee72d271-59b9-4725-9755-ce45f53b3ae7",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b77e1db9-678e-4fa5-9cd5-36ed67b48dea"
        },
        "item": {
          "id": "ee83d72c-c8f8-4f8f-b2fb-d0b1be00f929",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5d66b2b2-6252-4639-8e83-583af1826747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee83d72c-c8f8-4f8f-b2fb-d0b1be00f929",
        "cursor": {
          "ref": "ee72d271-59b9-4725-9755-ce45f53b3ae7",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b77e1db9-678e-4fa5-9cd5-36ed67b48dea"
        },
        "item": {
          "id": "ee83d72c-c8f8-4f8f-b2fb-d0b1be00f929",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5d66b2b2-6252-4639-8e83-583af1826747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c50850f-8e29-4049-be95-e68129c68b23",
        "cursor": {
          "ref": "41ea7764-d278-4a42-83a1-d7b6809b66c1",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "41c8cd5a-7e15-485d-9feb-0a45132bd768"
        },
        "item": {
          "id": "8c50850f-8e29-4049-be95-e68129c68b23",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "07569009-d21f-40fe-a49d-2b19c49cb9f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ddd2c79-7ec1-4167-8f50-21fff59762b8",
        "cursor": {
          "ref": "64b8fabc-d3df-4dcb-b628-ae929635eec0",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a66fc366-f514-4b9c-b7c3-3686a0c739f9"
        },
        "item": {
          "id": "8ddd2c79-7ec1-4167-8f50-21fff59762b8",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f6b6583f-a983-4b10-96db-c47d7c6c8577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe2aa2e-2eb9-4351-9f42-4a405c3915db",
        "cursor": {
          "ref": "089850dd-48be-4d2f-803b-042e64c88588",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "0e265b74-5163-4444-a066-37d4f7d284e3"
        },
        "item": {
          "id": "cbe2aa2e-2eb9-4351-9f42-4a405c3915db",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "117282bc-9fb2-44c1-ac1f-6f9d443eb0be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e15a27-a515-405a-80ad-53efacf9a990",
        "cursor": {
          "ref": "d20ffb1f-7b4e-4505-afe5-67fc0febaea8",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "5b604ce6-d3de-4227-8e82-3b0bbabdc280"
        },
        "item": {
          "id": "03e15a27-a515-405a-80ad-53efacf9a990",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f995af43-9d66-4f1f-bfe7-a83f3e23c4b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d2e94d2-13e3-4889-b04c-b86b631fa2f7",
        "cursor": {
          "ref": "42567e13-aee9-40a1-8519-ce3b3c0d6d5a",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "2d25a304-98c9-4323-a9f9-50525177b7ea"
        },
        "item": {
          "id": "6d2e94d2-13e3-4889-b04c-b86b631fa2f7",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f8f983d4-7723-4eac-aec0-2e112b0140c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a23ff2-41dd-4e25-983e-7be70e086367",
        "cursor": {
          "ref": "393dcfda-a4b8-4f72-887e-6e4b104c7533",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "25d1e812-830e-4b38-871a-f3dfd0657b83"
        },
        "item": {
          "id": "e9a23ff2-41dd-4e25-983e-7be70e086367",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c2d5d172-0882-412d-8e60-64522e471f0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f47cdff-2115-4bcb-a4f5-13ad12afa6da",
        "cursor": {
          "ref": "f5191cc6-0f0d-4773-a879-11c780b69463",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9a862144-e8d3-4358-afc3-3d3582251d6e"
        },
        "item": {
          "id": "8f47cdff-2115-4bcb-a4f5-13ad12afa6da",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5aeb01e1-1f3a-4fa5-a088-a577f9a51cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a887fccc-b729-4a05-8ee7-d1bb041a654b",
        "cursor": {
          "ref": "b9f714e5-b9f0-4a0f-afc7-4edf5efbee88",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "9164c337-547f-41e4-aa17-6467b1f6f829"
        },
        "item": {
          "id": "a887fccc-b729-4a05-8ee7-d1bb041a654b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3f59caa8-2d4c-414b-8751-fe431e0d3c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee29edde-49aa-46eb-b077-96b78257b89b",
        "cursor": {
          "ref": "e0c1bdca-e05d-4e40-99b0-e4cba33e146e",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "0d546812-af2d-4e3d-85da-5b60db3c8e14"
        },
        "item": {
          "id": "ee29edde-49aa-46eb-b077-96b78257b89b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b4f212ab-eca1-4470-b5c1-847636e00f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a32bb2-dea5-4b01-9f9e-d854dc52eac3",
        "cursor": {
          "ref": "38f24d49-38e3-48ce-9842-063c90d60a45",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "39834019-0fac-4a49-9b61-87f8e5edf4a7"
        },
        "item": {
          "id": "d9a32bb2-dea5-4b01-9f9e-d854dc52eac3",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "48f9201e-9fe2-472b-a61a-84f3f5c5431f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed19181-a6c1-4407-9013-10f8200d9f89",
        "cursor": {
          "ref": "249add3b-dcee-4fd5-8a64-6388e1ed8727",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b07deae0-25cb-40c9-acab-1f66832602f7"
        },
        "item": {
          "id": "9ed19181-a6c1-4407-9013-10f8200d9f89",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d52e3cdf-6999-4ede-be12-ef020e16f0c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad15fa2-691c-48d4-80f7-2eb6f9296c3a",
        "cursor": {
          "ref": "4ef07cee-ed1e-41b4-bd69-7a3a43a60f0f",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "aaf839a4-f615-4dd2-9532-fd709cf38387"
        },
        "item": {
          "id": "0ad15fa2-691c-48d4-80f7-2eb6f9296c3a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0ca2ae1c-fa58-498a-b19a-1ba344747f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d548365-45d6-4620-a95d-2e1d8da2d40d",
        "cursor": {
          "ref": "ec86bc16-b4bd-487b-95c0-8986d1bf2166",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b4090a83-8f08-4cda-819b-c8a5963402b0"
        },
        "item": {
          "id": "7d548365-45d6-4620-a95d-2e1d8da2d40d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "74f0c7ad-d60a-47e6-85e1-8aca1c3130b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab935ca-05a6-4f1c-896f-9c3351f922cb",
        "cursor": {
          "ref": "71aa2d70-45c6-4846-8b4f-bab559141344",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "8e7b5f85-abca-42c3-8538-fc5678a13e21"
        },
        "item": {
          "id": "7ab935ca-05a6-4f1c-896f-9c3351f922cb",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6521689a-e961-46e5-a3d4-45b344a8b475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4caa3f85-d8b6-4dfe-a2fa-b9b414447948",
        "cursor": {
          "ref": "4036b8bb-d94b-4af5-8ba9-e6096e68d657",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "8851c9fb-a5fd-4e1f-8781-c9fd31fee718"
        },
        "item": {
          "id": "4caa3f85-d8b6-4dfe-a2fa-b9b414447948",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "822b4370-8615-4516-b282-f4aac54dc3f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "688d161a-94f7-45f8-a328-f6d526367dab",
        "cursor": {
          "ref": "cb726d5b-93a0-47bd-9ac3-a29983753c29",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "36f56d7c-dbed-4cf2-911a-41c085b8d5cb"
        },
        "item": {
          "id": "688d161a-94f7-45f8-a328-f6d526367dab",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6d1cf695-d9e4-42f0-a4f2-14bcb427893b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3074614b-2f85-4d2f-ab03-a00abb7ee2fd",
        "cursor": {
          "ref": "21530290-69ee-4f9e-b8db-6578220614cc",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "4aed260a-49fe-4d7f-ac3d-ab0bc10294d3"
        },
        "item": {
          "id": "3074614b-2f85-4d2f-ab03-a00abb7ee2fd",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "43a964d5-b756-4622-88f5-3946cef24615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 855,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d172c9f7-4710-498a-99ea-1cb917164ecb",
        "cursor": {
          "ref": "3f4638b1-cae7-4106-aa0c-2869f5f1e086",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d9e8b601-bf97-4b9a-abd6-3413845a5208"
        },
        "item": {
          "id": "d172c9f7-4710-498a-99ea-1cb917164ecb",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5fe2040f-8162-4436-bf4c-161319cf632c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 723,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c342cc96-fcdf-424c-bdd6-145b1c1cb988",
        "cursor": {
          "ref": "9185175b-b0da-4918-9adb-ad5b672facab",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "54afbe44-c02a-4d2b-8f37-d9ebbcede988"
        },
        "item": {
          "id": "c342cc96-fcdf-424c-bdd6-145b1c1cb988",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e435bcba-81a9-4cde-9562-b42ed5a568d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 989,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f72d280a-044e-43cd-81f4-6069023b85df",
        "cursor": {
          "ref": "6283b206-d294-4645-9f7b-9e445f3e7b32",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d9511e2b-1f2c-4170-879d-b8a74dc97ca7"
        },
        "item": {
          "id": "f72d280a-044e-43cd-81f4-6069023b85df",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8450270a-8a1c-4487-ba61-03829e55d16c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 805,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e8ae32-399b-4ae0-895e-d6cd1e049e12",
        "cursor": {
          "ref": "9161d7da-db53-4cf9-ab86-8e63e77868ac",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "afcfd273-4101-4ad8-8aca-829a55756a26"
        },
        "item": {
          "id": "f3e8ae32-399b-4ae0-895e-d6cd1e049e12",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ce26a806-fba8-428c-aab4-5a82366acc6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 712,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb164cd-02d6-4bd5-ab71-476d1f576014",
        "cursor": {
          "ref": "5ed16f03-3888-4158-9c53-ec8addb45078",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5b8bc5d2-cd3e-494e-bd7d-7ab752f3a669"
        },
        "item": {
          "id": "1eb164cd-02d6-4bd5-ab71-476d1f576014",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "1f9f772f-f6a3-47a1-a24e-e2904c26041e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc8b048-3da0-4e9b-b464-4e3851364b0b",
        "cursor": {
          "ref": "ee2d922e-ab9f-47eb-b5d6-03e0c408dd01",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ef88faa5-ba9c-4890-aed7-7d7501a3908a"
        },
        "item": {
          "id": "8bc8b048-3da0-4e9b-b464-4e3851364b0b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5adee407-2c91-45d5-9340-59fb5960cd78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cd38b92-e1f3-4264-ba92-a8df9cd18afb",
        "cursor": {
          "ref": "3924cf97-8941-4cdf-acd0-115f8dd92f5a",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "21b52ae7-eef4-42cf-9119-d295cc8dd8a0"
        },
        "item": {
          "id": "8cd38b92-e1f3-4264-ba92-a8df9cd18afb",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4f7d1616-3219-4170-a621-aa0cd5981e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b13cd4e0-c749-47a5-a4c5-e286d4dd9486",
        "cursor": {
          "ref": "a83e7b8c-9676-4380-837a-9003e614d053",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f1aa95df-36cd-4a3f-b13b-f659344a82e1"
        },
        "item": {
          "id": "b13cd4e0-c749-47a5-a4c5-e286d4dd9486",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "06dd5e45-2ec9-400d-bcbc-c7fc8642f4bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659bed60-8d53-4846-99fb-91f934df81b3",
        "cursor": {
          "ref": "4668eac7-a52f-4738-9ccd-223ed9c89bdc",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "9df1f106-d670-4b70-a4e8-35be5e571582"
        },
        "item": {
          "id": "659bed60-8d53-4846-99fb-91f934df81b3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ab10e8ce-68ab-4a76-9b2f-9460b943cd84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3444989a-0b0f-426d-ae1f-aded62254d22",
        "cursor": {
          "ref": "d638763a-6c89-42fc-8971-50c2126b3703",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "dac710f1-0fb4-48fe-b8ef-f0f2ce3cb8b6"
        },
        "item": {
          "id": "3444989a-0b0f-426d-ae1f-aded62254d22",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "77646c2b-503b-4c80-8720-b9ea22e6b241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7415d0f3-7cfe-488d-9ec3-e2532d71bf4a",
        "cursor": {
          "ref": "ed2d76f7-4e1a-4f48-831a-009bc0f8047e",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e47cee5a-c8b5-4940-9c29-e08d149b84c3"
        },
        "item": {
          "id": "7415d0f3-7cfe-488d-9ec3-e2532d71bf4a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0757cff6-248d-4089-baf0-05e4c184a4b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c415c349-8628-499a-a89c-b60fd2b92f40",
        "cursor": {
          "ref": "ce735f32-b1a1-43b9-9003-38b6a55183b9",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "fd8815ef-16e5-427f-93f6-3bcccb4022bf"
        },
        "item": {
          "id": "c415c349-8628-499a-a89c-b60fd2b92f40",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "bbad2ff6-157e-4df8-ae69-91433647dfbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b867f33e-affa-4f50-b118-301e476f339a",
        "cursor": {
          "ref": "1dd08158-d05e-4b68-b3b8-a7f3e0404dfd",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "483b7c25-bfee-4eac-bd63-454efa4e815b"
        },
        "item": {
          "id": "b867f33e-affa-4f50-b118-301e476f339a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ed7bf671-9c67-4ffc-9c3b-641938bb1362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475694eb-ffad-49bc-b34d-3bf34cdf0fa6",
        "cursor": {
          "ref": "fd272ce5-aeef-4d4b-9380-e7b3b26ead2f",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ff8595f7-c95a-4f2c-997d-904e131ba6e8"
        },
        "item": {
          "id": "475694eb-ffad-49bc-b34d-3bf34cdf0fa6",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "72cfc8cb-948c-45cb-b9ec-c056d4611976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcf2138f-44c9-4fbf-b5f7-248c5128ff00",
        "cursor": {
          "ref": "a1cac69f-f14c-4bed-ab60-95aac8347409",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "25eb6287-255f-4f1c-a642-9bbe67a79c1f"
        },
        "item": {
          "id": "fcf2138f-44c9-4fbf-b5f7-248c5128ff00",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "035f95bc-c953-471a-b4e0-c459145f03f4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a32ff2-5fca-4607-a3e7-d3fdb21732c1",
        "cursor": {
          "ref": "f4b8534b-9ce3-46f7-af37-87aabfa1ae36",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d0ecfa90-02c4-4709-a3df-6e32d6e5ebef"
        },
        "item": {
          "id": "a4a32ff2-5fca-4607-a3e7-d3fdb21732c1",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "e37bee7e-3720-4385-b31a-3b6c4cbfd18f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 546,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17baf980-26f4-4a23-b449-3cb038f9c4ea",
        "cursor": {
          "ref": "231cee27-754e-4d59-a05c-58f7051897b2",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "57910fc5-7efa-4516-bf70-37bfb8a68505"
        },
        "item": {
          "id": "17baf980-26f4-4a23-b449-3cb038f9c4ea",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6dec1003-8b84-4bab-879a-e7885f165dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17baf980-26f4-4a23-b449-3cb038f9c4ea",
        "cursor": {
          "ref": "231cee27-754e-4d59-a05c-58f7051897b2",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "57910fc5-7efa-4516-bf70-37bfb8a68505"
        },
        "item": {
          "id": "17baf980-26f4-4a23-b449-3cb038f9c4ea",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6dec1003-8b84-4bab-879a-e7885f165dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e6c849d-7469-48b6-92b6-4097c31c37c9",
        "cursor": {
          "ref": "701aea94-177a-4b2c-950c-10f425c268cb",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "00091c52-90a8-4d08-9791-89dbe3cd5e62"
        },
        "item": {
          "id": "7e6c849d-7469-48b6-92b6-4097c31c37c9",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9241a8e8-fc14-4386-a446-fd177bc65693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb7d27f0-8f06-4ebf-8268-fa41cfbd9856",
        "cursor": {
          "ref": "6cb4d0a4-033d-4a94-bfa7-273cdd7d45dc",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "5964efa1-6b04-4a0f-a0b8-1ccabe6a0f3c"
        },
        "item": {
          "id": "eb7d27f0-8f06-4ebf-8268-fa41cfbd9856",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a70f7d03-1a41-478e-877a-c67a648e3bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d43f6389-40b6-4927-8086-bd63ce9a58dc",
        "cursor": {
          "ref": "efce7169-04d8-4b13-a3fd-528862fd544a",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "cf98ba6d-5e0d-46af-9af5-4c61c9161209"
        },
        "item": {
          "id": "d43f6389-40b6-4927-8086-bd63ce9a58dc",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "024baacf-2113-408e-8291-dd7e4e5e01e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8191f3be-75e4-4f34-83a8-b5927131b323",
        "cursor": {
          "ref": "f8d1df3f-6ef2-4549-b667-990663eafb00",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "d79a5286-28c4-4278-a327-b42f334abf91"
        },
        "item": {
          "id": "8191f3be-75e4-4f34-83a8-b5927131b323",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "9f90c845-f75b-4e77-bc97-14934fe235b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e1d1697-7b94-40ba-ac57-04cebb5a4748",
        "cursor": {
          "ref": "cdcbaa66-861a-4871-883e-bf255478b463",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "39622392-6924-4eb7-85a3-cb62808d59d9"
        },
        "item": {
          "id": "1e1d1697-7b94-40ba-ac57-04cebb5a4748",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f407171f-058c-422c-bb58-9e0e8dcabea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb8cf4f-747e-4722-9f15-c57813b2e84c",
        "cursor": {
          "ref": "ba56af37-4aa1-44de-b1e1-814558607c8d",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "da52aa8a-41c4-4ba6-a874-9c67a3adc439"
        },
        "item": {
          "id": "5eb8cf4f-747e-4722-9f15-c57813b2e84c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e57c89d1-8880-4156-b4cb-38c2d07fd439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15384e2f-6fb7-4e4b-bf03-7c970ab20719",
        "cursor": {
          "ref": "9feeebe5-f7e5-46ce-8577-9dacdca56b29",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8347b0d3-59d7-47fa-be95-b304c38eb8d2"
        },
        "item": {
          "id": "15384e2f-6fb7-4e4b-bf03-7c970ab20719",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "492e1583-bdbb-44aa-ac5d-ff122da54e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b30189-0a5c-41ce-9760-9bf8e942f1e9",
        "cursor": {
          "ref": "c8ebd160-46c4-469c-9ed9-79ac39255371",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "4a19a366-e515-4262-be0d-e91307af4746"
        },
        "item": {
          "id": "86b30189-0a5c-41ce-9760-9bf8e942f1e9",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "4bdc2ab8-30a2-44fd-bc50-cb8c313e08d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a70ab67-95b4-4a74-8df7-5802098ab9dc",
        "cursor": {
          "ref": "38a99517-4c6d-4ed7-ba20-33e00cd9059c",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e54fce8f-136b-414e-b9ac-93d1779f663a"
        },
        "item": {
          "id": "0a70ab67-95b4-4a74-8df7-5802098ab9dc",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "41e7f1a3-6025-4096-bc11-b0c3076698c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f45e062c-0928-42df-ae9f-c3d064777ce4",
        "cursor": {
          "ref": "40090b31-aa1a-44b9-a41b-6110854ef517",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "cf60ff6b-a922-40d7-b1b7-38c3216f69fd"
        },
        "item": {
          "id": "f45e062c-0928-42df-ae9f-c3d064777ce4",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "1ebddd38-642b-4b49-8c45-f06b444094e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "178db7d7-c6ba-4370-8ec4-255edcef4631",
        "cursor": {
          "ref": "abbd5299-64c8-42b7-9abb-1a491b7ed247",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "135f8990-7777-45d7-a603-ed5e0d3cf73c"
        },
        "item": {
          "id": "178db7d7-c6ba-4370-8ec4-255edcef4631",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "13e27b38-d85f-4ef3-8be6-aff0ead1df3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22424181-7803-4c41-9ea0-eb625a4d5b20",
        "cursor": {
          "ref": "aae02d64-27a5-42cf-9c21-726a8e3ac294",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "19253efa-7c3d-48d3-9767-fa00df793eb3"
        },
        "item": {
          "id": "22424181-7803-4c41-9ea0-eb625a4d5b20",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "0e731870-66f5-4b8c-b447-a94b01d3664b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf27880-c24c-4985-a8e8-4f35f4bc05a3",
        "cursor": {
          "ref": "0382beb5-c840-465e-9003-5721e273e6f7",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ca51ddb7-d365-4354-a17b-84738b99ed8e"
        },
        "item": {
          "id": "cdf27880-c24c-4985-a8e8-4f35f4bc05a3",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f22e35da-aae7-494d-8b08-2f4939ba9017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce67af9-8ca4-4dbb-bdb0-6543842d2ff8",
        "cursor": {
          "ref": "ddef822d-2ba1-48d8-80c9-41317a4cc28d",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "eb526e7b-51ad-45a7-ab46-1bbc9b75e35d"
        },
        "item": {
          "id": "dce67af9-8ca4-4dbb-bdb0-6543842d2ff8",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "4174fbe6-3977-4058-ae4e-484957166153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c188af1c-440e-4b3b-a89a-705836144d12",
        "cursor": {
          "ref": "130661a7-5516-4d09-9f6e-6d196ed88243",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e9107b8d-4428-437d-9f94-6575b3aabc34"
        },
        "item": {
          "id": "c188af1c-440e-4b3b-a89a-705836144d12",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d5b84565-711d-4295-b0be-dba548ba670e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c337a896-1afa-4a9f-aae8-b7cedde02730",
        "cursor": {
          "ref": "6c798558-0c59-4931-ad0d-3d40112632a2",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f179c1c7-9a14-4e5a-a314-eabc958dd105"
        },
        "item": {
          "id": "c337a896-1afa-4a9f-aae8-b7cedde02730",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "3969962f-1b18-484b-83a9-f4d650cc7084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b4a6f5-222c-4e38-a9c3-4d4ab037689b",
        "cursor": {
          "ref": "1b927ae3-e484-4c60-9586-f6b429765e82",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "78a74cb4-e8bf-44a0-9dfd-43a6d08e99d8"
        },
        "item": {
          "id": "72b4a6f5-222c-4e38-a9c3-4d4ab037689b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "017726c9-494e-485e-ad15-4e3d3c51f226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d58cc0-b4b6-44e8-95f2-9f96c56cd589",
        "cursor": {
          "ref": "460a5570-3b68-41be-9390-b640816312c8",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "63d01ac2-4cdf-4d18-8dec-a35c4034f537"
        },
        "item": {
          "id": "c3d58cc0-b4b6-44e8-95f2-9f96c56cd589",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "944fd0e2-4c2d-4bda-8135-ebdacb1804eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d96796c-595a-4408-97e5-207bf7ae4c97",
        "cursor": {
          "ref": "086d37ba-f30f-4552-92e9-394a84444856",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "1ff14a67-ebbe-48a4-adfc-bf0e3564a98d"
        },
        "item": {
          "id": "0d96796c-595a-4408-97e5-207bf7ae4c97",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "d81dc708-cef2-463c-ac88-2acb3f4a74d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "977eda11-fdc4-4fb3-981c-17bd53d656b8",
        "cursor": {
          "ref": "dd11d2e9-9380-4b2d-a874-75575315025c",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e5a4dc4f-df2b-4e47-a623-b2e95fa58dd7"
        },
        "item": {
          "id": "977eda11-fdc4-4fb3-981c-17bd53d656b8",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a337b422-8e29-4690-870f-0e986b659554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b455f84e-0112-47b4-9a62-e31ae86ab299",
        "cursor": {
          "ref": "566b3e5b-0497-4f48-98a6-a6bf61a6d65a",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "1d0b0c2a-0249-4a36-91bf-c4dc5ec67ecb"
        },
        "item": {
          "id": "b455f84e-0112-47b4-9a62-e31ae86ab299",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "449aed47-38e1-411b-8023-f813688b58b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "102c3599-6e59-4e33-b56c-8fcbbb641646",
        "cursor": {
          "ref": "581a37e4-76e2-4615-acfb-eb9fb5f7d6ef",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "8caa4e24-e08f-40d1-9fd1-9ae3fd9a558f"
        },
        "item": {
          "id": "102c3599-6e59-4e33-b56c-8fcbbb641646",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ab4f776c-aa63-4ec9-970c-1c1089e2b416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6bed8f9-e561-44a9-85dc-0a7f55faae16",
        "cursor": {
          "ref": "b0b694c9-7fbd-404c-b702-c5ea2e5193db",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f13444b9-30f1-406b-8cc2-3ae44d80f498"
        },
        "item": {
          "id": "a6bed8f9-e561-44a9-85dc-0a7f55faae16",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "0578a010-b404-4b1c-b3d2-a6fc9447663b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e8b487a-6bcd-461d-a894-8eee0ff0abbc",
        "cursor": {
          "ref": "38040efa-2a69-4e0a-8eb4-73af31eacbeb",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "88d57612-80a7-4843-8683-b1498aea7900"
        },
        "item": {
          "id": "4e8b487a-6bcd-461d-a894-8eee0ff0abbc",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "27c30bec-110f-4548-a6f2-ad978c05adab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92f7dea-5310-4aa0-a73d-29028c1c43ee",
        "cursor": {
          "ref": "1eedd1e1-3315-4d87-a1cc-6470c6b270aa",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "5575053e-4e49-4930-98b9-0ce3d65ba121"
        },
        "item": {
          "id": "e92f7dea-5310-4aa0-a73d-29028c1c43ee",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a411f8f7-87a7-47a9-811d-5e9f46b4024f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9dd9cbd-0008-409f-a724-3ae53b725465",
        "cursor": {
          "ref": "26a7c0b4-99f7-423d-a416-32f422f49417",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "cfd5355b-eb9c-4d67-953d-170926b4912b"
        },
        "item": {
          "id": "d9dd9cbd-0008-409f-a724-3ae53b725465",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "01f8d74d-cb54-4671-90c3-62aed8cd8644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e33c00-c70f-48cd-96c5-e39c064891b9",
        "cursor": {
          "ref": "be7da7fc-2887-41f8-96f5-bb8565c9bf88",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "f5d16e44-7771-4722-a5eb-58a3689f9c7d"
        },
        "item": {
          "id": "e7e33c00-c70f-48cd-96c5-e39c064891b9",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c1d87141-7927-4945-8bd9-5ef3964cf289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "093a5208-3789-445c-998e-3f05307b7479",
        "cursor": {
          "ref": "866afa32-a19f-4af0-a917-2a14b6968415",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "cd21eedf-14ea-4b3b-9b9d-6f957fcfb49a"
        },
        "item": {
          "id": "093a5208-3789-445c-998e-3f05307b7479",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8772c390-f37a-4f5e-b263-0e34a3eab6c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "237e89c4-d8d7-4daf-ae73-85333a38683d",
        "cursor": {
          "ref": "ef5a13ee-5079-4317-b70c-646453a93724",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b15ff8f9-cd1a-43d5-9bd4-0b93008f654d"
        },
        "item": {
          "id": "237e89c4-d8d7-4daf-ae73-85333a38683d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "69db2d6f-542d-483b-8427-e57bbfe91d08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "075c37b7-b420-4cfe-a55a-cc04feaf9758",
        "cursor": {
          "ref": "710417f2-ab10-4d51-8656-de2d09728ad6",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e57a2496-912e-48e1-a348-2bbc4bd3f779"
        },
        "item": {
          "id": "075c37b7-b420-4cfe-a55a-cc04feaf9758",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "8bc3222d-cbbf-4658-ab18-c2dcc62690d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f7603be-6272-43db-9a8b-f747572d7317",
        "cursor": {
          "ref": "0ad01422-be85-41de-b8e5-ee109b241506",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "16a79ea4-9c4b-4f38-9ae1-99b4361ba99e"
        },
        "item": {
          "id": "9f7603be-6272-43db-9a8b-f747572d7317",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "96e92571-f204-4d58-90f5-126494b72b3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f3feaa-c602-4f2d-8098-b97f6d8e133a",
        "cursor": {
          "ref": "15f13652-caa2-46d9-ab6e-b0912836e714",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "67a609b4-6d56-4eb2-85f6-2104b869e6e2"
        },
        "item": {
          "id": "11f3feaa-c602-4f2d-8098-b97f6d8e133a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "3d112c2f-93bc-4ce6-a757-51a41cc8893a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 801,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8299f4e2-708c-4591-896c-38acfd0bed77",
        "cursor": {
          "ref": "f746290b-5126-458d-89f2-f4a306f13d24",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "bdf4a94d-5792-491a-84a7-f715febb8975"
        },
        "item": {
          "id": "8299f4e2-708c-4591-896c-38acfd0bed77",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "5aa34f00-d5a6-439a-a085-3541f078837a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18240fc6-565f-4e0a-a441-ca098e84db70",
        "cursor": {
          "ref": "a7b11cef-08b3-4b4b-923f-8f5ad850dd01",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "8c12463a-6d13-4fff-b6af-b579b7284588"
        },
        "item": {
          "id": "18240fc6-565f-4e0a-a441-ca098e84db70",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "0e7c44de-8329-4ca8-b3c7-74b46411d569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e922ca-81d9-48eb-babd-db9ad5336630",
        "cursor": {
          "ref": "45b54340-c1cd-47f0-8dcb-f00b39f66d8a",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "7f382a00-4051-400a-9e27-1e3613aaaa8d"
        },
        "item": {
          "id": "a7e922ca-81d9-48eb-babd-db9ad5336630",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "5f1eab01-643b-44fc-b481-b4800a9ed53e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b922d298-a230-4cb0-8997-9ef6f98d8bbd",
        "cursor": {
          "ref": "f86698c5-600c-4e68-ba06-3d949f6b5a64",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "1c2f23f9-07cf-46f3-a83d-53d8665e1a85"
        },
        "item": {
          "id": "b922d298-a230-4cb0-8997-9ef6f98d8bbd",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d488f15a-27ff-43a2-9942-33a703a59285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5857b54-2827-4bbe-8272-c13da1c9c4c2",
        "cursor": {
          "ref": "8178aac5-beff-4bad-9bb9-4c64a5f0680c",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "ec707a0a-ecde-4d2b-a09e-3a398242cd84"
        },
        "item": {
          "id": "a5857b54-2827-4bbe-8272-c13da1c9c4c2",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a8f78335-b937-4939-80f7-9357c1fe3514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 841,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0215b3f2-e16b-404f-95e8-8825dfff7ff2",
        "cursor": {
          "ref": "62aa03c0-ae1e-4118-8361-484b5446a506",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b7483a7b-05e3-4284-adcf-3f366c86afc4"
        },
        "item": {
          "id": "0215b3f2-e16b-404f-95e8-8825dfff7ff2",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "2e3a8db0-0191-4a47-a120-a7323ba3af80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e2a0ae7-8d86-4e0c-9ebf-c32a0826c8a4",
        "cursor": {
          "ref": "d0ceaeaf-a6e4-420c-97cb-48f902151cb6",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "a0f2265a-19ae-444b-a277-01fa67eb002b"
        },
        "item": {
          "id": "5e2a0ae7-8d86-4e0c-9ebf-c32a0826c8a4",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "627bba74-bfaf-4267-9fa6-8748c26c722d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d50f7c5d-6adc-4464-9b26-c327a948db12",
        "cursor": {
          "ref": "a1612104-f9b6-44d9-8e89-12b61c098118",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "0cbef7e3-3750-41e8-8cf7-c48da49f01c2"
        },
        "item": {
          "id": "d50f7c5d-6adc-4464-9b26-c327a948db12",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "8e5130d4-1e5d-4d6a-8da7-dc84e4c26e4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "736db9d7-6e01-4eb8-8583-bf6d7de2969e",
        "cursor": {
          "ref": "cb670523-b04a-461c-a2c6-7bd4f6d276d9",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "bda5560c-e22b-49e5-a866-30158cc3e880"
        },
        "item": {
          "id": "736db9d7-6e01-4eb8-8583-bf6d7de2969e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a660aae9-2633-4ba4-a794-b58114dbba27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 748,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f090642-668d-4d6c-855b-205828c43ccb",
        "cursor": {
          "ref": "86bd8552-09d5-4ed0-89b9-1b15033503ab",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "cab493a5-5131-4fd5-a295-b3de22961698"
        },
        "item": {
          "id": "4f090642-668d-4d6c-855b-205828c43ccb",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1b1ebee1-e6ae-4935-95f4-1eb73a998895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeacfc4b-3042-44cb-8495-d7443701ded6",
        "cursor": {
          "ref": "1e2cc5be-235a-40ec-9cb4-c4705d6b7473",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "1f32293c-6c07-4919-acbb-a35c75e8e685"
        },
        "item": {
          "id": "eeacfc4b-3042-44cb-8495-d7443701ded6",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "fa746c38-6fd5-43e8-b99d-2149f14a7e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c10951-d45b-48de-8421-efc68706b19e",
        "cursor": {
          "ref": "20c53d98-79a3-4580-b275-646d4396c46d",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "38fd2f62-0c49-4b85-9204-829f35f7e473"
        },
        "item": {
          "id": "60c10951-d45b-48de-8421-efc68706b19e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "fee74774-c372-4375-8662-284178973172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b99e2418-08ee-42ee-808d-d3c78aae05e7",
        "cursor": {
          "ref": "eb0d1289-0d38-4c8c-8cfd-d1f7aee96bd3",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "0fb67739-b6f9-4c9d-9368-9fc21675cf90"
        },
        "item": {
          "id": "b99e2418-08ee-42ee-808d-d3c78aae05e7",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "d4ddd949-dd54-47cb-9f7d-695b596ce5db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e391e8-9a32-403a-aa2f-fa2c443cb9ae",
        "cursor": {
          "ref": "664da483-7e57-49fd-8812-448b0833aeb9",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e169b759-a247-4d82-90d3-490878932d7e"
        },
        "item": {
          "id": "38e391e8-9a32-403a-aa2f-fa2c443cb9ae",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "55e023e2-941a-4fe2-a382-304d0613f5ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf4dba5-f458-471e-af87-28d0632c6f3c",
        "cursor": {
          "ref": "2969c7f9-94a1-4ff1-b556-5ddb3f2d7d5a",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "06f1c5d0-a225-43d3-b5b4-4ad39a7532f4"
        },
        "item": {
          "id": "9cf4dba5-f458-471e-af87-28d0632c6f3c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e10aef23-4a35-415a-9894-27aab0c9c6cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4023c8b7-2461-440b-939e-ecc971f5a34d",
        "cursor": {
          "ref": "46d7c3ca-a44d-487f-8651-16119f6ebf36",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d9879432-f821-45cc-ab12-4e4e3ee8c96e"
        },
        "item": {
          "id": "4023c8b7-2461-440b-939e-ecc971f5a34d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "26bf29bc-2b26-4ed0-ae20-91b09a081be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4666c34c-269c-4921-8a64-48d1b8f61736",
        "cursor": {
          "ref": "2391c585-330d-4f2e-87de-34b9eb08b98b",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "459fbc35-024e-4d81-a385-17a3e0fec934"
        },
        "item": {
          "id": "4666c34c-269c-4921-8a64-48d1b8f61736",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "56861ed7-b6fe-4dc8-a411-47713b78ca3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6120dc5-6e59-4ddd-a1a8-96454d7b2576",
        "cursor": {
          "ref": "5bf7a02c-4f26-4d28-b9bb-c9a84f5dd0b5",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "edcd68e3-332e-43ed-8c95-f46704553e26"
        },
        "item": {
          "id": "c6120dc5-6e59-4ddd-a1a8-96454d7b2576",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a7f7a5ef-9c92-4674-b5ed-5b52e02a8d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3450056-0533-4db4-944d-cc9d75bf464d",
        "cursor": {
          "ref": "72c49625-dfbd-4b91-b6ed-b785f646fb80",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "29320f5c-3a8d-42f9-a8af-b4521e12c94b"
        },
        "item": {
          "id": "f3450056-0533-4db4-944d-cc9d75bf464d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "eedb9737-35d0-467c-adf1-1adfae51845e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb4a680-01b3-46ae-b03b-68f30845b668",
        "cursor": {
          "ref": "ec06b750-9fa6-45f4-9986-2656a3d7aed8",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "47b20da0-f4d2-4186-a42b-64e6a741dead"
        },
        "item": {
          "id": "8fb4a680-01b3-46ae-b03b-68f30845b668",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "420a893c-91c6-47b1-8503-2e390a3cbb95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 825,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425b0e7d-2fe8-47c3-9253-f00d8738f4e0",
        "cursor": {
          "ref": "ef0ae2ef-8b3a-464b-8e06-2a45fd082c52",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ab02d58e-c291-4b64-8e7d-20a449133259"
        },
        "item": {
          "id": "425b0e7d-2fe8-47c3-9253-f00d8738f4e0",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "5c51d74e-6957-4fa1-8580-e1a132ad73ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 723,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60befba5-f462-4fd8-b189-b07731c57328",
        "cursor": {
          "ref": "bef0270b-4a4d-486f-bad1-536c0d803ba1",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "68282598-579d-477a-8a20-651710cc752d"
        },
        "item": {
          "id": "60befba5-f462-4fd8-b189-b07731c57328",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "858d88e2-11ef-4b70-b74b-6cfa129bdc66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8408b2b9-7e21-486d-b091-910042397bbb",
        "cursor": {
          "ref": "300b8b37-8a8f-4c56-861f-8b9612d8122a",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "0a49996b-6e30-4e2f-9edd-8d7530680c90"
        },
        "item": {
          "id": "8408b2b9-7e21-486d-b091-910042397bbb",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3ccc0de1-dcfd-48ec-8b71-2fb76e4b8262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "845f2456-0450-4a1e-8897-acc1a08e79cd",
        "cursor": {
          "ref": "2b829f7f-78d0-4816-9d31-626d66bd617e",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e1ec983a-d9f8-4b7a-b0b2-7e9eb0668e16"
        },
        "item": {
          "id": "845f2456-0450-4a1e-8897-acc1a08e79cd",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "2147d7a3-3d51-4ec2-988b-a9be4f762572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf58dce-926e-4e50-86fb-ddb889e4ef85",
        "cursor": {
          "ref": "d1318838-912b-47e6-b956-d5557ea98e75",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "94c2aed5-975f-42ed-bdea-408685c6c5f0"
        },
        "item": {
          "id": "aaf58dce-926e-4e50-86fb-ddb889e4ef85",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "6040ab81-501c-458d-927c-e3336f4fad23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 708,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed1f40d-dc10-4518-b040-0738ebfd8e6f",
        "cursor": {
          "ref": "6349f910-fa5e-44b4-9fbb-b66b19517a80",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "9c277d99-94d0-4a14-a2cf-f35d19a9c226"
        },
        "item": {
          "id": "bed1f40d-dc10-4518-b040-0738ebfd8e6f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "0d7f4bfe-c25e-4bfe-ad05-c9a452ddab8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24f0434c-9f80-4caa-8d15-2f85be5f9fbb",
        "cursor": {
          "ref": "a5db2dae-0454-4409-9f15-97e93a8420eb",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "7194063a-29f0-45a5-96be-40e812604f08"
        },
        "item": {
          "id": "24f0434c-9f80-4caa-8d15-2f85be5f9fbb",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "8707fccf-d18b-4162-95ee-c894bed0a5d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f3f03d7-bc4e-4c85-bb02-8eb0b40560d2",
        "cursor": {
          "ref": "39e7321d-12db-4545-992b-5b359cca8e87",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "0bf95adc-aeaf-4e77-aed0-88d96fd384a8"
        },
        "item": {
          "id": "4f3f03d7-bc4e-4c85-bb02-8eb0b40560d2",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "8bc51639-5f75-43d6-aaaf-218b69644bd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a8db1a-077b-420e-b815-116a4775f95c",
        "cursor": {
          "ref": "f72f9651-ba1c-4624-a30b-36eab33205eb",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "fa2e6d8d-34c3-4516-8508-12bb84ff139d"
        },
        "item": {
          "id": "b0a8db1a-077b-420e-b815-116a4775f95c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b1d6bec1-0b35-4888-bacf-b61772b3546c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4294a13b-62e1-4c62-b3c7-7294bb5a48e2",
        "cursor": {
          "ref": "ad2641c2-83d6-40f4-b691-f333712cdeb2",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "1a90110f-e4db-4b48-a7c4-1cb48df36308"
        },
        "item": {
          "id": "4294a13b-62e1-4c62-b3c7-7294bb5a48e2",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "3a9e066e-7fd7-45d9-baa9-bb499560ed30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc9facb-289d-4e60-b0d5-a73c9b359c22",
        "cursor": {
          "ref": "8c100092-e318-4b4a-bd0e-d608f4029ad4",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5612fc07-13a0-4cb1-8285-2cc1a87152ec"
        },
        "item": {
          "id": "bcc9facb-289d-4e60-b0d5-a73c9b359c22",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "ba020db2-a7af-4b76-a0c8-9510697c32af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49da464f-c461-4295-905f-8d85704e92de",
        "cursor": {
          "ref": "35fdb86b-60b7-401a-b015-dd48c5b3b07a",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "dafc2add-4856-40b3-a5c0-0272c9c60833"
        },
        "item": {
          "id": "49da464f-c461-4295-905f-8d85704e92de",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "040bda37-bbda-4a38-b593-da89d85795b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "397f07de-ce74-4aa8-bee4-74acb1c50640",
        "cursor": {
          "ref": "f607057c-4cb9-4331-a3ee-4ed6b7061a20",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "a4c86e8e-9488-4f9e-b68d-f19af861c6ef"
        },
        "item": {
          "id": "397f07de-ce74-4aa8-bee4-74acb1c50640",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "172a89b9-3343-4bf9-a143-98cc981713da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b4133d6-6de0-4d55-aa37-b64b8a1314f6",
        "cursor": {
          "ref": "b4516141-b913-45be-b269-95d1ee377994",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7ddae55c-a75f-4a49-92f0-e4a9a26f9491"
        },
        "item": {
          "id": "0b4133d6-6de0-4d55-aa37-b64b8a1314f6",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "2e496645-bae9-4536-b71f-6798964e0252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c9f898-743f-4043-9924-3ec90e0e812b",
        "cursor": {
          "ref": "770532fb-7474-4b2a-b981-57799b18fcc8",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "83b85050-b138-4064-8649-22babe715a05"
        },
        "item": {
          "id": "30c9f898-743f-4043-9924-3ec90e0e812b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "741d5349-4bff-4cf1-9d9f-01ae304dd9bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 766,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d61b394-2cf3-45bf-8c4f-7ab5329ec826",
        "cursor": {
          "ref": "d55a3aae-b29d-4b1a-b4e1-a6182f726048",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8014a420-7bf6-48f3-bf1f-af2d296a8ae3"
        },
        "item": {
          "id": "7d61b394-2cf3-45bf-8c4f-7ab5329ec826",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "3f760f56-0a53-4ecc-982a-5f397f5250de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c4d463-db14-48e0-bddb-34bf848fe6c1",
        "cursor": {
          "ref": "13653975-2075-4418-927d-0a61719f0808",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "7fb42b59-ccff-4785-9a06-95f5b76643d9"
        },
        "item": {
          "id": "e1c4d463-db14-48e0-bddb-34bf848fe6c1",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f835f35a-a0d7-4448-a1c0-22942e26936d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f45695-76b1-4e34-ad09-315ee3e1e345",
        "cursor": {
          "ref": "3182d3d0-bc4c-4f20-94b5-3c65a0283c66",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "2eb2a436-8dd7-4a66-966e-7ad2a3dc346d"
        },
        "item": {
          "id": "80f45695-76b1-4e34-ad09-315ee3e1e345",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "652061bd-d295-4a16-a2a3-76c90adbfc9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed41843e-d3a9-470f-8963-8317bed6e671",
        "cursor": {
          "ref": "60674fc5-d535-4938-90f2-23d57d9ff2ff",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f9b4e00b-8ade-4c56-86bd-67b0f3f9bf21"
        },
        "item": {
          "id": "ed41843e-d3a9-470f-8963-8317bed6e671",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "b8591076-f65c-4ffd-8409-92ff8816b46e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 734,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a3dc90-46df-466e-b4c6-7e0d4ba994a7",
        "cursor": {
          "ref": "42da1e69-7e89-4f42-b938-78a2073f5bec",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "4621e722-61e8-4896-8548-9d849d8cdeb0"
        },
        "item": {
          "id": "88a3dc90-46df-466e-b4c6-7e0d4ba994a7",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "19c783a9-2ae0-4531-9d0a-87224e26bbb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07bbacf7-eaf5-4ae7-8b2c-0872b76ff324",
        "cursor": {
          "ref": "eaf95ebb-322e-4070-a489-e74896aad894",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "8c51f6f3-8ac6-4e9c-8dad-693a223f8d70"
        },
        "item": {
          "id": "07bbacf7-eaf5-4ae7-8b2c-0872b76ff324",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "5bc44701-fcc6-4197-9ca9-41dda1b88208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68091030-8da7-40bc-8687-3611fa45ae13",
        "cursor": {
          "ref": "823d7199-ea91-4d74-89d1-92899cbd8fe1",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f4165b98-5c62-4885-b49c-0d910335d701"
        },
        "item": {
          "id": "68091030-8da7-40bc-8687-3611fa45ae13",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c210c925-175c-4221-a780-576637eb3250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1391b217-168c-4287-adf8-5cc18572b7f8",
        "cursor": {
          "ref": "1621e723-a145-4be3-9dc1-3ad00ae68322",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "dbf78eba-16b9-442f-9631-a134842318f1"
        },
        "item": {
          "id": "1391b217-168c-4287-adf8-5cc18572b7f8",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e82d55ba-43c2-4dad-8a21-165ae8ba5619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc1377c-571b-426a-9f2a-29437bab412f",
        "cursor": {
          "ref": "ffcd21e4-d795-4e58-a3d7-546b012db971",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "95d202f3-b02c-4fe2-9730-4837e7df6e9f"
        },
        "item": {
          "id": "0bc1377c-571b-426a-9f2a-29437bab412f",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "abf7dba7-f96b-4f97-9f97-0225dbcfa691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc0bf4a3-8355-4be9-8d47-6d46d1276c24",
        "cursor": {
          "ref": "14237442-f8c4-4e87-b79f-dd1dc44cddac",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "4d0a4c2d-65d0-40a3-8183-b26f6a2e1d5d"
        },
        "item": {
          "id": "bc0bf4a3-8355-4be9-8d47-6d46d1276c24",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "41629ef9-2c48-4f91-b0e5-798e63e45e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3b9683-74ce-4042-b652-fc8b5f78445d",
        "cursor": {
          "ref": "4886a14e-4374-4ba9-bf77-050493e093fa",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "104df256-8cb6-4100-a28f-61886deb916a"
        },
        "item": {
          "id": "8c3b9683-74ce-4042-b652-fc8b5f78445d",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e0d1116f-35b4-4b4d-b15f-e8793fb58f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef311533-57e5-4713-9a18-733917bdbda9",
        "cursor": {
          "ref": "178de015-7885-46cc-b2ea-2dff31be8892",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "62911d9a-5218-413c-a801-b4a0089cf531"
        },
        "item": {
          "id": "ef311533-57e5-4713-9a18-733917bdbda9",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "6dcf2759-2ff7-4f28-a936-2007b687abda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51817b68-20bb-4908-a79d-cbe274a2f146",
        "cursor": {
          "ref": "2a4e727b-6e56-44d1-85c2-1f76d7307845",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "43f6391a-1b05-42cb-94ea-0543868f5b4c"
        },
        "item": {
          "id": "51817b68-20bb-4908-a79d-cbe274a2f146",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5bca714b-e738-45d6-821a-71b9298be90f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64fc2bce-7f1e-4161-9e3f-b22d2baf164f",
        "cursor": {
          "ref": "96cf44e5-f924-45b7-af25-8a4d16d4f4cf",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d0f205a1-70ae-4e87-b5aa-6d420b92f847"
        },
        "item": {
          "id": "64fc2bce-7f1e-4161-9e3f-b22d2baf164f",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "eb01a850-800f-438f-8c91-51bc732db451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0d445f-aa27-4caa-af6a-507ca9d68de6",
        "cursor": {
          "ref": "06d9029f-592a-47e7-a222-172f29529c82",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f4cfe6c2-f0f2-4471-84c2-7f74317d1490"
        },
        "item": {
          "id": "0d0d445f-aa27-4caa-af6a-507ca9d68de6",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e86e9c44-c0cc-4bc6-9eb1-2c2cae0931e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26592a7d-3e8e-452f-977f-83f05768076a",
        "cursor": {
          "ref": "203da35e-9861-4c71-bf37-78e79db85e88",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "1e4b7538-e3d2-4efc-ac1b-e20c5e15d60c"
        },
        "item": {
          "id": "26592a7d-3e8e-452f-977f-83f05768076a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b34e984a-6e40-44b3-b0c3-c71338e0d9bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66413dcb-9b96-4820-bfde-e8fc7bdef8aa",
        "cursor": {
          "ref": "0748def6-77ca-43fd-8495-951d5aea4f41",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e1a3b258-9627-4846-8db9-85a46e0d7555"
        },
        "item": {
          "id": "66413dcb-9b96-4820-bfde-e8fc7bdef8aa",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "57d5e241-6b04-4ab7-8fde-21410bbe5cce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d0ec54-3c5f-4f14-a644-c86c7731a8ea",
        "cursor": {
          "ref": "07c3b18e-b374-43bd-94fb-99887fb486b2",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "14fcde0d-8133-424b-ad75-4740acd6386f"
        },
        "item": {
          "id": "f2d0ec54-3c5f-4f14-a644-c86c7731a8ea",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7c7764c0-0810-45a6-ba05-b868e467718d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "072dc65d-ef07-4f1c-b2e4-2b71847a07d9",
        "cursor": {
          "ref": "a340d2af-d87a-4df1-9678-8982535722dc",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "93e73a55-b273-4d87-9fb3-de4004a63f0c"
        },
        "item": {
          "id": "072dc65d-ef07-4f1c-b2e4-2b71847a07d9",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "eb7b6281-6085-4b71-9208-49dcd157bc85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e42884-7e8e-4fa1-97d8-763339bb5f43",
        "cursor": {
          "ref": "37aa3e5d-c317-40ee-9387-c4a2ceb17dfe",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "fdb6f60e-12d5-4fd9-a186-c39a4a3cc02c"
        },
        "item": {
          "id": "a4e42884-7e8e-4fa1-97d8-763339bb5f43",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "99efd653-674d-4924-a79d-2f1ee815d32c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49205174-7bd4-499b-a21e-ca52931dfe30",
        "cursor": {
          "ref": "0f355ab6-21c9-4fe8-94f8-0bdc65266d30",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b92ed648-bea2-4a38-89ce-66f18acf7ffa"
        },
        "item": {
          "id": "49205174-7bd4-499b-a21e-ca52931dfe30",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "9c261203-1cc0-46fb-8610-a2f6eabb5bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f13b0cba-9e0d-41ac-aaef-3d444497e141",
        "cursor": {
          "ref": "61619fc3-087d-4a4d-a06e-b3f1c5438765",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "5d73ab4a-cb96-4241-a2bd-fcec63074acf"
        },
        "item": {
          "id": "f13b0cba-9e0d-41ac-aaef-3d444497e141",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "8550a000-92ef-44c5-bf10-1344cd919b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3067e4ad-595f-403b-a12c-251ba1bef2f5",
        "cursor": {
          "ref": "82d75e01-6bb6-4f92-b308-9d13cfee1cf7",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "72d62279-142f-43ae-9416-ce4167f35aab"
        },
        "item": {
          "id": "3067e4ad-595f-403b-a12c-251ba1bef2f5",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "5a547237-9698-4d3a-9354-208c0b532ab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f430d72-deb4-4e0c-88b2-3a5db1cdab8d",
        "cursor": {
          "ref": "9c44e92e-cbb3-4cc7-878a-70832585f716",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f9a4ae7f-ca08-4120-915c-c1d5213c662e"
        },
        "item": {
          "id": "1f430d72-deb4-4e0c-88b2-3a5db1cdab8d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "0658eb7f-375a-4c5a-81e6-8a13d6bc3aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe8e177-96cd-4545-8210-ceb55a1141f9",
        "cursor": {
          "ref": "9f444e90-6093-438f-a366-9ce5b330c75d",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "326afaa9-388f-4227-b78c-2479757de248"
        },
        "item": {
          "id": "dfe8e177-96cd-4545-8210-ceb55a1141f9",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "2a66a462-1e5b-4738-9db8-e3fe3a82b483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fca3abb8-6186-4844-ad28-dcc39c695ce9",
        "cursor": {
          "ref": "f899fd69-2659-4023-b893-f7e6b3c8e245",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e18ef95d-549e-441a-a3be-cf236d48861f"
        },
        "item": {
          "id": "fca3abb8-6186-4844-ad28-dcc39c695ce9",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c0983a5f-2245-44c8-a083-4e329af7b2c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a74277f-895d-47d4-a9d1-eb408a1c70e6",
        "cursor": {
          "ref": "9d2d23c0-20ca-40ee-b6a6-9b52ae01fa2f",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d3e5ea96-ee57-41b1-8804-d0557a7a77e2"
        },
        "item": {
          "id": "8a74277f-895d-47d4-a9d1-eb408a1c70e6",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "8fba8d10-baf4-4dfc-a802-37947ca4001b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e322620-92b8-4452-b01b-669d4aa78bd5",
        "cursor": {
          "ref": "fd527bd0-36b7-41c1-a4d7-60e571312fb4",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7b9c3686-8684-4507-9fdd-5f2a2539f190"
        },
        "item": {
          "id": "6e322620-92b8-4452-b01b-669d4aa78bd5",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "dcc39249-5909-405d-87b7-015a94905331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baca6dea-ce56-4760-9730-0c4e6a137dae",
        "cursor": {
          "ref": "8e45e21f-7d01-4000-9f45-1d8076a44aad",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "acec5301-3537-4285-9ec6-f9c0ec2cc30b"
        },
        "item": {
          "id": "baca6dea-ce56-4760-9730-0c4e6a137dae",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5593a923-9975-4587-999a-d4c385f75e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d06c2d-46cd-413d-8ee7-aec6dcd712d3",
        "cursor": {
          "ref": "81935b0d-4523-408c-9b51-df2c66728882",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "298ef2a3-7c47-41be-bafc-a1e27e22c28e"
        },
        "item": {
          "id": "93d06c2d-46cd-413d-8ee7-aec6dcd712d3",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7353fada-17b4-4615-be9d-419efa31f751",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "557e888b-2f74-49a5-acd9-2c9bd696d0f9",
        "cursor": {
          "ref": "19e284a1-9880-4697-95ef-0a22a5bfdea2",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "524eaef6-d657-417c-a6a3-7a1bc69aad7e"
        },
        "item": {
          "id": "557e888b-2f74-49a5-acd9-2c9bd696d0f9",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "3c4b8661-79fc-441c-8c8d-1b7f761b259d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 325,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fdf001d-bbdc-44c1-b3e8-bece820a366b",
        "cursor": {
          "ref": "b0872f86-91c8-47da-b1e4-ed856ad29ca3",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "609a7a05-8505-401f-9081-eb61cfbb266f"
        },
        "item": {
          "id": "4fdf001d-bbdc-44c1-b3e8-bece820a366b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "645ff4e3-ef49-495e-8255-bb3e4f444d69",
          "status": "OK",
          "code": 200,
          "responseTime": 412,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f77ec34-9281-4e88-b82b-81743d266dee",
        "cursor": {
          "ref": "dec8bf3b-71d9-4ff6-8347-6b6250f891c6",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c397f9ce-d00c-4e97-a8cd-a8eeb5fe4e0f"
        },
        "item": {
          "id": "1f77ec34-9281-4e88-b82b-81743d266dee",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d100dc92-f14e-4fc4-b496-7a032bfc3c17",
          "status": "OK",
          "code": 200,
          "responseTime": 1651,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b81769a-794d-4eda-bb6e-a7124c926249",
        "cursor": {
          "ref": "6d884552-a893-4caf-bf27-649121466b75",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "4b0630c9-c3b3-4e3f-9c29-02de29c7aeed"
        },
        "item": {
          "id": "7b81769a-794d-4eda-bb6e-a7124c926249",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "428719b9-a8af-4c26-8d49-59423bfe4200",
          "status": "OK",
          "code": 200,
          "responseTime": 1711,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "37911042-9cc1-4ca8-b486-344c28ee122f",
        "cursor": {
          "ref": "7c6422c2-74de-4732-b058-16a5752c76c4",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e2ce9fde-b315-475b-a1e9-84f5b06ba767"
        },
        "item": {
          "id": "37911042-9cc1-4ca8-b486-344c28ee122f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1399434d-86d5-480f-bb5b-85fd0b62078b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37911042-9cc1-4ca8-b486-344c28ee122f",
        "cursor": {
          "ref": "7c6422c2-74de-4732-b058-16a5752c76c4",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e2ce9fde-b315-475b-a1e9-84f5b06ba767"
        },
        "item": {
          "id": "37911042-9cc1-4ca8-b486-344c28ee122f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1399434d-86d5-480f-bb5b-85fd0b62078b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37911042-9cc1-4ca8-b486-344c28ee122f",
        "cursor": {
          "ref": "7c6422c2-74de-4732-b058-16a5752c76c4",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e2ce9fde-b315-475b-a1e9-84f5b06ba767"
        },
        "item": {
          "id": "37911042-9cc1-4ca8-b486-344c28ee122f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1399434d-86d5-480f-bb5b-85fd0b62078b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e57bd409-4c6c-4348-8b16-2c826bc5e765",
        "cursor": {
          "ref": "2e107e37-5049-44f1-81cc-7c5f308bbed1",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "52b77e7e-a7c1-4571-afbb-e1c346f27bd1"
        },
        "item": {
          "id": "e57bd409-4c6c-4348-8b16-2c826bc5e765",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "efac21ac-5285-4fbe-ae96-ec8fd1c4a11c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 331,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35236ad9-226f-4fce-ae57-2ec6927db141",
        "cursor": {
          "ref": "3ad105a4-ae4d-4a31-b93e-fdfc8a8f3f9c",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "cc36c51a-78bc-49af-bde8-e53b16bd15e8"
        },
        "item": {
          "id": "35236ad9-226f-4fce-ae57-2ec6927db141",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "02a7a621-841f-42b3-9ab4-86c7697a85cf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35236ad9-226f-4fce-ae57-2ec6927db141",
        "cursor": {
          "ref": "3ad105a4-ae4d-4a31-b93e-fdfc8a8f3f9c",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "cc36c51a-78bc-49af-bde8-e53b16bd15e8"
        },
        "item": {
          "id": "35236ad9-226f-4fce-ae57-2ec6927db141",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "02a7a621-841f-42b3-9ab4-86c7697a85cf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe752722-bfd8-4c34-a689-248fda980101",
        "cursor": {
          "ref": "e0fc9ad9-6173-4d1c-a976-abeca9c4395a",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "17b10e34-550b-4325-8b61-d82fe291bf7b"
        },
        "item": {
          "id": "fe752722-bfd8-4c34-a689-248fda980101",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "1c5499b7-7d9d-4c15-aa22-5548f06ab523",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 551,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f29eb9-8c01-4330-beb5-17c2b34e8ba1",
        "cursor": {
          "ref": "44db815d-cfb3-49d7-81bd-48466bf8222e",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "92fae4b4-7676-422a-894f-931ba224069f"
        },
        "item": {
          "id": "f0f29eb9-8c01-4330-beb5-17c2b34e8ba1",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "89d54352-6bfb-4aa8-9533-2d589f7dfc8a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f29eb9-8c01-4330-beb5-17c2b34e8ba1",
        "cursor": {
          "ref": "44db815d-cfb3-49d7-81bd-48466bf8222e",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "92fae4b4-7676-422a-894f-931ba224069f"
        },
        "item": {
          "id": "f0f29eb9-8c01-4330-beb5-17c2b34e8ba1",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "89d54352-6bfb-4aa8-9533-2d589f7dfc8a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b52f22-0828-4dc6-92c3-04385ba7b3a7",
        "cursor": {
          "ref": "d16977de-24b1-4bda-b624-75eb875c3664",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3988697c-e266-4455-867d-ceaece5998ab"
        },
        "item": {
          "id": "63b52f22-0828-4dc6-92c3-04385ba7b3a7",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "c2477c6f-d8a4-4b81-98a2-f890dac1ba80",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 537,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}