{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "71cbb71b-6279-4d4d-a104-3e909f0c0651",
        "name": "Clear Cache",
        "item": [
          {
            "id": "eae15d92-cf9e-4b8e-8490-c0d3747fc121",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "32391385-a849-41f0-8463-eec3765d435b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6c16cfcc-c943-453a-9651-6906f13b5522"
                }
              }
            ]
          },
          {
            "id": "f395754e-c1c0-4cd9-aa31-570bc00b52d1",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6198c3df-2c40-46e2-8e91-07fcbedaf354",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7ac13548-0dc2-4254-9e41-7791c29cec6f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "42c51858-fe2b-4b51-8812-1bb523a43ac4",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "2edd7042-da20-4aaf-8415-9c5d4dbb0b08",
            "name": "Positive Testing",
            "item": [
              {
                "id": "42e014db-6cea-4b33-b37a-a125fdd72c2f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "684281af-d8b3-4e6e-9c18-db71268a4db7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9728c0eb-2856-4a3f-93a8-e6fc86ea832b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "030b0987-196e-42f1-8bc3-b352bc75e2e6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bdea8b55-7897-437a-97b6-a0513ca6673d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bf018089-f329-49f9-acb2-07e1b5a7bacb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f0489935-b5a4-4448-8d3a-1c3c813ad01b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f4fae208-c5b0-428b-9b9d-b2f6192aba45",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "cbf3c348-5835-48fa-96b0-0798bc47d894"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6e8a26f1-6035-44a4-bcce-0e5ffa5fd891",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6476cac3-9b3f-432e-8ec7-7a70cad4ea1a"
            }
          }
        ]
      },
      {
        "id": "d15b9a46-e3ab-4323-9520-77bfefa1c595",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "8e5813c6-7ffc-429e-8694-109b7ff74452",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d2b3ddb4-59cf-4f70-aaa8-70355fa35311",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "febaad0d-c23f-4930-8018-48181738261c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3d645cb-73b6-4ee0-86a5-cc9d6ddf21ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2e65cafb-fa51-4462-ae6a-7c5dfaeb1a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c250b4d-9756-4e94-b858-e7b4570de7c2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd7bbfa-407a-48c1-83ff-e4b1747b551f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6fee4033-2b63-4217-874a-10ace25a3d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6125717-c611-425e-bc07-50b4cd662c72",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8348fb93-d517-4fc6-a7d2-8a383542c7ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0c026a39-67c8-4e4e-ae9d-172084008e66"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c6b623b7-3a40-4a2e-85f5-768fa71641ae",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dd294f10-a7cc-4f8b-bbc1-74b10a818b26",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd07a2b-5d60-4356-9346-a4827a5e7335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "82988b9a-ce48-4e35-8fab-4ac73624ea63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "141c57c6-50dd-4b26-9b81-82d8a8e2f1e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99ea9cdb-ebfa-4265-944f-dd73b1705ca3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3a04e7b5-7342-432b-94ad-b1c3206e5fab",
            "name": "Positive Testing",
            "item": [
              {
                "id": "27f24462-78f4-4532-a38a-10d04ef5c567",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed176fa1-3164-4bf6-b37a-505b3bc94603",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "8821b581-f54c-4c33-8918-adb5e62ed367"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eb8af48c-f8f1-4909-b747-e01647e62715",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "0d637724-c91d-46fc-9162-2098754cb211"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6547e34f-1709-4542-bfb6-9e1a1505d8df",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "897e60b9-0b43-49b2-8e2f-18e2f0143dd8"
            }
          }
        ]
      },
      {
        "id": "2f876c76-f78a-495b-8993-ffd7d3770a52",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "99637f1a-3a0d-49b4-a5b6-b39ef63e3424",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3c751f7a-a3d9-4f88-9a57-6528fe6a2419",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "bb54ffbf-c8a9-4065-953a-094295e068ee",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e58d1aea-231c-47d7-86bf-811651abe87f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dd1f4ed-7a4e-401a-a64e-82bb4b91b47f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9af1c60a-79bf-45bc-a710-59eb2917963b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97299f2e-34bf-49cf-8576-72a2424fb8a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c98a10-c33c-46f4-8b76-e08b7d21d804",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2a24f3-5610-4536-81bd-eefd28c18ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07d31f03-373f-41b1-93e8-9b8dd98de3db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92dcb6f7-fc70-4a92-bbe2-eb0ca4e0a930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2bd16ac2-6c96-4e03-bf70-4379e9dc46bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade64bfe-fa1b-45ab-afae-75ce44892104",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c0a436-9870-484b-a6e9-d2f8b16ffe73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a7d2b3b-cc07-41dc-ba1f-5e00a4e2c489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4900daa-d7ba-4c5f-910c-ced614473e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "974c2423-e69a-4b5e-938a-e6aadabd47e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e78c679e-039b-4e40-b1cb-098d689da466",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "661313df-2757-445a-bce7-bc2e7adf76ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a56899c5-50b3-498d-9d91-9d3e867ae98d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0797145-58a8-45df-97b8-f219626b0b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7dec6656-4ddc-4073-a6ab-614d543a9704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c96a8870-28c7-44b8-ac79-7d20dd38d809",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b4bc9b-1ec7-433f-868e-c727b38349d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae3a2a3f-4742-4809-a7ad-e964b3004f25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e80cc4-d5b6-416a-b81c-89c3bb8284b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5dfa667-afbe-4935-92ae-ce2c3e7f978e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a76ef562-4a7c-4e82-9d9e-9f1807d1dc17",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6163cc-54b5-4ff2-b3fc-5bc6b638f6dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73217ede-2cf9-4787-a6ee-6439ee10603c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da998c2a-0fed-4822-b249-68a3c345ba89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a1d4610-a033-4ccc-a476-fca1b7111c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd8b657-5cfa-43cb-8b6e-985249909673",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee54ebdb-b4d1-4164-9bca-7531de6ff48d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "151a2edb-0693-4186-8c6f-871ac54a2717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1355e26f-1051-42e5-b9be-525b6cda9898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd6f561b-a80a-4d28-ab4d-770ff9e46499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed86947-c54f-4083-b9d9-e34550b7ef7b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cff8630-36b2-4651-b0ce-253b0ca50872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f30a0c6-9847-45db-a625-ebc7985e27b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c07baf-d395-4a67-ad91-25671302a394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e1deb47-8bb9-4011-80a7-8b784f793ee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35514550-43dd-4276-a953-db8ce5311322",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb81790-1463-4aa9-949b-898fe47ec2fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0525b09-468a-4724-9e37-4eff4ef3f43e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5344ad3a-d3e7-4121-808c-9b4953c9122d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "591ca994-36d9-4ad1-b19f-ec4986cb42be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b66fd78d-6e81-48e5-b829-54b5e43499a5",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7e61805-4a70-4899-9257-6b0b5f630d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f6c6a3c-9183-4e01-9564-ef86f386846d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0689ef5f-cc6c-4ef4-8798-505fb6da837e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f287299-5d8f-49ea-9bf2-9bda4edf5993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "023d7f98-9ff7-49a1-851e-73f84cae7f9b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5473e46b-cd2f-4b5a-be4b-505a83de21e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb326d49-05aa-4f28-aadb-fe3654c962a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b17c2ad-6124-4740-918d-fd6387c2d9bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "786143df-0dde-4a72-a281-e70c5c09a752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b274d9a0-0476-4cd3-87e2-404f2ac366ae",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81322aa5-69e3-4b04-be00-ddcca3617e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "387b9123-254c-4020-b321-4edd125e2e91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41aa0ad2-424a-42cc-b38b-a6d5c02782fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dfc11c8a-b34a-4401-bbfa-ab90628322c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e384e23-3442-4f46-9197-19c034574661",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db60aea4-c581-4e8a-99bd-b0b3acb54b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bf82d32-4dbc-4b5d-85e7-9e34895e52e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb0bb88a-80e4-4af4-a5ef-c736974f1c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0a5460e-74e3-4466-95e3-26bad7c14cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f3382d-912b-4ffb-aeff-68e902525492",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8951c9e7-4c98-4fc3-9f1b-bde54b0bd1cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "869040e0-917f-4d13-a9b9-fe80d87e8cd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff8469f-b8a4-4114-87b2-c21c84ad2273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb1bed02-80f2-48b4-8ed7-8c2dad08d11f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c0f51c9-dbb5-45b9-9ea7-6fdec7e697f7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c721f6-d20a-4e88-8b49-ee13f9487cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d7c3c48-2064-4cf8-b57d-2a61fe8ab590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "976efb58-527f-4e53-a83f-50918a6bdfcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2eacfb58-d5bd-461f-84d7-166d6ae6f016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13d3a0f7-54d1-411e-b154-47ed54a642dd",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e65b8e96-dd4d-43c4-bfc3-30489d7d6ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ede104f-dc9a-4d6b-8d05-d0fcc679c592"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ffa5e6-7478-4641-a580-f8d727b66b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4389467e-c81f-4fe9-a70f-ac21d7bf4337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e867a8f8-0a6e-4fc0-abba-2ec33639cc8e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6686b2-6e2c-4160-bbed-6eaa0f0198d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c23557e-f139-4223-898b-7884b3b4db0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "298cb353-741f-4154-83ab-64cff6e8497d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4c8251c-8f42-4aaf-868b-cdbb11313147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d709d8f8-fab7-4fc8-8519-46c91f2590c5",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8136d6c-893e-4bcd-bc2f-b36c331d5f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b094b5fa-dd55-49c2-8d34-81b672acc1d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8d322c0-d3fc-488a-a647-6ca191898da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4781869-f09e-42e5-82dc-982bcddacfdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc9aa1b1-e738-4589-9679-a48ca00a4607",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9cdf5be-a418-4754-88e3-eece8787ef13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9090e144-69aa-46ac-ada4-c58a58a2d4d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac06ee2-4adc-4e05-9b73-ebf326573844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "31b9c335-7bc5-407f-a7d4-f41c9bdbac0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc04908e-8d04-401e-93ae-978bb292adcf",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25301a8a-c6b6-43b3-9c57-c508ca6b529d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2664a51-5a63-4401-9e76-83baeb4d3e93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b439e73-ce08-403a-9421-1322f10ee316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbb26ee3-e880-4b90-a4ae-22671f3fff10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2091404b-0dbc-47f4-a011-d8d1c2f28fcf",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a07415b9-7556-44c8-9ecf-91ff6e85c7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff3f5fa1-a8d4-47c4-a7b4-e9b5342e374d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e6cab2e-2df3-42e0-9f37-2c4e55aa9903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1a03a4e-f3b3-4cd0-a88a-6062bb75388f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fa2b33f-1a5f-4df3-948e-931ed2002e44",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ceb11a-8247-48ae-bcb7-9a2f6703f95c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34a6bdfc-6190-4c3d-98ec-ef92cc3c5236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75534707-71e3-43ec-882a-8f9840d81ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "31c48061-9b74-46b4-8b03-0ad1d6edc6c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c3ef69-d103-420a-976c-5aaa1dfe308e",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ecbae76-0ffc-489b-81df-3f80392cd55d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d656bf1a-9346-4767-8f26-eee1d8376bbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc0bc11c-1653-4cd3-9a50-cf060b75eaa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "42fc4b15-6b71-44a0-b20e-c6ba3cfc9010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba834ab-2094-478a-b90b-2b10ddd61f5d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7614607e-e95f-4790-a41f-8e7544b3a8be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2402e508-1a82-4ace-b0fb-c1e0d6190f4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f5f4b7e-8c82-4952-94ab-c1de4689f904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1af86f7-4f23-4248-9eb2-07aaa7ab35dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a614a11f-0092-49c6-93b5-46903e4c5195",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60df5909-db89-47d4-85eb-5cb31d6a75c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b4ef25b-a1f1-4524-8cbd-abbb0f239248"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01cea35a-563f-48b8-a657-137492d94260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e72cc263-46f0-4d93-9a3c-c1d432acb97c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1719c434-e89f-4c2d-a86c-163a7cb6fcf1",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b31990c7-fe0d-4594-aab3-b7ff344f69fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bbabe92-3036-45bc-b59e-bb0edc63baef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0a73984-1797-4f77-a355-01cf847ecf82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bcc110e-da8a-4440-8dcf-7e815e8eedfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0dacec8-48b9-48cd-9580-a384b01e1b74",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d23881-a495-40c3-96f7-ab3ef545dd2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b28c245-657a-49ea-a748-6d340fd93c34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6197dcb4-6b8b-41e0-9285-541d63ce8b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbc89d6c-5bed-46c4-a42c-34aa81c03c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ad7377-77a5-451d-80b9-3386a0ab1e41",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e93379-bddd-48e3-950d-acb6f49a4d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bb42c65-289f-4de9-99c8-9c705647bafa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da90d81e-5e84-41e3-9568-bfd4218a8da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "298ee577-c1f5-484d-bdf5-c7edd5cbc026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27c782ce-b17a-4f11-aab4-aece158c764f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f14802-baac-4c0e-acb3-4a0fa1550c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1bebe7c-066c-4495-91ca-f6de1431d5f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6dee800-2cc8-43b0-a341-2266ab1d5483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f18f1fa5-f87b-4104-904a-2a8a7819423a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa76992e-b5da-476f-8b57-07f884ceb3d0",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac9c5b16-0b10-47b5-b44c-3662c6b1473d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e098cf64-db3b-480d-a002-44bbb269ca19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b1fa283-d9a1-4f2e-a60c-3822183096e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "95592fa0-71c8-458d-a3b4-05d1025265a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba2e6afd-8dfb-4b9d-aeab-c150c3349a7b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db14165-7113-4cb8-b178-be439085c2b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99137ec0-6ef8-4d8f-91d7-ba5e4868919a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce932aa0-b537-48ff-9db4-ab37beba126a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4201cd6c-afaf-40c0-a27c-0e2be6056c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c3aa6ee-8eeb-4702-b50c-9e3561dbf334",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f04c3a-6671-48b0-b8e8-40861fb7b073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a678ea3-bcd5-4d9b-9c28-74af115292c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c177e6a-f0ca-45b5-ae37-710f400d9c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb291b77-3470-4996-9193-c0d61f671d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567ed82b-7f4b-4921-a649-b66e7afb742c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fffb24e8-a316-48f6-ac93-bbd513cd2e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59b88b72-35b9-4bdb-9e63-19337849a318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d26dd3-0f89-4e5d-a609-94630f754972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5fdbe2f-2710-4b13-8c86-e1e9054cfaa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d266a53c-0ae1-442d-8f41-5f9be8bab71c",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff9512e-c0f5-43a2-8c62-0d0c7521f04c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4d0e95f-66f6-4a95-9bf1-1fce1b90f47f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e24975d-fe35-4d21-8a54-18d71349cd15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b17084dd-304e-4ff0-b249-994ae033fa07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ecddbe7-49cf-42af-bf05-d379246cfa5a",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1165d6-804c-449d-bf22-25d0e9937d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52b7a1d4-48ab-471f-8709-ca7e803c3b46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "583984e4-4b59-4f0d-a5c5-051b7f4b70e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "671158ae-9d4d-4fc5-b0c6-2996144df036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7921e64e-b259-4225-9c3a-6b8b29413601",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae093607-9788-42fe-a64c-b7eedbb8fb14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "35876a25-e7d0-40cc-aad1-1bad1bbababf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de541960-5d5c-49f8-ac8f-855971cefd28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f4dffd2e-da58-43a6-9b95-86e755a6beb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afcd6c4f-5e2d-44a9-af52-b2e53c829add",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11accf7c-8736-4a8a-aedf-f32084f87f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb169825-17f8-4c55-bb63-ae57b5c6ddf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaf2eb78-d5ad-48d2-808e-b26bcc5ce3bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "33399bff-1527-4862-8d4e-d1c96d22fedc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbd5bb8b-0f3a-438a-8060-a303e574f1a5",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f493785-d8d5-4128-a206-7fd4c893fe88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b829f8ca-6834-48d6-865f-9a27e5d17575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a47090a4-8893-4c2f-b15f-0723deca312c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "23640ce7-ce3f-40e1-928b-b27f248e9ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60339f1b-48c8-4f3a-8d8e-6c749d5a9aeb",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd900820-c888-481e-88d7-9f509cedf6b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b5945fd-225b-4413-8747-c3458566cbdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6599558-11a2-4f38-ad51-9ee815e7fbcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b76b633c-da5b-4f2e-a43a-ab783c654d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7b858c-b34f-4f0b-9694-3552abf3c9b5",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a29a55bc-0e43-42ff-b16b-6f295a1f8ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1968fd31-5837-4d19-a224-0227fa2f5716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a60eb60-74e7-4b47-8eba-6e6a99373150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c525a23b-25fb-4b55-b3ed-50b0766bb58d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea901b84-e679-46e7-ac2b-7f7e39fa71b3",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a84bb0-8dda-4543-8ea8-4f69b8329d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92ad67a2-4847-4101-8049-f9b3548a55ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e90d18a5-9583-49f7-8192-712dccbca485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "20fdec14-81d2-4baa-9fe3-c84b9dc20518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1cc573c-1abb-4598-b2d7-d5a24369f8ab",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae0e7aa0-aba0-44f1-b4a0-5f40152956b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97f2d41c-6707-4f48-8204-ad77b6a6e12e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d48a25d9-3af9-4866-9603-01c774b04d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f0959158-3736-4323-9193-8f99537685ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f003ed-bb59-4a25-ad1a-2230ff49322e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a652f9de-6eb9-4737-a75e-46fcb3f08933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e09bc990-238c-42e1-b585-4ac8a6f3daec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc080ea-6892-4d3f-9858-c3767ce1d64c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ae3bb59-dd92-414e-a9ab-205d37420694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc224c8-9d4d-4948-bf07-a7be357fb615",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59116319-58f8-4501-9e29-024c6ac7992e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd2dcbac-2a1b-4706-bdc8-70dd8f3374c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b22b99b3-642e-47e2-9cc3-6c85dc0cddae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3b40dfb-4e5c-4360-86e1-c761509633a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49bf49f8-37b6-4fa5-b465-82b8141de994",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bebec8d-2428-4fd5-86ae-a5357800f34b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "931dac17-8835-4bac-9d46-bb69ce451243"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3222dded-d8ae-4f9f-939a-2d801d1bf266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "16b4249d-c207-4370-9e9a-0558be4e07bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc68a199-db9b-4608-b28c-a0202072e223",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3024eb0e-210d-4d37-a6c7-678bb5a65edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "977b7c59-bf51-4827-bb5f-bc89687355f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0e5209-861e-4890-aa0e-e39c328faaf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "76e5c67f-b2b5-4c5c-a3ff-4813be9f124a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21fe68ef-d7e1-44d3-82ff-9d189e9bc3de",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "264c541d-fe7a-4f2b-a0b3-38e7a1ce1408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12ad064b-92f4-4d29-83dd-3ccfdfcfbd1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e30ddf30-3989-4f61-a931-15e4fb9a9fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1136e7fb-9cdd-4f00-9573-4863cdc49a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "998ff125-25ef-44db-8aa0-7c53f941248d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a7e187-d7d7-47f7-ab01-8192253e9f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f68b2c09-ea0c-4382-9ac5-f61a9b19241e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2521ade-ea42-48b7-a95d-97e7e7e552bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "87c32351-d822-4859-9d04-80b2252c1117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e3efe8-bc30-4e8c-8cf4-095df5fa4de8",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb6281b-d489-4d91-808b-e2585a06ac71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66aab064-a3e8-48ca-acb1-0e9739d2b0cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c97735b-2b13-43de-a2b7-b923fec8f28a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7bca076-af64-4cae-a137-fb8228b02c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa305762-a4d4-4ab2-8431-86460accdbe6",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdde0987-cb6a-4d1e-8c1a-03ecc74f643d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7fcb207-5916-4a85-baa1-122037e26e05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "352c1ade-d68d-409a-b126-7f4a198366b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1a6f6e69-775b-4f9d-887b-a532f7f21d7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72034b89-0c58-405c-a02e-145dae4d7710",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8286c004-e8d7-4f67-af6b-2c4d14128848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9238259f-b9e2-449a-a24b-fc45f3971354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ac470cd-c65d-40af-b251-63fe9a47327c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "87348f1d-b5a3-4f27-b501-ae65db3f5e38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5a0303-fd30-4cd7-9a2e-80a20a612965",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b270481e-89bb-4b53-b6f0-b1822c1ce3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcad54df-49b5-4b70-a693-16939b232f72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94cad075-f2bb-46e1-9584-dfb548d6be6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a846bda0-e023-4705-96d5-e98d6cdf0160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e3695a8-5666-42ff-9dcc-af766383440c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f8dc2d1-0db0-4b0d-be24-4eed752fb60f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6271bfee-74c3-48a6-98f9-a54b3ef53807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f46c1ee4-6548-4ce4-b715-e1fc24cd10bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "54541566-bcad-4ac8-b3b6-874d888c36e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06802dda-dd22-46de-af61-b596afe69392",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b4c6b6-ef46-4807-961f-086fa7b9121e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aaf72f6-bcc9-4823-a19f-c259688589e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f47e530-8e3c-4039-a263-40233a218512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "325231a4-21e6-4991-8b72-658f02bae73a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def29f28-2a33-40f4-9952-45a0d708ec4d",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "674e8b35-5ae7-4e99-b808-c13297880e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a21ac07-50d7-4d06-b440-4835b61c4d46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ba6695-fd33-4b7c-baeb-6cb3583663c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "38c048ad-f865-4ea7-bfff-a6bdc669e72a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f48fea2-f100-40ca-b16d-2f09fab43b36",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f59f4d-190c-42db-aa4c-b023e857816c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa2cc898-7228-4a21-a514-a5fe4071d524"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b427f30b-0e28-4cfc-b933-e489f5b0fe9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "47319dea-ab56-4294-9e0d-fb5cadc5bb9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7071619-d1b2-44e7-8f82-243f433247ad",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2f18e1-4405-43bd-ad5c-a5d2a7ba5e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f94e6220-20d4-43fa-87e0-5972734ba9fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "801e4c46-3cb2-4240-8f24-6d4b63055d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "39657160-365d-41b7-8d01-f07bfdc6f166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d1ea89a-780f-4595-83c3-ed33dcc5a16e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40080828-474a-4743-ad39-49533af96e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bda9cfd-0c57-4b11-a091-22c38c1da41e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "553ebcda-60b0-4180-b957-4d09eb3baeba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1baa6d12-ee0a-47e6-ac65-c8b914f4f8d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e92815b2-3845-45c5-af64-75a45c36fdc0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "633ce052-aec8-4b3d-94a7-3e609206abc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b89dff2-95a3-441f-bb8c-1e19a98da44c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db67207d-631e-42d5-9f6e-e3c6cbb197b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e50b1c6-3233-460d-827d-cc210cc58262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e44df1-8395-4734-b390-0bf934d5f1be",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8e0aad-6168-4143-817c-45b3803fe36e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "317311a9-a299-4179-9cff-55c206d3a6a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83803408-1e9f-41fc-86a9-724c85073ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ecc24f5-d15f-4b18-ac39-414e01eaa857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2f73284-28f7-4564-b9d8-0df0d2194a2c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea18692-7f26-4619-b403-9f59d48f7202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d2e628c-e690-4b94-a8ab-97263c31e890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa9458d-6b0f-4de9-9565-d923eb48240a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7dbe01f-9c2d-428a-af55-60ef407e7e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c69ed018-c55b-4ae6-afe4-06c33129d35d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39eb20d1-4ee6-4471-abd7-d1b1e3f5d6c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff29f802-1562-40ed-a022-b0a553f059c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc72f22-0c34-43f9-820b-4541e271cdeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "49470dda-cf9a-434f-9bf0-fce9a81918c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e013ec5d-69e2-4227-aa61-4e6c3b19106a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ef0515-3e95-4ea2-b093-a8305a97e2c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d57510e-f47f-40f6-9468-37e566330e94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a2b9c8-c949-4610-becd-9919437b11e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ac345ae-92fc-48fc-a83b-865d30a6e9e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39568c3d-df25-4f12-b3e8-b92787e057da",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "387340fd-83b3-4838-ba2b-6c8b63989014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42475df0-a40a-4a3e-99ec-5f4e329d03e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5486ad96-ba27-4f72-8986-2ae1d5de7451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "71bb84a1-9d6a-4e0e-a603-3d1503a76896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eff311d4-6477-46ff-aac6-51cb6c751385",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a7cdb6-3af5-4b4b-8ef1-5501bc63c40d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "127df302-5ca2-4d70-9e1a-f8029828df4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e2ef516-c68c-40a8-be44-b446b62f9f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "72eaaf23-3157-46b7-9bb2-c6f05fd3b7d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc46263c-f640-49e2-82db-2202f6d929a4",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eb71223-2731-4dd9-9f99-9635705f8997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "152164b6-2eac-4562-9717-2831525232d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ffd83ce-d396-4275-bfe6-c2350f33b575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a88ca213-8b3d-49e3-91c2-e29cc66ce0b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0749d284-c8bd-4ca0-8f6e-2314d8f0fa42",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f0a6855-59ae-428e-a41f-59406ca98cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a328737-d8c8-4c90-8c90-282a5cbffa78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319d77b8-ac20-4ebb-835b-25c3598687f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ea667cf4-a216-47c9-baa1-5d1d15704f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f01191dd-b305-4500-99b4-07d315325bb0",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa4ff704-8ce0-453b-8aa0-36ae34810c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eb53d46-3032-4bee-9a6d-4a93de6d7df9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c81e0369-9473-46c6-8b73-775d76ef205c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac92d38a-29f0-4919-bab4-1bcc2626e2c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e2733ac-c9b7-4017-98a9-581cb2636b56",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83114461-4068-40e1-8930-408962c23c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cff4a63-d5dc-419f-882a-3f9be3e5c6c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f4d64e-d4ab-4852-9a89-d167bbf3b214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f17f8cab-35ed-49c8-9c64-3260a0483cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d46aa26-d707-49fa-b9b2-e08a00c7902d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d57e979e-404c-4ce5-bb1c-ad0f6f4bc083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f829430-b62e-4d5c-91bc-cfa10cd1c7b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05782790-f0aa-4eab-8615-a5eca7b084a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c642b3f-c40c-4a6b-a41f-68e6233c65e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c6d720-13a0-4e8a-8588-a3c66ae06147",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad8bafa-dcfe-4d68-abbb-95684874edf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6cf7a13-8f27-400c-84be-027b384a320b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edf60b7c-b2d0-4ef6-97c8-21922f3224ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd97dae1-129e-4eab-b93a-458c05b9c9e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22c34134-eafc-4c38-9b67-f1dd6a801ca0",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af152ff-8b09-4ee3-b126-577fade30c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feb815c8-2815-457d-9379-091926dd4784"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757b747d-1e4a-4e0d-a30a-b16fc80e4bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f21e7439-0109-45ca-88e2-434da8865ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a8484a-f18b-43f5-9957-d26124b004f5",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc2e760-5180-43b2-99c9-43e820eca168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2257556a-6b35-4a3c-8ea7-1adad16de961"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b8b0f0-aa12-41e7-8bf5-7cd5d00f97ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "16d5176f-cdee-484b-8e60-83ed9a017eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "700f0def-475c-4309-8b15-661d5810d0ce",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54d8fa1e-556c-4d52-849e-4137321dd08c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94fb6d00-91a4-4805-b4d2-864ed1b20fcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe9decd-8b0b-4bbd-8a51-f020191892db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "084dca0e-6dd8-4792-af39-7f3aff20dfd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "232f4b28-218b-4f8b-81b8-4488af5494d9",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7a21632-8a13-4fe4-bc32-dd0e7b188a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b17f0a7e-0d6b-4f65-9ae0-446043198806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81aac963-7162-4349-bdc1-6c1801c595bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6717e4d4-1817-4e31-9075-d89d68579382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb853199-7032-42ee-8392-dea535d01b38",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "769e25fe-92dc-4abb-932b-8386cdb270e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9812b84a-a9fc-4ee6-b756-c9e311a097e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5109327f-de9d-4c00-b14c-83059e28c6c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "97f7f2b5-222e-44f5-b9ae-35719595f38a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e24bdb28-0696-4fc2-85bb-d733cc72aa64",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a8ba66-ee4a-43b7-abb3-d3432878be18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53b98c14-3454-4d67-9142-69a5df0d700c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ca2fdb2-39e2-4c4a-b7c8-a3bf905cf1c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0283b0a2-c86f-48d6-96d4-315070dccd8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c77ca486-6cd2-42b7-9046-55ead0e76172",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e94170-fb30-4c20-ab48-c7e6f3ae8a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8301e0d-130e-48e2-8a5a-70b413021274"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c27ee75-6a5b-40e1-81e3-56b62d2dd339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7851cfb7-6e4d-4de7-b565-16a3dc850629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c20a8be-3630-438b-a4e2-9e75f6f45497",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fac7204-0142-4425-a5bc-b23edfdfd50f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "145cbb68-c27d-4084-a8f6-13bbe5cee3c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8afeb919-781b-4754-a5b9-939f782c0869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "93dcecb2-ff8c-443a-a884-9d9269a23d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a1a981b-9981-414e-bd60-c28250510354",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b33a54-b9e6-4981-b495-85e0c85ff00f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2399b13c-d893-4d9a-95da-bb1a26822104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d821d576-fdbb-4d27-900f-48ed5e8ab382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ea3642b0-cc28-4260-a92c-5955cb1643c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fb018e9-b7d7-44c0-acbd-044d1eb0584c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc476f4-d8cf-476b-be62-359feeef6b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "558034ae-6f9c-4824-98fb-677a523e45f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25020600-4580-44d7-9c5c-469ee3dad0c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7df20753-61f8-4bb1-8529-9da79e9cb6ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feaf1cd0-5701-4242-9ca4-c8ca9974074c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c8f5d21-874d-42cf-8a44-4aa63c044d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5d6b183-e1a3-4eb2-9d38-a4767e87a136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09001cbd-224b-481d-9027-b4c087abdec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "617948fb-8aa8-4df7-8081-5aa32e130714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac17cd08-1c8a-4ab4-8dcf-5dda133ad34c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d146e7be-e240-41de-ae72-c9538255c82a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb4b37ab-22e1-4d25-b389-49b78718dfc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72f34bb0-fd03-43ac-88d0-3bf5e15aafda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e12178af-71f2-4350-a9ee-8449920ac132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05457701-5408-45b1-a2b7-4fc774931594",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e138f748-c44d-438b-8c44-99d98950d6d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ae80b51-f46c-4b78-992a-0010a691bd51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "433d48eb-c670-49b1-b795-3aff937dbfe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a586849b-0598-48d8-8331-a714620e40b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7556984f-9921-4ae9-bddf-e30096ea4d0c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b182a9a6-ec07-437f-b29b-a01b7f168946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc4b086a-867d-4cd0-be82-b0d26b4c50b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be7e780-bcf1-45d2-8c48-eb0b0f6c9b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dbb9e638-f34f-4040-b144-7d2a94207cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edce1e15-1a4d-42f1-9456-3e592e2bcd8f",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20409fd2-6d09-4c5a-aad6-4d00260111c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ef9d293-1662-42cd-a7d9-34ca102a7655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e94b0a8a-378f-4384-9e2f-c288c9513e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1c0a1c7-7211-4b86-8d81-b1dce8057902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e43a73fe-14fb-4e44-843e-52b3c5c5b876",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4adc1d5-925b-4bf5-bf90-04f2bd0e9238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1387ef71-49c8-400e-ac1d-4c2ac26dcb7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01da57fa-436f-45f0-b73f-1ee56f631e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fdd78551-4571-47f8-bd76-453b8a066d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afd8a909-0539-4cc4-8f13-8b14429b1af7",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde28bbb-532d-4474-ba99-2f539a1cd3c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adab39bc-f641-4b76-86ca-816dd2ce1962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b8e5a14-f434-41a2-a30c-7ec1be15fcba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5713a53-5779-40af-8708-5b60e77c5899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f96b84e-adab-4169-aa72-c01623ccf258",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "362bca70-219a-4c66-a709-29096829a483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d96d86a-ed8a-4c10-991d-15d15214d799"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79846963-c723-442f-9776-b49c132c3425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce00cceb-7a3e-49de-b6b4-1360899ff1bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db304133-0002-4697-a26a-532bae82bbaa",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1bd4f55-ac7d-4a3e-a4e2-e476d9ce1dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79f51697-9401-4878-8b81-61aa3b0ca5d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f10ae9e4-b418-4ef9-a302-1005e33f867a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "19eb7986-5558-4e18-926c-717337f8efae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a777da0-71b2-4d3d-81cf-ef1b7183d70e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87a7091a-636a-4cc6-87a3-abc35135cd4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56892891-9470-4a5a-a0f7-7806af1424f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af12a937-31f6-4ea8-9d63-ffb9baf5a867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "87e79b3b-c79e-4237-9fd7-77574fe3a8d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76283bb4-56df-4efd-acb0-291d2a6c9040",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb3f1b12-bda7-459a-bad3-d6726e5d8827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2d3bdbaf-d7ef-42ad-a1a9-c831d746269b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4070dc31-2291-441f-85b1-817137610060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "04c22fc2-bb63-4954-b879-4f866f440540"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bb322423-1998-4c46-8082-90612bd90eb4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d7aafb4b-0139-4d64-bae6-21c873981c66",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d77825ca-65bd-414d-aa3c-24ebaec416f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ccddc48e-f37b-4cb5-9a53-14efb5c1014e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94eff3a9-9e69-44d6-9698-8c8548cbf713",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6863fb5-7fbf-49af-9dc8-603f0ad6be4b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5979edd0-2edb-413b-96f5-05bee44bc92f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4444978e-63a5-48f7-9bd9-7892b8fe31d7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b38a5f0b-07a8-459a-8bbd-65473c108f9b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d025b34d-095d-41c5-a883-c06fa105f27a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "55647c40-7b6e-415d-bc21-7524ee1130db",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d0337a54-57a2-4201-ab4d-c812078b6c5b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c9464f0f-58a6-4710-a6f6-5adc38eb2b38",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ee3c6ce7-cd13-4dca-847f-5578998cc3a9"
                }
              }
            ]
          },
          {
            "id": "50072631-fa2c-40ee-852e-725b562e49eb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8aaf718a-0ba9-4932-9673-515b75468c63",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "d4d83e23-5837-4ae8-b069-18c3ad282682",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "984fef6e-22d0-4bd7-9832-9d48b81ace41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "29583e09-c77b-42eb-beac-5a0e1d466b00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f033bf-3d9a-46e3-ba7e-86720c9e8b86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "891f80c0-04c1-49e6-b4ef-3e02a4a79da2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "85844729-de6c-4e64-bcd1-939b4e0ed692",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f4fc7d2-22bf-4c90-acad-63e251ef97ae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "99959ee0-ca8f-4c3e-833c-8f013907eacb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3910e4a1-e1fb-4ae1-9565-2539c53e4e66",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c1a5dde3-34a7-4da8-a33a-247b348db192"
                    }
                  }
                ]
              },
              {
                "id": "83bb4b39-c284-4db8-8348-95f15d65d102",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "68660a42-6005-4e94-91c6-87c73773d2c6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6fa35d85-0819-436d-b6b7-b55e5bf61cfa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd769547-d7e4-4470-bfc7-102b402f1e10",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "56dc2e50-4e0c-48c8-a045-d61e23aa18ad"
                    }
                  }
                ]
              },
              {
                "id": "4f0cd22f-a0ef-4e7a-adfa-285f110eed82",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "09215189-be6a-46af-b022-1678218a8203",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ee7a0210-fbc7-43c9-b333-828f27179caf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34565f85-b473-479c-9c39-d27075b7ce8a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5dd8329c-2edd-490e-ab86-8b3fc506ca7c"
                    }
                  }
                ]
              },
              {
                "id": "d5329914-e0d8-4167-b8a9-fcbbf05bc65b",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aec1bec4-54ff-4254-a974-5a6fed88d0b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d62d8758-b2da-4d71-8af2-972bb7664acb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "01c55afb-e304-450b-ba18-2d3070091b3d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e96e2735-1cb1-412a-9512-01bbaedaa8a7"
                    }
                  }
                ]
              },
              {
                "id": "0327bb21-7c3e-4328-954e-7726eccd747e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8213eaa5-48bc-4d68-a848-04a193714a94",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c733554d-6d0e-4063-a435-d6a79c0fad85"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39a5dacc-4319-4f15-9e11-5496af30941e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "48d73e0f-7c00-4d84-9e5d-0caec586eee9"
                    }
                  }
                ]
              },
              {
                "id": "e7e95bd8-93e7-4963-88e9-2f2341057b45",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b572acf6-145e-4eb6-b647-380408f8802c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b69bd2de-4390-471c-8d20-cde2ef7c56bd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b1d14783-45ce-4308-b8c8-c7d5acbdca84",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a69e5be0-d13a-4a85-9766-80c8c448cbf6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "db77ae1e-81ff-4b23-a03f-9ab7d89b2bec",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1f625fe8-9086-4eb2-b802-5d7c82c30626"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3f465735-895f-4c25-8897-0a6c60e62a1f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5d51681f-ca06-4864-aabb-6f652b36ae23"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e4bfed5e-7060-4373-87f7-2738695bd064",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b3ff7358-1037-4f6d-9907-a361233f9f37"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "39fc414f-c614-49de-84ce-da6d9a11b459",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "383283fc-5875-4741-8756-fd959602de68"
            }
          }
        ]
      },
      {
        "id": "6f304775-acfa-4a85-9eec-09bb4fda843e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e0c961f8-447e-49ce-8f3b-d9d7d42c42bf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3170cbd0-add1-43a7-b2d1-dc3f52fabe9b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "50fac758-4d95-4cba-9652-d148530350b0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd705f13-71bc-4425-bf75-07b4014e94ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b9c7371-fb7a-4065-bcf7-e0c7084be67f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f317af-7964-4f68-b852-1e1dd2fe2d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "de360fb5-7ccf-4f16-8700-5a1009c63563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492b2086-6b4d-4587-8069-d3aa5fd4ad15",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd6bfa17-5ae5-44c7-aff7-e0c890b501bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf70d1be-c747-4726-b292-0eb7774154e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "132e87c1-219b-4904-8227-2cfcd4340c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "810e2845-4b81-4d76-8dce-3bb36e5166d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30759ecb-bb91-4722-8572-9d6043b6e624",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "696a8573-6453-48f3-8b28-f53ac5431b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9dbf28e-f705-4c5a-ab54-ad83c3a6bc64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f963afcc-e590-431e-833a-203d91af054b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5e9e02e-87bf-4c0a-9315-6a9dd46d2351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "246db36a-855b-49aa-aae7-8c1a6430484b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0abf55dc-0138-49e2-aaef-aaa5538bb226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea8026f1-bfc3-4323-81bb-f3095f6266ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ea4424-f8be-4108-b0b8-1b261e188bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb59b598-de39-457c-b076-a678ec4516af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5311faa6-b3a8-47e8-b151-2fe8b30efd64",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65372098-614a-478e-86a6-50bff3f5d01c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b2bd1fe-d977-4b72-8860-8db11584ed01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0260bbb-dd2d-4b34-b481-dbf43dec9c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b57b3eab-0896-4bcf-baf9-ae48225a376a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57903281-3659-458d-9448-695a84bf9866",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ecc589-ee58-411c-9efa-96eeced30a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44424a4f-dad6-46b9-8417-0316a4bf8dbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a2014d9-f0f1-4e4e-a38e-b738a76ab9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f76ea81-ce36-40d2-8246-6d3a450a687e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a150b5ce-dd03-4208-9515-ff63be9cef2c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ae6b9d-d53a-40a8-8a26-e0852d02ed01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2efbd79-f276-4177-8dee-96bdda694c34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a61f0803-3b67-4682-b837-3546c3aef4b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e787fa7f-bfe6-4a27-bcc9-521f1d19bc8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31c1cb2b-0c40-48b1-8e0a-133948a8d1ac",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "740f04b4-12a1-4951-974d-656e93e07bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2da2da21-fb20-42a4-af10-85e41b691c32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f7d5d76-5852-49b9-9f4d-78a8134f1d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "41406550-e8e5-4090-a432-62862ed01bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0941413-c1c2-4586-a516-02f4c0a451c0",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f56502c7-84b5-4bcf-87c7-28befb8a8040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30d6cbfb-9f35-485e-936b-2475a4dc0448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c06c22e-691e-458a-b65d-8f918c7d6038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c8eeb9d-8be7-4205-b309-5b43a5d553fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f74a3b-1a78-4a81-95ef-5fba621c6537",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b5d80f8-3392-415e-9b0c-10c172b48f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61f4869f-4cbc-400c-8113-a288958532df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "997bb50c-2111-4848-a657-4a48e15872a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab1c90be-a744-46c9-b4f6-3dbdbcb07154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df08d80b-9938-4fb5-b120-957fca965dab",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36021745-13f4-434c-976a-43096672648e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4294e7ab-6b38-4ad1-9490-8a515ddc28d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78b9810b-b722-4743-9411-6c3820acaf44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "69ebfabf-9658-4488-9220-9487eaa4e21b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "608c2634-2627-4f0d-8945-0afd9f99c6c4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "456fab0f-1183-44ce-82db-49d8b03139e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6345432-49fa-4582-a349-77c22f595504"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "615d1425-9ec8-48d8-ae66-8899b3df6e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9afc91da-a26b-4e42-a1b3-c988f70be066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b75ad4-4fb8-489c-b2ce-00c33ef43f8d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d37624c-a226-456c-b98e-96a9be213906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c9a4e28-963e-40c8-8bd8-d97b9192c01c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f84d4d-382d-46fc-921f-7fd54988a195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "99174b0a-4e82-4b0a-91f9-203d08f0f525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4653e3ec-c576-4ff7-b9de-e05a99454528",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14eecd93-fcff-49c2-a959-46207b69c5fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "885e929d-25a9-42a1-b440-cbe8487ff230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e14007-c433-41b5-af29-4b2ef20ea84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "07db2eae-459d-4c94-8318-0172c97b6a44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae70369c-dd17-4b3b-a561-c1e0b18c8e08",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd619e6-c0f0-4a08-a6dd-daefcb1f2c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69c85272-1e34-4455-b2f4-92d457d0fe29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a10ebbf-e682-4df8-a0cb-068a8c285889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3223434e-bb77-4aad-87e8-7203bb3729b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "563db956-f052-4cd3-acf1-d835faa2068d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76bdbeba-8a21-4d1a-95a5-5d058248c8c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d14e7e4a-2f03-4b62-9a04-ab54ac0338ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb663be-0019-4430-8903-3c66e1deeb04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "88ef2d05-8eb4-4d22-b250-ddb8ffdfefc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1185593-6de6-4fe7-9563-f83120a7219b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ca90ff-11e9-4565-8ca5-6837be42328f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00e603f9-178a-4ec8-a3d6-f2ece40cc72d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3300a3f-bf16-47df-a438-78336bab9f3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "704c39f5-01de-41e6-b7a1-597a280e06c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b0950e-90a9-47a7-aba4-b9d2c242353f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c002b49-7421-4304-a0b3-3d4f688a4a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c6da918-6b0c-4a5f-8ed8-3e3f1a1424e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d78da244-9666-4329-8594-a8f3e4a432c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc85069e-46cf-417d-b32d-efd040643ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "069d5211-5802-465f-942d-3d44876fb983",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23035cf9-5e96-424a-ad14-e95f15aea1ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e9951cf-1252-4e85-bd7f-5690141b7751"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7710b56-9b01-464a-81be-4f4ce243dcdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "062b6208-4c3d-44f9-84ff-40f9758702d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49e8edd2-1690-4543-ab3c-b7b7d442d36b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3689804-b7d6-463a-a9bc-241dbad77684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff5c459e-89df-499f-a71e-2d3981fec5f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54203d3-332b-4b45-8815-1aae6f4ae85e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af41519a-e78a-47b6-b192-16a2bb96bf55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a4bf924-0fc1-4835-9e6c-126bebe8d79b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d8f72fe-016b-4711-b40b-0d6be80e638c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3c59068-0ce4-4ef0-a711-4d27d4ffd82f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33141af0-f363-4233-975f-39ba833cf8a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56f8f3dd-c2ac-4344-9d81-1236d0e70d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "260215cf-389a-43f0-b296-505d1f0f5dc9",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a551299-70fd-4d5d-9693-52ce76155581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86635722-b58f-49d2-b100-79d4cc2ef922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c26c7ff8-3504-436c-9c09-db245b4bde82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18071ed6-d3e1-48f0-a3ff-e7f2a9102ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27865116-d152-4bec-8447-03bb886dac1a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "063f33d9-b440-4b10-a92c-013ddeffb102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2958243a-603a-49c3-97a5-b93094f2a76c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70f4dbb5-94e1-4266-b507-a41f6351a0a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "614d3372-180a-4fd6-90da-d3643ddadd8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a17fbe9-046d-430e-9731-bdd6e3bc0649",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4f917e5-6713-4505-a2b5-1fa002fe6ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5805bb46-ffa1-46d7-8d92-59572af9ca31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd559c6-6f57-4d64-b710-90cdd6f4ea07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78283566-02ad-4eaa-8912-a0ca7ba64ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "801e6a7c-3c15-4481-959b-9db084028de1",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea40414-962f-419f-a3ee-5e4e4b511f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b8f4c88-7139-4d3f-8bc5-d08fbe980a65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d04d8e-db8d-4ff5-942a-511f2e253385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79c35fc4-1cfb-4af5-bbe6-1743ba92aa71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f4c08a5-e0df-44f6-9f33-a75fc692c694",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a6406a9-d3f5-4bcc-a99a-df050a330c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f08ce975-a5a5-4c1a-8f9d-4ebd0c7f7437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "318ca01e-a17e-46d1-8f18-4f395b4be63a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e968f32-0d25-454b-870a-4890b02c5baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d7ce81-6ece-4556-91f8-19b045292272",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1585bc1b-50d9-48ea-a67b-d621a9b5c778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbbbac24-05a1-40cc-ac1a-6e89bc375b13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ec46bf-ba1a-45e4-bffa-82efd34875fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29b2f1bf-5890-40c3-8fbf-c92ff42d6fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa94ddc8-d0c9-44a1-86f6-472e869d01bf",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be5b305-8d1e-486e-819b-e91cc4962dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0515a55-262d-47d2-99c6-075a7fb7f02b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a1fb72-f890-49b1-b4aa-f12088bc2add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de72f886-a21e-4d73-87b8-b8a7857a754e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36ecac11-813e-48fd-ac0b-9202b485d0f5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49edfdc8-f363-4ee6-a976-9c0cb5bab5e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93e20aee-c47d-44b1-904b-bb95a556ecd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f58f84-8b3d-47c9-89c0-10580cd63d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ceb58bb-7f38-48d2-80bf-77bd2cd5812d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5cd6228-a0fc-43fc-869f-12a105722198",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f29f1f-3426-45cf-b409-c7a72bca26e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1947119-0c37-4ee9-8e44-836720fbe2b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52d83f91-e357-4fbc-b53a-a5ff5534d318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41628326-0950-4055-9ecb-a147188c70c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bb3992b-2888-4a8a-a3d5-5b408fa8535b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf880949-9993-4d5b-ad74-81984afce682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd3c3425-e0ec-4e2d-8bfa-da9fcde1ae33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ac4dc3-d658-42f9-9111-4cbc21607048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d09afd7c-82b9-4d8e-ae59-3350db45dfa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f845ff33-88e0-4aa9-be8e-42534e28b289",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc8f9ac-ae37-4efb-82cd-119d83c3efe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "724e7a35-4328-42bc-aa0a-96dc394a2a4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e328416-c627-4dca-8d8a-5d9501beba68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bedaf11-4d38-436a-8dc2-7f6918a6aa12"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "aa0ed1c4-60b6-4e91-8670-65698d4a6a28",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1cb601c8-c3ab-40ab-bc91-d78ff457a78c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9336e639-0c95-4fea-b90c-10dcf59038ff",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2156e450-fcd0-4af8-8737-ac823106cbb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e54d2d93-bdfe-4df4-a905-5c4052fe69e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4920cf89-8846-4ba3-8073-b4cfb5f7faed"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18193420-c790-436b-98de-695f446dd12d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "106f7afe-15ed-4755-ac24-3b44acd01a1d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd428366-d8a4-4107-8c83-28e5c8311fc7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79317a53-b6ae-4b48-8a00-f62c0202a7e3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "973d4f24-95b9-45e5-a888-4757f3ed90df",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "65d6cf86-aee9-44e2-b652-819e4db2450f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "23fdb6bc-708d-40e2-b50a-4c937672a1c9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "55f89b5b-0dd0-4ac1-b269-d2e55e26ae49"
            }
          }
        ]
      },
      {
        "id": "7b41fb31-1704-468c-9dfc-8b2d57f44f8d",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "d87104a0-ec42-4627-91b2-33355215626f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c1640bc3-5135-4768-9391-baf863d1dd5f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7004f62e-5ca2-4b8a-83c0-833b9c2566e6",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0708eec-a117-40b2-9cc9-2d8447a98275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f296cf9d-f28e-4b30-8cb2-5c7a174552f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe5b0999-ecbd-47ba-a8b7-c4c59d855168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef430b38-231a-4c55-88fd-df70514c952a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3619465-348d-40d7-b141-c12c9125ad2e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55ec4905-ddaa-4355-9ca3-68e8f7024064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a0f19d5-a1ff-4e41-94f3-cb9ddbc293ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d64a3914-60ea-4884-9181-44b4c10a6c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "47dde656-3b35-4898-b413-30a19bf41b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7278f053-1c27-49f7-9ae8-d2f9b53a6bb4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb62cf2-a234-4288-b957-8c4cf0c6459f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36aeb7a2-c4d6-4f14-84db-2817201ab60d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c416065d-ab8c-420f-af0b-4f15b20178d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb3b409d-f0ae-4d94-b03e-2ac042307266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16498633-e3db-4b4d-8b8b-a208c56d7e7d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c71907-1b15-405e-b67f-361a6e086fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d8de9b0-a317-4ffc-8a8a-67302a5ab11f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b1c4af-a1b2-4406-9d72-f1ebba53c078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9037fcda-93b3-40ae-afd7-27616e1ae123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0bed2f0-8c0f-40a4-9b32-f793f8b14822",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "094bf41c-23e0-4f5d-8b1d-efac581fd93c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b30459b-73df-40cc-afdb-b6a815687708"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b53a3348-e763-4441-b099-490ad0f03542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "57c02b11-ad79-4525-a345-b8b178c6f6db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf847fa-44dc-4651-a087-977e97ed7734",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e85bddd-6e4a-4d52-8aef-0b49e144bf7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d00f566c-50e4-4c46-b31b-9db26041d9f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c8cd02-7722-4f39-a6de-a5383a322d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "55c5cb6a-3c13-49f0-861d-c884ccbb94ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a469146-7a31-42c5-b18e-0a7b64032c48",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c3299ea-9bfb-4dc0-9010-047cc7a17de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeefa335-3371-4bbf-93d0-87f54dbf1440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf018be-ac9e-44b8-8f1e-5ac52e8d19ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a06419d-d931-46f8-9727-aaba27d7e1c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62dd10ac-fffd-441f-9af5-f9cab6365abf",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "368235b8-1935-4616-9313-ce4d4081fbe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "285ef1ec-3bc6-4e0e-8518-966e3a5c4717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cd39bdc-9438-43ed-9a70-569f2a34c914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "82fa3379-561f-4f94-9073-d4a68556eda2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "642cd687-a3ad-4bdf-b8e6-b58a8ae96bda",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de0ef5b2-7177-4b25-9a64-a46ff96fc1b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b2b4292-88c2-481d-b7c5-5ae4e460e063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee4590e1-dd49-4624-9604-34554eeeed45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f4115b5-945f-47e5-a167-48b8c9ad2ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91be2a8b-152a-46dd-a012-1261a35d0c12",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1f34df-ad14-4c9a-8846-d6833dfb53d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13dd6515-3441-4785-8974-7786fffcb495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6296f15-cd0f-4207-ab04-023c5906828b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d16bd95-a377-4f17-b201-c0cda344dba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb79c6c4-66e2-4ee9-a711-62f4c2811850",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6036752b-8b8c-4628-bcd1-b646c02c1eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4adb7a01-b84a-4b62-9a71-a3c0d3536682"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4931cd54-4fee-4385-8b01-c34b1fa6ed3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2c8b73d4-088d-4717-9502-150ae5ff175d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "682ca7a1-09ed-4a96-8686-23277f9ce322",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4134845-1480-4d4e-91cf-17d2824a1250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95b7e9e7-5510-4e31-b381-b3210a91cc70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e324dea-8f9d-406f-8f91-d6fbc91def9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a5fd8923-dc15-4721-9499-79cd65799001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b76a60c6-aa98-4e70-ab9c-436fa7f90522",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46094594-60f2-4fff-a140-1c6f46929758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24787ec8-ae3f-4e40-9982-ae2876969c98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "083bd520-3772-4938-8c6a-d3bce11cb6aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "49019dd1-b96b-427b-a373-705a329fab70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b94a6942-1557-48cf-b77e-7e32dcf1ad5f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c251f32-14f5-4af6-9e01-c1635b8f19d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6fbfa95-c8a7-4df3-8234-3a0d84189d03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "372106aa-bac8-4d56-87ac-e3cf4d3f29e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "467fd5ca-e313-4121-926b-dcf5c7beaa1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe06200-60fc-400c-b119-32f1b53dbddf",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49355663-1b45-4c0b-b879-e78c709ea093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a783076b-7ac9-4198-9bb2-3486a942a725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8bd970c-a77b-4f48-af6b-8d8257d85e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "072074a2-91d0-4dce-b528-adebc54390f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efc49e5d-ff3e-4df8-86ea-33fe4e204743",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e615f7e-95e3-48ec-88a8-f2c171b974de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a5f4e33-3a1f-4aa6-b4c4-32c5b96c12d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d3a5ae2-5831-4bd9-8174-172730d8363e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "37f2d3d8-343a-4183-ac2b-0392494bc6eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb1c8975-ae58-41f1-ae1a-a1e5c31b5375",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a59ccb-4a9c-44af-bb39-779a5c9c4885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c33bf73b-3bc8-4c75-bcb0-a0837f237a07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c6b4e0d-6ace-45b8-8c2d-a6a817b35424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "52bb914c-765a-4e19-acbd-3a9b7f234d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c27744f5-c750-40f0-8158-a7bc06519ae5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2bd3e15-3a3c-44d5-b3f5-653c9e147007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eb5ed26-ef33-4134-a354-33778b78bb9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c64550e-22f4-4cb3-8c0d-b63c793f92aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8657df3-7ce5-493a-be3e-59ac0d12a2cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d66868-5dfc-459c-9c77-483d60e0f2d4",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a938e30-7569-48e3-a9aa-2ac0143d84e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4012acbb-b2c6-49e4-9225-6bb3ae7608c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c047c521-ee76-4451-bb53-520f6dff4239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ade02eb-bedc-4619-b8a1-0164c4ad873b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b2d2fcf-d30d-4bb7-9549-d7ebd908253c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e7953a1-4a33-45ad-9a44-a575aea34803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f982244-7d96-4993-be5e-5c49b915643c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de270c60-ffdc-4fae-897a-bb3c25d7810f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e981ddc9-d0a8-409a-bdc9-1835eda2d8dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7de90e21-a906-48b0-b440-7fc699e4b275",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa5b3581-d90a-4033-b687-f29bfbd5e486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "347cd41a-df13-4dad-97b1-080ffdcf77ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc7e77d0-2089-44d3-a0c5-f9f0913dfce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4637f3e-d405-4d3c-b061-2d23006590b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4c92d7f-8091-4bd5-8041-f1303098d87b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7857cda2-d287-4c4b-8a17-b083b57a1a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94e2f276-02bd-4d49-9107-7241363f1ef4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b856892-3334-470a-ad07-da9938cd1293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d612527-9476-47ec-9959-47a457214432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2313efb3-345b-480a-ba86-6bc702fc8588",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "829280c4-e6ab-4bd8-96e8-22f94470ba97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3737c61a-748e-49d0-b9d1-64afe1b60196"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "337e144f-f073-4cb5-b414-2917f2cffeb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b45a72a9-a0c9-443c-bc5a-8e6f6df05f32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "147e7477-9dcd-4ee9-b699-f791efbf5ca6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec1fb92d-8d03-4855-801e-5cd57d5f896a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d74d7ffe-89a8-44c0-b3e8-10c835392453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4da8f7b1-a18a-4792-8d16-7c63472d7d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e83bf89-a9ed-4d48-b747-b063eead2626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21babb96-44b8-43fd-9acb-a25a0be1da04",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7970705d-46eb-4f99-ba81-5df601f7891c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1922e8d7-8a5a-47d6-ba99-b97efc3f75dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1858464-f35b-4776-8ba5-711c4ddede5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53af62d5-8388-4236-a991-41812bc600bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074df1a2-36a2-4c6d-ad92-7e3a6f7faec6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4fee42b-f18f-4bdd-9d80-ec2cee096195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04373d0f-22d1-455a-abb0-be34c4cd8855"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1edd871e-3ee6-49c3-88c3-c13be8a0a12b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "141dc89f-2c8f-440b-b9de-0dfe8eed9291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ba8d3a3-7c4d-4098-a721-407b180cdedf",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "180bcaea-b19e-4c6a-b4ff-17855b8341f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20ba92cd-3ade-4802-9301-6b0ce64571ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f53606f-b921-45fd-b552-6ca8da447475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c54b15ee-d7cf-40e6-b1de-9404fa10d1cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db42a228-4ccc-448c-8f5d-885bdbe1d979",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4679ce24-c0b5-44e2-a367-93971ee432ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f54dd5d3-a388-4b76-97a4-02664f33c177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad393a2-526e-47c0-b5d2-2369434bb1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66044b81-f743-4312-bb39-5f0fe014fced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b49497-2026-408d-8778-4884120f8b92",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1f99dc-0cc6-4ee0-920a-427aaba16ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2aa7851-c1e9-44cb-92bf-7d4e0626959e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd7e79c1-2125-48b3-b1bf-5b16d7eea661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf008fba-6fb1-4589-a671-f6d45c55885c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f53f7ef5-4bdb-4a61-98b6-14b265ebbf84",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6c8345a-705d-474c-b134-6254b99b1ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30fb60b0-5ab0-4cb0-a341-65bcb5e83310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8577e658-d79d-4f39-a6cb-24143fe9ff99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbacaf30-34a8-4a2d-8bcf-f144ad25f1b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e271b6c3-ad3f-4509-99b0-283f991f9355",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3183598b-ab9b-4cb3-8945-839d52846d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27e2fa68-3b6e-4c7a-8e67-6cb2933a7b21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c52639c9-4bd5-4a2c-a313-5df73e80bfd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac20bb51-f35b-4803-8ee2-272db504dd24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e4b8889-f66a-44be-8e7a-149faa57b3c3",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a07a531e-6023-436d-948a-4fd8307e161d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1d47857-21cd-420b-8521-a2ad8f40230a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b308a3f1-6682-48d2-ad99-eda84c0f8376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "855f7481-b980-44cf-81f3-5f2a64ca5a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d26eea3-e1aa-4513-bd41-f58f1ad07a5c",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b926e963-8e08-462a-b15f-a1c21f136bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a43a4ef-5088-472a-bd37-9b64253b9fa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dcff819-9577-45b9-89f5-246eb7494021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc435939-6627-4b14-9a71-91c5cdafea91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45f31858-6daa-42bc-a62d-ce19d782a18e",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e03b48d-d030-45ed-8b30-e9f1bdef1bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ec05928-ed5e-46d4-9ae7-9978251c7b31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df424df4-ba02-49dd-9c94-3e932ef1f045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e120f8e-0988-4ac8-b3ee-ed664e6fdee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e97bc751-285d-4012-9eab-255e163b95f5",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb22e8d-91fb-4440-b05a-722fc4e26070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a0dfcef-3413-42a0-bde0-e8c35d735be0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a604ecd8-7f69-4607-aceb-56ac07fe543b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bee9222-823f-4bee-bf57-4bdca4e1154b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd99541-b674-4bc7-9b63-09b563557713",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a30ffdb2-0133-436d-9de7-d3279859c4f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee6c53f6-2489-4b35-80b0-2e8f3b0a6f60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96031f4b-a9a2-4eee-8799-b529755c26a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2867e9d4-58df-4a8a-8b3f-501dd9231376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a0bb0f-dc70-48b8-88c0-28efe3cfa3cd",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54fce43-10ee-4b8b-858b-e17d64aad687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb519978-c759-4b4f-9820-2e0338f75982"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f789ee-d925-4196-9f23-c996b40a30e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6489620-7a6b-4bca-9e1e-bf0e2f2550e2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "382cdf02-0c02-4137-b1d4-80ea796261af",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "27444120-8108-4c95-8edf-cc0d0991206b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f84e8a-4d28-41b6-9f0c-2d75c41b363f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b9ac5013-556d-44b5-a881-547fdaf17af9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11eddb7f-5b88-4907-acd2-c9c12ce8e87b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3cfe316d-3803-4827-a836-25f3a9a96704"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7df5180-8cb0-4151-a712-230a7fc1973d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f241935a-e1d0-4d61-b01a-4b971b332e57"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c5c52e9-ebe4-4e5c-b53e-7cef20783d35",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb12d67b-57e4-4cb3-acac-514a7a73d595"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dbfa51c3-8092-4931-99eb-3f8c4fc82805",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9f4d2810-6282-44e1-abe5-beb91fa5fcef"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "701d52d7-e884-45d1-b10c-d11d44fac73f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "552e8049-5724-4964-a715-a461ed8c6a6a"
            }
          }
        ]
      },
      {
        "id": "321499ae-8376-47e7-86c4-43fdb0333d1d",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "7215f2e9-bdd7-4295-940e-09e3a1e19d65",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e670540f-7d59-416a-bd2a-6d71e257760c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f3e9c676-ff08-497a-8bd9-9c9585743d9f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acefdc6e-4054-4b30-8f98-10b0482b6532",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a0574e4-c64a-4022-b406-38f93d446c99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e271070-0ab3-4e21-bd42-23af2be05b03",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d47932-919d-4961-b39f-9bf4bdaaa41b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c291362-6b9b-446f-965c-fd7bd91c6348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc9ef19-bcb3-4478-888e-f3b67abd20c6",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a634d9d0-a56b-4bb3-a546-a6482465eb6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f855c402-6ad1-434e-9085-2d34dc3dc885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c10f45-cd76-4b55-9c27-f08e8f5e8e9a",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e3a6df0-02f4-4478-8efe-ad01c9f01ec4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f7fcfb5-ac81-430a-8b1b-79b36ab93e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6e9c7b4-5007-4292-a1fc-ff82c9976cea",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ac3fed-5107-4d94-98b9-1aeecb40fb00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18152ed5-b5f1-41dd-9967-8d4ffd1cf894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f235134f-b4da-4179-9312-8f9312153ec2",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab99b4c-fe9c-4c36-b30c-fd3cba6ec6fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b48aca45-410f-4ac1-95f9-38cc55e67c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d907aa4b-1d61-4416-8094-cfd15535c618",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb95225-f586-4a19-bc94-501dee068306",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c335068-a352-4766-81a1-82e1436b95c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b0845ce-3784-4a08-afaf-bf8ff22422a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f8bc65d-b209-49ca-9c1b-97e3d5770e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05cc428c-a30f-4c15-8d66-8b79da786439",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d58b08a-a9e9-4b34-b301-b897bdf2df4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d2de6b0-0c1a-4b79-bcdc-22fbf56d893c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14cc4f70-c4d9-4b15-b314-431e1e9eb67a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41e7bda3-30cd-44d7-93b0-6f6aaf63ddc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48ef1ffd-0e90-471b-8f6a-c9375ec1b7cc",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd0a2e18-2421-49c1-929c-60859e5fe6b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb3ae502-fff6-4a87-b963-e012a7f71260"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "effaa5e0-5696-4792-8e8a-d5b078ea5bfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7039c50-ec2a-4e07-8d86-7fee678a25bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96b00405-4710-4525-8856-d0fc328b8707",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55252086-4ce4-46f1-888d-11cf26aedc99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba4afa23-804a-4503-9419-3b6239974a25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "799fabe4-b7fa-469c-a549-a150da50d30d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5386a5a-5cd6-4b39-8aac-7de0a2d6a029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91d168d-9eaa-4805-a3b9-837ae5479534",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "995de364-2a82-41c4-a15e-0dc5df4ce7f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d791174-f7d7-450a-985c-955a44dd8fbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb4fa887-b4cf-40c9-bcd7-d7a58e24a11a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "349d3cd2-d7ac-45e0-ba03-d8091de2298b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41526e03-89cc-4f0a-81eb-620122422f3e",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2119b189-0132-4e6b-b66a-c5f756396635",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4928844-8583-4305-b2a0-b841bc52a8bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "100e3318-bfb2-4dea-acdf-81b8f47ffecc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f041d9b-10fb-43be-aa6c-36e803ce4ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf3ab45b-02a3-470f-b5e9-975c354a2df7",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "516ec5d5-8e33-45de-be1c-7497eb2a42e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2b2fd14-bf32-4c4e-834b-d325045f8365"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c449d7a-d74d-44b0-aa06-8b9131d98764",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa646b6b-4634-4e84-be46-4e40a7e056db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22fa7540-6f92-4ffe-9bf5-684c992da7c4",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c0bbd9-b00f-4670-90c5-80f428d225d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34eb4a18-734a-4fe6-b2f1-8755b29cda01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aae5ce5-70aa-4275-89fc-bba919bb25ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7a81bc4-efd2-48ca-8287-2b5ad719be5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "368a5baf-bfa6-4827-8079-b88d70e6890f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6b35a0a-7810-4cf1-be61-8416a4795509",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "775400e1-ffb9-4dee-aa44-a316605530d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "366306f7-1aa0-4dda-a0c1-c0aec43d3a58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee28a30f-13e7-42b7-8d5c-b0e4a639de4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94cabe46-2daf-424f-8c6a-0de7fb22f8a7",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c3d4a6-72b7-4c47-82e3-4ca350c0dd01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d852194-89aa-42a3-aa90-a59360193213"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea4d703-03cb-41b0-a77f-9b414df42fc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77518d93-d3b4-4b71-9f16-1902e0244d75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a72ea545-c9af-472d-8fd1-e2a7228ee542",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f637c80-eb88-4ddd-9f91-7966dcd4303e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc2eb0b3-8fae-4a19-a345-b3e1e862514f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa960c0-097d-4a34-a890-e66042712fad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30cfdd8b-67c4-4b34-b4a1-8cdc0a450031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f587adbc-7382-49b8-b144-90873577143d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88d2b180-72f5-485f-9e61-07d3c8ff74dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1296ef11-48b4-4169-919e-0380f233ce84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "167d0dbe-4f37-4f39-b0fc-a6fa10ae3511",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81fcfdf8-ca1a-41cc-891e-920066c4875a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a63dcf8e-10dc-4657-8c24-0a6b2f1f921a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee63660-6e76-498c-a36f-afed7569b9a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "812ce7df-fd19-4f68-9957-8643076f43af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b27f8e-6304-43a8-9e9b-f69e8e79b377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69a415ab-8d49-4edb-9118-a4148cfb2d67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a077e21e-9f04-4b39-b778-bcafc784351c",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e4a10d-04e2-43d3-81d3-0484ea3e341d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "225046ac-6870-4fe2-a60f-c5762c8ce412"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df95d03a-ad21-4ce2-85ec-77981a57d2fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12c1f72c-38d5-419b-a50c-e485583ce242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "767c0f00-5d1e-44c9-be6d-19ee61c86b98",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c09d1a9-988d-43bd-b2e3-b688daac4d68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b0277cd-1796-471b-a37f-65109857cb02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da45bf7-134a-4809-af29-1f7697b78f3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26bf2e86-3b5e-4307-8425-36b17330f736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f6069a-62d8-45dd-9d0c-40aea0b91a75",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b75e646a-1710-4cdb-9900-cc5c7628e981",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f4d8c69-3eba-4f02-834f-1d1fb27407b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b81c7f0-ff83-45e9-a60f-e0aeab1666a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b97e086-3bb3-4ed4-bafd-415810a105c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ebcf2d-968d-4f21-b8f4-6a886f6da0a5",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef1fb40-a49f-48e8-be2c-aa8a961a0bc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05bc9819-9713-4dde-bd4d-1d409d3af4d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2193d9a6-b20a-4d58-99fb-98f3cd0f9c30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e05eff2f-4c05-4576-a6f5-2e689f6cecb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adde6ea4-65bd-4e06-924a-790f1bb5dd65",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c4f31b3-4d59-48e9-8657-a334af6de25e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed6bfbb4-1ebf-4fcf-8502-2b2e7af3d586"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03944503-24f8-4346-8550-669ee41fc399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "908e34ac-42ad-40d8-911f-069f4232a4c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6abba6f3-7814-4db6-9636-e21a14cd4273",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e73c098-b205-459a-a2a8-20d4cd2cf476",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6fcc655-9ef5-44a5-a408-43f67256b43f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "996ebf7f-9afa-460e-afbc-7a9d1a50e79d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ba3aff3-8e58-4c42-a459-2f39cf975005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e12c210-248a-4d5e-ae7a-b83037de5649",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "923065f4-5afb-4410-b2ed-52c415af9fa8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed7d2865-8fc0-45a6-aa0c-373a094391c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b986d0ae-1c1f-4db8-92b3-920976793915",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "996d8a90-2be7-452d-9f31-cc920c3bd5b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a77aa2-e46a-451b-a4aa-2fb15d25eb1d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a42a7166-0f27-41c7-b0ea-be7a85636bbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf2c594a-a69e-45da-8f86-83cb4f0aeaf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f1562f9-aa54-46bb-983e-20b1fb4ca1b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d5e8dee-26b2-4976-a43d-a0da61826066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d13da5-5f58-4a01-9fa3-c254600074b2",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cadd2017-1193-476c-a2cb-e1eba94536ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f6608de-148e-45cf-bf95-73bcd5e48377"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "529304f2-2b83-4caf-9092-671516bd71f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83776a42-57d2-4bce-96d0-a4c9e648bfa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dc62f1c-4d47-4945-98bb-a9bb1146e47f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9679b363-8077-4b41-a91b-e10bc9a14f51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2c6ead9-3969-4c44-9c6b-bbb3616daf55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d0366c-d24d-4f99-a818-93a4598b27ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a8ac08e-6fec-424c-9a9d-2e23b815fe43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab965678-10c0-42cc-b062-b366564e804c",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8758516-a05e-4ec4-ac04-cc0b93ae97ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "997aa55a-3a7c-44de-9a45-f4451cbde50a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1a1815-9d55-4560-8beb-4a2e08fffd82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80470181-1fca-4772-8ca4-702412f1676e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb19d8a2-2add-42cc-8049-9e8924464e53",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb702e85-5add-49cb-8333-9283d1602278",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b6baad9-9e10-4340-8d8a-13ebdcecdbfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e2f2f90-b4ef-4f45-8be8-ac5154232613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33bf6779-d79f-40b3-ab1a-734d120f5660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bdebd2d-b2e5-4085-aa13-5a1ee6679295",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "543c581c-312d-41bd-9c57-1ad15589476d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ab2ad8c-2a47-4f06-a332-95165085d376"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d3daa71-f724-444b-a025-3937698a79d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "142ee193-b214-4be4-b56a-525d2302353e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea0597f-019b-4e53-8bc7-53d6b171b957",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9472aa40-665b-46bf-adce-2adfe30fbe73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db559daa-677e-4c38-acc9-a581ac967adc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0865f3d-410b-4f95-985a-a29b5210318f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f9e78af-ac47-4c4c-b3fb-930d6285bda4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba38352d-617a-4efb-9db2-835d2287335b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "effbce93-fe8e-4fac-9bb5-954d6fe479e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "437422f6-643b-4bf1-bcfa-3b87a9a82a90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "393786b6-a824-42ec-b940-0ba2a38f0b59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18c2c9df-f86f-41ac-bb03-edad8807104c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1093c810-984c-410b-97c5-32b3b1c6c73c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3808ad49-6248-49ff-8ff1-098cce003ad1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cab059d-a47e-47a2-a591-64d92fbb41d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d80ffe-30ea-4c09-a1b1-af0238af3cc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac1438f4-95ef-4b5e-82c4-f3da8c545316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d52a66bb-41c9-45ee-a21e-191422dcb319",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "853391fd-fd8f-418e-a722-1ccb585f1fd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8175061d-75dd-4c8b-8707-ca5a116cc347"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56508072-0b26-4037-b7ad-7e5ed46e038c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5610884-f33d-452f-af4c-0ad38b1855d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb927747-19e8-452f-996e-b62934d4ad1d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c1d9cd5-3263-46be-80ac-1078e77df07b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5e7e1ab-602e-4784-9188-a18889b5c707"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c60170fd-4adf-4485-a503-4f116a76ec44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fc825a3-9187-40dd-8003-94d1220514f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6126d933-fd7c-4308-a2dc-a13b1f3f90bd",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f53e9d-65bf-4c7c-a2bf-7bc53ff50422",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db60df7b-2d25-4a64-9dc6-bafbbf1ce05b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "527019e5-6c0d-4f4d-93ed-c4d10e011c04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25a43af2-740b-4e2b-8326-dd4654f7f3c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8ae1ddf-e13e-446c-bd28-d66b53aa8d58",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a1e9737-e064-4e20-a593-9a2a2d5598e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a4eeaea-65b4-4b7d-86d6-5ba5450a07c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f13a68-20ab-4b7c-97ee-3df48a2c96c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "846f4310-95c1-439d-9475-7547c1ec2202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d2c50e-ffba-411c-b72a-c1ec42ee4106",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b475738-602e-4c20-826c-7108d356e677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e663fa85-ca87-49c7-8db7-20473b864dab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a925c900-1a29-4a68-8a03-27648615292f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1808186a-8d23-4174-8765-59d31f224edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b164e1-bf79-4886-a3c4-56a468928561",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7dbc511-e44e-419a-91b5-e559d14fb75c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5978507-7fcf-4417-abe9-bd07746ae900"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42cec13f-8f62-4fa1-a666-19deddfdd97d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5c54994-3575-4a6c-86d7-547aff31856c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45c3d387-7e6d-4424-aea3-7a510207f799",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a78ed1-f50c-4470-99db-8d949a975084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7858597f-29c7-4f8e-a701-bd984f5954ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab6f6a35-2bf9-49b8-9a89-65d842ccba8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec86dd63-6e6c-4138-8d26-7a71488a2668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6f53f47-758b-4d01-bbc1-4715330755d3",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d569ef1c-dd29-4478-a69c-a4db2529f3a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc22fb97-7bb9-488c-9d64-02a031c8ad85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c517c5e1-f1ec-4e33-91d4-f47945502b18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d6dcfdd-f2e3-485d-9002-c422bf37f4fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13bd022c-f7db-4b38-bdb9-8d582abe66c2",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67de337d-251c-4f0d-988c-c08218b89f1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97c15861-490f-44d4-a8bb-5cfafb84fc5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e1df0a-fb15-425a-bf04-67b8d8649eba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb6c6e60-75d9-4504-9dc9-814d6045d1e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1f2b114-dff6-4d64-8f67-714355f7a110",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ef82b7-7d6a-499d-b231-b9aaff268419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd123777-80af-4980-843e-eaa710bc02bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f56e3f-acaf-403c-b372-a0c9aa64184f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9a22188-7aa6-4952-bc82-bdfe7a5c73a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebd75a11-86e9-43b5-b0fc-985ae23c68e0",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b38399f-b60c-4f1b-be91-be2f57e06dd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3987331-2a71-405b-8d3e-ce062765d243"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed7f228d-af89-4eb6-a1b0-6667389cd175",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d674183b-60e6-424d-964a-51062da50383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d55c6453-9a4d-4cea-9b90-a8e280a69b9c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c02738b6-3a4b-4570-8399-4ae7140e44dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "352ecfe3-0ae3-43fe-bcca-9145e1669f0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c804dfef-910c-4627-9aee-5f7dc97a8d73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c8c7f81-d0c6-433e-abcd-1248134cbb81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e4b9d6-6991-4b09-83ca-d7e0356a4014",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e307af99-b64d-489a-bcc8-ec255bdf2db9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6ffb518-c9f3-4f68-a34d-cb5429028971"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4125f96-5434-4be5-86ce-8266da0d1c35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0858073-8930-48d6-93ad-b8530b0e0ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb35264-1d5d-4f33-99c3-d76beecc1037",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de1a08f-ec66-4377-9d63-7642f0285585",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b5aa43d-6fb5-4380-bb3d-2eb63af5d5c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae649a01-9849-448a-bd4d-a5585ddcdb58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7e135ce-e9c4-44f5-b784-83e6bba824f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "702f1401-d260-4b5c-beb3-93c50a445aa7",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdc1d224-78b5-49e0-9bc5-323d1b3be926",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26a04672-9b71-4bc7-a5f9-a506c179ad9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8834e06-db44-428b-a13f-b8e8bc8d56d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cce24a59-6f9a-430e-ac23-0e5ad7a0e930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4da918f2-c1a7-4b82-a114-65ef24103e94",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86649701-0361-4d0b-ba6c-783a733e6a77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cec9b0a-d6ee-4bec-a875-0abdb226fb90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f225b2ce-40e7-449b-bd7c-5b252ecaa5ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1db3aa1f-5120-47e5-9739-42c3e9e8feeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d420dd8-67e5-4689-99a0-0b3d5238d79f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c477d7-1a3e-4730-8798-bcc568e295c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc0f2e68-8cfc-4644-b5ee-3beed7c7529f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e0e24c-6dd9-4296-bb53-e95df66c9423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4737164-4cc0-41ed-8333-eb735194b904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3671447c-19b3-4aff-ae51-438aaf8cbf39",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ca2b07-0ed7-4a36-ae6a-1fbfe500277b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ebd9d90-9f6f-4434-8629-11c14ddcfc80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce259297-8c72-4520-ae6c-db5dbb4ba812",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ce8f65f-0200-4d7a-8230-93b0900ab749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b3a73a8-7ff8-42ae-8ae1-df2ff0c8f70d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f6a614d-cadb-4392-b677-ed28ded78c4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8df1f0bf-da55-4b65-b32b-a2b684239f64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dcaa134-d72f-41f1-839f-6b44c1783f06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e55f2e72-9703-44dc-9e85-440d165987db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aec06ff-7931-4baf-b0ae-14640e0f93a6",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "524c5410-5c26-4cf6-9224-6abbfad64008",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfd7f0f5-754a-4e75-9c9a-ef2de6179a1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b59923-c906-4c9e-981a-0fb5b34bcecc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f0a0bd2-3675-45a6-a0b5-5294f83ff1b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27a6c651-91d4-4ffe-b274-cd0f434424cc",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c818640-bd69-4581-93a5-51b1f8533626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64a945e4-615b-4b11-8315-3fe0be6e55f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a53be0-0e31-4a52-b607-e8ee1665aade",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7efbbd10-faa4-45c8-9f92-55179567fd68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd9525a4-fc26-45be-9cf9-36bd6f528cc3",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52d63004-5328-40ac-99ae-de8ad6259cbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a880ecd-466d-4cc7-a8d2-c42423e5054d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97caa186-9f52-4f07-b149-95c11a1bf00b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f803ed95-9d58-42fe-beb4-6258c1a52fb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dccf2b9c-40d9-4604-b7b3-129cb51b0977",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11003882-ad44-4674-9f67-6fd03356a02e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54f6f377-5e67-4569-926b-a14433d59475"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e7d065-173f-4821-b83c-3be9cb7ecab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad1538ea-f370-4f57-bdcf-f1b4a71ee6a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d3af31-337c-4995-8c19-c119ed79befd",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b69d61d-c7b1-47bb-b40b-8e9ee1ef7d8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66820c95-5a5b-42b6-8b85-3c3dc224d7a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ec72b9-cb58-4534-8601-60dce481a524",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c21f344-6e26-474c-a836-4bf3e7d5ed04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "348b371f-a4dd-42c4-9c03-9cb9924bfdbf",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3658627-49d3-4214-bf91-4018ef127c91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a049e29c-5406-4e20-a45e-f31df9830e1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8782f20-724d-405c-b19a-82132cd7d281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c9340ea-8cff-4011-857f-7ad9150e9cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99d97a87-517c-4fe2-bc4d-15111faf58ac",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3570b2d-9daa-4db0-9b01-28efd73ed92b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e099b19d-3121-43f3-9675-bd6cbf63019a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f60a0ab4-8912-469d-a35a-8232c7dd9efb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1300a400-aaa9-48b4-a3c6-b73d5fbecce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23391a32-7400-43df-aff6-5298bc3aec23",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1935084-69e1-4915-bcb8-a3f882b20f66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b95eb254-c5e8-4410-9203-86256c0b42f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca0513fe-393c-48fb-be31-bb23260249fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4b5eea6-b528-4f28-b8d6-2a98e72f4100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3666ce7d-dfed-47fb-b079-1914e95b3644",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db9f0bb-ce00-4701-bac7-5c9a237b76bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81ad017b-6365-49cc-bc98-5ef047d2f8f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec8b3197-4dd1-489f-a4ba-fe4325c32e02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a618dbc9-5f63-4149-9ed0-b8cf3e838a78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a21200c-2ec7-4efd-aab6-043e72dd52dc",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ed863e-afc6-4ded-922e-4ac9c4b31e05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2796cc7b-1513-4242-ae97-412f191ef8e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88770341-cab4-41fb-9645-92d35f4efc2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19653d2b-83f6-47af-8492-7db366282711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d352f338-a5df-48a1-84d2-ce21cb89d692",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "739e0d8d-922a-4b67-a764-6ba39c70bb9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10421028-08f5-41f7-8181-f81f676428e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "388ed188-d63b-4c6f-9104-d24eeca47853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f65ad1f-5346-45b4-a1fb-5d7de1b41f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a2ed6c7-61c1-40f3-89a4-294243d20dae",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "760f2ca9-8180-4db0-a1ba-f8e95a1fc627",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44f72c50-6cc6-4606-a576-6402063d112e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58bcf3da-2b08-4a4c-b2d1-5724f26feb4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a692080f-1aaa-46b3-b282-caf9c271ee54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26f9abe1-c072-42ce-b257-3390348e26e4",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3304ff5-f6b7-49a0-bc62-5b5e8d9e234e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f21c0345-e53e-4d8f-b376-31e62e780178"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31c87254-840d-4a0b-aabf-7a59a5a27e60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e189cbd-3a0a-4a89-8fd2-a87d3e2c2a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efc57db0-fce9-46ba-b1c3-f68486f3d455",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d6b522-f6e1-43f7-9797-de7f1619075a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f011378-4023-4c01-b78c-5c6cd27c85e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b9bbb2a-26a1-413a-88e5-fbdb3040d985",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca263bc7-e19d-4b15-9955-00b1134b3fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c051c85-91f9-40ec-b505-9bb82a0bc999",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e44616bc-59c6-4d7c-ba99-95ea0f7557b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc9de048-8984-4298-bdf6-b2de49ef17fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06fc87f0-eb14-406e-821d-2b3af3b47105",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab2443ae-5279-4378-8840-faad48e9b3bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b96e514-f173-4738-89eb-4d8457d6225a",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b0d99e-4c0a-4939-b129-21b67dcdac78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "032a5381-8c1f-4e3f-9f04-be193df87b2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "612816c5-7171-4729-8093-29e5d3ba3202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5a238e1-f61e-4d3d-97e8-e36710bd2b33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a9c284e-7fec-483d-b177-5e4993305e9a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9abc1c4-30b6-48a6-b454-f31eda976e35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22f0bf1d-3500-4152-b761-cdb6879dc78b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeac7ecc-37c9-4893-818d-1075da65e9e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3db85b55-3c45-4823-ae49-60b5c6608921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b50dd1aa-3ea1-46c3-b39d-566148d5c498",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4574cd9b-e62f-4966-beb4-6e57e946c0ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4026720-df5d-45c2-ae95-e47b32e2a678"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a07e4c1-8029-4723-82f4-f55b4fcc714b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a37dc146-9984-4016-aa07-f22528fc83af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "add7637b-9a1f-44f8-a04f-9759c767ba2b",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18f0ef9-c31e-497d-92b2-08820ca8744f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6b05eab-febe-460f-a8c8-7875dc233a76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc112b7-db07-4e96-8354-6306e4669bb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77bcd2f1-1feb-47f1-9798-b3d21e2ea9df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf939461-caee-4970-a7b1-f7fefbe76483",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc30494-935e-4876-a75e-11099531cf05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fa9bafd-697a-4f65-8e19-18a9fde3a4ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca722cbf-5dcd-41ee-b726-dc3671a2c993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "033de4a1-b7f5-4634-aecd-bc34f166d89a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bde42f13-0a6d-40d8-8af8-9d1050bef260",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d7fce9-4543-4dc6-8b0b-fb06269b94a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d87d4f7-1988-435f-9039-c8251c31349e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df247144-b4d6-44a6-9f81-76f45088b3e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "170c1e58-d833-41aa-a068-893813d29b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb3675fa-8106-4266-8b29-1ede30cb218e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3882afbc-e6d1-45df-bf6f-ccbad126236d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a01c8a04-756d-4b69-b1d5-d5ef10faebe3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6472c74-5289-46c5-b38d-f948848be1bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fba22db-72e3-41b4-8b27-a797b0f71024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e6856c-cd61-4808-b166-df338761aba3",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74934052-452f-4052-8952-61da986eb134",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7aff3d17-8865-4c76-8d02-5f7f86cabac5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71a14f55-533c-40be-8ae7-86146fede2fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b934456-a88a-4647-afc8-4f7414db712c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc45ce19-c151-48ac-8624-6bea3b6a26c3",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f31933-03b9-4c74-a4cd-4b2576b7682c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65691080-c2c6-468e-b4e2-e1ba08d28044"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63dccc6b-9e74-41fb-bfb1-a47b0afa2e68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c020422-6e70-4121-bcff-845acc82f11c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80072c83-c713-491f-9d28-db56bb6e5a61",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e4df75f-7983-45a2-b0e7-0cc7782c6213",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f74fb7d-dc89-4f02-98a5-6fa631f03d09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87a43e1b-3d80-45bd-b583-1fb847b6146e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28feb4dd-520e-49a6-9237-1c127db6eae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a0c964-4717-4b72-9edd-f21546702479",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9521aa-f953-493d-997c-6a1e93ee3f31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bed69525-9f07-4b77-9dc0-5d1a90f420ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f3c00c7-c6ec-4833-aa76-37f0808d200d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dac547a-d6fb-47cd-b83e-7a071c25a3e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2a8c592-a610-439a-96fb-2bf498167b8f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a987245-68b0-49b4-968c-d471e4aa08c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74609022-4aa2-499a-97b6-e5ce5fee3f65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9656b77c-f107-487c-8db2-3ded924d2a61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b992cea7-717c-47c8-8544-ee31e7f7d79d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "663f7e84-8c25-4225-ab25-dd267a41d646",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b86bca-0857-441c-9472-ed7731e07973",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdab58b6-5c3c-404c-b4ba-4bfec62e048a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7379a5e7-e52d-4b09-b76a-accad648df02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d74e0eb-3e4a-4385-9bab-ead223a6f356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6dcee42-9d14-4f95-a366-f9fce7c93cc6",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e618f33-8bec-42c8-9536-c2505a61df76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a174525-1a4d-4247-a49b-4444d2a9a63f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1bf2d40-e080-4300-9226-113a34fea346",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aa3d18e-833e-479f-b624-57a2df1b71c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f447565d-ddd7-47ff-ab97-21c0b4e2d566",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62321d81-289c-4ebf-8ea3-c7cff1fa1344",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7f24d5d-b17a-4552-9b49-d1e48209996b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b347037-5b16-4b9e-b545-c2a6cde53774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4dfa501-6640-4993-bc73-c93e937b2d30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "813bfb42-c0c0-4299-a189-178b7ff9cf6b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d4b607-b7ba-4a1c-8c2f-18f6aa5ca854",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e034068-3c5e-471a-b291-b958db3b5455"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a918168-a950-4096-bfcd-7c5157d0c76e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d32607c4-a739-4165-9b43-9ba559e41153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b05d33-ea88-4896-9afa-a63be399bce3",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b399e90-2c7a-480b-91a2-ebf68cdec17a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9284dc84-af33-4dd9-848b-ee4b14c34b1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0fa6bc2-26a1-48a5-96e0-0509b6ab3313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baf78498-6887-4086-8300-16f7fb033cff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3975f2ba-4d0c-49a9-bf27-f562d827cc3b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f9b4b1-5dfd-4c27-900f-41d531b3d97c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8a53d4b-3595-4abd-9da6-fbf4de5e5fd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc8917a-3909-493e-b83e-bc82f0af1906",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75ce468d-90ed-4ce3-91c7-b02264ed090c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "674e8a1f-655e-49ea-919f-907546717db9",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d837763-e623-4fac-96ca-f07549bda865",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ddb6c75-8e16-4812-8122-2235ad571224"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb18126-8f79-4829-ab68-74c217017493",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf1c1bcc-28f8-4f6f-90d4-6199bd2b4c2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4604366f-cc31-464d-97d3-f9161bf5542c",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "738cb321-d6e8-47ba-a650-1b380dc1326a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a6dd389-84a6-4adf-9a4d-b29cff65f774"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7cc4659-2b41-41b3-b376-9f6b9ad48b71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76edb608-ab1d-432f-9f16-2cb111b326ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ed975b-a22f-45ad-a2c3-3b08ac6f5768",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad0d5e14-59fa-417a-ac7b-4e0702d68ca4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49af8ff1-fc34-4834-a651-4453f3592d6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e22427a-0259-4433-90fa-e5dbd13e7db1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49566968-375d-40fb-8f58-de779c0839b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "926d2da9-6af9-40ee-82d2-692ed699b16b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f61962-4dd6-4192-8568-d3629cc3024e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed22e45a-1718-4d45-a607-e4c3deca8b12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9800de1b-792d-45ec-89c8-9bacc3c262bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb266dad-24d3-4f21-89f9-6184c70fd5f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e56877-f232-4b22-8912-2333939ac47f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3701573-fe76-4884-9b9c-bcdf843ff1ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da58db2a-0ec1-4792-ad96-6aa53e8a405c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a05ff51-56ad-430b-aa3f-b0710bef6060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c401f1e5-71f0-4c41-8dfc-0a12c0d80c00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "449193fc-ccfa-48a3-9b93-068f48dfa94e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ebe93c7-a1b4-4f5c-9715-e713673f9de0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9287f5c0-d637-46f9-b957-b8fe4d01656b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ff0317d-7027-4d9d-a3af-aabaac994776",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c81d218-90c2-4519-a13c-ff9d2707f217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad2ce0af-23ef-485f-9ce5-65917f8d0ece",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa286ac-d629-4969-a340-8faecf6a4150",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16d0e19a-fe42-4f0c-94cf-8dda2429bd67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cedc58d-d0c3-428f-8321-96ad852c22e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d286238d-015c-429a-9f1b-82b7e1d48ae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0cbd7f6-d708-4c8c-a422-2afe6074515d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7565f3e-986e-425b-ace4-6004cdac5b9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42efc715-77d7-49e7-ab0a-25bd19cad0cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35273c72-3cb4-44a3-b613-a70b9fc848f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0428b78f-e81b-4b5f-94cf-9975236b9f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55a7b96-d9a9-42e5-9f31-997c68f37059",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72efb446-6f16-45a9-ac5c-d75b45d787b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c30cd92c-1a2d-42cc-8bc4-0008f3981583"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff714930-67cb-496c-924e-84c5252eac69",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52ef989a-6dc1-4a13-aaa3-9e5b8cf8b236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7bde716-fa89-4b05-a633-8748ccbd886e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "332ff72f-f233-4e52-9eb0-08e6ff03967b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "895eb259-3909-46c6-bf9e-a0598160fcc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d8df22-b8f2-44dd-8c9d-924a77b6054b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2875410c-1a94-4570-a870-a0b88732b558"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3828e649-b537-453a-86b6-4c95baf16c02",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72bed9da-b895-407f-8036-823a0ea070e4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4d7e4b3-2f66-408a-924f-6aab01ff5fca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8861b91b-f416-4b90-9ef1-c974ec473698"
                    }
                  }
                ]
              },
              {
                "id": "5b2d3f5f-e24c-454b-951d-0156c57ad69d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c33233a0-aae8-4e37-a36a-df15d528eb0d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c990a8-f14d-494a-ab30-ede5efc429e6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "eb28ef33-8067-49c2-85d1-84e2fde4821f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce166eda-240d-4a40-acce-4c2b239b8dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "49a9ef69-b4f5-4ccd-b590-5b341d131ce4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd7fd58b-08c5-4b5c-85d2-6b0a9ed50e7f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8639303a-3a3a-4fd9-8160-cd53e112dd49"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4685b6c-4619-46fb-a792-32d340f7c89e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cfe95c60-8219-4333-9971-efc91f52d144"
                    }
                  }
                ]
              },
              {
                "id": "8f6ad478-f31e-4f4a-bb34-bb2fb325ada3",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3e37fb57-1129-4776-b66d-d75cca22109a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07b08379-f5c7-4808-a22e-a78e7c5c72c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b291435f-160a-41c4-a9ce-be1667d06863"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2079ab7e-17ae-45f4-b849-ba4c1efec4c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "025a5114-01b1-4f57-b9d1-dbe445fed7c1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "da0d9ad1-c4fe-474c-a869-cc9a21766996",
            "name": "Positive Testing",
            "item": [
              {
                "id": "10912290-ed01-4769-ba8d-036eafaf50df",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb8db679-89bd-484c-a606-0c3e99a3c59c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a68dac68-e50a-4aa6-8500-f9a09d66d561"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e58ef0c9-3ac7-486f-9104-bf7ef334e91b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "14dc9201-df0b-4f98-b237-c6bbea88db7c"
                    }
                  }
                ]
              },
              {
                "id": "828f5a18-0fa8-4cca-937c-eb539600bbb4",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "64f8bef4-0e34-4230-855f-3443d1f402e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "51eed731-4523-41ad-8c8a-b689c56f62a2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d8358df-0310-4de7-bc7d-da04862a02de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fc0c8caf-3c39-4766-a16e-bb3b33ac5694"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c3a310e3-da1d-45fa-a98e-9bd2350b9e09",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f1f083bc-0268-4b45-83e5-35a88d7b1b8b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9a10aed8-3e39-42c2-973d-2cda04091146",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3a23cf4f-9169-4f01-bdfa-2c1f52631f67"
            }
          }
        ]
      },
      {
        "id": "b5306250-7962-4df8-9a7f-c18c37d51e14",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "ce5ae341-08b9-4d80-b950-00c664af3d60",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8d881157-b214-4b90-b480-bd0fe387e9b5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6f8d9239-6d18-429c-be00-1dbb890b9f08",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae87b526-aab2-4fda-820d-e734f75afcaf",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "44171d76-bcf7-4803-ac4e-ecf474ae554f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5941ff2f-e366-4b44-bf96-8cce87e99eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "101f28d7-60a1-4d73-83d3-62fa08a0b9d6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5803de91-812a-46c6-a480-b1b91ff4d405",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7494e452-3fcd-4583-8b71-b24db9e6148c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "39c1f19f-b21b-4dc0-b692-1acfc0d7e826",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f4a81576-fb4a-44ea-96b8-866be4c61f15"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7b698eff-32e3-4bb7-a4da-5322ff36670d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a31a9f4e-f952-46be-aed4-4977bfd76956"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d7c9e2b8-ba31-4c38-bb47-7b3bae87ba8c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "884b57d3-3c9c-4c34-8fee-65bab2b2cec3"
            }
          }
        ]
      },
      {
        "id": "a9929c89-06ff-46e0-ae5f-24ab002ab158",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "3726cb2f-ea56-493e-a85f-1ea9d3f49f39",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a168b88f-1836-4729-bb2d-3539ebc0032e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4104ea78-5589-491d-81f3-e78be6bcacfc",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c728b577-96af-41ba-ad90-27809c605e53",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "553abb85-261c-4de4-b9ea-6e9fbf579629"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ef722b-d091-49b9-ac19-e07b8ef73000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f507dc84-ac54-4f33-b9d8-76b142b742c0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "829e1405-0cc9-44e8-9452-d621414e55c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "07299f79-c09f-48f4-a898-1cb63efc204e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a3dc686-5e8a-45ad-ba8f-1d8c6731e751",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ead7d0fd-72eb-4e92-8760-f7a2267bf003"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cd550720-1993-47a1-8f54-33bf12093532",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cc70bada-1c8f-4728-9f6b-95616153ee74"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5422de36-aacb-4bf1-897b-79961c8f851f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5202fe90-0ceb-4931-af57-8124723fe913"
            }
          }
        ]
      },
      {
        "id": "76e527c3-f68e-40a9-aea5-62dd73085963",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "1d7028e2-7d61-4218-9a46-e94439ddac49",
            "name": "Negative Testing",
            "item": [
              {
                "id": "83a0a36c-8b8e-4197-b485-471f4fc3076b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8802ce41-db0e-4dcd-b00d-b8aace75ccf8",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f2fbc9-7bc5-4b10-882b-839735f713bf",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7cb3f119-24f4-4f0a-836e-d794a0eeb955"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f024bba4-bc33-4492-a2bc-6df42e3bd292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b86b1b9c-c572-40d2-ae1e-646baf5b406d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e9154a05-22b3-4f1c-9b9b-d769e1c6d2a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c10ba6fc-788a-4b3f-ba91-68fee3c5226b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f51a61b0-6b22-441b-a111-88faedbb3c22",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c3589c09-6af7-49e1-8188-77d3ce7941a3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "29d761a1-aff2-48cc-842e-3fab9a0c818c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e388854e-0305-4f06-a297-d93dafc8788d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "43131218-b4f6-498a-baa1-cbc1a3872783",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7a1159eb-cc8b-4c85-aeb5-d8876f92556e"
            }
          }
        ]
      },
      {
        "id": "a58e1b98-5b55-41da-9ff4-241e286bc777",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b4547906-5ca8-4561-88bc-49f4d4e42ee2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ed2774e8-8805-4349-b12e-cc78aea43229",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "553fd50b-7e4b-47d5-86e6-a28a47ff86c9",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bae730d2-8aa4-4f43-b637-3ba763e0ed4b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2b2779d9-b105-4ff0-b8a0-ec4f9304fba8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 106.69473684210524,
      "responseMin": 9,
      "responseMax": 8087,
      "responseSd": 529.7880888573338,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1704069576622,
      "completed": 1704069615982
    },
    "executions": [
      {
        "id": "eae15d92-cf9e-4b8e-8490-c0d3747fc121",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2a02dfad-fc49-4daf-a433-f30ad4b3a95c",
          "httpRequestId": "6fbce872-0c56-41cf-8f73-7470aa158c53"
        },
        "item": {
          "id": "eae15d92-cf9e-4b8e-8490-c0d3747fc121",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "086323bd-1a69-440c-9406-0ccaaf54f3ea",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 0
        }
      },
      {
        "id": "f395754e-c1c0-4cd9-aa31-570bc00b52d1",
        "cursor": {
          "ref": "1a5ca4fe-f59d-4f90-b3e5-451b3d47bbaf",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "571ca30b-46b0-4821-b5a5-809436ba5399"
        },
        "item": {
          "id": "f395754e-c1c0-4cd9-aa31-570bc00b52d1",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "479a501f-1a17-4dc4-9d92-900cb1418259",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "42e014db-6cea-4b33-b37a-a125fdd72c2f",
        "cursor": {
          "ref": "103abf74-9f23-422c-ab2a-739610adb659",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "c0bd99fc-f116-4a9f-ba43-5a8aaa49e7fd"
        },
        "item": {
          "id": "42e014db-6cea-4b33-b37a-a125fdd72c2f",
          "name": "did_json"
        },
        "response": {
          "id": "9a45351d-8b02-49af-bec4-e8b14d62ee10",
          "status": "OK",
          "code": 200,
          "responseTime": 354,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "febaad0d-c23f-4930-8018-48181738261c",
        "cursor": {
          "ref": "74022eae-09cd-47f2-9d0c-32885835f580",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "82482663-82ab-48da-8b99-0ed8cdd3f787"
        },
        "item": {
          "id": "febaad0d-c23f-4930-8018-48181738261c",
          "name": "did:invalid"
        },
        "response": {
          "id": "7c18fc83-fd30-4047-9fd6-efc26d136f8d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 808,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "febaad0d-c23f-4930-8018-48181738261c",
        "cursor": {
          "ref": "74022eae-09cd-47f2-9d0c-32885835f580",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "82482663-82ab-48da-8b99-0ed8cdd3f787"
        },
        "item": {
          "id": "febaad0d-c23f-4930-8018-48181738261c",
          "name": "did:invalid"
        },
        "response": {
          "id": "7c18fc83-fd30-4047-9fd6-efc26d136f8d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 808,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c250b4d-9756-4e94-b858-e7b4570de7c2",
        "cursor": {
          "ref": "ea3dd73a-fd3b-4c41-92bf-288d040d1487",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "bebc0f4d-abab-41d6-a8d3-a4a88624e19c"
        },
        "item": {
          "id": "1c250b4d-9756-4e94-b858-e7b4570de7c2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "7661be81-e902-4009-8d21-71404f8f6c69",
          "status": "Not Found",
          "code": 404,
          "responseTime": 40,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6125717-c611-425e-bc07-50b4cd662c72",
        "cursor": {
          "ref": "178c7dc0-0a0e-43f1-a843-1f2f6c87cb67",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c9f49c3b-c7ee-44e3-a95f-1b16b0e9948f"
        },
        "item": {
          "id": "b6125717-c611-425e-bc07-50b4cd662c72",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "bcb6d476-ff45-46bd-af63-65cdc66a29f0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 39,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd294f10-a7cc-4f8b-bbc1-74b10a818b26",
        "cursor": {
          "ref": "2e26b421-a27d-41f1-9bef-a77525808c0f",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "206d4776-6717-4ea4-b8fc-49d35f6a87b2"
        },
        "item": {
          "id": "dd294f10-a7cc-4f8b-bbc1-74b10a818b26",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "054ebbe8-0fd5-433e-86a8-64f705e0c02a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f24462-78f4-4532-a38a-10d04ef5c567",
        "cursor": {
          "ref": "24001d8c-72ff-4915-b9d6-00fd704da4e8",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7590b80a-0945-4b51-8023-2b6e5d6b75fa"
        },
        "item": {
          "id": "27f24462-78f4-4532-a38a-10d04ef5c567",
          "name": "identifiers"
        },
        "response": {
          "id": "be8d499b-f777-4031-bf77-94dfd22e6ba1",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb54ffbf-c8a9-4065-953a-094295e068ee",
        "cursor": {
          "ref": "9a585f37-a019-40cd-9463-1e8a1846ab9d",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6bc1816b-8027-4d93-966c-878bbb4ba6e7"
        },
        "item": {
          "id": "bb54ffbf-c8a9-4065-953a-094295e068ee",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "966e909c-66cf-4553-a10b-e71040f37800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c98a10-c33c-46f4-8b76-e08b7d21d804",
        "cursor": {
          "ref": "5c0830fe-1275-47c3-892d-6d47686029cb",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9e909109-19d1-4f41-b461-71773a2338d4"
        },
        "item": {
          "id": "46c98a10-c33c-46f4-8b76-e08b7d21d804",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d6b4aca0-1340-458b-95a8-6e9198aa076a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade64bfe-fa1b-45ab-afae-75ce44892104",
        "cursor": {
          "ref": "8dc5ac09-b4ca-4e12-ac3b-e81b59004842",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "62d15fee-7dae-4265-9ed2-4efb5cc87ede"
        },
        "item": {
          "id": "ade64bfe-fa1b-45ab-afae-75ce44892104",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "fdc2b665-a922-494c-aec0-1e08e23ad868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e78c679e-039b-4e40-b1cb-098d689da466",
        "cursor": {
          "ref": "985df603-f48b-4904-ac7e-8459c555fbce",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "2f6ec54b-c0fd-4504-a7ba-85d2d37d7c76"
        },
        "item": {
          "id": "e78c679e-039b-4e40-b1cb-098d689da466",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "5b246d34-c34a-44d9-b602-4f9c1407dff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c96a8870-28c7-44b8-ac79-7d20dd38d809",
        "cursor": {
          "ref": "3bfa59d3-b071-47e2-bb86-858b3152d389",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "45c81b77-b026-4bf0-b4e5-a49628ecc77a"
        },
        "item": {
          "id": "c96a8870-28c7-44b8-ac79-7d20dd38d809",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8cb7e791-fcc9-440b-9d56-6950d2a6cab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a76ef562-4a7c-4e82-9d9e-9f1807d1dc17",
        "cursor": {
          "ref": "8a14fdf7-61f9-4175-9bc4-1458f1a73f87",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "fc70101e-ea95-4faf-ab9c-33e48dbdfbe3"
        },
        "item": {
          "id": "a76ef562-4a7c-4e82-9d9e-9f1807d1dc17",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "56883df6-a265-44c3-b4ab-fcd927b87e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd8b657-5cfa-43cb-8b6e-985249909673",
        "cursor": {
          "ref": "6a98320e-f624-48f3-9cfa-db65956a4ac6",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f7590455-cc54-4c81-a3ae-0ab07425d166"
        },
        "item": {
          "id": "ccd8b657-5cfa-43cb-8b6e-985249909673",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "467700ab-5328-45e6-8707-ce0019bd7a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed86947-c54f-4083-b9d9-e34550b7ef7b",
        "cursor": {
          "ref": "d3105ed1-b532-4732-b4c3-139b424a25b5",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "05811287-aaae-4444-aa4f-6973f85710b3"
        },
        "item": {
          "id": "0ed86947-c54f-4083-b9d9-e34550b7ef7b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5ecce235-019c-4ad7-97d8-20b2bb28c71f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35514550-43dd-4276-a953-db8ce5311322",
        "cursor": {
          "ref": "bdf57644-2b2f-4f68-9459-98ddb1b6ab39",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "3a8f4512-04ed-44bc-9727-7523d7dc2478"
        },
        "item": {
          "id": "35514550-43dd-4276-a953-db8ce5311322",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "fb8b0d40-da3b-476c-826e-9ba6c7d51d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b66fd78d-6e81-48e5-b829-54b5e43499a5",
        "cursor": {
          "ref": "c52550ca-95b6-47ad-acd5-21a949a037c6",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8588efba-8204-460b-9e09-3dd926ddb924"
        },
        "item": {
          "id": "b66fd78d-6e81-48e5-b829-54b5e43499a5",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "8ceaf78a-b068-4f01-a305-2a185c3e1bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "023d7f98-9ff7-49a1-851e-73f84cae7f9b",
        "cursor": {
          "ref": "61ded603-c077-4959-b983-bf4c5bd7d6ea",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ef366db0-32fa-4be8-b22c-302b3dda1414"
        },
        "item": {
          "id": "023d7f98-9ff7-49a1-851e-73f84cae7f9b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "db9ee397-e442-4177-8a3f-b0f2a0a0d725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b274d9a0-0476-4cd3-87e2-404f2ac366ae",
        "cursor": {
          "ref": "246661bd-4324-4297-ae96-80531383c50f",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c3697bde-a90f-48f6-af82-25500e1174ed"
        },
        "item": {
          "id": "b274d9a0-0476-4cd3-87e2-404f2ac366ae",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "3337239f-eb2f-4aff-ad87-0afaed6ae980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e384e23-3442-4f46-9197-19c034574661",
        "cursor": {
          "ref": "7b5be56d-b6be-4730-8dbf-ba0cf768d353",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d0739bbb-3d00-4e0c-90db-0cb813b29c38"
        },
        "item": {
          "id": "6e384e23-3442-4f46-9197-19c034574661",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3e1cfa8f-a45b-4ef3-be50-fcba340c39e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f3382d-912b-4ffb-aeff-68e902525492",
        "cursor": {
          "ref": "51bc8ae1-6064-4aae-a98d-0cef29ab078c",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "41a69881-6298-4a00-b3e4-30b126940a5b"
        },
        "item": {
          "id": "64f3382d-912b-4ffb-aeff-68e902525492",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ad6639f5-4303-451e-be2c-34709e74ea7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c0f51c9-dbb5-45b9-9ea7-6fdec7e697f7",
        "cursor": {
          "ref": "62aae4b5-089b-4059-86ff-a49b82d648ac",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "bfcffdfc-c32a-4da9-bfff-170b8eaedc1e"
        },
        "item": {
          "id": "4c0f51c9-dbb5-45b9-9ea7-6fdec7e697f7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "7a590e55-7acf-4a99-921f-cadb9815378d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13d3a0f7-54d1-411e-b154-47ed54a642dd",
        "cursor": {
          "ref": "426ff72b-f853-49d1-a5cd-38dfbe59b79f",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "905fdfa5-25bd-4c10-aa8a-3f5ebbfa1a92"
        },
        "item": {
          "id": "13d3a0f7-54d1-411e-b154-47ed54a642dd",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "9f35980b-ddfd-4688-bd1f-7347c3b69b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e867a8f8-0a6e-4fc0-abba-2ec33639cc8e",
        "cursor": {
          "ref": "2a39f31a-cca2-479d-afa5-3cc8b249d50b",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "914b1b9e-15c8-4d91-bcfd-d650d00c1672"
        },
        "item": {
          "id": "e867a8f8-0a6e-4fc0-abba-2ec33639cc8e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "000918bb-f0c3-4da9-a071-c7efae60667b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d709d8f8-fab7-4fc8-8519-46c91f2590c5",
        "cursor": {
          "ref": "51851258-8255-4712-91c9-1461b2bfc206",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "1befed4b-5f37-40dd-bd89-a1cf1401657a"
        },
        "item": {
          "id": "d709d8f8-fab7-4fc8-8519-46c91f2590c5",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "6f3e21bc-2418-42c6-806f-f2dbe7444dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc9aa1b1-e738-4589-9679-a48ca00a4607",
        "cursor": {
          "ref": "90d0f3a5-3d92-4889-8b0a-8d6ab3405139",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "fb5eb79a-d635-45cd-872e-cff715732ad2"
        },
        "item": {
          "id": "cc9aa1b1-e738-4589-9679-a48ca00a4607",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6d299cbb-24eb-44db-99d0-66cf254c0098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc04908e-8d04-401e-93ae-978bb292adcf",
        "cursor": {
          "ref": "b4703a70-8c8b-4270-8697-f1a3a10959ff",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "17683f41-fc0f-4bf9-bbed-4c99e7b7eba5"
        },
        "item": {
          "id": "fc04908e-8d04-401e-93ae-978bb292adcf",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "3abc0729-2001-430b-8bd4-54bcebe0c5a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2091404b-0dbc-47f4-a011-d8d1c2f28fcf",
        "cursor": {
          "ref": "6bff28d1-656f-4808-9b59-2c544b2fbf89",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "649576e6-c0a6-494f-b57a-f6776fcb95d7"
        },
        "item": {
          "id": "2091404b-0dbc-47f4-a011-d8d1c2f28fcf",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "21e0bd2f-4630-4773-af48-03e045588fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa2b33f-1a5f-4df3-948e-931ed2002e44",
        "cursor": {
          "ref": "159b0173-8611-4b7d-9f75-f5f34cd11d68",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "54136bcf-2f2d-4421-aee5-494075e089b0"
        },
        "item": {
          "id": "5fa2b33f-1a5f-4df3-948e-931ed2002e44",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "30c52dbd-7cc0-4297-9030-434f76451ae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c3ef69-d103-420a-976c-5aaa1dfe308e",
        "cursor": {
          "ref": "7bcf7924-685c-4559-81f4-3eb6649a7f48",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "6503e430-2635-416c-8000-928f3b472ca6"
        },
        "item": {
          "id": "a2c3ef69-d103-420a-976c-5aaa1dfe308e",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a1757d32-3ff6-4363-be03-a272b0a08fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba834ab-2094-478a-b90b-2b10ddd61f5d",
        "cursor": {
          "ref": "bea70a22-2565-4e7d-89bd-9a96194aaf47",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "84234f6e-062f-409b-ac10-7f95f3aa942a"
        },
        "item": {
          "id": "6ba834ab-2094-478a-b90b-2b10ddd61f5d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "ed893858-1c57-419f-8392-12bb734ba404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a614a11f-0092-49c6-93b5-46903e4c5195",
        "cursor": {
          "ref": "3f4ada4c-e012-4f73-97b7-203c60eb0c95",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "50f05fdf-6f63-495f-a84d-a2828192495e"
        },
        "item": {
          "id": "a614a11f-0092-49c6-93b5-46903e4c5195",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f14f60d4-4570-4ddb-8652-099a5d6bb341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1719c434-e89f-4c2d-a86c-163a7cb6fcf1",
        "cursor": {
          "ref": "291f42fd-b6cd-4c05-944c-6632c9adeaa3",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "47c9175c-a6bb-4c44-a15d-01b8c776a338"
        },
        "item": {
          "id": "1719c434-e89f-4c2d-a86c-163a7cb6fcf1",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "dc03df25-95ab-4ff4-9333-e6096b7c38c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0dacec8-48b9-48cd-9580-a384b01e1b74",
        "cursor": {
          "ref": "ee1fb38f-9891-4936-ab81-1ecc681964ab",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "631c4728-9c56-4a4b-ac63-564742deae85"
        },
        "item": {
          "id": "b0dacec8-48b9-48cd-9580-a384b01e1b74",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "97dd70e2-f446-458f-bce5-3ba2ab936384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ad7377-77a5-451d-80b9-3386a0ab1e41",
        "cursor": {
          "ref": "a7d40eda-f0e3-4970-8c9d-7c7fd0a7120a",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "00e721fb-1bb4-4c43-a42d-a7b017ae84ca"
        },
        "item": {
          "id": "f1ad7377-77a5-451d-80b9-3386a0ab1e41",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "161f9265-37ce-44d9-ae62-1307b324f5b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c782ce-b17a-4f11-aab4-aece158c764f",
        "cursor": {
          "ref": "a37d328a-4add-42e7-b8a5-ffa3bc6e8602",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b13c1499-9a3b-43bf-84c0-ad6a418b28f6"
        },
        "item": {
          "id": "27c782ce-b17a-4f11-aab4-aece158c764f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "bcaac6de-744a-471f-a923-e061f700949b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa76992e-b5da-476f-8b57-07f884ceb3d0",
        "cursor": {
          "ref": "e83a1157-650b-4a05-a94d-d676b45e5b58",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "837da8e0-0e84-4f3a-8a67-51f21a8e3177"
        },
        "item": {
          "id": "fa76992e-b5da-476f-8b57-07f884ceb3d0",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1be85648-3bb8-4d19-aa6a-2e7f7638ab9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba2e6afd-8dfb-4b9d-aeab-c150c3349a7b",
        "cursor": {
          "ref": "6f8d189b-6413-47f8-bffa-e6d336952024",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ee5fef3a-b841-471c-a469-1b8147f9a033"
        },
        "item": {
          "id": "ba2e6afd-8dfb-4b9d-aeab-c150c3349a7b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "307356c9-864d-4ee8-865a-1cccd9218fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c3aa6ee-8eeb-4702-b50c-9e3561dbf334",
        "cursor": {
          "ref": "76aeec61-9fae-4fb9-9c9e-1a66de2aba2d",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "4518d519-c522-4bbe-878c-55948f4124c2"
        },
        "item": {
          "id": "4c3aa6ee-8eeb-4702-b50c-9e3561dbf334",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ea22d1d5-a8c7-4d81-b4ed-4101e48bc146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567ed82b-7f4b-4921-a649-b66e7afb742c",
        "cursor": {
          "ref": "5448d2cb-a2aa-47bc-b6d4-d2863880185a",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "076ea0c8-3d66-4cd7-8aa7-aacf948d5827"
        },
        "item": {
          "id": "567ed82b-7f4b-4921-a649-b66e7afb742c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "3973728a-5aaf-46de-be32-c8b21c336147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d266a53c-0ae1-442d-8f41-5f9be8bab71c",
        "cursor": {
          "ref": "66138a29-d615-46bd-a3e3-b6603651afa9",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "64d1e63a-5570-4618-8fd9-c6819f04e07d"
        },
        "item": {
          "id": "d266a53c-0ae1-442d-8f41-5f9be8bab71c",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "57af47a6-eba9-4e50-86cc-9c84e237ea7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ecddbe7-49cf-42af-bf05-d379246cfa5a",
        "cursor": {
          "ref": "27ac56f2-6d80-4bbe-9cb2-cad080d3bccb",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "0d43416b-80e4-45fe-8201-73de3fcc14e0"
        },
        "item": {
          "id": "9ecddbe7-49cf-42af-bf05-d379246cfa5a",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "76c06b27-46db-4bb9-a161-2183ea1e9cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7921e64e-b259-4225-9c3a-6b8b29413601",
        "cursor": {
          "ref": "6d680350-1761-4496-9361-ac28c6ed80c8",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "da0c31b8-01ea-4028-89fe-afbc606b838c"
        },
        "item": {
          "id": "7921e64e-b259-4225-9c3a-6b8b29413601",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ca4518fa-fcf5-424b-b644-ab2dc077212a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afcd6c4f-5e2d-44a9-af52-b2e53c829add",
        "cursor": {
          "ref": "ea79352e-5b24-4328-8481-25dd44890379",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "82ef1c86-0bf9-4abb-8525-b7e35357fde3"
        },
        "item": {
          "id": "afcd6c4f-5e2d-44a9-af52-b2e53c829add",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "7b3bdb5b-c3b3-41a3-b0b9-b623e9709ba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbd5bb8b-0f3a-438a-8060-a303e574f1a5",
        "cursor": {
          "ref": "20772553-bbce-4abe-bc95-d823636f447d",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f8cbba39-2160-49f6-bc59-2a7e6ca84920"
        },
        "item": {
          "id": "dbd5bb8b-0f3a-438a-8060-a303e574f1a5",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "a2fbc873-c1ba-4e06-a779-6cc38306575e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60339f1b-48c8-4f3a-8d8e-6c749d5a9aeb",
        "cursor": {
          "ref": "8c1ef481-c7b4-4ddd-bf79-11680d750ba5",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "0b24cc5a-c0f2-4aca-a22b-dc2ea3632eec"
        },
        "item": {
          "id": "60339f1b-48c8-4f3a-8d8e-6c749d5a9aeb",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "42166b4f-7ce2-4b9a-9b89-9f83c59f8390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7b858c-b34f-4f0b-9694-3552abf3c9b5",
        "cursor": {
          "ref": "3b2c08f1-b541-49ef-990b-9e4f74bf8c2f",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "aa27b2a8-3349-4b0f-b2a3-0c587428664b"
        },
        "item": {
          "id": "1b7b858c-b34f-4f0b-9694-3552abf3c9b5",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "e3992170-6ba0-4fdc-b568-59fd0681198d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea901b84-e679-46e7-ac2b-7f7e39fa71b3",
        "cursor": {
          "ref": "48d9277d-a5c6-4ba2-9a0c-8339ec4f398c",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "df4870c6-60bb-4644-b90f-357c1a0f7b35"
        },
        "item": {
          "id": "ea901b84-e679-46e7-ac2b-7f7e39fa71b3",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "7797946d-a5a6-4b91-af2a-ffe54bcc9643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1cc573c-1abb-4598-b2d7-d5a24369f8ab",
        "cursor": {
          "ref": "1c214081-f044-4d56-82ab-7ff00ed1815a",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "977e31f3-00cb-46f3-b76b-e5001da87c4f"
        },
        "item": {
          "id": "f1cc573c-1abb-4598-b2d7-d5a24369f8ab",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b5a4089d-a008-4485-8719-cfd7b1d1c500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f003ed-bb59-4a25-ad1a-2230ff49322e",
        "cursor": {
          "ref": "5d860ced-462e-4232-b7b5-4932a6a647c5",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "417ff16a-e6a3-4b79-92ac-9a29e33e5b9c"
        },
        "item": {
          "id": "e2f003ed-bb59-4a25-ad1a-2230ff49322e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "628268b5-a665-4fb1-880e-d0f120151d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc224c8-9d4d-4948-bf07-a7be357fb615",
        "cursor": {
          "ref": "721a3ed7-467b-4345-8090-8d80c584df8e",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c21394b4-b8fa-4097-88d6-2856d856d1a1"
        },
        "item": {
          "id": "8bc224c8-9d4d-4948-bf07-a7be357fb615",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "5a4b88eb-2123-4603-9c54-30629c925474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49bf49f8-37b6-4fa5-b465-82b8141de994",
        "cursor": {
          "ref": "1fd74b14-a5fb-42d1-9459-e931c7d44c5f",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "2688ca68-5347-4240-8cfe-0908b550e82e"
        },
        "item": {
          "id": "49bf49f8-37b6-4fa5-b465-82b8141de994",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e0cf5b77-08ac-4f26-ae87-9fdb73991a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc68a199-db9b-4608-b28c-a0202072e223",
        "cursor": {
          "ref": "95dae9dd-d8d6-40ae-a0a7-1c8af7e3d524",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3f92c643-a6f2-4e3f-91a1-dc70c800c0f4"
        },
        "item": {
          "id": "fc68a199-db9b-4608-b28c-a0202072e223",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e3f081ee-ff68-44ba-ac1c-049329446e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21fe68ef-d7e1-44d3-82ff-9d189e9bc3de",
        "cursor": {
          "ref": "37fb4789-68ea-41aa-8321-e8ff1afe48ed",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "50ec4900-b29c-4de9-8c83-f20dc759bddb"
        },
        "item": {
          "id": "21fe68ef-d7e1-44d3-82ff-9d189e9bc3de",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ba838c4e-2e4f-4b16-bdcd-99898cc054c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "998ff125-25ef-44db-8aa0-7c53f941248d",
        "cursor": {
          "ref": "c00c15f5-ae9f-43cb-8753-0b6add0253a9",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b2967eb3-dceb-4d9f-8b90-7c56ad111610"
        },
        "item": {
          "id": "998ff125-25ef-44db-8aa0-7c53f941248d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "8e1d9392-3569-43b2-81ea-6b28f231fca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e3efe8-bc30-4e8c-8cf4-095df5fa4de8",
        "cursor": {
          "ref": "f5c70042-6ead-4baf-9bc4-6df7d6e1915a",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "0c77a48f-2787-41e6-99c4-49f72bd6f226"
        },
        "item": {
          "id": "38e3efe8-bc30-4e8c-8cf4-095df5fa4de8",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "5db7994d-00fc-4d84-bf35-9c327abd0793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa305762-a4d4-4ab2-8431-86460accdbe6",
        "cursor": {
          "ref": "f4c95b16-b7e9-4a9d-936d-5b9855a53e01",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "042f17e7-f8ed-4cee-97da-6783fb6ac879"
        },
        "item": {
          "id": "fa305762-a4d4-4ab2-8431-86460accdbe6",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "48851752-22b4-4b8a-b5ee-728c826e9a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72034b89-0c58-405c-a02e-145dae4d7710",
        "cursor": {
          "ref": "8d7ea2d0-f4e2-4d0b-8d0b-287f0a93baf0",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "32465898-548f-442b-bf4e-b75a966de24c"
        },
        "item": {
          "id": "72034b89-0c58-405c-a02e-145dae4d7710",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "5d33f5f9-a9d9-4ae4-9ef4-d9a793920d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5a0303-fd30-4cd7-9a2e-80a20a612965",
        "cursor": {
          "ref": "ece13e9d-3647-4157-9e87-57ba926b6eed",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "7bbb2648-cfde-4ede-9919-9a9ee992d34e"
        },
        "item": {
          "id": "ae5a0303-fd30-4cd7-9a2e-80a20a612965",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "ccb8b6a6-1d2f-4d00-b522-e062c173525c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e3695a8-5666-42ff-9dcc-af766383440c",
        "cursor": {
          "ref": "8f37d5b8-eff6-49cc-9911-89f2324bc7e9",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "737f1af1-0c16-4911-b81d-521c3113a0d1"
        },
        "item": {
          "id": "8e3695a8-5666-42ff-9dcc-af766383440c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5ecf7265-4190-42f4-8030-d8988188816b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06802dda-dd22-46de-af61-b596afe69392",
        "cursor": {
          "ref": "36e8de21-1c89-42fa-a55f-4c887daad6c8",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6862cf5f-384e-451c-a849-51385c8b1f77"
        },
        "item": {
          "id": "06802dda-dd22-46de-af61-b596afe69392",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "576f85be-0458-47ca-a84f-f21e1a7e96b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def29f28-2a33-40f4-9952-45a0d708ec4d",
        "cursor": {
          "ref": "3790c96c-9e5b-490d-a4a0-4a18fc0ba094",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c7a1f458-399c-42a1-bc13-657b5da222dc"
        },
        "item": {
          "id": "def29f28-2a33-40f4-9952-45a0d708ec4d",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "bd635686-1e30-4559-a8ea-5db62f9f6905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f48fea2-f100-40ca-b16d-2f09fab43b36",
        "cursor": {
          "ref": "43686b33-6ceb-4182-ab9d-47e8b410c10c",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f3b8ab24-c773-4b08-ac52-3cf3d85d8da8"
        },
        "item": {
          "id": "7f48fea2-f100-40ca-b16d-2f09fab43b36",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "cd52fad5-ae89-4971-93e8-00cfe5b9d77a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7071619-d1b2-44e7-8f82-243f433247ad",
        "cursor": {
          "ref": "ffede046-d517-4fd0-b85b-55a0fcdb4cfe",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e6954e90-377e-4b18-bb12-ca38cdfdeecd"
        },
        "item": {
          "id": "a7071619-d1b2-44e7-8f82-243f433247ad",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e57b0eb2-eadf-40da-bbc1-4911b8915e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d1ea89a-780f-4595-83c3-ed33dcc5a16e",
        "cursor": {
          "ref": "e6b44702-036e-452a-a98c-a5a9219a952a",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "766af65a-320a-4711-956a-0b00490e94cd"
        },
        "item": {
          "id": "6d1ea89a-780f-4595-83c3-ed33dcc5a16e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "5dc76c23-d819-45ca-ad1f-21aa63539905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92815b2-3845-45c5-af64-75a45c36fdc0",
        "cursor": {
          "ref": "4e3385ae-eaba-4928-9817-5d2b5db915bc",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f9a87155-37b9-4fc6-a130-2041bd5d59f9"
        },
        "item": {
          "id": "e92815b2-3845-45c5-af64-75a45c36fdc0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "65d15a08-6885-4385-8828-6ad4f2f11ce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e44df1-8395-4734-b390-0bf934d5f1be",
        "cursor": {
          "ref": "0d03538d-7d6d-4320-ac87-938ca3756ae2",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "9bfc047a-9d3e-4952-9ff0-c72445ccc772"
        },
        "item": {
          "id": "a5e44df1-8395-4734-b390-0bf934d5f1be",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "fc96d911-da49-49e2-8c2f-90e5e9a4c117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f73284-28f7-4564-b9d8-0df0d2194a2c",
        "cursor": {
          "ref": "b0682def-9705-46d8-a820-27fb432e37fe",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a82f5bfe-9865-4abf-a954-ec476b63dc9e"
        },
        "item": {
          "id": "a2f73284-28f7-4564-b9d8-0df0d2194a2c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "21bc4676-7906-4029-a108-8a0d96953415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c69ed018-c55b-4ae6-afe4-06c33129d35d",
        "cursor": {
          "ref": "9beea80f-c402-4a67-a58e-59f07bc74251",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "8c6eb8af-6e50-4d2a-8713-d389cbfee54a"
        },
        "item": {
          "id": "c69ed018-c55b-4ae6-afe4-06c33129d35d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "3583489b-caa1-4f65-bac3-ce4b6bc8007c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e013ec5d-69e2-4227-aa61-4e6c3b19106a",
        "cursor": {
          "ref": "f7964fb7-0571-4612-8acd-e2f287bdeb63",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "31f88b53-7396-4dbb-a33c-958cf8f1b6a1"
        },
        "item": {
          "id": "e013ec5d-69e2-4227-aa61-4e6c3b19106a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a74c36da-8109-40c0-a719-5fa6ff017547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39568c3d-df25-4f12-b3e8-b92787e057da",
        "cursor": {
          "ref": "09f35248-adef-4c0e-8a42-e96cd84238d4",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "6bb7e70a-f655-47e4-850f-c56a21f026d2"
        },
        "item": {
          "id": "39568c3d-df25-4f12-b3e8-b92787e057da",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a5ffe902-0d8c-418f-93f2-5b7d5b466dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff311d4-6477-46ff-aac6-51cb6c751385",
        "cursor": {
          "ref": "c6a09ccc-0833-4da6-b54a-9e17f8a1a09d",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "866ed88b-9473-4cc3-8ed4-8d2a9ddccaec"
        },
        "item": {
          "id": "eff311d4-6477-46ff-aac6-51cb6c751385",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e6ba75df-8c09-47dc-b6ee-2d9dbfab211e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc46263c-f640-49e2-82db-2202f6d929a4",
        "cursor": {
          "ref": "096a10a4-bce4-47a9-b277-5b62cc16884f",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "aab01fce-2081-445a-b2c2-085c5b644770"
        },
        "item": {
          "id": "cc46263c-f640-49e2-82db-2202f6d929a4",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8c75fe90-2b40-4cfa-85d0-4f5733c4abeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0749d284-c8bd-4ca0-8f6e-2314d8f0fa42",
        "cursor": {
          "ref": "6f076529-554b-4c82-b05c-1b4441cedb58",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "7194a264-cda2-4074-af56-fe6673636697"
        },
        "item": {
          "id": "0749d284-c8bd-4ca0-8f6e-2314d8f0fa42",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "0b2dd7eb-43a8-4906-9b6f-4ae491c4d27d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f01191dd-b305-4500-99b4-07d315325bb0",
        "cursor": {
          "ref": "a8378dc5-65f7-4a18-9469-612914be35fc",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "678196b2-8738-44c6-9be7-ccf0944392d9"
        },
        "item": {
          "id": "f01191dd-b305-4500-99b4-07d315325bb0",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b573c596-ce6c-4bc9-bf5e-e3a622d9981d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e2733ac-c9b7-4017-98a9-581cb2636b56",
        "cursor": {
          "ref": "e25e7e9a-c312-4f04-a785-6077ddcb09b7",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "58abf57f-9a69-47b8-aabd-9fa1a2432004"
        },
        "item": {
          "id": "0e2733ac-c9b7-4017-98a9-581cb2636b56",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "7c97a464-6def-4d32-b0c8-44f784155866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d46aa26-d707-49fa-b9b2-e08a00c7902d",
        "cursor": {
          "ref": "8471210d-54e6-4b51-bb6b-b8e510821492",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "09377d24-c562-4aa5-8aab-0c9d91448a2c"
        },
        "item": {
          "id": "8d46aa26-d707-49fa-b9b2-e08a00c7902d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f21db68e-03d3-498d-b332-adcc969a2765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c6d720-13a0-4e8a-8588-a3c66ae06147",
        "cursor": {
          "ref": "36e51f0c-a113-4d0c-be63-1276aca3c6c6",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f5d11ed8-2201-4703-a066-cc320809c8d1"
        },
        "item": {
          "id": "f5c6d720-13a0-4e8a-8588-a3c66ae06147",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "801d3190-bd9e-4fdf-9baa-16a57b92f9c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c34134-eafc-4c38-9b67-f1dd6a801ca0",
        "cursor": {
          "ref": "a2c589ea-6e64-4bf5-aa98-7b0c170a1239",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b24a17d7-86d0-43cc-bcd4-d55dad24e7b3"
        },
        "item": {
          "id": "22c34134-eafc-4c38-9b67-f1dd6a801ca0",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ebd499e6-cf33-41c5-9391-6ba64d8a1845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a8484a-f18b-43f5-9957-d26124b004f5",
        "cursor": {
          "ref": "c92f05a6-788c-4501-8a71-5725e322882b",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "85f4f440-8412-4e75-919f-41d205cbefbe"
        },
        "item": {
          "id": "95a8484a-f18b-43f5-9957-d26124b004f5",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "d2898c41-2435-4436-a65d-ad099ed2bbef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "700f0def-475c-4309-8b15-661d5810d0ce",
        "cursor": {
          "ref": "b1a796ca-78e8-49d4-b76c-9432ad180e8e",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "8157c85f-bdee-4aac-beff-7715032767bc"
        },
        "item": {
          "id": "700f0def-475c-4309-8b15-661d5810d0ce",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c9c6ab24-e8a7-410d-9175-14f91b2e7faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "232f4b28-218b-4f8b-81b8-4488af5494d9",
        "cursor": {
          "ref": "ecc3eea4-b187-4ab8-80bc-a61d6a55e9dc",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d23b4ac0-64a4-4054-beab-cf15b54472c2"
        },
        "item": {
          "id": "232f4b28-218b-4f8b-81b8-4488af5494d9",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "edc98ade-1b27-4485-9994-16d7f8ed7b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb853199-7032-42ee-8392-dea535d01b38",
        "cursor": {
          "ref": "08188d49-fef6-41ea-8f94-ba3755366d3f",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "72fa8be1-94ea-47e5-8a58-8fef2b7aece2"
        },
        "item": {
          "id": "eb853199-7032-42ee-8392-dea535d01b38",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "36f3ab50-b35c-460a-b652-7b5cbd2eb2b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e24bdb28-0696-4fc2-85bb-d733cc72aa64",
        "cursor": {
          "ref": "1993e363-cba2-428f-883e-a41ceffbf9b8",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "6be9e191-27ca-4bdb-ab89-c4e695c84b0c"
        },
        "item": {
          "id": "e24bdb28-0696-4fc2-85bb-d733cc72aa64",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1866c9e8-ea2c-49de-bd5e-1cd16f7b2212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c77ca486-6cd2-42b7-9046-55ead0e76172",
        "cursor": {
          "ref": "90c4863d-bf6d-4521-9549-1adfb6ef293f",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "05f6e848-8627-423a-869c-ca6ca71a9030"
        },
        "item": {
          "id": "c77ca486-6cd2-42b7-9046-55ead0e76172",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "46888b00-9413-4282-8a84-59732c493b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c20a8be-3630-438b-a4e2-9e75f6f45497",
        "cursor": {
          "ref": "389cbfa8-3cf4-4185-83e6-d0d3fa21dbcb",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b613ebc5-3e5d-4671-a839-e01be04c6b89"
        },
        "item": {
          "id": "8c20a8be-3630-438b-a4e2-9e75f6f45497",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2840a22a-9d0a-4e43-a32c-0bfce0396ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a1a981b-9981-414e-bd60-c28250510354",
        "cursor": {
          "ref": "06cab65b-0a8d-481a-9a4e-790615f5a359",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "622ba0d4-0c6f-4314-a76c-4d58a457ed06"
        },
        "item": {
          "id": "8a1a981b-9981-414e-bd60-c28250510354",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "116481d6-11a7-45d7-a882-1b9f36b4d5d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb018e9-b7d7-44c0-acbd-044d1eb0584c",
        "cursor": {
          "ref": "6e3220f0-694b-4c08-80c2-eb65c7567746",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "61e2e166-351c-4377-84b5-9014d74d7872"
        },
        "item": {
          "id": "3fb018e9-b7d7-44c0-acbd-044d1eb0584c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "30d107fb-7fed-406a-8089-44f182f11815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feaf1cd0-5701-4242-9ca4-c8ca9974074c",
        "cursor": {
          "ref": "cf29b707-63cd-4cf1-b2a6-6a78c42dcb82",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "adcca5b5-0d1e-439d-95a6-8626a9f71efb"
        },
        "item": {
          "id": "feaf1cd0-5701-4242-9ca4-c8ca9974074c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "24c0847e-1bb7-40d4-98d1-d2794374edf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac17cd08-1c8a-4ab4-8dcf-5dda133ad34c",
        "cursor": {
          "ref": "67f2e768-7055-412a-8d95-4153b5b8d121",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5ad5394c-b7af-456c-87de-0f4165f207ba"
        },
        "item": {
          "id": "ac17cd08-1c8a-4ab4-8dcf-5dda133ad34c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "55975ee3-8991-4976-9eef-2e06e9081b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 155,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05457701-5408-45b1-a2b7-4fc774931594",
        "cursor": {
          "ref": "a0fc3056-7d2e-4460-b925-a7bac5c2c0db",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "835a1722-ff30-4421-bcd6-5e5739c9bcde"
        },
        "item": {
          "id": "05457701-5408-45b1-a2b7-4fc774931594",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "70b13045-56a6-437f-870b-c39b3e89d97c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7556984f-9921-4ae9-bddf-e30096ea4d0c",
        "cursor": {
          "ref": "fa5f26ff-2e97-4235-80a2-692a2d64fa7a",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "95f6c9bc-ea62-40f5-84f7-96530b7f036d"
        },
        "item": {
          "id": "7556984f-9921-4ae9-bddf-e30096ea4d0c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "9cea8c8c-5cea-44c5-ac3d-4335727cd294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edce1e15-1a4d-42f1-9456-3e592e2bcd8f",
        "cursor": {
          "ref": "a1ecb524-7f8f-4593-abb7-b69eb89ad4b2",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "02d6baa5-3b3f-4245-8c59-dd47a867d0d7"
        },
        "item": {
          "id": "edce1e15-1a4d-42f1-9456-3e592e2bcd8f",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "e7520f5c-8ac1-4844-88aa-305cc295e444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e43a73fe-14fb-4e44-843e-52b3c5c5b876",
        "cursor": {
          "ref": "67f59a07-8acc-4949-ab5e-96a7d7ea85ef",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "51491aa3-6b86-4c72-a3da-e44be73187f5"
        },
        "item": {
          "id": "e43a73fe-14fb-4e44-843e-52b3c5c5b876",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "fd82bb2f-c27e-44ce-a439-3b77d304baea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd8a909-0539-4cc4-8f13-8b14429b1af7",
        "cursor": {
          "ref": "a3cf54e9-55a1-4978-84ce-0b202fbfa4e6",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "79bf157b-2053-442e-8679-7c5e38245141"
        },
        "item": {
          "id": "afd8a909-0539-4cc4-8f13-8b14429b1af7",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "9d2cad98-0592-4a33-a9ce-b7a32bacc55b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f96b84e-adab-4169-aa72-c01623ccf258",
        "cursor": {
          "ref": "47903aca-6689-4f8c-964e-ca3402a2cc44",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "9df8d4cd-a619-4fb8-9c02-19b33be9a2de"
        },
        "item": {
          "id": "7f96b84e-adab-4169-aa72-c01623ccf258",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "9e83e02f-cd88-48ec-a557-556c1ea9f1a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db304133-0002-4697-a26a-532bae82bbaa",
        "cursor": {
          "ref": "00932867-85fb-47c4-9d7b-5ef77e3ac590",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "dfb3c6d8-fe0b-4c45-ba1f-2084c157be51"
        },
        "item": {
          "id": "db304133-0002-4697-a26a-532bae82bbaa",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "4de25e3f-fa76-4d13-9645-1424a5e4372b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a777da0-71b2-4d3d-81cf-ef1b7183d70e",
        "cursor": {
          "ref": "c4878d7a-523d-4310-aa00-3efc458b5d61",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "17c7e669-259d-46af-8bd3-bc7f275f51f7"
        },
        "item": {
          "id": "1a777da0-71b2-4d3d-81cf-ef1b7183d70e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "e187e736-35ee-4a90-ba81-a8971744c42c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76283bb4-56df-4efd-acb0-291d2a6c9040",
        "cursor": {
          "ref": "75342d3c-5cc2-4b59-96e8-5a3665fc0416",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d4c23c34-717a-4c67-950d-76c3293f6a0a"
        },
        "item": {
          "id": "76283bb4-56df-4efd-acb0-291d2a6c9040",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "301190dd-13c2-4aa1-87ab-f5fa341691e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7aafb4b-0139-4d64-bae6-21c873981c66",
        "cursor": {
          "ref": "938c58c5-49fc-4db2-bcda-1d2a4b23afe8",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "4e9d70af-71dd-4945-96c8-1d103e25bb54"
        },
        "item": {
          "id": "d7aafb4b-0139-4d64-bae6-21c873981c66",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "1f80906a-cbea-4788-a4ed-0539d87b271f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d83e23-5837-4ae8-b069-18c3ad282682",
        "cursor": {
          "ref": "2268f0a4-f386-4055-8fa8-2fb3c56b9b16",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f817caa8-2675-4896-a41b-1adef5bab40a"
        },
        "item": {
          "id": "d4d83e23-5837-4ae8-b069-18c3ad282682",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "be903479-783c-49cf-86f3-6841b752e62a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "85844729-de6c-4e64-bcd1-939b4e0ed692",
        "cursor": {
          "ref": "2ad46bf9-582a-4f02-9a73-bf206ba8517d",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "84756b6e-61a2-4c52-b67c-c8899fcb3872"
        },
        "item": {
          "id": "85844729-de6c-4e64-bcd1-939b4e0ed692",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a632c633-5ca4-47f8-9cdf-0ce0c4ee2d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "83bb4b39-c284-4db8-8348-95f15d65d102",
        "cursor": {
          "ref": "b8b1233b-6cd8-48e4-9a07-336d83fef835",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ad3995ea-ab58-4a0a-960a-603f99e70b53"
        },
        "item": {
          "id": "83bb4b39-c284-4db8-8348-95f15d65d102",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "d6ee86a6-d28e-44fa-a257-c7bea8125d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "4f0cd22f-a0ef-4e7a-adfa-285f110eed82",
        "cursor": {
          "ref": "ee52c238-372f-4f64-a8e8-f67d89e3ab32",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "bdd06d5d-a0b7-4a5c-bacd-4bd220c3b03c"
        },
        "item": {
          "id": "4f0cd22f-a0ef-4e7a-adfa-285f110eed82",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "4010c2f8-54b5-4bf9-8efb-af35e6852ae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "d5329914-e0d8-4167-b8a9-fcbbf05bc65b",
        "cursor": {
          "ref": "4ffeb0de-1e2f-4a06-9b06-9eef90e1c84a",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "9ae87801-015b-47fb-a891-5ba2dfebb7bf"
        },
        "item": {
          "id": "d5329914-e0d8-4167-b8a9-fcbbf05bc65b",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0893e453-fd06-4b4e-9389-39c3a360f5bb",
          "status": "Created",
          "code": 201,
          "responseTime": 8087,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0327bb21-7c3e-4328-954e-7726eccd747e",
        "cursor": {
          "ref": "f9da9e54-5306-40df-8a69-aa70d3f7d291",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6166f3b4-c854-42d0-ad29-faf7ad94181e"
        },
        "item": {
          "id": "0327bb21-7c3e-4328-954e-7726eccd747e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "47393c81-1b0f-4c26-a461-f4e1eb0f3b99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "e7e95bd8-93e7-4963-88e9-2f2341057b45",
        "cursor": {
          "ref": "a7045c7e-4ee9-4367-98bd-32d90c9a35a3",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0216243d-988d-4e26-83c1-5f150d27fb17"
        },
        "item": {
          "id": "e7e95bd8-93e7-4963-88e9-2f2341057b45",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "7c58f884-6621-438d-958e-0de26837d8a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "50fac758-4d95-4cba-9652-d148530350b0",
        "cursor": {
          "ref": "ea499d02-bbaf-4fb9-b5c3-ce7b606db84c",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "25d274a3-25be-4cac-bb9d-10e01a5ab655"
        },
        "item": {
          "id": "50fac758-4d95-4cba-9652-d148530350b0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "03638b01-4a71-4d47-9fbb-f6a5c960cca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492b2086-6b4d-4587-8069-d3aa5fd4ad15",
        "cursor": {
          "ref": "db10783d-f5fc-43d3-88bc-5f80e979cf89",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e6fbc925-7788-4e4c-9e15-7a89577ef81d"
        },
        "item": {
          "id": "492b2086-6b4d-4587-8069-d3aa5fd4ad15",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5bd3c243-2928-4c2b-9248-9a3131bd3879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30759ecb-bb91-4722-8572-9d6043b6e624",
        "cursor": {
          "ref": "d779df0e-2932-4341-9892-59a91488557d",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ea07feab-754b-4b7b-a565-767ec5d5a0fe"
        },
        "item": {
          "id": "30759ecb-bb91-4722-8572-9d6043b6e624",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f8c3a2c5-de65-42c5-9cce-4e0d89be16fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "246db36a-855b-49aa-aae7-8c1a6430484b",
        "cursor": {
          "ref": "924ea5f3-5c06-442e-b795-fd03af9d088b",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "66d663f3-4ff3-4014-8525-ba3342fba7c0"
        },
        "item": {
          "id": "246db36a-855b-49aa-aae7-8c1a6430484b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2cbdffad-c551-4fb2-8a25-aec1bdb427ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5311faa6-b3a8-47e8-b151-2fe8b30efd64",
        "cursor": {
          "ref": "ed4a8499-c6e9-4646-bfd0-1c90b0678041",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d2ceb232-e059-4023-bd08-bc6218ee089c"
        },
        "item": {
          "id": "5311faa6-b3a8-47e8-b151-2fe8b30efd64",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7f0e7084-e403-4b0a-91df-8bbfc52944c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57903281-3659-458d-9448-695a84bf9866",
        "cursor": {
          "ref": "72370ed4-50d9-463b-9d11-3a6c949455ca",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "28bdc9f5-0585-4e36-a83f-d905dcf0cdd8"
        },
        "item": {
          "id": "57903281-3659-458d-9448-695a84bf9866",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "cb421597-0737-4be6-ac39-c3901474ad0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a150b5ce-dd03-4208-9515-ff63be9cef2c",
        "cursor": {
          "ref": "c8fcdb2e-3914-4b65-a2c7-b579f350953d",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e07a873b-4925-4d65-9a91-6ea3e7bbe094"
        },
        "item": {
          "id": "a150b5ce-dd03-4208-9515-ff63be9cef2c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "15e6622c-d533-4275-b460-44b8b3388ddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31c1cb2b-0c40-48b1-8e0a-133948a8d1ac",
        "cursor": {
          "ref": "df34d1e1-2858-4696-8ac4-da1124cb6cff",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "7f021bb3-4a20-4b45-a8e9-e72016fcc341"
        },
        "item": {
          "id": "31c1cb2b-0c40-48b1-8e0a-133948a8d1ac",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5e1e7bf3-4988-4ab6-84e9-abb3f3826369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0941413-c1c2-4586-a516-02f4c0a451c0",
        "cursor": {
          "ref": "4a751903-ffa5-45ea-aeca-192cb1a9bf5d",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "dfe7d62a-dd00-4197-a9bf-3d7dd479746d"
        },
        "item": {
          "id": "f0941413-c1c2-4586-a516-02f4c0a451c0",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c10328a0-578e-4ca6-9d2a-1be93f1f0b91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f74a3b-1a78-4a81-95ef-5fba621c6537",
        "cursor": {
          "ref": "69abf2fe-0811-467a-a10a-fdb6fc2d00ee",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e36885c1-07ad-437f-bc49-6749d0db8606"
        },
        "item": {
          "id": "b2f74a3b-1a78-4a81-95ef-5fba621c6537",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c1618ebb-3c69-4e8f-b4f0-c45d664b50ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df08d80b-9938-4fb5-b120-957fca965dab",
        "cursor": {
          "ref": "4e4f464a-49d4-4053-a337-273ec7720287",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "11a2ae63-631a-48b4-8144-b92f1a280bc9"
        },
        "item": {
          "id": "df08d80b-9938-4fb5-b120-957fca965dab",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d868b103-7e94-4518-a69a-cf5e1c82acbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "608c2634-2627-4f0d-8945-0afd9f99c6c4",
        "cursor": {
          "ref": "c70bbff5-4bc6-4cd9-b081-5c2d687eed92",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a1dec173-4118-4946-8740-83be41b85262"
        },
        "item": {
          "id": "608c2634-2627-4f0d-8945-0afd9f99c6c4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f3415dfe-c9f9-47c3-a984-faf634546b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 985,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b75ad4-4fb8-489c-b2ce-00c33ef43f8d",
        "cursor": {
          "ref": "8427c056-ff7e-4dce-9c0b-e5bc3e03ab48",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "64cefd69-2dda-40c5-8d6d-33bf0c6d4241"
        },
        "item": {
          "id": "88b75ad4-4fb8-489c-b2ce-00c33ef43f8d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b3c2307e-03a7-44c0-89ef-7bc15dc3954e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4653e3ec-c576-4ff7-b9de-e05a99454528",
        "cursor": {
          "ref": "8d224ff2-5663-4a41-a277-1adba399b046",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "5881db15-6a7e-416d-9612-de934097dc77"
        },
        "item": {
          "id": "4653e3ec-c576-4ff7-b9de-e05a99454528",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "566bdfc7-a637-41a5-88b5-33bde6ecf50c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae70369c-dd17-4b3b-a561-c1e0b18c8e08",
        "cursor": {
          "ref": "332e9ea7-d360-4aae-8241-27c1585a5042",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5a4a68e1-9e4e-4be7-b30e-e27593f85cef"
        },
        "item": {
          "id": "ae70369c-dd17-4b3b-a561-c1e0b18c8e08",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "30cd0681-bb63-47ae-b7dd-3f4cf181baf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "563db956-f052-4cd3-acf1-d835faa2068d",
        "cursor": {
          "ref": "c6ef9137-db8f-4736-8a69-e2f5ad8fa720",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "da46eb98-5cdd-4af4-ac46-87eab181131a"
        },
        "item": {
          "id": "563db956-f052-4cd3-acf1-d835faa2068d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ff95e4fd-f40d-4215-821a-4b51f356fd58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1185593-6de6-4fe7-9563-f83120a7219b",
        "cursor": {
          "ref": "4b79e223-2609-45b3-a76e-62ce61a33217",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "263c8b85-2cdd-4bb7-96e8-4e33d2cdc9f6"
        },
        "item": {
          "id": "b1185593-6de6-4fe7-9563-f83120a7219b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0445378d-c042-4be1-beb2-22b12c842522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b0950e-90a9-47a7-aba4-b9d2c242353f",
        "cursor": {
          "ref": "a1577d13-79fc-4efe-a469-54f59ba7f0e8",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "ef761344-f53c-49ca-a050-b16291e4d5c9"
        },
        "item": {
          "id": "e2b0950e-90a9-47a7-aba4-b9d2c242353f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ab11e218-9d22-4a52-b0de-723a033de72a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "069d5211-5802-465f-942d-3d44876fb983",
        "cursor": {
          "ref": "29deb4d6-4b9d-4e92-901e-28c7ba696d48",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3eb377de-e8a3-414d-b07e-ba9a909a73b8"
        },
        "item": {
          "id": "069d5211-5802-465f-942d-3d44876fb983",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5ff980f2-49fc-407b-b34e-5e813a1e5fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49e8edd2-1690-4543-ab3c-b7b7d442d36b",
        "cursor": {
          "ref": "49d4171d-e57f-449f-bf20-8241b8f1424d",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d0d99ce5-37bb-47f7-a60d-df0f8d5c0e79"
        },
        "item": {
          "id": "49e8edd2-1690-4543-ab3c-b7b7d442d36b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "57e5e1c8-1959-455c-bb04-c09e84ab309f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a4bf924-0fc1-4835-9e6c-126bebe8d79b",
        "cursor": {
          "ref": "6f867816-e047-4328-a302-f21d416c2e49",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "223243d5-e3ce-44f9-aa6b-79d76e38456e"
        },
        "item": {
          "id": "1a4bf924-0fc1-4835-9e6c-126bebe8d79b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c86b47fb-4238-47c5-93ce-fc3e444c8129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "260215cf-389a-43f0-b296-505d1f0f5dc9",
        "cursor": {
          "ref": "9e64fb6d-8a9c-4a85-855a-669130969df4",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "5dba2678-e8f1-4883-a117-ca508387de32"
        },
        "item": {
          "id": "260215cf-389a-43f0-b296-505d1f0f5dc9",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7eb2937f-e2ba-4159-b549-7c3268fffa7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27865116-d152-4bec-8447-03bb886dac1a",
        "cursor": {
          "ref": "af07f4be-99b8-4c26-b311-d1aa78d0d35c",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "063b3e93-629f-4a5f-838e-73955eb99848"
        },
        "item": {
          "id": "27865116-d152-4bec-8447-03bb886dac1a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e23555a9-b8fb-437b-8315-473ae5e8b78b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a17fbe9-046d-430e-9731-bdd6e3bc0649",
        "cursor": {
          "ref": "514964ca-7426-48fa-bda8-abac385ce7b2",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "49e34b0b-e1f6-4045-9b27-1ea930fd8629"
        },
        "item": {
          "id": "6a17fbe9-046d-430e-9731-bdd6e3bc0649",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f49b13a6-2ee3-4495-b562-6ab059b32fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "801e6a7c-3c15-4481-959b-9db084028de1",
        "cursor": {
          "ref": "bfb43074-1254-419f-aea7-08dab59c65a6",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "9fa25999-b6a9-4283-8f0d-a69df801e1d6"
        },
        "item": {
          "id": "801e6a7c-3c15-4481-959b-9db084028de1",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8b6257bb-800c-44b6-9395-12e1d5c2f2cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f4c08a5-e0df-44f6-9f33-a75fc692c694",
        "cursor": {
          "ref": "48cca634-2177-409c-a8fa-4ddd63ee4cfc",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f8a0c8e5-85d3-461b-b4e0-2b7b7859c789"
        },
        "item": {
          "id": "0f4c08a5-e0df-44f6-9f33-a75fc692c694",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d700e6e3-f952-4038-b1c2-9a6e923026f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d7ce81-6ece-4556-91f8-19b045292272",
        "cursor": {
          "ref": "7b59e382-dd1e-43d4-8dff-8bae9513d2a9",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ea919ecf-9b78-46fe-b430-dbfc1333dcb2"
        },
        "item": {
          "id": "27d7ce81-6ece-4556-91f8-19b045292272",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "849e4bfa-aa6e-48a6-9ed3-5cccd55c7e5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa94ddc8-d0c9-44a1-86f6-472e869d01bf",
        "cursor": {
          "ref": "e5cf990e-c294-4ab2-9f60-4b824c3c8fed",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f4148008-2a3d-4e42-b423-bb40837aa5e4"
        },
        "item": {
          "id": "fa94ddc8-d0c9-44a1-86f6-472e869d01bf",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "cf2cd68e-2a87-4e62-baa5-234cfc607f4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36ecac11-813e-48fd-ac0b-9202b485d0f5",
        "cursor": {
          "ref": "03780bcd-b951-43c6-b33a-5c05b7e07713",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c5ed3b2b-a513-4080-ba9b-32fbc7a0d028"
        },
        "item": {
          "id": "36ecac11-813e-48fd-ac0b-9202b485d0f5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7f7a52c9-72cd-4a54-a99b-af7e60157184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5cd6228-a0fc-43fc-869f-12a105722198",
        "cursor": {
          "ref": "17dafda4-e451-4c02-8219-90dea9ae03c1",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "585f8d42-1450-4c49-b935-738bb1627754"
        },
        "item": {
          "id": "d5cd6228-a0fc-43fc-869f-12a105722198",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "bb1b1d8d-b798-4dbf-81c6-431fad1c8deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bb3992b-2888-4a8a-a3d5-5b408fa8535b",
        "cursor": {
          "ref": "ca962830-e876-4262-bce8-59bfeac19a23",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a6cca911-9819-47c2-8dbb-e1d4efabdb51"
        },
        "item": {
          "id": "4bb3992b-2888-4a8a-a3d5-5b408fa8535b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6fae63c3-95cb-4e58-8014-be66c79401df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f845ff33-88e0-4aa9-be8e-42534e28b289",
        "cursor": {
          "ref": "b21e20b3-0bdc-484b-869c-1b967a502703",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "af6d9ea7-19ba-40a3-a4c7-4249335d2358"
        },
        "item": {
          "id": "f845ff33-88e0-4aa9-be8e-42534e28b289",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "fc641d42-8415-4dec-a222-92ddeadefa78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb601c8-c3ab-40ab-bc91-d78ff457a78c",
        "cursor": {
          "ref": "7aa687d1-b003-4c79-b7ed-d268f9e00406",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "3ba3148b-fd1f-4803-acf2-c34474535261"
        },
        "item": {
          "id": "1cb601c8-c3ab-40ab-bc91-d78ff457a78c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7d8b2b5a-b424-4115-ad9d-9890c90d2e18",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7004f62e-5ca2-4b8a-83c0-833b9c2566e6",
        "cursor": {
          "ref": "0c56a2d7-ba07-4ace-a77e-ff49787c4652",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c7c5ad08-10f1-4fe7-b8ec-4b5e4a552696"
        },
        "item": {
          "id": "7004f62e-5ca2-4b8a-83c0-833b9c2566e6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b36e3b6c-f93d-4dcd-8fa6-7a0ac4d4d756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3619465-348d-40d7-b141-c12c9125ad2e",
        "cursor": {
          "ref": "7901896b-b093-4258-a163-0645850fe21b",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c5d94358-11eb-4d01-b18c-3c522697a9e7"
        },
        "item": {
          "id": "b3619465-348d-40d7-b141-c12c9125ad2e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1ac8c18a-5abb-4d61-8c5e-a4cd4290cae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7278f053-1c27-49f7-9ae8-d2f9b53a6bb4",
        "cursor": {
          "ref": "303e6275-6039-4bf4-8239-912427c8972e",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c3c6bda1-ab62-422e-abc6-b48ee1b1082c"
        },
        "item": {
          "id": "7278f053-1c27-49f7-9ae8-d2f9b53a6bb4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "44728833-af67-4433-b4d0-cb0711060e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16498633-e3db-4b4d-8b8b-a208c56d7e7d",
        "cursor": {
          "ref": "ad5e3968-80c0-429b-b6bd-17ffd18fec26",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "724d8558-400f-4d9a-9b67-dac1a0366016"
        },
        "item": {
          "id": "16498633-e3db-4b4d-8b8b-a208c56d7e7d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "69c52db5-ed2e-4b1a-919b-122c630361ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0bed2f0-8c0f-40a4-9b32-f793f8b14822",
        "cursor": {
          "ref": "bcc5860e-8190-4fa0-bca7-b89d18f2eb97",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "bf10150d-2bd0-44c1-8e5b-3310859843c1"
        },
        "item": {
          "id": "c0bed2f0-8c0f-40a4-9b32-f793f8b14822",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "43f02f6f-8f23-4f70-b506-8772b1fa219c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf847fa-44dc-4651-a087-977e97ed7734",
        "cursor": {
          "ref": "0cdd9549-b73f-4b52-b5b7-47455d6690c5",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ddc4244f-c9db-4324-a07d-dd99d485fdee"
        },
        "item": {
          "id": "7bf847fa-44dc-4651-a087-977e97ed7734",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "fe38ef75-46d2-489a-8610-2b653943219d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a469146-7a31-42c5-b18e-0a7b64032c48",
        "cursor": {
          "ref": "c64e39ba-725c-4ddf-8669-520b8482be4f",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "74746b71-6748-43ea-a1ff-37a8a4bcabff"
        },
        "item": {
          "id": "4a469146-7a31-42c5-b18e-0a7b64032c48",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b9ff8434-92d6-474c-aa6b-4c177c86b785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62dd10ac-fffd-441f-9af5-f9cab6365abf",
        "cursor": {
          "ref": "2ac1d08b-6b52-494c-b114-78a2dd9b40f5",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f5f50d54-2a68-4c72-b060-8ff7aa8a9374"
        },
        "item": {
          "id": "62dd10ac-fffd-441f-9af5-f9cab6365abf",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "27e608d8-e935-4d26-805a-5c7cd48ae495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "642cd687-a3ad-4bdf-b8e6-b58a8ae96bda",
        "cursor": {
          "ref": "d6577cb3-fdcd-4f77-92ac-a768871dda65",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "552fe64b-8b2a-46cb-bb60-3bf5936192b5"
        },
        "item": {
          "id": "642cd687-a3ad-4bdf-b8e6-b58a8ae96bda",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "71c8ae1c-18ba-4662-851e-9fede646357c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91be2a8b-152a-46dd-a012-1261a35d0c12",
        "cursor": {
          "ref": "4bb8521a-0ae4-41c4-855e-2739cf6f1b14",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "86ae6b30-48b4-405c-b42f-fc5ba03f9e7e"
        },
        "item": {
          "id": "91be2a8b-152a-46dd-a012-1261a35d0c12",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "752d83e9-b90d-46bc-8e26-35146e02a725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb79c6c4-66e2-4ee9-a711-62f4c2811850",
        "cursor": {
          "ref": "dd67cdad-352e-44c8-8ae1-89db5f6ab2ea",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c5fbf7ce-1b76-4f6d-8dcc-87538fa67e70"
        },
        "item": {
          "id": "eb79c6c4-66e2-4ee9-a711-62f4c2811850",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "adef1668-3502-4bc1-878a-06a93872915e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "682ca7a1-09ed-4a96-8686-23277f9ce322",
        "cursor": {
          "ref": "8921fc36-fb58-422a-8ba0-75fd81fb9642",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d1d59451-79d8-498a-b278-c8ddb4dd7973"
        },
        "item": {
          "id": "682ca7a1-09ed-4a96-8686-23277f9ce322",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5fab2703-a8cc-4003-9d84-ea0169e5eaf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b76a60c6-aa98-4e70-ab9c-436fa7f90522",
        "cursor": {
          "ref": "972a32f6-ec54-4f4c-abf2-3755b09755e3",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "cea8b7c7-5e48-4e73-821f-4ea07e1a18fb"
        },
        "item": {
          "id": "b76a60c6-aa98-4e70-ab9c-436fa7f90522",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e7139441-8f98-4785-959b-353f0a93d733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b94a6942-1557-48cf-b77e-7e32dcf1ad5f",
        "cursor": {
          "ref": "c5e6de3d-8931-46a4-8632-07eba8f6cff2",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "6ffbda51-a841-4d04-b1d4-505c1bee7ea2"
        },
        "item": {
          "id": "b94a6942-1557-48cf-b77e-7e32dcf1ad5f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "91aa48db-a614-4720-9d29-b758b028ed9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe06200-60fc-400c-b119-32f1b53dbddf",
        "cursor": {
          "ref": "a7d50794-015b-44d9-bb91-22ff5082935e",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "358e1eaa-2500-4e84-992a-4e9b59f227a3"
        },
        "item": {
          "id": "3fe06200-60fc-400c-b119-32f1b53dbddf",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0e5fd657-65de-4ccd-b482-ad313d99371c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc49e5d-ff3e-4df8-86ea-33fe4e204743",
        "cursor": {
          "ref": "cb79d720-6d04-4c29-8369-c7ef685fd629",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "8cae74d3-7a19-4f41-aa9c-c2eefabf1af5"
        },
        "item": {
          "id": "efc49e5d-ff3e-4df8-86ea-33fe4e204743",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "958aa2fb-d360-4107-87ff-5f2d484acdc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb1c8975-ae58-41f1-ae1a-a1e5c31b5375",
        "cursor": {
          "ref": "f63aa376-1f8c-45fe-8858-979969ce19b3",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "6045d6e1-40a9-4a67-91d0-12eacc61e937"
        },
        "item": {
          "id": "fb1c8975-ae58-41f1-ae1a-a1e5c31b5375",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "cf9bd4f9-4da7-4125-92ce-a8c4e1b20dfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c27744f5-c750-40f0-8158-a7bc06519ae5",
        "cursor": {
          "ref": "17940ef1-166d-466d-b9c2-bce042566532",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "252e8e89-a798-41c0-99b9-60d891a8c95a"
        },
        "item": {
          "id": "c27744f5-c750-40f0-8158-a7bc06519ae5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b7f44220-b13d-4ca0-bfa1-109af4eb402c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d66868-5dfc-459c-9c77-483d60e0f2d4",
        "cursor": {
          "ref": "fc13b3d1-fcd6-4ffd-93c5-28dc341368a2",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "a64fc314-05ed-4230-b66f-1618eb8c0988"
        },
        "item": {
          "id": "e2d66868-5dfc-459c-9c77-483d60e0f2d4",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "badaa042-22a3-4ba6-aeeb-567b301ddd05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b2d2fcf-d30d-4bb7-9549-d7ebd908253c",
        "cursor": {
          "ref": "349163aa-bf9f-4b71-a616-37d239479997",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d891c882-32ea-4be0-9463-d269c24209f3"
        },
        "item": {
          "id": "4b2d2fcf-d30d-4bb7-9549-d7ebd908253c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8197a5d5-76f1-4a3e-ba7f-7f4c496bd642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de90e21-a906-48b0-b440-7fc699e4b275",
        "cursor": {
          "ref": "2c3c7842-15a7-4063-a8a8-f9d8ae331ee4",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f4735cc4-c820-44af-a79a-63ace4505a4d"
        },
        "item": {
          "id": "7de90e21-a906-48b0-b440-7fc699e4b275",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "49350578-09ed-4428-b515-5904853215a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4c92d7f-8091-4bd5-8041-f1303098d87b",
        "cursor": {
          "ref": "1a92f756-eddf-4312-b2d4-61835418c029",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "36be3d30-1c2e-48cf-9fa4-c8f614fe1a3e"
        },
        "item": {
          "id": "d4c92d7f-8091-4bd5-8041-f1303098d87b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "84582d47-967a-48c3-83d8-19a91cae1f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2313efb3-345b-480a-ba86-6bc702fc8588",
        "cursor": {
          "ref": "9c71a4ca-1eae-46b2-b79b-d6a0cc678223",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b3ade003-365d-4919-8993-0fdab7adc774"
        },
        "item": {
          "id": "2313efb3-345b-480a-ba86-6bc702fc8588",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3e6bde46-8531-4fd8-9162-df5ea53bf71b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "147e7477-9dcd-4ee9-b699-f791efbf5ca6",
        "cursor": {
          "ref": "47a3be8d-5b07-42ae-9915-460c5c18e103",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "6f90e4f6-400a-4789-822b-cff472bc2a16"
        },
        "item": {
          "id": "147e7477-9dcd-4ee9-b699-f791efbf5ca6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f14d4489-7b10-4eb7-bc40-97e5d95a1890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21babb96-44b8-43fd-9acb-a25a0be1da04",
        "cursor": {
          "ref": "10ba8546-ef3c-4d24-8f05-31e966ea774f",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "696b6a50-2c81-42d5-a8c3-20717fc3fbd3"
        },
        "item": {
          "id": "21babb96-44b8-43fd-9acb-a25a0be1da04",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "143eb5ac-2681-4486-a603-6f1204b18ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074df1a2-36a2-4c6d-ad92-7e3a6f7faec6",
        "cursor": {
          "ref": "c8b06c5f-f833-406a-be45-c288352f3b5c",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c3e66813-2529-40f5-b45e-e70167ecf017"
        },
        "item": {
          "id": "074df1a2-36a2-4c6d-ad92-7e3a6f7faec6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "41d77b5e-42b6-4152-ac2f-c0f03335b5e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba8d3a3-7c4d-4098-a721-407b180cdedf",
        "cursor": {
          "ref": "8645aecc-e341-4221-ad63-1c4c7492bed2",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "0c56c15f-fbf2-444f-b74e-5b354adcc33c"
        },
        "item": {
          "id": "5ba8d3a3-7c4d-4098-a721-407b180cdedf",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "254bcfa6-0363-4e19-a5d3-1927e9d988eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db42a228-4ccc-448c-8f5d-885bdbe1d979",
        "cursor": {
          "ref": "6d89af13-26a9-46d8-a4b6-567ca455d581",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "876942fc-cadb-42a2-ba65-29f4523de01f"
        },
        "item": {
          "id": "db42a228-4ccc-448c-8f5d-885bdbe1d979",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b945becf-5386-4006-8884-04ae5dfa1c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b49497-2026-408d-8778-4884120f8b92",
        "cursor": {
          "ref": "b013d156-b929-4cfb-a382-fb0022d88ef8",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "58271cbf-9860-4886-aee2-5bc88977807b"
        },
        "item": {
          "id": "02b49497-2026-408d-8778-4884120f8b92",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "365d8a68-ae92-4a69-9b39-165b0d74133e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f53f7ef5-4bdb-4a61-98b6-14b265ebbf84",
        "cursor": {
          "ref": "6a89ac4a-c54c-4413-9fd6-7a3cfb0eaa33",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5f21ae34-fdec-4d79-a06b-3df55aac8230"
        },
        "item": {
          "id": "f53f7ef5-4bdb-4a61-98b6-14b265ebbf84",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6497b1a0-4aef-4c20-beda-9d1cfed804ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e271b6c3-ad3f-4509-99b0-283f991f9355",
        "cursor": {
          "ref": "7f19d62e-a62f-4ec3-b5ee-89357c657d11",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "098dbded-e6f8-4bf3-a39d-5000d7b1035b"
        },
        "item": {
          "id": "e271b6c3-ad3f-4509-99b0-283f991f9355",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "59a1a560-1047-4e2d-8b17-eec4d9ff8b3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e4b8889-f66a-44be-8e7a-149faa57b3c3",
        "cursor": {
          "ref": "37b4f40e-be8b-49c9-92b2-5f7e51eaed43",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c37df68c-9bb7-48f6-94a5-3a92bba5b5c4"
        },
        "item": {
          "id": "7e4b8889-f66a-44be-8e7a-149faa57b3c3",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "00546c9c-1fc9-4312-9cff-9715d73cabbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d26eea3-e1aa-4513-bd41-f58f1ad07a5c",
        "cursor": {
          "ref": "19e158cd-6694-454e-b18d-a48be06f7029",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "7b419e67-53a4-4071-ac21-69e8bd4ad6bc"
        },
        "item": {
          "id": "0d26eea3-e1aa-4513-bd41-f58f1ad07a5c",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "cf3c9354-61bc-4506-8606-fb8aba720f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45f31858-6daa-42bc-a62d-ce19d782a18e",
        "cursor": {
          "ref": "129967b0-fe29-4eea-87d8-f4014152add6",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "0a40d97d-4ab3-4b87-b3c4-babc4a9fd693"
        },
        "item": {
          "id": "45f31858-6daa-42bc-a62d-ce19d782a18e",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "18a77168-6eca-4713-a04c-eed649d171a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e97bc751-285d-4012-9eab-255e163b95f5",
        "cursor": {
          "ref": "96f57b0f-1151-47e3-aa4e-731a0bf9b6a9",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "1ab97186-daf0-4307-9242-9cb79bb66702"
        },
        "item": {
          "id": "e97bc751-285d-4012-9eab-255e163b95f5",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b543e829-d29c-4af7-b9a8-58dff94bf0ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd99541-b674-4bc7-9b63-09b563557713",
        "cursor": {
          "ref": "0f9fad33-1956-403b-bbe6-09137e16540a",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "fc861612-1ea1-4298-8f0b-decfd379e9c4"
        },
        "item": {
          "id": "7dd99541-b674-4bc7-9b63-09b563557713",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "2e5847d8-f63d-4005-9405-e23912d77255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a0bb0f-dc70-48b8-88c0-28efe3cfa3cd",
        "cursor": {
          "ref": "37989eed-1856-454d-8c72-a274f03f71d5",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "20f45414-82e0-494e-8f89-bd6d1dd7b604"
        },
        "item": {
          "id": "82a0bb0f-dc70-48b8-88c0-28efe3cfa3cd",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "ba7cb35b-1dc9-4d5d-98bf-b12939793673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27444120-8108-4c95-8edf-cc0d0991206b",
        "cursor": {
          "ref": "b27a69e4-b55e-440d-b93d-1d6d2fa5fbb9",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8dbb0b31-362f-4957-bcbd-cfb69a40f168"
        },
        "item": {
          "id": "27444120-8108-4c95-8edf-cc0d0991206b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b1e096b5-af0f-4657-83dd-895c5123211d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e9c676-ff08-497a-8bd9-9c9585743d9f",
        "cursor": {
          "ref": "2d5490a2-213c-4045-a7ec-894a2cc5c1b7",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "130c3e73-011d-4cd0-b134-ae2bfed77c69"
        },
        "item": {
          "id": "f3e9c676-ff08-497a-8bd9-9c9585743d9f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7885a850-2948-437a-8b48-668577a42690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e271070-0ab3-4e21-bd42-23af2be05b03",
        "cursor": {
          "ref": "cf0cd2e5-dce7-410b-b6e7-9ed63deb9142",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "880e4867-ec4a-4781-8307-ad6102f7793a"
        },
        "item": {
          "id": "7e271070-0ab3-4e21-bd42-23af2be05b03",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9c27da72-b374-4fb9-873a-559f962fd6c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc9ef19-bcb3-4478-888e-f3b67abd20c6",
        "cursor": {
          "ref": "3d04e455-dd43-46a0-8452-ab37ffc8d88a",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f40893b7-312d-4483-8926-d217ce0d70bf"
        },
        "item": {
          "id": "abc9ef19-bcb3-4478-888e-f3b67abd20c6",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1c1a784c-d89a-409f-9bb5-c50c7e44c711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c10f45-cd76-4b55-9c27-f08e8f5e8e9a",
        "cursor": {
          "ref": "a90ce8c7-00be-445f-bb03-bc73d7662d88",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "b76a43d9-d0ed-48e6-bf8f-d68a3d628759"
        },
        "item": {
          "id": "a1c10f45-cd76-4b55-9c27-f08e8f5e8e9a",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "481e18d3-a834-4c3c-b27b-69dc7c43d67a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e9c7b4-5007-4292-a1fc-ff82c9976cea",
        "cursor": {
          "ref": "53efc9ea-f167-4a1b-8289-86ed7f7a9bfc",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d7071391-079f-4e23-9cf1-d0f6fda8839d"
        },
        "item": {
          "id": "d6e9c7b4-5007-4292-a1fc-ff82c9976cea",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f3eb4cce-00f8-45d5-b606-7b499143ec4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f235134f-b4da-4179-9312-8f9312153ec2",
        "cursor": {
          "ref": "84269306-c01c-4d73-b12e-26e10a512d9e",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "1a93214b-8dc2-4853-9507-b9a39519de35"
        },
        "item": {
          "id": "f235134f-b4da-4179-9312-8f9312153ec2",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "6c4331cc-49c9-4401-a344-41c5d0a7eb72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d907aa4b-1d61-4416-8094-cfd15535c618",
        "cursor": {
          "ref": "1d306e4f-3667-418c-8c01-79e867436af6",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2f5fe570-0e95-41dd-b6a7-4d2d2259f6aa"
        },
        "item": {
          "id": "d907aa4b-1d61-4416-8094-cfd15535c618",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "2bbe4cfc-054a-4607-b25f-8f1805913f73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05cc428c-a30f-4c15-8d66-8b79da786439",
        "cursor": {
          "ref": "c412f09a-b1ee-4160-9191-19ba3ff63b2a",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "caf0a797-66ec-43c8-bbf7-09a6bfc6bf8e"
        },
        "item": {
          "id": "05cc428c-a30f-4c15-8d66-8b79da786439",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "42437794-9b5c-421f-905a-bf4bcbbf9993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48ef1ffd-0e90-471b-8f6a-c9375ec1b7cc",
        "cursor": {
          "ref": "5103571f-06ca-42da-b48c-0515f887d7e3",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "26e60850-dcac-4ac9-a06e-d4464fb896b5"
        },
        "item": {
          "id": "48ef1ffd-0e90-471b-8f6a-c9375ec1b7cc",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "6ab2fa63-5326-424b-937a-cbea0b9b22f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b00405-4710-4525-8856-d0fc328b8707",
        "cursor": {
          "ref": "3a2edf05-0ce1-4f05-bb99-ebc449ba5185",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "738431f5-aaaf-4a81-85cb-114325b1459b"
        },
        "item": {
          "id": "96b00405-4710-4525-8856-d0fc328b8707",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c75cb2c8-15f4-4b9c-89ac-98ebb24aa741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91d168d-9eaa-4805-a3b9-837ae5479534",
        "cursor": {
          "ref": "66952b9e-3dbd-4c3c-8127-d47aab4d75f9",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e0285569-5f5b-49d1-ae80-426d6de25d22"
        },
        "item": {
          "id": "a91d168d-9eaa-4805-a3b9-837ae5479534",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "9f95cde1-6490-41f7-ad71-08493f91d4b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41526e03-89cc-4f0a-81eb-620122422f3e",
        "cursor": {
          "ref": "ef8b5c5b-63b8-472d-9d74-e4e4f79033b7",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "3b3e815c-0bda-44c4-a10c-f0284ea8f1b0"
        },
        "item": {
          "id": "41526e03-89cc-4f0a-81eb-620122422f3e",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b2b9d6fa-f76a-448a-a5bd-2fb77c1129e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf3ab45b-02a3-470f-b5e9-975c354a2df7",
        "cursor": {
          "ref": "c27604c9-e351-430d-a840-4f85e50e22d0",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "5e2fe5ec-f72c-459e-9dbd-b0862f5bc0d7"
        },
        "item": {
          "id": "cf3ab45b-02a3-470f-b5e9-975c354a2df7",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1dd51d7e-3e87-4df6-9992-d72081cee2a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22fa7540-6f92-4ffe-9bf5-684c992da7c4",
        "cursor": {
          "ref": "dfb1f6da-a4cd-4b4d-bc19-b872d49042ee",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "aa7bfd9a-a6a4-4820-bdc5-f1bf2f267c1a"
        },
        "item": {
          "id": "22fa7540-6f92-4ffe-9bf5-684c992da7c4",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "474534e0-1f86-4e4a-9be1-d821d45a4c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "368a5baf-bfa6-4827-8079-b88d70e6890f",
        "cursor": {
          "ref": "0a4f907d-a79e-482b-9608-e1fbeeeb5899",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "78ff7270-b0d7-4115-80f5-b6da1fb0a7e0"
        },
        "item": {
          "id": "368a5baf-bfa6-4827-8079-b88d70e6890f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d801fbf3-05ce-4434-a4bf-54f3e61c8201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94cabe46-2daf-424f-8c6a-0de7fb22f8a7",
        "cursor": {
          "ref": "e7aba462-2f9e-46dc-bb47-c1895cfa4b34",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "08c6d663-a65d-4cee-8bad-7bd1c2b61707"
        },
        "item": {
          "id": "94cabe46-2daf-424f-8c6a-0de7fb22f8a7",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b7b22803-ad02-445e-a6ea-c0356fed85d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a72ea545-c9af-472d-8fd1-e2a7228ee542",
        "cursor": {
          "ref": "a13680fd-2bc8-4e67-b280-0b4955395e6b",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "04817c45-0d67-4a9d-a96f-b29bd2a57dca"
        },
        "item": {
          "id": "a72ea545-c9af-472d-8fd1-e2a7228ee542",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1aa758bb-c2c9-4c75-ac1d-4a6a9cf01fe7",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "f587adbc-7382-49b8-b144-90873577143d",
        "cursor": {
          "ref": "f64abaf9-9595-498c-87ba-d64ff61b6c88",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "8645286f-0660-4999-ba73-726ce6ed1276"
        },
        "item": {
          "id": "f587adbc-7382-49b8-b144-90873577143d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "7cb71087-fee0-4fb2-a9d8-679712186ea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a63dcf8e-10dc-4657-8c24-0a6b2f1f921a",
        "cursor": {
          "ref": "dfe04764-0bed-40e3-8765-ce2fe437601b",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e3529243-c62f-4c70-b230-c7676bfb79a6"
        },
        "item": {
          "id": "a63dcf8e-10dc-4657-8c24-0a6b2f1f921a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "7d5a1b85-c1cc-4687-9065-1f1cfe379c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a077e21e-9f04-4b39-b778-bcafc784351c",
        "cursor": {
          "ref": "52693cfb-dd5e-4fa2-a877-68f868a72f77",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "5cc8b9ff-3b58-4281-b27a-af3882c63530"
        },
        "item": {
          "id": "a077e21e-9f04-4b39-b778-bcafc784351c",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "05b6326b-94c1-4f95-adf1-e5936b4eae4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "767c0f00-5d1e-44c9-be6d-19ee61c86b98",
        "cursor": {
          "ref": "d84b6c10-44fc-480d-9fbf-19e2f132aea9",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d4ef020a-5228-49ea-a58f-ab74f7e2fd7e"
        },
        "item": {
          "id": "767c0f00-5d1e-44c9-be6d-19ee61c86b98",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "6823599a-0cc0-4736-9381-8aa3a7aa5e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f6069a-62d8-45dd-9d0c-40aea0b91a75",
        "cursor": {
          "ref": "ab2f7204-4831-4665-9dba-3d7f9c7bfb1e",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "472118f0-693f-42ca-a242-49b6ea1a3f1e"
        },
        "item": {
          "id": "32f6069a-62d8-45dd-9d0c-40aea0b91a75",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f20f4c42-eb8a-42c5-85ed-ac6479ac4dd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ebcf2d-968d-4f21-b8f4-6a886f6da0a5",
        "cursor": {
          "ref": "42794e03-d76a-424f-8a69-2eddca8fc4fe",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d8bfd60f-86ee-4d9a-9c02-36740b5dc9ab"
        },
        "item": {
          "id": "99ebcf2d-968d-4f21-b8f4-6a886f6da0a5",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "eb9c6700-58e3-4395-b08b-45f9ca44a4a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adde6ea4-65bd-4e06-924a-790f1bb5dd65",
        "cursor": {
          "ref": "f46bf66a-7424-4e02-8f6e-92fe43b6a83a",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "24b1e7fe-fa7f-4c7f-8772-bd45841fcf11"
        },
        "item": {
          "id": "adde6ea4-65bd-4e06-924a-790f1bb5dd65",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "18acb169-cada-4d82-9f18-1109aff9a1ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6abba6f3-7814-4db6-9636-e21a14cd4273",
        "cursor": {
          "ref": "a973a23b-288d-401d-97b3-a77ab24aa58b",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "bef0aea4-8baa-44bf-8e7d-104e392452c5"
        },
        "item": {
          "id": "6abba6f3-7814-4db6-9636-e21a14cd4273",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "3e781f70-1eba-466c-bf74-bea06abb6281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e12c210-248a-4d5e-ae7a-b83037de5649",
        "cursor": {
          "ref": "ca7e4642-c296-4b54-b6da-56fe0aefac06",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "15e039e8-4bed-4494-9c8c-453038539bc5"
        },
        "item": {
          "id": "0e12c210-248a-4d5e-ae7a-b83037de5649",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "98a491a8-6bcd-4696-8373-b090aff4a953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a77aa2-e46a-451b-a4aa-2fb15d25eb1d",
        "cursor": {
          "ref": "9847a70b-7873-4554-8b42-6f39be6b4634",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "212e1f37-d650-4d13-bd2e-465353997ab1"
        },
        "item": {
          "id": "b7a77aa2-e46a-451b-a4aa-2fb15d25eb1d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "71a4a291-0c4d-4cda-9567-ad9ce0e8743b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d13da5-5f58-4a01-9fa3-c254600074b2",
        "cursor": {
          "ref": "bc99744c-441e-4759-802c-90dbc4cd1f89",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "c66cc16d-19a7-4349-b5bb-2ae924007b1e"
        },
        "item": {
          "id": "c3d13da5-5f58-4a01-9fa3-c254600074b2",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "908d78d8-5256-4674-b81c-15d9e1190437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dc62f1c-4d47-4945-98bb-a9bb1146e47f",
        "cursor": {
          "ref": "792c6ef2-8cd0-420d-9062-bc1808f83834",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2a18164e-c49c-4d21-a1d2-1cd77a3549e4"
        },
        "item": {
          "id": "4dc62f1c-4d47-4945-98bb-a9bb1146e47f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "265ba1a2-eb60-4d60-8231-e8ed10a2fcc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab965678-10c0-42cc-b062-b366564e804c",
        "cursor": {
          "ref": "8265a12d-04b7-4ad5-9c05-dc75ae23ee24",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "91e25237-f5f8-452a-ae76-8a22104d0125"
        },
        "item": {
          "id": "ab965678-10c0-42cc-b062-b366564e804c",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d6619fdb-5fda-43f1-a211-3e8080d64dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb19d8a2-2add-42cc-8049-9e8924464e53",
        "cursor": {
          "ref": "7a4281eb-ac84-41a8-839d-2ddd3327d583",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "49ee1ea9-32c9-407d-8bb8-c346130814c1"
        },
        "item": {
          "id": "cb19d8a2-2add-42cc-8049-9e8924464e53",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d90298e5-7702-4877-8649-205e5c5fbafd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bdebd2d-b2e5-4085-aa13-5a1ee6679295",
        "cursor": {
          "ref": "971728b6-33d9-4a97-a2b3-a598ed00529c",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c2408785-ed83-4cd4-b9a0-2392e0699f65"
        },
        "item": {
          "id": "7bdebd2d-b2e5-4085-aa13-5a1ee6679295",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3cad711f-c08e-4ee7-aae5-fa442298b20a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea0597f-019b-4e53-8bc7-53d6b171b957",
        "cursor": {
          "ref": "e2480c4c-1b7d-4b7a-99fe-dceb96f1469a",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "c3c864ac-1e23-4dc0-8eb8-ce1454c85de4"
        },
        "item": {
          "id": "eea0597f-019b-4e53-8bc7-53d6b171b957",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "98f10751-6ea3-47d2-ac67-f597256f0341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba38352d-617a-4efb-9db2-835d2287335b",
        "cursor": {
          "ref": "c96293e1-d2f0-41c5-bae8-451bcd73de4c",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0b87265a-0501-43b5-86a8-699934156ca9"
        },
        "item": {
          "id": "ba38352d-617a-4efb-9db2-835d2287335b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "10050ae6-f029-4427-819f-502147212091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 755,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1093c810-984c-410b-97c5-32b3b1c6c73c",
        "cursor": {
          "ref": "077da89b-96a8-412e-98a4-5f4081271fd6",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a961a927-1037-4fc7-bafd-bfd736b18040"
        },
        "item": {
          "id": "1093c810-984c-410b-97c5-32b3b1c6c73c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "72b33c1a-908c-4438-978d-6a83caf70454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d52a66bb-41c9-45ee-a21e-191422dcb319",
        "cursor": {
          "ref": "3989bd1c-652e-4c61-9b88-c379117c8cc4",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "624684c4-26cb-4c3b-9ea2-bc6ec94a79a1"
        },
        "item": {
          "id": "d52a66bb-41c9-45ee-a21e-191422dcb319",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "0e4231a5-d932-4ba8-9f8a-d769c816fed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb927747-19e8-452f-996e-b62934d4ad1d",
        "cursor": {
          "ref": "e25ff338-880c-43eb-9c6b-a9d7e9726b69",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d9e501a3-6d4b-4424-8aba-82a62c973603"
        },
        "item": {
          "id": "bb927747-19e8-452f-996e-b62934d4ad1d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "066fb12b-3ce8-42de-8750-ce13db0bee19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6126d933-fd7c-4308-a2dc-a13b1f3f90bd",
        "cursor": {
          "ref": "a9490f52-f5c6-436b-9b54-db0dbcd2d399",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "fbc53c6b-5c4b-41a0-a1d5-b9128fe8e15d"
        },
        "item": {
          "id": "6126d933-fd7c-4308-a2dc-a13b1f3f90bd",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "2dabf07d-32d7-466a-83d0-8e03646d1c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8ae1ddf-e13e-446c-bd28-d66b53aa8d58",
        "cursor": {
          "ref": "ef0eb5ce-199c-405c-bbe5-ceb060e9ad4f",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "40f1238b-2401-42b9-91d2-f7500518400b"
        },
        "item": {
          "id": "c8ae1ddf-e13e-446c-bd28-d66b53aa8d58",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "caf39038-efef-4180-9ecf-f7ff6f0e1707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d2c50e-ffba-411c-b72a-c1ec42ee4106",
        "cursor": {
          "ref": "da82d70d-41ad-4020-ae40-babdcab61305",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "194646a8-d0a6-4a2f-bedf-3291d8890246"
        },
        "item": {
          "id": "b1d2c50e-ffba-411c-b72a-c1ec42ee4106",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "468ed1c7-aef0-41e9-a2fc-4a18de9a887f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b164e1-bf79-4886-a3c4-56a468928561",
        "cursor": {
          "ref": "f55ce181-7bc0-4fa0-b3a7-2e40dded6291",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "51b84a1a-fc53-4e6f-b5b5-462550db29a9"
        },
        "item": {
          "id": "d1b164e1-bf79-4886-a3c4-56a468928561",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "185ad76f-aa12-41b1-ace4-15eb472c5f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45c3d387-7e6d-4424-aea3-7a510207f799",
        "cursor": {
          "ref": "7c002b91-5c3f-44a1-9355-22c0ad73abd6",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "06f3baef-bcdd-451c-889d-0491bb9fcb53"
        },
        "item": {
          "id": "45c3d387-7e6d-4424-aea3-7a510207f799",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "6a1dbf3d-ad7e-43da-90d2-e846f2d23b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f53f47-758b-4d01-bbc1-4715330755d3",
        "cursor": {
          "ref": "b51d51d8-e6aa-451c-8709-6345b4cd13c1",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a25a2281-7cff-4193-a688-43aa91ed872c"
        },
        "item": {
          "id": "c6f53f47-758b-4d01-bbc1-4715330755d3",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "eb19f0b1-a007-4e48-a750-c8e2c082aea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13bd022c-f7db-4b38-bdb9-8d582abe66c2",
        "cursor": {
          "ref": "6cb79803-c146-4268-a720-53bdd9e5febe",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "fd0e4bc3-fe2d-401e-99f8-fa529e9d017e"
        },
        "item": {
          "id": "13bd022c-f7db-4b38-bdb9-8d582abe66c2",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d5de983e-d54d-4af1-b6cd-a3eb53e233fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1f2b114-dff6-4d64-8f67-714355f7a110",
        "cursor": {
          "ref": "a79a33b1-69fa-49fd-bcd7-80f3ef815942",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2c784fc3-1824-47ea-85b7-4106204dbb10"
        },
        "item": {
          "id": "e1f2b114-dff6-4d64-8f67-714355f7a110",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "7ae97dbd-e4dc-4002-98a3-e61d05aec242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebd75a11-86e9-43b5-b0fc-985ae23c68e0",
        "cursor": {
          "ref": "15251086-02d2-48d4-9a5d-47dd17408073",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "9463d0c8-e224-4ca3-822a-dd0412b53bf3"
        },
        "item": {
          "id": "ebd75a11-86e9-43b5-b0fc-985ae23c68e0",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "bcc24e79-8abc-4686-807d-cf03354d4de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d55c6453-9a4d-4cea-9b90-a8e280a69b9c",
        "cursor": {
          "ref": "233fa3a3-0f1a-48bf-afe9-fd3e4985b1e0",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "5d5493da-4c74-47af-b858-d8924513a7e1"
        },
        "item": {
          "id": "d55c6453-9a4d-4cea-9b90-a8e280a69b9c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "408dbedd-a5a0-47b0-b3bd-559b154f1587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e4b9d6-6991-4b09-83ca-d7e0356a4014",
        "cursor": {
          "ref": "5f24f64a-ee2c-439c-a4df-da810de89b4f",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a9f35da8-ec51-408c-8486-383f41dae7f9"
        },
        "item": {
          "id": "57e4b9d6-6991-4b09-83ca-d7e0356a4014",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c3a7b27e-b1d3-454b-85b0-8d4e5bc623a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb35264-1d5d-4f33-99c3-d76beecc1037",
        "cursor": {
          "ref": "e68c30be-7c9b-4fec-81fa-43cce0949a4e",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "851c547b-fee3-4f38-82ca-e7f0cb3cf45e"
        },
        "item": {
          "id": "5bb35264-1d5d-4f33-99c3-d76beecc1037",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "2f290386-bb6c-466f-8136-2b3b95b47f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "702f1401-d260-4b5c-beb3-93c50a445aa7",
        "cursor": {
          "ref": "0f4dc479-fb1e-4b0d-b021-2279f75cbd78",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "11d9753e-7619-4e4b-8dae-67775b06ec71"
        },
        "item": {
          "id": "702f1401-d260-4b5c-beb3-93c50a445aa7",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e30d34cb-0bc6-4042-b8b1-ecd6f4517f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da918f2-c1a7-4b82-a114-65ef24103e94",
        "cursor": {
          "ref": "1bceefc9-1fec-49b7-8700-2a6fc32c60e5",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c1905610-f891-4246-a314-fe1788b1506b"
        },
        "item": {
          "id": "4da918f2-c1a7-4b82-a114-65ef24103e94",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "4daef294-3ff8-40f0-8eb4-1f8885b291cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d420dd8-67e5-4689-99a0-0b3d5238d79f",
        "cursor": {
          "ref": "ec609634-f57f-495e-98aa-357cef64794a",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "bffc56f9-1fc3-4d26-b36a-5261b16987de"
        },
        "item": {
          "id": "3d420dd8-67e5-4689-99a0-0b3d5238d79f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "14b83186-3e69-4fe2-8270-81219d89b8cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3671447c-19b3-4aff-ae51-438aaf8cbf39",
        "cursor": {
          "ref": "b55f9afb-fbde-4cbb-a125-0d0235a1c6a1",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a8df12f6-3fde-4fee-91c8-7f16fca2edb6"
        },
        "item": {
          "id": "3671447c-19b3-4aff-ae51-438aaf8cbf39",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "9dc48eb6-bdd2-4913-909c-4c4823780c54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b3a73a8-7ff8-42ae-8ae1-df2ff0c8f70d",
        "cursor": {
          "ref": "fa4c2d0e-0b7e-48b9-84b0-1c108800bbb5",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "e1b94b64-bc2e-4609-9db2-a89eb606df29"
        },
        "item": {
          "id": "0b3a73a8-7ff8-42ae-8ae1-df2ff0c8f70d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "27a91176-1e16-4210-99ab-bcbe712a3868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aec06ff-7931-4baf-b0ae-14640e0f93a6",
        "cursor": {
          "ref": "30fe3037-9c82-4293-9696-252eb4a81552",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "821e8d12-8bb7-4a01-b9db-feb65169e73c"
        },
        "item": {
          "id": "2aec06ff-7931-4baf-b0ae-14640e0f93a6",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e49666ce-49d2-432e-8df7-f4142dec75dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a6c651-91d4-4ffe-b274-cd0f434424cc",
        "cursor": {
          "ref": "b827d1d6-21e4-40c2-9d99-88b2a788a3df",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "138348ac-f79c-46c9-b991-642df5958b29"
        },
        "item": {
          "id": "27a6c651-91d4-4ffe-b274-cd0f434424cc",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "28edc911-f310-42a9-ac0e-fbaa0f7dbf40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd9525a4-fc26-45be-9cf9-36bd6f528cc3",
        "cursor": {
          "ref": "682f36b1-50bd-4601-a57e-851cd10dd68a",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "185311c7-cf73-44c3-877d-de1cf9e3a9cc"
        },
        "item": {
          "id": "fd9525a4-fc26-45be-9cf9-36bd6f528cc3",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b5fc342d-659b-43f1-b38d-ae0b981697c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dccf2b9c-40d9-4604-b7b3-129cb51b0977",
        "cursor": {
          "ref": "0a414154-57a7-447d-b331-6a9a74db1284",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "8bad4ceb-53d3-47e4-bdf2-3040b793437e"
        },
        "item": {
          "id": "dccf2b9c-40d9-4604-b7b3-129cb51b0977",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "3ecca439-4d34-4c10-af16-d7a111553f18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d3af31-337c-4995-8c19-c119ed79befd",
        "cursor": {
          "ref": "19bf7666-d697-4302-8aa6-0ebd67334b49",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "916a6c6f-e640-4284-88d6-839b5249a274"
        },
        "item": {
          "id": "d8d3af31-337c-4995-8c19-c119ed79befd",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d627a695-67d5-42e6-a925-1a1177629654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "348b371f-a4dd-42c4-9c03-9cb9924bfdbf",
        "cursor": {
          "ref": "ef43d46e-3702-4ba7-b6ac-8c257106fb47",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "16333504-aa54-41e7-97d2-48b4f147097a"
        },
        "item": {
          "id": "348b371f-a4dd-42c4-9c03-9cb9924bfdbf",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "47d7bfe6-0fb6-42ca-8155-f068be3b0185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d97a87-517c-4fe2-bc4d-15111faf58ac",
        "cursor": {
          "ref": "ac3c7ddf-9bc6-43f5-8ee9-5133a4989f4f",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ed24f514-c7b3-4da5-859e-24078f22f5db"
        },
        "item": {
          "id": "99d97a87-517c-4fe2-bc4d-15111faf58ac",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "16d4316a-41b3-4f66-8646-06eaf51c4d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23391a32-7400-43df-aff6-5298bc3aec23",
        "cursor": {
          "ref": "84a18e91-992f-4f0e-b549-9c752fd9f3ea",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "00845a9a-3dca-410c-85ad-3e41e33e3d80"
        },
        "item": {
          "id": "23391a32-7400-43df-aff6-5298bc3aec23",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "04e68a4b-c50e-45dc-a5d5-7beef01ed19f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3666ce7d-dfed-47fb-b079-1914e95b3644",
        "cursor": {
          "ref": "8cdbe13f-8484-4ae6-8c17-7acc689aba8d",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "e152af16-50bd-409c-b9f5-aea5b8227647"
        },
        "item": {
          "id": "3666ce7d-dfed-47fb-b079-1914e95b3644",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "26d2b3e5-0c14-496d-aa1f-8be84d7af7ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a21200c-2ec7-4efd-aab6-043e72dd52dc",
        "cursor": {
          "ref": "aacf1f8e-6914-4201-a7df-9203fa58b384",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "757eb9d1-c1ae-4e31-8032-9e5921b5d2a2"
        },
        "item": {
          "id": "9a21200c-2ec7-4efd-aab6-043e72dd52dc",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "fe32ca97-c4cd-44f8-81e3-dbf23dbedce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d352f338-a5df-48a1-84d2-ce21cb89d692",
        "cursor": {
          "ref": "16b56ab6-b159-41cd-b3b1-1b02fac66b58",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "7a08c8f7-5f5d-4580-a9a1-03887cef8e04"
        },
        "item": {
          "id": "d352f338-a5df-48a1-84d2-ce21cb89d692",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b4af2951-9d71-4211-a93b-af2a4c10597c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a2ed6c7-61c1-40f3-89a4-294243d20dae",
        "cursor": {
          "ref": "563564ee-75a3-4bae-8018-54cbde55acc2",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f47553ae-b377-43cb-a932-d5a69e35d00d"
        },
        "item": {
          "id": "9a2ed6c7-61c1-40f3-89a4-294243d20dae",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "9e6557a1-b8de-43d5-a5ff-68dbab9d7a57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f9abe1-c072-42ce-b257-3390348e26e4",
        "cursor": {
          "ref": "862c8ebb-b66d-4baf-bf8d-26072336f306",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "a39b92ab-8d52-428a-9b17-f1ec221db51d"
        },
        "item": {
          "id": "26f9abe1-c072-42ce-b257-3390348e26e4",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "350291c8-da27-45be-85b0-6d0e50cb97f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc57db0-fce9-46ba-b1c3-f68486f3d455",
        "cursor": {
          "ref": "0cae604e-c8a5-4053-8324-76204de09cfd",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "91bb6c94-5166-4ac2-ac39-ada043539515"
        },
        "item": {
          "id": "efc57db0-fce9-46ba-b1c3-f68486f3d455",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "82daa613-091b-4208-8bf3-683464f0a27e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c051c85-91f9-40ec-b505-9bb82a0bc999",
        "cursor": {
          "ref": "67924e98-6379-4007-adf4-124479b565a6",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e628c92a-100a-4f75-8fb4-ab342a6a713d"
        },
        "item": {
          "id": "2c051c85-91f9-40ec-b505-9bb82a0bc999",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "acd6ec7c-002e-427c-b2e5-7a7485af14ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b96e514-f173-4738-89eb-4d8457d6225a",
        "cursor": {
          "ref": "5e4d70c2-9906-47c1-8de2-61e167997645",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "9c24b2d3-38f1-441b-8ed8-4505bf95f6c4"
        },
        "item": {
          "id": "8b96e514-f173-4738-89eb-4d8457d6225a",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "34e5bff5-9553-4186-90f0-20a226004bb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a9c284e-7fec-483d-b177-5e4993305e9a",
        "cursor": {
          "ref": "0deba11b-af29-4806-82ca-bdb6711b7b77",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "72f8ce44-b196-4ae2-b493-3d724a357f5b"
        },
        "item": {
          "id": "1a9c284e-7fec-483d-b177-5e4993305e9a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "fb5f627b-cd61-4849-a088-cd53134b58e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b50dd1aa-3ea1-46c3-b39d-566148d5c498",
        "cursor": {
          "ref": "f526a364-1ac1-4ebc-8bc1-1ee3b5446f33",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "b351bfd0-e283-4207-b354-623951162a27"
        },
        "item": {
          "id": "b50dd1aa-3ea1-46c3-b39d-566148d5c498",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7ba50fe2-073c-479f-a9e1-bf42717b5b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add7637b-9a1f-44f8-a04f-9759c767ba2b",
        "cursor": {
          "ref": "91562517-35fd-4af4-9f07-218de249a75f",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "2e0dd5c9-b45a-4049-8fcc-85a0669c0274"
        },
        "item": {
          "id": "add7637b-9a1f-44f8-a04f-9759c767ba2b",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "db2cb52b-5088-42b0-99c8-c37f9430972b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf939461-caee-4970-a7b1-f7fefbe76483",
        "cursor": {
          "ref": "f57caa54-ce26-4c62-8174-987c52e65c1a",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "f09f8bb1-c5e4-4f58-a39f-a552a6f7e5af"
        },
        "item": {
          "id": "cf939461-caee-4970-a7b1-f7fefbe76483",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "73edcc97-ebc0-4431-b921-122fdeada1ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bde42f13-0a6d-40d8-8af8-9d1050bef260",
        "cursor": {
          "ref": "87aba9eb-9886-4f3b-aee0-32172ace179e",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "b8075004-48fb-4b2f-9731-09d6308e04c9"
        },
        "item": {
          "id": "bde42f13-0a6d-40d8-8af8-9d1050bef260",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "30676125-6e0c-4bb0-b23c-4c24068d34cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 212,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb3675fa-8106-4266-8b29-1ede30cb218e",
        "cursor": {
          "ref": "233feecc-1307-4b7d-9735-9784b2685855",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "b4d25318-3b94-475b-b625-52220068ff0b"
        },
        "item": {
          "id": "eb3675fa-8106-4266-8b29-1ede30cb218e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c6cab3c7-5779-4af3-905e-12536cab3fa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e6856c-cd61-4808-b166-df338761aba3",
        "cursor": {
          "ref": "dd2ffe01-aa2a-4155-86dd-bfb2a35e0219",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "d014d287-14c5-4d8b-bb9c-913e3b3d1172"
        },
        "item": {
          "id": "30e6856c-cd61-4808-b166-df338761aba3",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "889531dc-e902-4567-8bc4-30d9540abe6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc45ce19-c151-48ac-8624-6bea3b6a26c3",
        "cursor": {
          "ref": "9ce7f46a-3330-48ff-955b-cda3d9b8e174",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "7e19ced2-be33-4c67-84aa-65efa0235a92"
        },
        "item": {
          "id": "bc45ce19-c151-48ac-8624-6bea3b6a26c3",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "152d1e69-1ce6-45e0-889f-71a8df394393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80072c83-c713-491f-9d28-db56bb6e5a61",
        "cursor": {
          "ref": "d17b6b2b-6b06-4705-b996-8f677dc987b7",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "576815be-3434-4a20-824e-e02f3ff3bd77"
        },
        "item": {
          "id": "80072c83-c713-491f-9d28-db56bb6e5a61",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "1785305e-5583-4e96-8381-f482d3b4a2bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a0c964-4717-4b72-9edd-f21546702479",
        "cursor": {
          "ref": "65df1ff3-c47e-44dd-9c26-935c6c216d53",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "35883bae-e210-4f2f-8e44-60c534cfb830"
        },
        "item": {
          "id": "d3a0c964-4717-4b72-9edd-f21546702479",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "2233865c-0dd9-4bfd-af4a-48bf2bc8b8db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2a8c592-a610-439a-96fb-2bf498167b8f",
        "cursor": {
          "ref": "a96793f9-3b10-4668-9468-e64dd855b217",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "462404c1-503a-4ed8-aaac-f71cb3c55331"
        },
        "item": {
          "id": "e2a8c592-a610-439a-96fb-2bf498167b8f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "6cc0b338-8761-43c1-b450-53e20759f4b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "663f7e84-8c25-4225-ab25-dd267a41d646",
        "cursor": {
          "ref": "8cdc1762-bb9c-4342-a6f7-a186d95416d8",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "65db958d-a08d-400c-815d-671bdc9c758f"
        },
        "item": {
          "id": "663f7e84-8c25-4225-ab25-dd267a41d646",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0b099c65-71f8-46ea-b810-e09a986b1ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6dcee42-9d14-4f95-a366-f9fce7c93cc6",
        "cursor": {
          "ref": "1182b018-f017-48b5-acba-f85eb0597d85",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "094b2492-d94b-4f3d-9994-b0ae9b257ca5"
        },
        "item": {
          "id": "c6dcee42-9d14-4f95-a366-f9fce7c93cc6",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "1dba4104-ca77-4e28-bb83-02636fd65f0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f447565d-ddd7-47ff-ab97-21c0b4e2d566",
        "cursor": {
          "ref": "304c359b-fe31-460a-befb-1f3b31159fbf",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "80eb29d9-a8b7-4004-87ea-cc5fa88b689a"
        },
        "item": {
          "id": "f447565d-ddd7-47ff-ab97-21c0b4e2d566",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b0422408-e2b9-46b3-bc8d-45ef360a0825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813bfb42-c0c0-4299-a189-178b7ff9cf6b",
        "cursor": {
          "ref": "5eed2efb-73fa-45be-accb-ac22f66fd1b2",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "68de8cc9-3ac1-45b0-b2c5-cb662b7689b8"
        },
        "item": {
          "id": "813bfb42-c0c0-4299-a189-178b7ff9cf6b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e348bafc-30ce-44cc-a096-6bca961dc58d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b05d33-ea88-4896-9afa-a63be399bce3",
        "cursor": {
          "ref": "ea5806a0-5d55-4686-a395-dd31e60f7999",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "c4c764e2-0990-4cc3-8beb-0a6f0f83d903"
        },
        "item": {
          "id": "e4b05d33-ea88-4896-9afa-a63be399bce3",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ee238ca1-6497-45c0-8e2d-ea2aa25cc4e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3975f2ba-4d0c-49a9-bf27-f562d827cc3b",
        "cursor": {
          "ref": "5b6a1bb7-fa77-43f2-8aab-f9d96466bc1a",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "d11c685c-210a-4170-b31a-1a9333e1886e"
        },
        "item": {
          "id": "3975f2ba-4d0c-49a9-bf27-f562d827cc3b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "650905a0-4469-481f-b71e-93256bf34007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "674e8a1f-655e-49ea-919f-907546717db9",
        "cursor": {
          "ref": "a3d99eb1-c7e8-423f-8a18-30e4004ba7f0",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "e714ffd6-13ec-4539-8f17-616e441625e1"
        },
        "item": {
          "id": "674e8a1f-655e-49ea-919f-907546717db9",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e7c8bd66-f39a-4c93-a92e-02e924f84fd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4604366f-cc31-464d-97d3-f9161bf5542c",
        "cursor": {
          "ref": "c1df5046-402b-4851-8267-28393714884d",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "577ebab2-7245-4318-99f4-73358cd7eeaa"
        },
        "item": {
          "id": "4604366f-cc31-464d-97d3-f9161bf5542c",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f5c82415-0738-4a9e-943a-c399940934db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ed975b-a22f-45ad-a2c3-3b08ac6f5768",
        "cursor": {
          "ref": "d718474a-96b5-4b82-9d7e-17b6bd425f37",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "efbd6a7b-870b-4e95-82b0-e79a2c9eaab1"
        },
        "item": {
          "id": "24ed975b-a22f-45ad-a2c3-3b08ac6f5768",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "0e0c9370-5119-4e82-9079-7b4b6bd8c4fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "926d2da9-6af9-40ee-82d2-692ed699b16b",
        "cursor": {
          "ref": "4855a625-79f4-4fdf-ac57-b09b425061ae",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "02f31a57-1423-4856-82fe-46aacba9cc2a"
        },
        "item": {
          "id": "926d2da9-6af9-40ee-82d2-692ed699b16b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "4c7f270b-3ad4-4467-ac33-e7170e710b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e56877-f232-4b22-8912-2333939ac47f",
        "cursor": {
          "ref": "5254eda6-a63a-4c30-8da4-526dcdf0b6e8",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "7197f6e8-6aa9-479e-9492-0b195c22ec7b"
        },
        "item": {
          "id": "b3e56877-f232-4b22-8912-2333939ac47f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d9226bd3-6394-4a47-bc17-0c1e682e189b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449193fc-ccfa-48a3-9b93-068f48dfa94e",
        "cursor": {
          "ref": "8b528bac-6fb9-468e-9ec8-67ebc284ea49",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "a2849b81-e684-4e7c-8831-dc87ed46097c"
        },
        "item": {
          "id": "449193fc-ccfa-48a3-9b93-068f48dfa94e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "74abde1a-be65-4bb5-9f4d-462b7c295791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2ce0af-23ef-485f-9ce5-65917f8d0ece",
        "cursor": {
          "ref": "841eb9e4-6677-4bf1-9e37-1afbb16d3bb1",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "6b2759f2-3e96-42ad-9dae-cd0f6439f683"
        },
        "item": {
          "id": "ad2ce0af-23ef-485f-9ce5-65917f8d0ece",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "7baac726-a30a-4000-aaa8-e836497e0662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0cbd7f6-d708-4c8c-a422-2afe6074515d",
        "cursor": {
          "ref": "a64e62ea-63b4-4314-96f9-8619d47fa54c",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "2f327062-b02c-4c6e-b182-537f77c4ff49"
        },
        "item": {
          "id": "a0cbd7f6-d708-4c8c-a422-2afe6074515d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "6bea3f77-2dcb-47ad-a1d5-6b3d832a3bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55a7b96-d9a9-42e5-9f31-997c68f37059",
        "cursor": {
          "ref": "2108f0e6-86a6-4953-948c-8adc6a3aeaf5",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "8797d6bf-3f35-476f-bbfb-478a11eae6d3"
        },
        "item": {
          "id": "c55a7b96-d9a9-42e5-9f31-997c68f37059",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "0d67af5b-4187-4f18-af1e-b74d439edabf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7bde716-fa89-4b05-a633-8748ccbd886e",
        "cursor": {
          "ref": "81d63282-9458-496f-9d47-3c009eebf67b",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "982d7554-fb29-47e0-950d-3837f2c14a16"
        },
        "item": {
          "id": "f7bde716-fa89-4b05-a633-8748ccbd886e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f222b1bb-e06e-4256-8cbb-5b030cb09aab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33233a0-aae8-4e37-a36a-df15d528eb0d",
        "cursor": {
          "ref": "e5c99ece-9a52-4087-a98e-d8769709318e",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "3af87e6b-6bdd-424d-9763-82990cf974c5"
        },
        "item": {
          "id": "c33233a0-aae8-4e37-a36a-df15d528eb0d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ecaeb517-d7bc-4b0d-8284-fa4e73768134",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e37fb57-1129-4776-b66d-d75cca22109a",
        "cursor": {
          "ref": "d2fade75-2c47-434e-b498-6194464402df",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "3bfcdf64-9d01-4c40-bc70-41a64e63b61c"
        },
        "item": {
          "id": "3e37fb57-1129-4776-b66d-d75cca22109a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "da412b1d-c64c-414d-be42-978a091f1583",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "10912290-ed01-4769-ba8d-036eafaf50df",
        "cursor": {
          "ref": "a03bdf83-dc1a-41da-b04e-0236c2cc71de",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "9c671bb9-793a-44f9-a4c1-1747655e634b"
        },
        "item": {
          "id": "10912290-ed01-4769-ba8d-036eafaf50df",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e704b9eb-52e3-47a0-8998-bff2e752bec9",
          "status": "OK",
          "code": 200,
          "responseTime": 2307,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "828f5a18-0fa8-4cca-937c-eb539600bbb4",
        "cursor": {
          "ref": "b972d10b-41e9-44f6-b68b-a1bff3af4995",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "06b32976-cd8b-4766-84a9-7f238098c105"
        },
        "item": {
          "id": "828f5a18-0fa8-4cca-937c-eb539600bbb4",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "810b1400-c8bd-42e3-88d5-677beb661853",
          "status": "OK",
          "code": 200,
          "responseTime": 2446,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f8d9239-6d18-429c-be00-1dbb890b9f08",
        "cursor": {
          "ref": "c0db97ce-41f7-4079-a1dd-c8c8f82272dd",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "51638527-1b5c-4cf5-89c3-236188fc5271"
        },
        "item": {
          "id": "6f8d9239-6d18-429c-be00-1dbb890b9f08",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0a643f8f-ccf4-433c-98de-97bae17e368e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f8d9239-6d18-429c-be00-1dbb890b9f08",
        "cursor": {
          "ref": "c0db97ce-41f7-4079-a1dd-c8c8f82272dd",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "51638527-1b5c-4cf5-89c3-236188fc5271"
        },
        "item": {
          "id": "6f8d9239-6d18-429c-be00-1dbb890b9f08",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0a643f8f-ccf4-433c-98de-97bae17e368e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4104ea78-5589-491d-81f3-e78be6bcacfc",
        "cursor": {
          "ref": "aad0d2e7-0c63-48fb-a7fc-d469a6952df2",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "b3ffc21b-451e-43f7-b478-50a13b99fae0"
        },
        "item": {
          "id": "4104ea78-5589-491d-81f3-e78be6bcacfc",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d80a8754-8734-4594-b552-944211720046",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8802ce41-db0e-4dcd-b00d-b8aace75ccf8",
        "cursor": {
          "ref": "793de4e1-29d4-4992-9a9f-5b622b7e1a7d",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "c4fc7327-ade7-4fcc-bd20-238e17f1a4ab"
        },
        "item": {
          "id": "8802ce41-db0e-4dcd-b00d-b8aace75ccf8",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f14fd133-cf30-4227-9299-50858a738e5c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}