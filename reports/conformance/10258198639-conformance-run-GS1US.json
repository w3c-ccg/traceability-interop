{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ce06db37-0aba-4aec-a024-03d7e1896ab3",
        "name": "Clear Cache",
        "item": [
          {
            "id": "2c898e2a-3021-47e8-a1e2-3d83b837125f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ebb7d186-e5d6-41bd-9b82-b7c8aa53c750",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "24eb6a26-5ea1-4082-b386-0fd775b697f6"
                }
              }
            ]
          },
          {
            "id": "becd59b1-eae9-434b-bcfe-1e06f6e7dbc3",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a37773f4-9556-42b4-b61d-d5170f583383",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e36afd51-facc-4b69-8ea2-7e5dbf708e8a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a5d51c19-7efb-4f37-bcb7-29549657edc8",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a9bcb868-2987-482a-b6ac-d2e10cc3f858",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0e0a8e61-6415-41bc-b5be-be2ba0d90ffe",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "baae5a28-ec33-40d8-a952-448e6054e2ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "56f1e3fa-b5c5-4636-ba4f-989e3e1c5c1a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "45b9acbd-76d5-4285-b5bb-1afd09976944",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ee3fb974-567d-4ea5-8923-06b93be90bdf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "56551692-7d6d-4603-b035-016fc8d51f6f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5ca6be49-b342-49e8-9b03-ef4e3791455e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "32041917-43dd-48d9-a112-3300852ee355",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "43deafb1-ba70-4dea-a6eb-d73f12696ff8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b7bcfb0f-3842-4aca-a156-6de2d32a9e3b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8f4721b9-072e-4a0b-aeb9-99afd43493a4"
            }
          }
        ]
      },
      {
        "id": "924d7e8a-85d4-4253-9a54-a5237fa954e8",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "cc99806e-9d8c-47bd-bbab-a40403b87d11",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b4bd8530-aec1-4d7c-80b3-f1e299ef0d1a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "63c918ae-8601-4a5b-806b-f64e59a48336",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e435794b-462c-4628-9f19-1a76b0d24e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "03938799-a5b6-4c48-8dbe-19c4ac859160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "032ad1da-fcb7-46f2-922d-f7ab80036df7",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f595d5-142e-4b68-9c74-2c8eed6d19eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "daed0369-0f60-40b2-bb11-d02db3e62221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f41227-cd0a-48e6-9677-9432e48247be",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fbb5cea-2c79-45a9-8ff2-3e78f93cf551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a9d37e2-23bf-4d4b-a8b9-308bfcd2660a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0f6b903f-cf18-404a-a64e-cc86b62281c1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3ad3f335-2e2a-42d3-9227-51c695612f8c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39eb4a87-ba72-4041-9ca0-ad69a84666ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "89b5f7d3-16ef-4242-bebb-f0de6b84e50f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6ffae5c-9136-4ede-9fb8-6696eb45c879",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61999730-3e61-41e3-9345-2c96bd11b634"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "81cfa38d-6534-454d-9bc1-46b7b9f287de",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f9e7aff9-66e8-4870-a913-2e840a273fba",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8f1a56d-0770-4700-ab46-60be18b4ae93",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "86646207-4414-4810-9e06-a3057464eb54"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "11d1bb29-4de9-4cce-88fa-594be102c01b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "b36a3c47-778c-4de3-9200-f47434f01a5e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c28eba4f-6b1a-4029-bfcc-6b4c3ee2cc6d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "803433e0-c388-4ce6-abad-4a273e18cf2a"
            }
          }
        ]
      },
      {
        "id": "d065ef24-3631-43de-aa48-66b889bb6e6b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "ee2632ab-35f1-49d4-8d5f-ab6d2a4f25fa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f920308b-0fa3-40f9-b4c9-c2383db11f66",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0f2182c8-d4ce-4022-a220-c76c952f830b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ecc8b7e-b1ce-41db-95fb-336737546146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c30f6662-a95d-4407-a6d1-621cc84a85c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35caad9c-0057-4ed2-ae11-760e1080bbc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec5e17a5-0b96-452f-8f54-e93fc8df4664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2750431-0bed-465c-87ab-736b0ffa5c71",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be98b10e-8391-4ad4-a305-7f7ce4c3a6cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "713f823a-740b-4a2a-afaa-08ea07e68b91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d33c61-3afb-4302-bf00-b0727af3e687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69146d38-c57a-4d6c-8c0a-46ca9a61b848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d260ec09-6e0d-4d59-a529-bfade7f68c3a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7354d759-940e-4b78-8a6f-8ac371f60ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5bce91a-2018-4b03-97e1-4cc183fca6aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fdf6e34-3206-4b30-b0cb-8bdc21bc7023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "280945e5-397d-4cd4-bbef-13bea9bc420f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "075c584c-0e99-4634-aafc-d872d6629f20",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e74d38-c2be-44ca-ac5b-427294888afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77edb269-670b-4fe3-a154-f5824be433ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "592e9bfa-ba77-49c5-b8c3-b0d02e1b0810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d704e358-ed6f-4303-8335-db506b52b520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a9c5268-9a01-4c43-950e-cabce9020d25",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb3d66e4-0df2-4ae6-ab33-ddee90bc9053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2afd91a3-e317-4ea8-8006-b61d7ba8c988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa327cdf-ba0e-4e21-b9f4-67ee50182886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74eef43c-756d-46e0-8ebf-931ca503c37a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c00ce83-85e7-4eda-a546-48cedaf23061",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d90bf1-5dfe-4d70-ba28-518232eeb317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7089525d-372a-4335-a37c-88d1245551d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c5e083f-c0d3-403d-a2a9-8b3e95c91f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d00f52a-4398-4bd6-b96d-124f7057ae8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88df4718-43ca-4017-80e9-3b9edf5954e1",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "946a3a93-81f2-4e55-a960-73552c4a7af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bee6c20-0196-41b6-a1c1-e170ee2ddbfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1837bd09-9964-43cf-9e96-8f17a9a8d273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4bb1576a-f53a-4fa5-a016-f7eee25c175c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b586e91c-4719-4f22-92c7-98b1cfaa27de",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d520c6e-17aa-4fc3-b6fd-76831141eac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb8599ad-598e-48b2-8c81-8587b70bfb88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "168e344f-fc8c-4463-afa6-da4b6985b54c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55fbdda8-a9b2-4210-a9ae-0f66db8a20a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3bc4e2b-53e5-492f-ab09-0aecf75b1ec8",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c6ead1-2502-4174-99c7-eb251fc5fe4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d27994c-cb7c-4aa4-a252-252c26e9b6e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72f7b4bf-7396-4bc3-ada8-d5b1fe954280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c8514e9-3124-461d-bf29-613c21ae76d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab728704-c5e8-4c1b-aaa8-048fc7712f90",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a02ee024-10b2-4a91-bf4b-9fe07ca4184d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd1a4879-ff9d-4dc2-8508-c147d55fbf89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b71beb5-4a01-45c5-92da-f1bc2b200de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20f27edc-fd0b-4297-92dc-e8ec79f245f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f157422b-b7b7-4ee5-87df-271322e44c3f",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d738f07c-8f66-4bc4-a545-1ef5fdcde877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cf8492c-cd8e-4f5d-b12f-fd3a70b8738d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7984907-10be-4799-b13a-a985f8d1b8a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dcc2e537-a20d-44bf-9215-cb57de152f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a5f6648-612a-4572-b578-f27452a00d92",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb8fcf9-7a4a-41d2-b7ed-9868edf38899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bef35a6d-c8db-4da8-bf06-91722f998c7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41f6d324-8458-40c3-bf3f-2a2cdc931a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f1ed956-040a-4392-84cc-68927b3d2a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc381e0b-2cb0-4007-a911-f55922b72e4d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46fd267a-bed6-4b0e-b68a-a096642b4ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59d4530e-1b6b-4f8e-9987-a400c7a56f9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "335492d1-7d44-4343-8eab-60efb80dc1ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "223c112c-5ac3-4f44-aea4-793c503f307b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cfdf074-b8da-43e3-bd0b-c4f363971c75",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f21ec82-db26-46ab-85de-85089e7dfb4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e48e720b-8ab9-4d83-a092-ab20fc7e8c98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a5a27b-a3e3-4a0e-b275-7a99b664f528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc8515e4-ff01-4335-b974-7bbe9f3e3efc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c264f90b-1e44-4f89-9568-c813df6ad8d5",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca233cf-14b8-4a8f-b5f8-9c95cd62af17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d521da1-ba5e-43bf-ae1f-22571072027f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcdb6ca0-9ba4-4e2b-a3ed-74d0a494b958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d49020a9-09de-4fda-8d73-ac772fa6c6c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de727fe9-144a-4523-a010-cd059f51fa81",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5879abe9-5f1c-452d-8b9b-28afab0283b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f954b11-92c5-4f06-bcb9-18d1b4e72284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc12eec-ade3-44f7-a494-c418db5dd029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f2a2fc1-13aa-47c9-b2e7-7ce45e545b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc466ed9-db93-4cea-82d7-a82c0c59d5f7",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02e86a3a-1aef-4589-9f74-a428ae9bd743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76ea2cda-344a-481c-93fa-c4b12c0bd6bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4580d33b-a71b-4749-b03a-c1f138db8cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b88bd462-40cd-41c9-9ebf-3d0131df56ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f224e418-5e88-4ebd-a27c-332da59bbc12",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d929943-c987-4cc6-81ff-beebc4a640a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "624d49d6-65bd-4bf8-a44d-432cc03d2eda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19cd1a2d-dc87-4f0a-97c7-ac85e1eca17f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2b6fb5e-41d1-4d1f-b899-98f26166f4d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5b2d1e0-48db-48ec-bb61-13f7045d49ae",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43bc1943-df09-46d9-b6b2-ee16eb1810ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b9e4ab6-ab57-4c03-9464-1106b7cfca2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb95acca-40d8-4c59-9fd3-57efe414f076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "544d3738-fd6f-4565-a38f-206152204ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "495eef1c-46f5-4281-80dc-6433a35b94e3",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ebeb3bf-9055-49b9-acb5-3a66b1bb2092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b7c8b9f-b472-4c2e-8d82-0bb1be6dcc10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d195ba-f98f-413a-a4cb-d34e886391ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cba10b42-2566-4f9a-afd6-8c734f951eaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8408716-c567-4c5d-bc5d-9a4c954fae10",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e442d93e-30cb-4da5-8c87-90fc8f221a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7094ae41-65ca-4062-8c38-e1b2529cd6ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73753dcb-f1da-405d-b8b4-c23ab61f7d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6890ce72-5d02-4461-b65f-da256f473336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "730a57c1-533d-45c8-9b06-3c2c32fd1da0",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19db10d2-da55-4c0d-a745-4baedd8af015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c8c0c35-a1a3-4b1f-8bd4-18b4b3040322"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12312c20-0045-44d7-9113-f2f6c809f9b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5429d0e3-4135-4baa-9f3a-052eb9d9030e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd33964-f6e5-4e2c-8cf7-6d2e3dc59f6c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea20eba5-c9d7-4783-847e-f919e92d73d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2f6ed10-f76a-44ec-8195-6910bd628687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e31734b-91af-420f-ad9b-d8e61b11a0c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5f07326b-ff01-42c3-9740-65c9b5e90848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4342b6c6-86bb-4ea5-80a7-5723e2ddbe98",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ead89a1-c43d-4b79-b04c-a3272d9453c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4564c7f1-feb5-4dc7-94b1-9f8812985368"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e42a02-8da8-45e8-9170-cac54b802ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c859de9-f1bc-4df9-9ea9-56a23da8e2dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a18cf0ab-12e8-47a4-a768-e52ee9e422a2",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e85183a-f759-43fc-89a3-000868af03cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87a740f0-4ddd-44e9-a09b-c90c6e06dfff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb80f25-f34b-4f3e-a998-2e8160d23190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dede3efe-52cd-49ef-aba6-d05750b5ad12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a668a21-ba36-42de-905e-c2001cad6847",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b27d81-65d8-4340-b5f7-141e2255cfba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8180b43-d834-4ad9-aa75-7a7e9ec63ec3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8abea8fa-a942-496f-aa26-de6c15285527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b37230ab-4ea8-4e5f-abe6-3bb89aec2cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a3b3a34-5b51-4d19-8a7c-59b98c02dd1c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe61ed64-f0e9-4437-91c9-f5c9d7902612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8c738cc-b07a-4f53-aa10-ecc88315dcb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c02d0be-b929-45f5-8f1d-44c7608ccd81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "796e3469-68a3-4ffb-a5cb-8acdceba24e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a4723b-f3d2-445f-8a32-4adf8785546d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "812c2ef9-b363-4bb2-be21-c45bd5aa0633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "446b0249-fc62-428b-80a4-9b54c46a3f65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37955602-cf2f-488d-b190-0eccd40663f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2386432a-907d-4204-b72c-8908c8c623fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e117b6af-d73c-4240-95a4-f2f296dc4259",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26131048-5c21-46a9-9a06-c7e0e8cf1d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58853df8-4a80-4472-930a-8f15561a203c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "672a53a4-16a3-4ab3-a48c-0ec12e7ba7a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "871e0d03-8536-466e-a878-2bb843e1226d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "674d01ab-d7fb-4cd6-bc03-894cc87a5abe",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19272973-d57a-4fbc-be54-4f34c7e06799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dc45439-80a9-46a0-8af6-fd12efa14851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62042a06-84a6-47c5-9c13-6b07018c0cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9d84219-7fc4-48fd-9cb7-17c9c3dd68b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d7c9ec7-8c33-41b2-9252-115d4c4ace69",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eead362c-e72c-4b7c-820a-968bd400a70f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bb49334-db41-49a9-8f5d-b64ba1db25cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa020d8-ec31-4473-b24a-2b7ff0f7a1fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe1a069c-5080-4f37-b941-e9cfecf523fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "765a581a-93ee-4084-b4e8-6c459076de28",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6832e6a6-2700-47bb-b525-70c4c484e36e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaf1d8fe-38ae-4594-8a91-0a6339fd0fba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "116db577-22eb-4159-9ba1-57d9232ef274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e828f73-39c3-41ca-85ca-9f03e2f7ef7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f57f8eb-12c7-48ff-9d54-4d9d792f0de3",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "328bc59a-35e5-4c94-b078-4be4da5f01c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e424aee4-037c-4403-bb5a-bc85837ec913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c97b8aba-bda0-44e6-b8b4-862c29b8eef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "27af7ecd-7b15-4f51-9338-7ecc6feac6da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "babfcc92-36b4-4524-909b-5d78b11ca068",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3755f05d-feee-470a-be8c-aff10061b4c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6272348-d263-4bbf-8929-2074bce90a71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2efdf82c-11a9-4480-a0b3-1140b89d49be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6811a6e-a2b1-4628-80db-92faf5ea7644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3226a29b-0e48-4483-bca6-2783a8733fb8",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8115cc3-44bf-49c0-a25e-5e6d49b2400f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a23f49e8-c8b1-483b-ad8d-dd7fad9c6262"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012a633f-ed9d-4111-b30e-69cab087b86b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "713f45a0-bce6-42f2-8479-103f0fc09f4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3926397-b131-4013-b7a6-7d7afe3f7313",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf95b28-0cd9-4a40-8391-9c3098f3b369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "20bf7404-d486-4c8a-b6fb-bdc803fe2fac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a614f0c-27f5-4b03-993b-cd8273860104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "adce9b19-1c88-4384-b7fb-9d322f8219f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "595f3bbe-39a5-4218-8dc3-e6baf9fe1ef2",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a18739e2-d46d-42b6-8c53-924207a45b95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c262a238-15dd-4d6d-89f0-a90da35986ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc97bd5-e071-4b91-887f-d36f43a72a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d22152c-8c0e-4cb9-ad93-70b54a64d08d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da1b514-cc4e-4b62-b145-33167ab69e7b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db43a9c8-97bd-440f-bd84-9b3ae623e791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ef262a8-5053-4548-ad71-ca4d45a58216"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c683700-175b-4b96-8118-9274b5972c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "81c8bcf5-ce0e-4c7b-9964-ac0f04ef1cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6114c9-dbd0-45d4-a5f6-35e0783f278c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e2cffe4-4c8a-4581-9f1f-937190a5caa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3286f996-fe03-498b-80f3-94c341e51757"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9f928d9-4fd6-4a2b-a1e9-0b5dd348ca76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0dcf1b64-3bab-4fbd-9fd9-9c9e2c9b9942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f81c3f1-fe6a-4229-b0e7-68b3f48976a6",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a3577e-586e-468d-a3b2-69a06966b5c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d81fc3b-5aec-4247-9455-cbb2a5f7be70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28f1827c-f4de-4fb7-9351-faa6bdac9a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f572661b-e1e4-4d10-9701-9bbc59a466fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb2a91b-322b-4a15-be5b-a977007e6a20",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d081e501-6235-496a-be4a-67b506bbceb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c707f67-7a9b-4f98-ac4c-7d99acfff5c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f8fef59-e31d-4f3f-891d-a5e32447c694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5465545e-412e-492b-bb61-1afdfb63c2b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2da785b-e908-4efd-a9f7-614136fe5ef8",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45db0411-12e6-4929-bb1f-91a9b563c2e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca802e5b-6afd-4f59-aa49-78209faa6fb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f028bb3-7310-4739-8ab4-df99a5831d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "63a7bedc-7c28-4045-bd1b-56a27f12b947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "764cda44-dd1e-4d2d-aee3-0607957cb3aa",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5767ceb-d9c4-49bc-bf24-359e51c9728b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e233b92a-0811-438f-a53b-14756a609784"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b8c809-42c5-43a8-b86f-56b672a16eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4349a2a6-889b-40ec-aef5-a885d54923d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7adda80b-2907-4447-9f09-8402a1be461e",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58dbae02-51ad-4c7a-8d31-07716ee26f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cdf09f7-b47e-4105-9ca2-3f72655235e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e407eb52-ed4a-4537-9547-6e1ca9a5935d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "134955f4-130a-4cf6-b56f-85586b0b2e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "583c47e7-d5ce-4f3c-96f0-3d8434f3be4d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a60134e2-2a74-4afb-ab48-dc1aee062361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9448fa5a-6f0d-4633-9ab8-39a52f93389a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef2cedd-03c2-41fe-80fb-ceab67f8bf7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2532e96c-a261-4664-bdc4-7544eaf5b9f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f537d636-163d-463c-9927-c4cc53f4325e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64f4d392-84ef-4e00-b0be-461fa689189b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62967687-107e-4e6e-9f7b-be5fff2f4221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a8e1311-8409-49d4-9b96-87973c350c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba2d220a-972e-4978-bd5a-d6752a5ba09e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca6dab3e-95d9-4340-a21a-6f07a2449433",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08747b2f-2e2e-49a3-b082-7fab5c3ac724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52fe33d3-e1f4-4753-80b4-af9452d8458d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f4f76fa-3c84-459b-bfcb-4602ce7fee50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bf370f2-708d-496b-ac25-80851d091933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99782f10-51df-453e-a65d-77c03e611589",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a50efe-103f-4435-9258-1f45700ae015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a045c244-3d5a-47c1-a4be-d84092b3c2c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86187a16-5d80-4412-ac6b-19dac213eab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6127d48-9e76-4f15-8576-1124fe533930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec8742b-ba3a-4b01-89cb-c388a924f04a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b2f2e0-09fa-40e6-8041-7627d26fccf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6af5630a-3e64-4c9f-af9e-0beef1340e1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d8a8c4e-a8b8-4590-bdbf-610569a7ac21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b58ddc30-84c7-44a3-94c7-3ea54f91ccc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4e5c4cf-c047-493c-af83-adf69abf01de",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f78e8694-d17b-476f-9416-3d1297fe17ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5df52494-8729-4cfc-8c86-e14a61c6a5db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc616b9c-63de-4909-aaf9-37b6e7776512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bc284f05-be2b-4bc1-abb0-d371d6fb801b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc5900f-7475-4f12-a7fa-3d28011c27bd",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f99328b-c150-4551-8dd5-c60881c6f65d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21e113ee-1d1b-4137-aa29-cb0e0669a77f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c48cdcc-6b49-4ced-80b1-f103de49121d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "30e52ff6-538a-4f06-971d-0ab25e33cdf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "943612f6-ef1c-4c80-87df-4ad55ca9d312",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06dea80-80b5-4300-bd36-392f7849b168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae42117b-5996-4de2-99c1-c6556bfb1fb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7279b54b-12c6-4232-a568-b39bcd8b4fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bf35977-fbcb-42fd-b83c-9b5dc8ca5333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d79b53-6c1d-4933-8703-cab65809c025",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d321b7-e371-44a8-9703-e37d90426028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52a96c0a-f564-4a88-908a-80cd60330fa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65954ce3-2365-47f2-980c-5b2b8f766e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ceca0119-f133-4fa1-91df-2cfcf814740b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cac85ba-4604-4137-8350-4ab37b4d3fed",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bcabfb1-e562-42f5-89f8-bcd15622f81e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afcc4387-ab0f-4375-9126-722eb86e0181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5282df9-1886-4ebc-9639-61b703658b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce7f3ca7-bfb6-4058-a844-26cb17ab29b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b76a4dc-123b-4a8e-bbbc-7bf7a52f2126",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eddb3f8-8532-4508-85cb-c0bda3c83799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8872ce3d-b79e-425b-a77b-e9c8a7c4c1af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821d35ad-92a8-4a41-924c-2923161ca490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "50f257f0-ab5c-4e98-9e0c-c5381d5951a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90046ea2-8a55-4464-ab5a-c53bae2d1299",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "764e5584-ac95-4b6c-b8a5-1985910aca0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eab56cc-fe92-4975-9b20-07cd057bb1b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2704bcd-1c8a-4e97-9e20-e2fdc9b053ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "aa9c54ac-8c24-4ccd-8334-c03b3e0f9541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68265a8c-fd09-4a51-b9fe-8bfd2540b221",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd9bab2-89e0-4d0d-9bbf-3dd179a75ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9009055-17e7-4796-9657-9d0d9873f587"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daebc359-29c5-491c-a142-48db7ac56360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1eb85246-7db2-4d6a-b565-ce974b28f904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a18e154-324a-498c-867a-862b356c559e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75515e3e-5abd-466b-8bfd-e377bf652938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "559a650c-570f-4134-8df1-6adb2b17919c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e52f4afc-71b5-45fb-8323-48df33b04814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9bae294-0454-4185-95f1-50e361452fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c82890-4e8f-4ace-90af-3a4cdbe3873a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54643154-a35a-49d1-89e3-bdfa63efa503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49a84746-e624-494d-ba9a-abf667eaf7f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5962566-1a8c-4687-a75e-cb00886b5b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6951b229-565a-4b35-8880-216425d0c149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f9ceecc-6d75-4a25-bc5b-8c467703b9c8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4a9510-3589-4e6c-bcf8-cf5ebf561722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23de6f19-4bba-4574-8033-7b44555eb4e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df84bc54-aff1-4c66-ab60-f7de5e08d477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b77cd53-f7e5-4925-ace1-10c6256e0a88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46886c91-5f93-4a28-8381-811a1c5aabaf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb2583cb-12cc-4fec-8186-bb325ccae124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef3dcef9-1de7-4afd-a244-2af177aaec7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2790ba02-51bb-4dcc-9a75-f98659415f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d24a62d9-a237-443d-8c3c-8c6d29201752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2330993-abe8-4cdb-97af-839e7a1361ec",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a87207-de62-4220-adf9-0093c018d892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e06e137-b50e-48f0-ab33-03453f4b9d60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02494cb3-0998-44d4-8604-04bd7d2b7eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "950b7c50-3390-4af1-8c1f-61dd224676bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e367752a-4bf9-4a04-b5b2-8b7e2fbbebfb",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81dd4ae8-cceb-493c-8682-d236b005f085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7c7bb12-d3ba-4a7f-98a3-6c2072e4d1b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "575b800d-1aba-48a6-8329-42577b94c861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "83d97979-b51b-41b5-8dd6-7692fc605801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a571c6ce-9ef3-4065-bbf2-a511ad09cfd2",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b29d34ba-9934-4e4f-8e14-32df35662b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "084c2e65-6422-435c-9834-732826f288d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e98719d1-64a5-42b0-a291-95a5a9d3be5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d65f7c3-97cc-41f0-aedd-f9bde924be76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea94ef7-c743-486c-9e01-72f116fa439e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "827d6e8c-9309-4127-b420-89a88d116f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2035488d-270b-4be5-8b2c-59716d3a7699"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e5ebede-e4c0-443b-b988-3b8c853aefdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "39102664-205e-4203-a8e7-49405b2e6f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e70b00a-a071-436b-b7fc-d09fea94f375",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9ee406f-bde3-41fd-b925-15c4959e7560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd81b561-4c0f-412d-bef6-525ddd5f9f3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f73491b-c4e1-495a-b666-9bae19852b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "50388f08-4ce9-41f5-96f4-1167314e6c8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "172ac3dc-3ca3-413c-877e-f235bd079ba9",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc6ac466-b368-43ef-9862-8e66ecc459f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c163ad6e-e314-483f-9d34-b0af02998e34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f691858-cb0b-41da-b6f1-4fc944ce1c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5d9b56ba-464f-48df-976f-e8cb2dc3f3f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48575087-47ef-4f36-8f00-f3aa166a11b8",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79884927-dc5c-4259-a93d-98df2677a3f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cc64ed4-67bb-4f86-9f2a-8043e32a5023"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ce2d381-a504-4398-9872-4db77c328426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "33114603-c10e-4f8c-95d9-70cfb5570936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c94920cd-3f4a-44ba-80aa-e5efb3193d31",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "968e2e19-4dca-49bc-b4d0-cd6274c50fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d06d2ec-228d-48aa-9a46-985665a7fb28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f5b271-0ebb-41f2-a8a1-d98b46b363b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f17df177-bcd1-418e-8ffc-0bad70b8a768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36180cbe-2019-46fa-bfa7-21e2f174cb57",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c57253-acca-48fd-9ece-322335b23ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae02167e-271d-48b7-bf2e-5d5e73419f2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ca4656-1489-4bc0-b286-72fb9a37f588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "071bc08d-fd28-4060-9e16-dd59ac3319b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29381a87-34e7-47eb-96e0-29541c1483ca",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "242214fa-b53f-4049-8460-1f6bcbb06368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c71254bf-6250-4899-b693-91328d615217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d119a7-e108-4a55-98fe-327341da0178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "30499b97-b36d-464b-9ef8-cedaf1119b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f66beb0-20bd-46b9-a15f-81847e556587",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1becad8b-0071-4fb8-a288-94ba9ed1d60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f578a51-894e-4df4-9fa2-ac79d3ca3c6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe4c3e7-85c8-4b89-bdff-d882751d0f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4f4fe12-45ab-41bd-b134-8d2d0a169b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bcc3d0f-4507-4ea2-96e8-43b56d8c14ce",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "378c4504-7f0a-4b6d-8980-ec1d789cfb5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1b7ce3b-23b2-42de-a9ab-cdf8508d060b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae479f0d-8b7f-4e57-92f0-12adb89af27a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "62377ed9-6fff-46d7-8f05-c364307ab394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73ca474d-7773-4914-861f-9c0783a141b3",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab1a6b4-7c06-496f-83df-fe9c3f51f2e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b58c5335-0594-4650-9e73-8601843e89b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea4d3b11-c43a-4676-a752-ab95cf1c5891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5d9ce93d-031e-4f6e-92cc-af8c38acc04d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f155821e-666c-4548-b47b-fbac204208b1",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec8dffaa-6646-4d92-8af2-e665892ecc52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ee12500-de99-4836-ac8a-5c36461b69c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e570bd7-275b-4bd7-afa0-7dcc18bbc651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7797f023-c4ce-444f-9b71-d3d1691d5c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91e7e3f-e12b-4214-8a96-f97b985a78e0",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "041cb443-c7c7-43ca-8042-5c284735e809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fb9bf14-eacc-4169-9d8d-d04e83f59389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70dcdfc3-cd22-4bb0-92a7-9f1ac84e374b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd3c0981-a27e-425d-99b3-e9eea5a603ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5baa17e-801e-4ec5-8846-4be78fe732dc",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "962bfc25-db45-416d-af23-bcb0848e5744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7ebeced-1c9a-44db-ae74-f9ed37a4114b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6281b721-202b-4ac4-89d8-6f98c6c2e8ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7072597-c365-4e7a-a090-da82b974cb2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed3c6c9-9fc6-4801-bffa-a6ec334d58eb",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "354f6ab2-6ed3-40ce-84fd-c8a56856da8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d48de4bb-69e7-4596-aa59-6d40e197f25f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "120200dd-52b6-472f-99de-d3856a705fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "223216d4-69f9-4d2f-8304-350112ccdfd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98661d07-0b0f-460c-b1fb-27fb2bda838e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ab44f7-c1b5-4fbb-92a0-9d03e59a9f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cea1be09-d9cd-427f-81fc-e376524641f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c29af35-05cc-4ded-a262-8ca389d83346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b05578f7-77c8-4c4c-98e8-7521bc38ee0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7627f013-eb2a-4352-8ba7-121a123afcd6",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d12dd9a-acbb-4b1e-ac54-dcabf0277782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2b70e57-591d-481c-aec6-3c6a95d7963e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcbb1c77-2c87-43f8-ae55-7bf6413e682d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "484ce0b5-8a91-4780-8062-9da8c4de0a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "678564ba-652f-4e18-9e5c-91b3d9d19b2a",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2016d6e9-595b-4218-92b4-54bd9435beb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "307ed95b-c41c-4977-b1ba-5f2ae933cae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "036d9244-2e5f-4559-a5af-c6a0eb3bae41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f362042b-87de-4adb-a94a-ce33dd88901a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d827a0ef-5e2d-47cc-8d42-3efc7daeafa8",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a52392c-9421-46ba-8fde-fd2f8916cf13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a4c85dc-5c70-4f52-a5e7-d079f784ef70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae90453-02a2-420a-ba33-68fcbcb32fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "85a50601-3729-46e4-894f-ce752887dad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2630beb-9d09-4927-9924-6d72d1d685e0",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a05621e-283f-4712-bc41-5500bd28f88f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f5ad23b-ac5d-4bda-802b-868d5e5e4486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c4102e0-2111-46e5-ae56-36540edb20e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5fb0d61-089a-42bf-9a6d-27cdaf67858b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5309176-970a-4430-8cd1-38a4aa38b319",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b178ba-1283-4a70-9069-f1b4bfaae298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a00c439-9ac1-4785-b03b-b5634ca6ead2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "648a8358-7db2-4422-be52-af2aa129c6c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "66664f9a-218f-4ae6-a9a6-a2bf6c156a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27a43474-37e1-4394-99b9-e43f7c3e2dfd",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a398bfe-6d12-494b-a2c7-53c2b4902d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dc02743-a611-4eb4-bb12-1ce72a6f5ab9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92be710d-4aba-478b-b26b-f06f879ecf0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "89d091d6-ae91-47ad-bd28-ffa81f00fac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82765a64-0e52-477c-9ef0-e66438d17d2d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e736c21-284c-4bd0-b75d-c4105e7974bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c2bf517-e703-4d7c-9aff-eec314810e50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "410c2447-3f0b-4570-b0a3-a9607723d29a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "94d9e0d3-1aec-4a33-8f64-9a0fdd147403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bce1d368-2a5d-466a-9060-b462f37f5707",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2fc9ed2-6fd9-4ba0-9b1f-464c4633f7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a2b3ab2-ac02-44cc-9bb1-041ffe6dae2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "213cbb0a-371d-473a-b76c-406dbbd8ee3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "71d7f32a-ba8f-4db3-a4b5-438caaf9c683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7885f21-e23f-4d19-946b-3c2593b0a761",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fe86e4e-7f0e-4f20-8318-30b754a6ae5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1386ed8a-4b6c-4b57-8765-25765f56d608"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d1f5c9-ef89-4708-bcb0-aca14982a736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c23a390-986c-4d6d-b4b2-bfd3b286b00d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b38c0af7-b8f5-4b76-892e-bf784c293002",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2caa73b-659c-46f5-a891-9b1930a8cac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58fc4253-fadb-4c56-916d-b20d7def43a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e98e026d-5c2a-40d4-b56c-04c088eeb619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2fb47019-4918-4f7e-8fd6-8ccc370f77be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0053670-2c6a-445a-9f48-2bc3868ae6bd",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0102cc6-66fe-4f0b-8aad-ba158a8326bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c22e8e41-7a77-4f04-b3ab-6813be2ba0b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd18df52-0351-46ae-a140-15aa5905c4f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ff7f6d5-757d-4065-a783-b7a530553512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4854fbbf-7672-4886-bb56-5d3dc2b2d1d8",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c7a6a5-7366-4034-9154-627791809742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54c67945-bed3-488d-93f4-ac1206dc6f00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e68f61-5b10-4f46-a912-51bba2db1636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "be4e8ab1-fa51-45bb-95da-845fd5d35f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a765b2dc-6921-49c2-860a-c2ee581048d6",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a7509b6-e553-4cb6-b4a8-592adeda89e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "73a5c51c-afc6-4b52-86c2-88566fe80a8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "461d6e9c-bf6b-4c80-8460-f75f01489f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc82cc27-9e4d-44c7-a428-18bde0aba163"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "206dd77c-8e65-4a6b-b3d8-7667bb2d24fd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4b16b652-7503-4c33-9630-785040ff965a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e131686-93a2-418e-8604-17669ca827b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "66df524f-377b-4f34-9399-470f99949f53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "883252a5-377c-49c7-a231-6fef17c336a6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cfae7500-9a5d-4dd3-b617-0080a19a3039"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e04f3812-136e-4187-b6f6-58525d6f2793",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "40a8dce8-2b2a-477f-8a99-b1df8c392f78"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ededcb9e-206d-42c3-af66-35af77b3ab87",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a7a8746-9bf8-4a8c-9526-02b81cd66ee3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a06fae1f-9e3e-40b2-87c9-d1701842aa8e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "240fbdff-8f4b-4fe8-9660-c40776dc8985"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7c3d808f-8d93-404b-b7ee-afbbc325e626",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fdd04c47-e24a-4091-8ade-ea921e7d1298"
                }
              }
            ]
          },
          {
            "id": "728d2a0e-966c-44f0-bd7b-53f5a6bb3fb5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ce050477-3681-498c-8980-a5d7ffdcb9cb",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "3b9b8f66-6060-44cc-8c59-31d21ff3860f",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e044e4-3024-49f4-9a6a-ca339ae50215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1a4c3aa3-9fbc-4da1-9355-eddf2db465b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b70a1d-cc59-4102-91d8-f0d5e3914e44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99d18141-b32d-437b-be00-e3ca9a4f37c5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "147c64ee-a4ba-4df8-9478-07f61e71657c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "55ba80ff-5bb8-4b2c-9435-a35772cff286",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dda79954-19f5-4b82-9c97-1b3d64474f11"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c495ff6b-f00b-4674-8272-a9e7d3e3d633",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3a7f7e8e-9f01-46d0-aeee-ce69ae565581"
                    }
                  }
                ]
              },
              {
                "id": "f5ef5527-62ab-457f-8615-cb3cd1d0fb41",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4de55dfb-2c0b-44e3-a45c-e6ed6e743b87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "41bbad72-6ca5-4b8b-90d6-b0f4832ba7c9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b4b89c57-665a-4086-b5ae-6a33b7e902c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "20dce297-76b3-4220-9836-e2664b377927"
                    }
                  }
                ]
              },
              {
                "id": "e8366e24-595a-464f-8469-68d60dd18b1e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "24ccefd1-5c70-4c39-9e50-5b328aac0fe6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1599f093-45eb-4547-a297-9a676962df73"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7320ab47-2f6a-4f62-9035-f35dc1348323",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c0896d7e-31bf-41c4-9960-2e9040e114d3"
                    }
                  }
                ]
              },
              {
                "id": "de8914f2-1137-44ec-8e4a-a1336eacb53f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aa6015c6-a308-409f-914e-01da4e04593d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2243a227-1223-4af4-91c0-c7e174d2c7a0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b5a23bb-c8ba-44d3-bd27-aa6dbfb0ee23",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f5a84ec8-ec25-4823-9a9f-f07be926f7f4"
                    }
                  }
                ]
              },
              {
                "id": "9391b7e5-4917-4526-9326-16ebbbae3f9f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f112a1dd-0b06-4efc-93d5-615cf62cd809",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "47a76290-a9b5-4734-ab38-89917de8445c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e46b52c-e4ce-45fc-8cc1-15eccbc1c81c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "19d2f3e6-974c-479a-91ac-d46d3266f63e"
                    }
                  }
                ]
              },
              {
                "id": "1d21adcd-dcf7-47d9-b0d9-dea2d0f5cbf6",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ee4da1f-c32d-4c34-a8b4-fb157b7a05ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9c74b73d-5f6b-404b-9b00-d3c5fe7237cb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e94b8bc4-247b-4dfe-82e6-7c925d155e32",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cc6ea819-094f-4a54-a690-5f9a96a128f4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0994d9f7-3e66-4fcb-a7a1-a59bf12c0f6c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "63be91e4-22cb-46a5-b096-8ba1fef2d104"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1f4c9884-b860-4917-8302-98b8eebd53e7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "513fbd0a-7ad7-4ca7-a9e4-8d75663bbf68"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "33b0fa91-7e19-40d3-a231-6f567d5dde8b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e9b5b663-ff34-4243-8369-dc152652147c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9f9f21c5-621d-4dbc-bc9d-ce0d7f828b46",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "82466edf-7404-46a6-ad3f-81a23a01931f"
            }
          }
        ]
      },
      {
        "id": "7bbb2ce6-d116-466b-9e4b-b5ca06995f24",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a070ee68-9e76-43f8-b84b-20207421989f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9d582b6e-1b4f-4913-b882-aa25a828a154",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "865ba7e6-892e-465c-85e4-e4d507956ce4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa36576-876e-4560-b4f0-9d97b62ed3e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2485e212-4cde-4eb6-ab6e-738dd97a87d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da9df2f-73cc-42eb-a4be-10f3897f9684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a06dc8d3-661a-431c-a2e6-f8274663c95d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4764814c-85ad-4e9b-b5cc-37c7f6d47b5c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec1b5277-3a6b-458a-8249-6b027f547ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a27cf781-4fb3-428d-831d-ae76b2715d71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a682640-8222-4313-8656-b0e4db6a0d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9e0afb5-bc05-46d6-ae9a-7475b23d619e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d65dbd4-459f-4450-a44c-a557b48a231d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "800ee6b1-b447-486a-ba5d-a4241b2efe63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05bc65c7-d4af-43f3-b641-fe0f8b905723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f997f553-ff4f-4680-886b-55e56cdc1b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bee8257-ce2a-4a49-a68b-247936906c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e44f7c62-0910-4d73-93dd-8ea75831078b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "051603a0-1fb2-4efa-a37e-4fe1e0a2baa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8da510f5-8a2b-4377-b923-09e9a4145799"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cbac3d3-143b-485f-9e41-d488f6d89efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2678099a-e1ae-44be-bb13-96f3e33587cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "805b320c-3da7-4c16-92e9-aabca519615d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b38ff8cc-229b-406e-805f-bb6136f7f786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59909de0-cc09-4daf-843b-5de54302666b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ee4c82-fbd8-497e-9b64-c91383bc80de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e1ae2ae-03c0-45b1-9867-d0d7ead28fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364ca927-0f3f-497a-8f40-fcfb614cdcb5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4fdfc0e-e31f-4092-b5d9-59d491efd39d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff31312b-4610-4e18-9d80-8788262ee9fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea2e71ad-416b-4d77-ab03-c703afcb52e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fcd1ec4e-9fc4-440d-9bf2-30d2c1170fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b37a77-e05d-46a5-94eb-4d1c12ea0f98",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5042f8b-7271-4580-9569-dd16886c846b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cff22ff3-16a8-4cda-a24d-333e70175285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73398b0b-542d-46a7-97e5-7a5f4264d90b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "59b1d2f1-454d-467a-ac09-5338b262425a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad45ced3-3272-4ef5-b0fd-d52759a9b3e1",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31a2d5c9-e098-4dbd-acb1-24a307fa04ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e576b18a-404e-4cc5-9d68-3b60a4375795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ff4a92c-9e16-472a-b506-5389f953e533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc5d3bfb-77cb-4d60-af4f-d906a4052c3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da20412-a6f7-4d0a-864b-a4f9d7b84e24",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9da872f-77f1-4c26-98b5-b0ce9296d111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99e4cc0b-749e-4705-aab8-24397447b4d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a21403d9-fa52-4701-8290-c8c9ff612988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd508a4e-1c90-49b3-bae6-e5196201ae07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fb935fc-2445-4954-89b8-e8e4cf8f2893",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd1c471-2621-41ea-9959-3f66cd0270ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a5140c3-66c5-4d22-8131-41d0ba226baf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a006b108-5539-4e00-96af-5719b7eef81b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "77287442-41ed-46ca-918f-1c1bf69263c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cfcee40-39ac-432f-9bec-566e7545df33",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8130fda-7fb5-4f60-91ca-01db162c4c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5cdf82f-de16-4ac7-874f-ebca6ecb8f1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "871b4d70-931b-44d1-b449-c58407b9cb30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3541c032-24d7-47cb-af30-53e9aed8fe4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a68401fc-f6af-4372-a5a9-b2a51c4ce22a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc44066e-73f6-49a5-b167-562c44fca576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dd540b3-6326-486e-9ee6-b33a7f87e1bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3929493b-ed0d-46ab-bffd-307df7e09fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "59e485f8-42ed-4dc6-accc-4eccf0b8210e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a9c0571-f76b-428b-bb0c-1e4b03d5b63c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2d29f6-e54b-461b-9c62-c8b2fe99312d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7816894d-1062-4f34-8664-3e48ffac2b6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2578c7bd-77b8-4e21-9c61-de9f3d82bd16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf0404e3-cdfc-45f0-a1ca-e558937ec5a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0fbb0d8-441f-4a06-8f8e-b548840ca50b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c78a3aa-ebc5-4d37-a514-805d9ff3b7fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "843d2248-ac04-414f-bf83-ea12faf4e2cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38e35b5-8420-42f7-81eb-91aa90c4c8df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "93ae1809-9f0f-4d7f-9ef2-dd61ae7749fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e5e1f92-176b-4703-8f1b-0b19f16026c2",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23e754dc-40e7-479e-9573-6783bdf1ced0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "088af47b-4a23-4600-af0e-4e066b5fe0df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d4ce0ef-4b54-4766-beb8-267f379b5b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "08ea7072-0fc0-47a7-87e8-a10b506c149f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcfea241-da8d-47ce-9406-3ba291df454a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "654761a7-c1a6-4733-8a2c-20eb090428c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7e64e46-dbf4-42bf-942e-78f2d4333222"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "494f6fc1-0221-431a-aa3a-3ab10f7ddc00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc800661-c75a-45e4-b095-74a74e8da3d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ffca61-ed04-4a75-beb8-107b535d661f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee5f2ff-dde6-4e1d-9b6e-e15874e86bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c39d8427-4636-421e-ace5-46f7ce95fe28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f239478c-4e8b-4ae4-ad77-c82b26f06070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "210d98b6-573b-4206-b5de-ed79ba287269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c6b003-d128-4210-8ae3-aba5cae1db84",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1377b91d-9665-4e73-9a82-2636298364ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eeeff15-1a97-4932-a24e-2cd172ebffc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d879451-ccfb-4285-94d3-4e24ee407832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e118665-279b-4618-aad5-d7ed62acdd9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a058bf44-ae31-46ef-82c0-30109467c412",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f07be8-7fd4-43a9-b5f7-a8a63da5d30c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d32393e-2067-40ed-ba5e-89983b910e0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02989980-87b3-4ab1-a456-ef6b0237fc02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74bfd0f7-3fa9-41e1-925f-2f97d0c5caff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "832c63e4-b15d-4764-a8d2-9a0789a32a0a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d93d1b-f250-4212-bf40-791a9b37570e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d13b727-2fc0-4c51-bf8a-419b40a7a339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c1be8b-da91-44ef-8667-76e612203699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "036e2606-f647-47a8-97fc-6cf43ea54206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18fb36da-35d4-41d8-bae5-c7571069a8e2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b1f836d-63e3-449e-9ef0-f1bf7d3b0b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bbcf569-8614-45d7-a07b-51f6f472ab6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3953fc38-03be-4b9f-a993-198aa5cd5356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c98a01df-68ce-4ed4-a7e1-0616cb1d24bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "755a9a9e-a1ff-4238-ba40-2cf260c6f125",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9796151f-ea93-4faa-801e-e31a3903f79c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f05e71b6-5be3-45d0-b269-28d7898dd6a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a0b888d-3062-4b85-8bd2-b0467430049c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "880518b4-5eb8-448c-a201-d142127213c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80dbfdb6-8f31-4349-8b65-f7602fa021bb",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5332e550-a9c1-484b-bd16-b0663eabbe8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef05d264-00ce-4fba-b150-e1bfc5ebeafa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6e09f79-e69b-4046-8cdb-0e03527988e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1110b853-e8e8-4a6e-8cf0-d123b80c10f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f49d97-defd-41ed-87c3-5ba17294bd4a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3286f0c-8fac-4858-b446-375e9da9f4f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7533a8c9-4489-40f0-b5da-126daabe8ce5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "049d45a6-35ef-46c3-85b5-69e2b4c27d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5c2245b-e3fe-445f-ac4f-9fa9795f8d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd7b4f7c-9b88-497c-8996-69389fa6abb0",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a75d333-04ed-44e7-a1b5-13c3b89e5bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bc88e67-2c41-4fff-8418-ed2e5a0134a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31721f5c-25c6-4334-b845-15faf3f673f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9434115-f4ec-452a-bf5b-ee331af7daf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4c96bc9-7492-4262-b594-17418a8249a2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29ec0913-1505-48f7-a19e-8a57941ee700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec627b07-09e7-48e3-a8da-704ead0df89e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40dd5d47-af1b-408c-938b-d33adac99ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d117c479-5997-4961-94bd-56737fdd572c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b2aaa71-db62-4068-a474-02afe8ccd196",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f92373-7da6-40e3-b7c7-4ae43409d72b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3947ba3d-2d76-4d95-8388-2057ae481364"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54dbb56f-ef7a-4bac-91c6-27ce51f014b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e371aac-c62c-494b-b1b4-5b24978cc252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "280bfaf6-a77e-4e7a-8a60-d48fb5dae437",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0993ec66-d61d-4782-ae75-aec1be5f7c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6db02ef6-fa18-48b3-829d-40aa2f5c75fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c7f230-e8c0-44f9-b733-babd70f49364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2ed5b70-d33d-42d5-8d8b-fd4333aa1599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6bd838d-166f-45e8-b917-4a3bcf1491bc",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ca24ed-ade5-4ec2-8342-53a44f46280c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa494666-c1dc-4b5b-8811-f050232aca2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a99d6643-e242-4fbe-afb7-e8016034d333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ac66065-37d7-4057-9a84-8a1da8ad507e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1c2bde8-39d2-4be4-9835-740b952f2d15",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e68ea1-5107-4a5c-a034-9005ff06ee19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eb2593e-f046-4831-bc72-c8d473bec7c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae12b69-2ba4-4d49-ada5-8e546d08f25a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12428310-5bfe-4cf8-8d09-3386be4fd4c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f31cddf7-3b48-48f8-8c5c-a228f406adbd",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5219544d-8d87-4406-8b4c-d14f0795752a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "651327dd-b09b-4924-addb-159bc7081999"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f2db1d-f634-41dc-8403-0200544630a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1bec2d5-4e37-4518-8995-3eb40ac8b311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43724650-2882-4b2f-a902-b37925287616",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6411d5-6c76-48e1-8d0f-bb50894c29ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa8a5d40-e5d8-456f-9070-4405493278e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f74bdc7d-eb1e-48d6-a279-3267b72f0c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35ad6569-5edb-4268-bfbd-ddcdee420c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f7cbc03-99d2-4d29-b86a-2017cb3d5f10",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ffb274a-729f-449d-832d-a5f7f782e131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d8bdc8a-19ed-4c58-b8ec-8cfa40ec0cfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c7f504-d401-454f-8f06-42996bb0beb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4e2953f-f411-4cb5-906a-2153c529b8b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63371f72-7c41-4fd7-9ae8-c0935c66fc55",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de30216f-efca-4657-9ddf-45370941223a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecc35041-7e5c-498b-81c9-313d91b3296d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b633f30-9461-45c1-88ec-46a3d1c2f5f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c40e04b-7099-41ec-ab4d-8e073d25b175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4286b9-ba69-479e-ac65-1340b0dc2e17",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2bc7afa-8e1e-466b-abee-782634f83780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d43ce26-bb96-48da-bd9b-736bf8285593"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d728230f-481e-4e6e-87c2-f18bda6b4daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d121158-268f-4016-931a-e730beba4001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf5c1530-1916-48c6-9610-31a232116ea8",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d777cb60-5520-4e35-ace1-bbe1e4319671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85e14d06-791c-46f5-8277-394899cb771d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff3027f6-e2dd-425a-bd32-ba9c289e8ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "772e373f-8f0f-4392-828b-90e75a605e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d164af-689f-496f-a11d-ef0e99fcb5ee",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "937a1c74-bbdb-4a69-8878-8b44b344eb82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65eefd99-9e59-459f-b8f4-e90141bb39d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf31dff-56aa-4b33-9dbf-78aa1b90b64d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d218e82c-8699-48ce-8ce0-60b94da78af2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "855e76cd-4fa2-47f1-b390-09600d489f32",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "448e5b84-1e3e-43f6-b8fd-454971fe291d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef534391-e63e-4505-bb65-026cbd1a3f43",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1e1a8499-43fc-4ff9-9b91-630b2ebe04c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa2a44b-8e94-4c35-8fd0-c11a4d2acc7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "31485dc1-7664-401c-9438-6ec2a65676eb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4c7e2f6-97d9-4e93-a6ba-c8b05de94746",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7036772e-25a5-41d4-9d8f-cb29bcd16f48"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4f82b7a-2ddd-461f-bd31-db8f970d3f6c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6701c737-24b9-41fc-ae95-23826d00934f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f3af84b7-e3e8-4903-b79c-14152c629760",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5f506fb0-dd32-464b-b601-42939e886cac"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "41de2d79-db38-4925-a66c-4d0fafb00fe9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6c162e58-1b11-4cb3-bb95-3c51d812d490"
            }
          }
        ]
      },
      {
        "id": "d36bbadd-e60c-4279-8c74-74c1bbb59bc0",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "18a34ebb-14a9-4c30-a52e-ea4c07c25b77",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a540dc4b-470b-40cc-bb54-be26470157ee",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2cb452cf-9117-4f97-9996-692160e54c23",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfe9c52e-e80a-4007-b14a-66639738f9c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f13eb62-8827-40dd-a770-1b9ac23d7cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "887611ed-91da-4d4b-9ffc-0001221220b1",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f2deb0d-5438-4d0a-900f-7dc2daa35e68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a0acdf0-5843-4753-a2a7-f75de4d4f3ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "210bf636-15b6-4ee3-9095-92c0e933a2f0",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c74a6d2-73b7-4581-933c-d45160212c42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd6f06a1-cf6e-4626-b04f-99239cbbad48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1756b3-e521-4922-a7c6-09a9d35cda6d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b62b14-bdea-4e1f-9bbb-239e6d8af7c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8273c3cb-6f39-49a9-9cb2-8b55750761b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c6245b-35a4-4fa5-96f4-cda05969f243",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fbf4517-6f22-4675-9fed-1192fee2ec84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9900e26b-9432-4617-8134-60014e719a72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7426d943-833b-4a85-8194-182f841627c9",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85eb60cc-4f00-4364-a3f4-edad055e858c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "642bb0aa-df8f-478e-bba1-3937968f75d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6173d882-9a64-4f3b-a197-d81e1ffbb368",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc0eb2d7-d508-46d9-a5ae-a99acb29b465",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7cf60e3-4fdc-4e3b-bc7f-0e44022afe75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f7f3cea-266a-4a40-be83-2448bb5bc251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "565e2d37-014f-4c10-a77b-46fbc45c3d62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "340cac1e-df66-46e8-9976-8bf83a9fe9d1",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3bf6263-b893-4797-891f-6d84056349bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d338982c-864e-457a-b55b-b9d75e3674da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a407f0b3-c0ae-4d6f-8c55-a526efb2521a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8bafce2-28ef-4b51-94cf-d7ba02a17b7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14700db1-3a13-49ab-bd29-18a94b708ec5",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fd7a9c1-cf91-410d-8d01-d34d486fbc9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cce4cdc-ee41-408e-bdef-e19b3daeb0d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b35f6af-14f4-4504-bc08-9b93cf3d6168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fe61907-f926-4956-81be-bf7e53314798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e547f711-af1b-4a01-999b-f2d6305c2f99",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b3ca468-1705-4528-a8c2-63ca8563703d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2bd74f0-4387-413c-95b6-3f05a9e55ca2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b18d735-6773-47b7-9234-09c7e11aa1b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55862006-4d50-4ba2-9e3b-22e431777af1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2376304-4fdc-47d0-b6bc-a14f7fc03630",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cca402bf-ba61-4e02-9df7-79dfa20ecca9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef1b763e-2566-4449-be9b-0a97b20714ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2705663-eed2-4407-9aa3-8f9a56f9c506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6322507a-dbbe-4c1e-ac87-dbfbb56e15ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a466fa-95ad-4259-bd50-4ba2ac948a80",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f68db2a-7539-4ea2-a168-e2583343431e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be758339-814a-485e-96b3-63a25213ed87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb968f7c-c20f-4a01-b94a-409f5b1ee0bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d19c38e6-fed4-4066-8766-008e86064ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56906e91-945f-471c-a657-80e518a5a126",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "286f4e84-904b-4076-903e-968851364ad5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9db6e771-7953-4379-bdd6-48a20f84756d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d1d74f-6249-4679-be90-9fd0897c249a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d9c5ce6-e2ac-42ee-9bb0-7bb51e26ff50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "198b47f3-8491-438a-aaca-f11f5ecb5d17",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "795cb564-de67-45bf-a5ee-0166ab530b6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e892198-0596-4c83-9438-12752ac50b2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb363302-a98f-4abe-bcf1-3b705abe431d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30a58661-b2ff-444a-afc4-b51d964fd498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3851338-9600-412a-a2f5-4fca236e12cd",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75307ec4-b7c3-4cd2-b8f5-c85e389b155e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbe8f40b-5ac5-4953-ab7a-5bd4433050fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47cd3264-a5e4-4991-a90f-49c16e3e1246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "992d9d86-a377-4ea4-a655-d587862bdcb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb688fa1-2e85-4e70-8bbb-683ce1816ac2",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ed1d0e7-5f51-42e6-946d-83f2cc75213f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5d92366-062f-4d00-964d-61436a999d93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd27bd34-8a63-43c4-bc47-f9ccf25c815c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a2bbdbf-6dbb-4872-9aee-c9c907b426b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41fa8288-76a4-4c0b-aaeb-737591b6ad24",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "644efee5-b3f8-4fd4-864c-8e8a3c4654b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e618a83-204a-4ba7-9c44-6ff7360a6b5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc02e51-a17e-4de0-90e8-76b57f3cbb9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f57fa74-ba85-43b8-92ee-c2771f75e9b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "592a9975-f431-499c-ba28-18d3f5e41dc6",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f479ee-d872-4317-b001-57d431caaec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af7055fe-b190-4e2a-8b69-68ab35792aaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f25a7a6-cd4e-4d06-9209-db33a0867b7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "907b4f2c-6f91-467a-a1ae-0c7d640d789c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "192cbc8a-d111-4e4d-b11b-2ea1a1b2389d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc6b623d-e54b-4f2b-8dfe-9520853f08e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33395eb3-44a0-4a0b-90c0-3897542d19e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cdb38b4-e63a-4aff-9a2d-df267f4ec988",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eec2d981-04f5-485e-88ed-63cf7b7e2091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ee33b8b-2ada-4256-87a8-013cd92430aa",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f43c8400-31b6-4d16-ba8a-200b7bb4f0ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10a713f3-f416-41a6-abe2-e19d25797dc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43eb3e18-83cd-4bd0-afb0-1bc1319be42b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08fe35f1-e1c3-4be2-825f-ca7b56060754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c9ff94-76f5-44aa-988d-1a797b6e964e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3803ff82-6026-4e67-9768-923cce265c9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c98cd87-bbec-4f9d-8a9c-1378dae79744"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef4970b-4487-4610-a370-265d7c67241c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bafed24b-11d9-4b2c-b34a-b348453e96fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2310cf3f-5bb5-4acb-af5b-bda8b93a9387",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f49c45a-41c3-48dc-bbd4-291f530f9729",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "061e6f10-905e-41fe-b45c-fcbdaf952f3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30012b72-2af0-4095-9bf7-82c8f9d51273",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce671e9a-ed99-4771-b2e8-05813ce68fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "975bab44-6778-4b3d-a38c-3a6867032eea",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cecdd15-f4ae-42d0-8305-4565a3ba5a0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf15dace-9986-47c7-a134-252a47ca4a50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc60fa68-c53d-4df7-be7b-44d5cfb10ac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af4dd0bf-2d29-47bf-b937-a5f15d921e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af3b4788-edd7-4d0b-a276-f085ded3a443",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc4fe9a2-c39d-4f98-87e3-dad19fe2dad8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d985c2d4-d0a0-4d99-ac48-cef73d7298aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6dac002-ed0c-456a-b3e6-7d70274fb06b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cb19c5f-505d-4407-b4cb-a499841c9dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fcc6dfc-9e77-49e9-8cbc-c3a5431d7289",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f5a26a7-e987-4f1b-802a-2755ed192d31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd46fdcf-ad72-46f2-a5f8-42fa655ebb4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d50c2267-e9a0-425e-b5de-c56199bd8f60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c050b573-f9b0-4b23-b943-bfe6d563f5bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84885928-4a3e-4007-88ed-d7a634f89027",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5785a1a-b24b-4482-b80d-bd9240cccdd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e6960d6-756c-4435-b402-c23120c51a17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0697e572-672b-4a6f-96b4-238552df4871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91965f22-1d91-426d-a29d-e322fdeada93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "503ebef5-5ed5-4048-88e9-a7aee7d2aeda",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23c119da-471f-4c89-ba46-db2a66a8fc0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cd9a193-2ea2-47ae-b526-c4a4b8e15dbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca6bc8a7-ede6-461a-8751-272e16a3864d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca91c5c4-ec17-434c-afd6-8fe05245dec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d073758-796d-4493-85b4-61f8bf58a6f5",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9900a18-5c26-4b7d-9b43-8837b5f2fc41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf82e759-8701-4a6b-89cf-cba8f82a56ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fe38add-3f6a-4557-8d0b-f04d6277b198",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "142be31d-04bf-411f-b1b5-848c500774d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da2e766e-6b41-43f9-a8a2-ffebbee5b9fc",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f28d556-d641-498a-9ae6-518bc55a46ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30b39fa1-36a8-4b08-8fe4-bb5dbcd778a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "272b7342-e032-427d-9f6b-0031a02f6e18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3c960b2-3f2c-41a3-bebf-56c92a40b1c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94f29d78-d18f-44a0-8073-7bdbb5a6e7a3",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0369cc21-93ba-47f0-9d45-2d2e13aae364",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "def51128-3b78-4a5a-b381-4d78d4f4c7ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eefc8db-f186-4d55-af28-41c7cfe8a037",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30a0c83c-97b9-4cc4-bbaf-b8e843027b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d3952ef-6081-4646-b140-bfdd4e66a7fe",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7456099-5aca-4c3e-b4b5-f06d4f012ae3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "882d798d-8644-41db-998b-6e5e215d3490"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db1b34a-4353-4e26-a050-b7bf76ac0126",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8e38578-775f-41a1-8d1a-c90bf6cc2958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c579b964-9c10-409f-90a3-89edc612474b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "210c73a4-991a-4253-ae75-639aeda53c8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b75004a5-65d1-4414-b03f-95182be9a1fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f872136e-0dd3-443a-9c96-659a3911dcb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "909b8810-a185-4e56-bafc-f500d6b606fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fbd6da8-6e7f-4152-aff1-99821c81a6c0",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec93646-a9af-45bc-8112-154e24e62e5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "431ae874-3d6a-47ac-91a5-43e5dfc9c813"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9843cb92-1150-45be-9190-4df07f89bdc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "533e461a-b2f6-4987-a0a4-296bf364926a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75742c14-cd85-47d0-a9a3-f09a2491cca2",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a4452ed-7aef-4673-bc0f-758bf6f6e653",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccc47746-29d5-4166-95cc-e082edc58d2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c4a73af-100a-47e1-9d63-138573b3b776",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01003fd8-fac7-4d3b-96f0-22a2838874b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd97c7cb-70c8-48de-b619-a1d9732781be",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b147f44e-4095-42ad-ad17-001b20b93b6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "056626fe-f528-489f-bc7f-9a5d39db6a20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "775bdfb5-a9d3-4c87-bdf6-0ed1b811f310",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98489e2c-9c9b-49eb-831b-094480a78c5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f64646-f906-4390-8751-84dda2382761",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c0f979f-810c-4c91-8229-16e3732730f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88c9434e-ed55-4ac6-ae9d-73ddd65c2077"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60af2b92-7474-4c5a-b149-8bb316272384",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fbd0d3e-c584-4dbd-81b0-311ef3cebd03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d9c9d1-d6f9-4ea7-9634-aeb34cc62cea",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "079c9072-fb47-4a02-b338-4b1602a8f05f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fed94d7-1ac9-437b-ac3f-696888011ed6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a996c56-6a9a-40bb-bea9-cee5832a98ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "509c915e-afa6-471a-b73b-bb48b9bbc22f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6991259-fd56-4a2c-ad0c-f68932b64ef4",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d599b41-fc68-45fe-8427-53ffed43f861",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fac4629-710a-4a8e-8f78-c6089e1eeb92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0eafff1-899a-4586-98ca-94bb7752e48a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2381b591-c4e1-455e-85cb-6408879e4e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ad1fb5-c2ce-4270-889e-92bd1a985ca9",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a317128-2988-4d4c-8ae3-81cc79bb0dd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47b6e420-4638-44e9-9e25-b25d3ddb6e32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "370140c8-9b69-44a0-b530-c4ff26683559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "315c5729-8dca-4ea1-bd57-ad932f4ebaa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26f5b8db-5d38-4ced-93a0-5ea3ce4aa4cb",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75036f06-0d72-45a1-80c0-c6a94d4e5d2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c96ce2e0-9586-40d1-afd9-677a7f351315"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ee8282-16e3-4c00-b0e9-a8b624100c1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7310fcc3-4c7b-430d-8c35-59ef7fa9720e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ffc8b22-7544-41c9-82dd-79400b47455d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e0e2cd8-faf8-4561-b1d2-596ee5d6ad80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5c85910-d61e-46ab-b187-7780eef6ea44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03463905-c7b8-40d8-a3ab-62026ded06b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "361220c0-0da0-41c6-9f00-6fc1b391da04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ca38e9-0972-44eb-8af5-326ef7925439",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe198557-e0ed-4968-bcc9-31bf2bbcd287",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1ad261b-5c4c-4c61-bda5-497a9189dab8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a06bb65-d0b0-4d36-8d49-72262c256a17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e215a3b9-3931-4e19-ad7e-fb8d162fe6a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d2ec20c-7043-44d3-bf68-70f94ebceb42",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d3e7e0-876a-48a3-8954-e390f0d061d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0985158d-8d8c-43b1-bed8-3f5a9d141c4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91908905-8877-403b-8828-ac93e121c8f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffad0f46-0383-486b-a7b4-9a67c3bb325a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e535b2-a5d0-49b4-b1db-3496fbcd5338",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "155bb6ea-69a8-4336-87e8-ddb071040d20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a294355a-75c3-4dfe-8454-79a4fa8c9741"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df2c9f7c-5694-43d6-9572-88cfd2def1cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfa184c8-4dec-454b-bd6e-4636d48a08c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a85c32-d2ff-43a2-910e-4168d94905ab",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb2d425-1471-4828-a5da-5cdfe4fba2ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29b2ad7d-f348-48a2-82d4-c23a6eb44a95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14208afc-16a8-44ad-8c4c-11085ed6cf85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "429c7aa2-ead7-4e7f-bf0c-635453f3670c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "015850f9-5681-4935-bacb-9f0d43754c86",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e55bb71-591e-495d-91d3-b62391d2c99e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75530b30-a4eb-4653-82b2-c0c7afb714ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0656cd24-21a1-4b10-a003-2c8a4825371d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bc13af5-dc95-4cfe-8881-bf500ceb04cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa25cf12-c91f-4d4c-9a6b-d8144a68f709",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ae5a4c-f795-47f9-976d-45d357485370",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0bceaef-bf59-48f9-b559-60723c8404fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50245a52-26f2-4a5a-a9f7-bf3d9f1d51ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad9fc912-34a3-4359-97be-4c53021a9a3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40545af3-e44a-468b-af6f-3ed8f3e0d623",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0eb7a63-e798-4cc7-90ac-7534c9180c2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2d0684a-81a2-4148-9585-6632af1986d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa9c485c-8954-40fa-9a09-fc96c8b8420a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67ed4b3c-374a-4871-99ab-6164d8975982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795a15be-6387-420f-8a5e-aead803837c7",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c0808f9-d4b9-433f-b425-3e151d33a64b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1671a2a6-5f47-4234-a7c8-3a814065f6c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a157fe5a-5c92-43c5-8eba-e8ae7d5cdbef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6868857f-8862-4ff4-a1ac-1efaf515010d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b850f38f-0bc0-4272-9fa2-e69933ebc357",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e8e1155-c957-438f-a96b-676d174d1750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a285a0b-64c4-44ab-98d9-2ddaff8f06fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f312edf3-7383-4fee-ad01-ce199ded5378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7bd88f1-1609-4cb1-a2b7-30b8ef865dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e36aa61-0cf8-47ef-8aaf-6415981a56ab",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d4a25c7-8298-49aa-a6a0-2bbb2a1cddd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f087683-c190-4c2a-8c05-74c2fd2f0726"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9619cfff-2af4-4db1-acff-7243af130550",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a9e44b6-6ce2-433a-a8ab-0e3a30db7a23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce8a16cd-e2f8-49ed-aaeb-d41a9f7fa09c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc445031-c5fa-4cb0-b1c5-c1a0de69878c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74c4c857-9e75-4f50-81fa-2c6469f7e1fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7b3244-46de-4abe-9e24-a42ac74093e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0926d1cd-4c72-44d0-886c-4d6b48058add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "164394cb-7649-4647-a9bd-c8b9473221fa",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f06a64-067a-409a-9faa-b64ceb29ded3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00574a05-7536-480b-b90d-e124bfe52442"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d8fcc4-4dc8-45be-bf31-b1f1b7bde777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce3423e7-2364-4a00-8b28-45c130c23932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ed5ac8-6a50-414d-93e5-a3dc472ebd1b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea681e0-8ed9-4e22-83d5-cbcd3eab6cde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1970056e-fa43-4e84-9b5d-013edb6ca464"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c80b6e-ae06-4590-898b-7ef3bdcb3b5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93735dea-e379-4d1f-b4a1-61224f06f22e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050edcbb-3371-439c-92e1-be4135bafe27",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ce043d-d73b-4daf-a6cb-0a5e867239ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8caa8a6-e476-4e7f-b30d-b6439d673eed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f334b114-6868-4126-9d22-2ba227702cdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d18c1537-08c2-434a-a68f-31f74a1dd655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b25802a1-6adf-4e0c-905a-fa44773a8732",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20fb111a-e88e-41aa-81e4-8adcae3ba29b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "959d28f9-55e8-469a-829b-016b7fc71cda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77109056-741d-4747-bc27-85de181b8802",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b16a206-20e2-45dc-8ec4-94eae4ac92f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "628bfac1-0111-49b8-a0cf-0019016a4d7d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15106dbf-ded8-4a7e-a519-1bd2d9b648fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9c1b5cd-a90a-417c-95cb-2087e2ad7c1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fad2c8b-8549-4ef2-8392-733422259ae0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ec8b1c4-4c6f-418b-9cd0-675db2aed443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa06e065-461d-46a5-bdb8-00198cc519c4",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "183c84d7-358b-48af-b859-7b094b4ffb43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cf5021b-a8f9-4c33-9972-4cb04290ba7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3524d6ea-ae0b-40a0-8dad-c3b3c517272a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c247a084-c84f-4208-bb7a-f15b3165b515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac0a6287-9ef4-4bbc-afe6-0a8ab8967d67",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb954a57-058d-4c0e-9c84-b0098ef1bcef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a92c37fb-63d0-4cc7-92d4-6c78882ab585"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf08904-d9af-4965-90b2-4a5741e4e711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33af69d3-e837-4520-a844-4d960b1a6ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "880084a9-2665-45f9-a820-6693531c781e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2206ec20-d5ab-4a35-b0ed-a5eddd587f6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aece7eca-22cd-4bd3-821f-3d006e316ee2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9de8a77-2276-4595-a52c-8628f45ffdaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a73daf2-4606-494f-99b8-da5e6e0cbc85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcee914c-5cfa-412e-a89f-44b9c2ee9bd8",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f440b539-fbfe-4c85-a98d-cd99b10455bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7747351a-9ec0-48bf-a382-cc84c4c44da0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "168adcc6-e83f-44bc-b089-d639e8273681",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2efc678-94bb-426b-bddd-57d273d6a861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b08f6d5c-a958-4b78-bbc8-9e25966c69a0",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee91648b-ee29-4cd9-8fa4-58b72e4c2d68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3233a7b7-3f52-4d66-99d6-25fdd1d25b9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d13697a-a483-4334-b5cf-49e3fa7e66c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f60444be-4498-4c12-9f3c-82989d363ef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a1c2da1-f92b-4d9c-92a2-78c795da038f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b90cf1-fc4c-4430-8527-1c30c139388c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2f25696-f16b-4130-b044-a5442d433950"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bedbe0e1-2f05-489c-a0f0-11bfb7d46d21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a93eec7d-900f-445a-834c-ea16d2e368ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7913e45-3be0-4286-8149-df8562c5bcdf",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f8b0eda-1e37-4caa-8378-a93858a3ac2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4605cf8-0aef-4ea0-834f-8c0f04e331f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d289e3-be56-4e62-b918-6793ddecaa45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bbb10a6-10d4-4b99-bec4-7d7e88d85f5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c0cb109-2ba0-4dc8-9b9f-c1febe130c64",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d39fb5b2-a336-485d-a388-8c694df04d86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc91d069-7e4a-49c4-b47e-34e75d7dd9ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a69311-2982-48b0-92ea-d8125026300d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2130835-ce5c-49b7-bca1-8743e46c94ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b12a713a-c2fb-47b7-b998-3ccf84a84d21",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec6f500b-b604-4de6-bd18-782b19a37040",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6198507-41c2-441d-9f1f-65045f9bd443"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb99186-dc7b-4c83-a411-6383675898fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "571e9674-34a7-4545-98d8-fdf27e4e2113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d709afd-9b2e-46e1-aa66-e15fd0a1652c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb58927-d78e-4efc-8257-f2508eaaa7ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50cebbc3-bb7f-4ad2-bed5-bcdaff54f682"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b518e9-8dee-4b8f-a52c-a77d65150499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d48ecffe-3dab-40d2-a824-a54685997252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ee9b2f-eb31-427d-a6c3-237bb7ce22e1",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "449b9b19-546d-4841-8b85-c1f208ecc730",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e4f7c38-8eec-41df-b44d-2a9bd053ce6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcd5237d-e8c2-48fd-9361-fbbca7f11919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94ae1835-b096-4a17-96d8-735871112a6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bda81b6-0c7e-405f-a6e2-4f3152232eff",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d253ee3-b7cd-4871-877d-b174304ceb3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c9d778d-cf56-46df-99c8-a68be1998115"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "213d8691-6051-4b36-bee9-37559a93fb34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09537f15-8e90-47d6-81bb-a8fcb0f455d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54185387-fd48-41da-a1db-58671c6c1e19",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56880f55-f967-4fdf-b0ab-1eadfea856fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5f3c998-1bbb-492d-8373-6e599a282150"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1449140d-e3d9-4ece-914c-6ba1a2a0ad99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5a48923-8751-4542-ab6b-c2437f368c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a94c36f-9183-481e-b10e-eabae354eca4",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fadd0d1b-6c10-4e2d-b761-7c905442de11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71212ce5-8fbd-47fa-9157-02ff68ace2ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46454012-ef6f-4882-9215-505ae16fcb94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f5ba362-b1db-4be9-880c-d93f39d838c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fa85392-df70-48c2-9f4c-1cedc0b2bc52",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df2fca52-7f8c-4c5e-93d4-c8c130e1dbb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8467fd2a-e2a2-496f-afb8-fa6827f765f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6d6f81-91c3-4de2-bed1-a9f105309e18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73e51a9f-0331-4039-a98a-8930c4b33de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e13d30c5-3385-48c3-a169-b98edee47f0d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b0356fe-0043-4699-bc8e-8247e4518314",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c71b80d3-bd30-4216-8a7f-627d769e36b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e057ae-92e6-42c7-bfaa-9e7f849403ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5412be1-8bfa-4ecb-8570-bc58490075b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c236c4d-9b44-42cc-bdf7-2687b7b22746",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f983c5-d95f-4fe6-918d-3c94bd586ae3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfd15f21-f65d-48fd-84cc-883f6ad86d30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8a122a-26f8-40d8-9b13-c11afb496a5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a528177b-b569-49da-9129-5f2aa80b6cb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d6969b-764d-4441-b858-84e30c485b8f",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5acce6f9-5a9f-4709-85fc-aef6199a34af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73236d8b-04be-46c5-9b5a-e6c22d7552ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31a32d7a-2bad-45b8-82a3-bcfc9d55c7b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24d6a323-0ef8-4892-85ad-71c3732174b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ac7892-6b0b-47fc-8fb0-c99e0684a362",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8a617cc-ff1e-4aaf-8855-643d47ac36ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d48a346-1f90-408d-b714-50f1aa293deb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "710a5cc5-ae24-4841-985c-9e4da28e2d54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84881597-c378-463d-bb2f-afaac96c1ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed973cdc-0a64-44b0-b8d2-561b4d0d81a0",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e3bf9a4-7d29-454c-b28a-6cd58f2602cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdfeb51f-299d-4029-ada2-81a13268f75c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f769de3-1834-4b79-9cab-dc9a3d5d8165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f4bc508-5025-44c8-9372-be53fe505f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71cbbce7-83ea-4c8d-9ced-da1209673aa9",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c10996c4-b016-4131-a553-90a8b8ffbb12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a8fb524-4eac-4290-8594-e61eabbb4d78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08846ca-62ad-4a46-9363-3d15f325529f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8752fedc-20ed-4a11-be47-d895d83134db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbb70f9b-2657-4f1e-bf63-71918c11c40e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "420756ad-62e2-48cc-946a-da70c7920d00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45adacd4-3adb-4d33-ac25-f85ac5f81def"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36875a8c-e629-4d98-83da-4deccb6ce150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b742f36-c311-4d67-b93a-8ae502e3d1ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f86198-90bc-4c63-a6bf-fc4578919e7a",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd113598-550a-4132-bea7-3fbe4bd6aec3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1270c70-6a13-4a82-8349-e4e4fa50ee93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e3cdbb5-5e6a-4407-bc5e-8889a65b336c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5e1e0a7-fa52-4b90-bd11-b2bcf4c72687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b03dbacf-4293-49dd-87ae-e4653cc5c7f3",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4edba59-5b36-41b7-bab5-1891511bb352",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ecc5a6a-855a-4415-ac3a-2e7d45acae5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b851092-d3ca-4dab-8661-b8f60ea5b8e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f259cb36-b9bc-42d2-af85-700e3764ce21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f6fcbf1-812c-4cb3-b96f-b8ba2fc77845",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8054d14c-948e-4dc1-af91-addf6896e66a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6597d6fc-3a20-4a2b-bd40-dba23741eecc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a384f9a3-191b-4cf2-a746-16c7e54cf57c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c016fbf-cff2-4613-a380-8ca99f7dce15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "609bcb4a-4048-4e50-8db0-6dba10896f62",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef31cc0-1b3e-42e0-909e-380125c75533",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13a67746-e931-430a-8339-ae84ca2c5360"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c38949-f02f-4912-912e-6fe4d1347183",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9c26e32-45b1-43be-82dd-a7d7378316e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3054638-e755-40c1-97ad-92256e67b75f",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f26e1917-8698-4adc-b2a5-e3c793882649",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3885bb7-7393-4462-bdbc-121e1c04963c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90bb226a-e96b-4f02-9342-992bf545c550",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e46ae63d-2db5-461f-a9c3-4f1149d52986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a574974-7b57-43a3-87f4-2531b6e3c4d9",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d5acddd-337f-4d82-a733-90e151425aba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adda67e4-839a-4aab-ade5-17d01d5b4e7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a434a8-3d60-42ae-89c0-12cde64f345d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1869d15-e4d0-4aff-8212-a47cfe6f2a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b58e8d-b4e6-4654-ba4c-e06a22a10592",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b7a429-82d8-4357-94e8-31948d61db77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf79a89f-d9c0-43a2-a166-d1f4ce2c1d74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ced7f4-863e-4a6b-86cc-325c88b125e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fe232aa-0331-4864-a172-7eea5244a299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "478ff9d4-6ba1-42cb-99f7-909ba8ebbbc4",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c44fdd03-7482-4cbc-a32c-7456d09598ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e160eadf-2994-49ca-b52f-e1e1f56afbb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdde11a6-da0f-4e05-ad91-fe5bad981577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d071afc1-a268-4074-aee9-48b49df80a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a440c51b-1e01-4b4b-98e0-f1a469093437",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fc9be10-d34a-4546-9eeb-11c7c7f8ce83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a0da7b2-ccd8-4d8a-910d-e1637eb6eee8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45572347-9cd1-4fb4-b675-ff135fcd31a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e30d52c6-7c15-4fb4-8b56-8bd7ebfb4a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f75633-6079-4070-8fe6-5c19852fd58e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ccc014d-f8af-44f0-884c-48c68b908f99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a47fb223-7ccd-4136-add0-41c0a26cab3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c79f5ee3-2f04-456b-bf20-b8c70185d530",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4981b035-586e-456c-b3b3-8ca427d976ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d46e33-e769-4d79-b4b0-f90bc6cc88eb",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c79a5b9a-4ce0-40f9-8207-1d85f0914237",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "157be006-3c56-4d0d-8739-9d23691d8a1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fdd686f-0c23-474a-b568-dd1bc7a6dd9c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89f82ba5-7935-4b4a-b74f-ae2d7322a5cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e4d8f04-ad4f-47ae-a956-583ed8e70380",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70feace4-0e77-4227-a761-0711595bd6d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "499f3bfc-a17c-4f6a-acee-24c1054adcdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e207fd8a-abb3-4b7c-84ca-82acb28563d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf56ea6b-dd94-484b-8bdb-198fef506a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bddfa628-33eb-464c-8197-38a7408ccdd2",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6fcacf1-6281-4377-89e1-3954929cafa9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e62ea39-a434-4609-bbdf-36772ff6884f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2049af17-7568-4863-a4d8-81ee0a6836c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eaf0c50-bc2c-4f22-8ccb-97671f0605e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1099da58-392d-4e92-9e64-37eedd6252cd",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e66cb7-7871-4d70-be23-5ad22137ce38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "533a278a-7dc1-4a2e-a5fd-7c5ff692c03a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "515cc572-8333-40fa-8bd9-ae835a04ad39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ca03efd-8d16-4f96-bbf8-b0fd8de9732b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d48485-5ab9-48dd-b2b9-4131591a969b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5494f69-8665-47a0-8c59-8a5c5927504e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "814cd28d-6421-45af-b6d4-747660abf168"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a1847c-21c7-460b-91fc-d4408156a9da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4c33610-0de2-4ec5-a74f-4aa2a172bcd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "671eb5bc-3c10-4d69-83ba-5443585571fe",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e709d8b-950f-471e-ab65-272ff3738a3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39f31270-2009-4932-9fbc-827747de7825"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a8780f-2a77-4cf6-997d-1f1d1ef4a0c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b0e879f-df8b-4b54-83b9-974f4ea13f14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de96dd2-7670-4db0-af95-7d4c1aa8bd9c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a776badf-ec92-453f-b4bf-908c7f4a067b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0647bea-9d2e-4c7d-93b9-3c93f05e5ee1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54eace34-add4-4ec7-9840-27e33cc6b129",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8463360-7848-420e-85c7-83573d7f252c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1827562a-4bcb-4948-8879-4806d9f482a9",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a66c26-0199-410d-8926-9896c4e58c94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "249543f7-ff03-4eea-8e60-8cdfa3dbb4d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c05ff9ee-c1d8-495e-a307-a2a1b7330b9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b742e694-9450-492e-b457-57de292af1ff"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c700bfb5-e648-4b7d-9d45-ceaa8a95c1e8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e70a2b54-e8b6-488f-99a1-95aba339c9b9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "beeb688f-7a8a-4aa9-a5b9-6948f02632f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aa3b29db-3886-4ac5-af1c-060bf9639ae9"
                    }
                  }
                ]
              },
              {
                "id": "df6ee1be-a2d2-48d4-b39b-447ccc6e7dbc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "511b86b8-30e8-4c05-a07a-68087e95092d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6563da7e-7a54-461d-a348-6a3efa6aff0e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "909becd9-8c99-4675-b503-6de879aa09d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87b20506-0e7d-47bc-9647-638d82a85775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f2ec99f1-4fe8-49ac-9cef-693b164f5c7c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8d07c361-3406-4a21-9cac-3241a14a226f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "76e61a4a-c006-4f3a-bf0c-44114ec773f1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "67446ab5-6a72-473c-b4de-84ca7b47831a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "22fe0bf9-6b17-46f0-a64d-73def9c17145"
                    }
                  }
                ]
              },
              {
                "id": "a13ff6c7-bbba-43c8-a381-f84d6f83401d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b05d6b7d-d2e0-4638-bf0a-3dc620ef1b6c",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "591b4af8-ee0b-492f-81ea-8833cc6308e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "5589fadd-ceb3-4c01-a976-a12e425ee97f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae150016-8ee9-4910-aa9b-d7583b766eb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9312581e-bcdf-4fc8-9f7e-5974f1b7c945"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f8181431-509b-437c-abd7-c9942ae29bc3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0960c687-a8ad-488a-9226-99e6dc9ac8ce",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6bcd32aa-5589-43cb-9da6-79e361029863",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "49fd1843-9803-4793-b56a-df14162fbaa9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cabc1a42-903a-446e-9a20-69aeabd987b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7da67eb9-daeb-43b1-9ae5-177947b0fa52"
                    }
                  }
                ]
              },
              {
                "id": "a1fc016c-f9dc-418a-8f6d-aa3d2c6f66bb",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f78b364a-0e66-4157-81b9-76c0436dc415",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "06348316-66a3-4139-b235-dde62e76974a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5679d302-1975-45b1-8406-214adfd51640",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0651a6ec-4fc8-4b1b-b8d9-7365ec82ac5e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3960ced2-faff-4a59-b87b-cf038b22b230",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "c756e7ac-a3fd-4e87-a6d4-56c71b190f27"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "13c1d1c9-0d4b-48a3-8efc-6458026fc2b4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "34deb6a1-a9f9-463c-93be-c27111ca1692"
            }
          }
        ]
      },
      {
        "id": "98206b39-9495-44a4-9ac9-911b9924854c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "4b651616-5360-4ea0-ba87-50ff3fe32d39",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6b207341-412d-4eec-8baf-3c64fbdbfa87",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bbde6719-243a-4fa4-a089-496e83c89afe",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71feb3f7-e02c-40ea-a996-b67bfc643fb3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "203bfd9f-b578-43e5-bb5e-7a01168b5ce1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "815089e9-6835-4b11-ae5e-2f54b7363bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "29dfd600-a8b8-4448-971f-9df0f4e4e17a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a6e9aef2-6667-40e3-8320-d1a10a2661b2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4e8f6f3-c2d9-405f-a229-4cb77289ab81"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cbba1e37-669b-4435-9849-a72ffc88a5a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ab69d9d-c156-41b7-8d6f-db70bfb5a1aa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ca1044a2-5bc4-4a67-bb9d-197276b4f0e0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "5a7d51fb-2998-472e-b2e7-90ea6dba346a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f8fc7dac-4ced-44b4-962f-4b031010eb91",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "82797963-c13a-4951-9107-576e4d58a634"
            }
          }
        ]
      },
      {
        "id": "0b0bb473-b866-4558-822b-216416f9ec92",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "3be48b2b-0bcd-4896-848e-de3a79d1d163",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b5435ae2-6ac7-4d9d-b2d5-f8e59d112409",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b5061dc7-4e14-4836-b926-91b846ac5a77",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb25870-923e-493c-bf5a-508e23e9201e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e69eb098-e183-4b39-ab62-b667ef5a1b88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec300f2-bb11-4edf-8bbe-b50efddad8cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8baab3c6-1da6-4cf3-9f36-5c76449fb8b6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f4454380-3cc6-4bd3-a4ae-63b8d41d3845",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4968389e-f5e6-4a36-8c54-e02d00e1d7df"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e77d2e2-901d-4506-b009-e029a04fdf99",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "03ac5cbd-d16d-4835-acdb-02087b117678"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2fe597e4-f534-4f16-a989-6eb963b913db",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ffaa59a0-4c2e-4c9a-a252-2ef1e4490487"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b6113d2c-dfc4-40bd-a153-9c49c3a01439",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "58330744-36a1-445e-bacb-1905d29abf54"
            }
          }
        ]
      },
      {
        "id": "0edda5a1-f97d-4a91-a0d9-777b01b064e3",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "8eff7f26-acf7-4230-89c5-ed38748ca6c1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fc4fb2a4-f771-4110-8392-e78c76d74d16",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "177e000f-475f-409e-aa53-b39a861a613c",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64fcef02-2ecc-4403-b948-ff8510b5fe33",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9aede8dd-26d1-4f21-901a-eb4c1c1f2d78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba277f1f-6be0-4694-91c8-339173867c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "416c13ab-4ff2-41a7-8d29-01158928b98c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee7cf1c0-60a1-4753-901f-eb93da835fcf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c72f0125-148f-43b8-a286-468b99c7653c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7aed1ec0-e5b3-4994-9708-1c4a178cc078",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "495c9e70-5e74-4f0a-ab49-ac5e1b15eeb2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6465ca1d-b3b1-4b2f-afed-26379faeb306",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "10920c06-40ce-4f4c-b742-41867e6927d9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9cabfec5-bc8b-48bf-9a63-967668f86ed4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "142beeff-e6c5-4a79-b8bf-95b26c087984"
            }
          }
        ]
      },
      {
        "id": "32324078-4566-40f6-997d-3fbd9ad1b2d2",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "df3ca0ed-0e03-438e-a289-32349fabd326",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "32280ca7-7a54-41b2-8302-03c02b28f322",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e0476771-9bff-4f03-a936-4978571b3e39",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "14735c97-a5ac-4ca6-ae30-474670050a89",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "245d5fb0-2de7-4fa9-8c45-9cc49c530bf6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 141.4563492063492,
      "responseMin": 6,
      "responseMax": 10543,
      "responseSd": 693.614802412949,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1722904817397,
      "completed": 1722904861849
    },
    "executions": [
      {
        "id": "2c898e2a-3021-47e8-a1e2-3d83b837125f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "86a5d362-3a4c-44be-93d2-6dd3b16c7090",
          "httpRequestId": "9bb5a7f0-c76b-4de0-a2fb-7d404a602bad"
        },
        "item": {
          "id": "2c898e2a-3021-47e8-a1e2-3d83b837125f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "5d3f7fd2-2f5b-4967-b9b0-3c76bd6b39db",
          "status": "OK",
          "code": 200,
          "responseTime": 42,
          "responseSize": 0
        }
      },
      {
        "id": "becd59b1-eae9-434b-bcfe-1e06f6e7dbc3",
        "cursor": {
          "ref": "84322d20-a417-456a-a180-ff9198905184",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c75357a9-a1cb-4040-aceb-d0a6b8b3486a"
        },
        "item": {
          "id": "becd59b1-eae9-434b-bcfe-1e06f6e7dbc3",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "4bd0a9c2-fb6d-4705-ac78-dc04283ae77a",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "0e0a8e61-6415-41bc-b5be-be2ba0d90ffe",
        "cursor": {
          "ref": "06f1e5dd-ddf6-44c8-be36-c7c1137b2584",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "98762b64-c337-4797-a0a2-09e0acb76051"
        },
        "item": {
          "id": "0e0a8e61-6415-41bc-b5be-be2ba0d90ffe",
          "name": "did_json"
        },
        "response": {
          "id": "c0ee5b4d-ae86-4472-92ea-66f9531b4841",
          "status": "OK",
          "code": 200,
          "responseTime": 376,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c918ae-8601-4a5b-806b-f64e59a48336",
        "cursor": {
          "ref": "58d6b047-a9da-4c72-a902-5a803748d19f",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "98fc863e-0abd-4188-b1d1-144b9342b447"
        },
        "item": {
          "id": "63c918ae-8601-4a5b-806b-f64e59a48336",
          "name": "did:invalid"
        },
        "response": {
          "id": "0707de33-c220-49ce-8004-fbb3fe43059d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 652,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c918ae-8601-4a5b-806b-f64e59a48336",
        "cursor": {
          "ref": "58d6b047-a9da-4c72-a902-5a803748d19f",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "98fc863e-0abd-4188-b1d1-144b9342b447"
        },
        "item": {
          "id": "63c918ae-8601-4a5b-806b-f64e59a48336",
          "name": "did:invalid"
        },
        "response": {
          "id": "0707de33-c220-49ce-8004-fbb3fe43059d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 652,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "032ad1da-fcb7-46f2-922d-f7ab80036df7",
        "cursor": {
          "ref": "05a16f8a-f9e6-41c3-909d-2b36c18a5b88",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "4592a5fa-39e1-400d-aefa-17e23dd83236"
        },
        "item": {
          "id": "032ad1da-fcb7-46f2-922d-f7ab80036df7",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "80bfc477-30a3-43bd-9109-c6078349c9e4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 339,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f41227-cd0a-48e6-9677-9432e48247be",
        "cursor": {
          "ref": "d7f7966e-eea1-435f-a7b2-d83e33eded75",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "16b34501-201f-4f7a-a374-b3d2e2c1cf8d"
        },
        "item": {
          "id": "60f41227-cd0a-48e6-9677-9432e48247be",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "238c5d99-4ead-44f0-96bf-e7ee1789de6e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 64,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad3f335-2e2a-42d3-9227-51c695612f8c",
        "cursor": {
          "ref": "d95e5e0c-605c-4403-aa0f-dd8da60b6a1b",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f160d93c-a81b-4a8e-b2fc-4cfda5e06831"
        },
        "item": {
          "id": "3ad3f335-2e2a-42d3-9227-51c695612f8c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "232f619b-95d6-4a8e-a9b9-c0dc6604e07c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9e7aff9-66e8-4870-a913-2e840a273fba",
        "cursor": {
          "ref": "cd3b9dc8-9262-4bad-811d-af64ac44818c",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d2ed69a1-9d93-466f-b940-6eeb2db76a4c"
        },
        "item": {
          "id": "f9e7aff9-66e8-4870-a913-2e840a273fba",
          "name": "identifiers"
        },
        "response": {
          "id": "56e94a19-cb08-4fea-bdad-79ce3c24094d",
          "status": "OK",
          "code": 200,
          "responseTime": 69,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f2182c8-d4ce-4022-a220-c76c952f830b",
        "cursor": {
          "ref": "2c3809db-4615-42a0-b3ac-56062b3fdd79",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3b38f32d-0d24-4af7-a36e-7541b8ae75f6"
        },
        "item": {
          "id": "0f2182c8-d4ce-4022-a220-c76c952f830b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "2fee1e64-afdc-4cc3-b333-cdf58375366a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2750431-0bed-465c-87ab-736b0ffa5c71",
        "cursor": {
          "ref": "81d32905-27be-4a39-a6cd-9926401c1c6e",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8501cd8e-5d61-4c81-b8e2-f55d08627da5"
        },
        "item": {
          "id": "f2750431-0bed-465c-87ab-736b0ffa5c71",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "87704969-7946-4152-855a-4da869ebb8ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d260ec09-6e0d-4d59-a529-bfade7f68c3a",
        "cursor": {
          "ref": "22c75e06-e906-4d34-ae88-8d7126e4d712",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "431dbac7-f46c-45f7-886b-f9fbdde6143b"
        },
        "item": {
          "id": "d260ec09-6e0d-4d59-a529-bfade7f68c3a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f9f112f8-d9ac-48aa-bb4b-a3296fca725b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "075c584c-0e99-4634-aafc-d872d6629f20",
        "cursor": {
          "ref": "55195034-fa66-42b7-97bb-ab2e3e36a83f",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "8e59b712-cc7a-4190-83c1-082944d7493f"
        },
        "item": {
          "id": "075c584c-0e99-4634-aafc-d872d6629f20",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "df036300-c84d-4712-85c7-c70b1c1ee762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a9c5268-9a01-4c43-950e-cabce9020d25",
        "cursor": {
          "ref": "7f47a2e9-36eb-474c-a8fe-55d7764743f1",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9e86d13e-1b0c-4b1c-8cfa-450aec718e3a"
        },
        "item": {
          "id": "9a9c5268-9a01-4c43-950e-cabce9020d25",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "693084f8-48c8-455a-94f5-5dd1b7ff11d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c00ce83-85e7-4eda-a546-48cedaf23061",
        "cursor": {
          "ref": "e0ad4733-3455-43af-a329-5f004515f6e6",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a4e95a79-fd6b-4c53-b8c7-c95604a088b2"
        },
        "item": {
          "id": "0c00ce83-85e7-4eda-a546-48cedaf23061",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e3d0346d-fa38-4daf-93c2-1573bd664f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88df4718-43ca-4017-80e9-3b9edf5954e1",
        "cursor": {
          "ref": "be411c54-ddf8-4718-8e45-85c055d86f41",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "52a6f82c-73e2-4cc6-9ce4-2a1485b7e151"
        },
        "item": {
          "id": "88df4718-43ca-4017-80e9-3b9edf5954e1",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "ba452e67-5aef-458e-92ab-1440b16be650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b586e91c-4719-4f22-92c7-98b1cfaa27de",
        "cursor": {
          "ref": "865fc7aa-b798-48cb-8b8b-51396383fb68",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "5b044ac1-a09d-4b2a-a732-4801b865bf1f"
        },
        "item": {
          "id": "b586e91c-4719-4f22-92c7-98b1cfaa27de",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "4a60b4c6-ea46-481f-995e-b06a804cd666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3bc4e2b-53e5-492f-ab09-0aecf75b1ec8",
        "cursor": {
          "ref": "d06eff75-438d-4501-ad78-590ed1ee04f2",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "6114a883-1c2a-41ab-91e4-e56ee7eca63f"
        },
        "item": {
          "id": "a3bc4e2b-53e5-492f-ab09-0aecf75b1ec8",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "2403911d-4a8b-48b2-8642-46f42ce97820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab728704-c5e8-4c1b-aaa8-048fc7712f90",
        "cursor": {
          "ref": "3f89d440-cbff-42fc-a744-a71e3edda893",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "9caa4f5d-0a23-4d19-86c7-98dcc2966f94"
        },
        "item": {
          "id": "ab728704-c5e8-4c1b-aaa8-048fc7712f90",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "bdd2d143-6dfb-43bb-99bc-7affd6973fcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f157422b-b7b7-4ee5-87df-271322e44c3f",
        "cursor": {
          "ref": "0be971b4-0ee7-42eb-9554-069424dbf63b",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e7b2006f-93b5-42b5-9cd6-7c79131edec3"
        },
        "item": {
          "id": "f157422b-b7b7-4ee5-87df-271322e44c3f",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "7ca0f7d3-259c-43dd-be7d-56d6a2e93787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a5f6648-612a-4572-b578-f27452a00d92",
        "cursor": {
          "ref": "d69695f5-1718-4a48-9878-c0149bfda661",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "282a573c-5d25-4033-a158-fd30547594b9"
        },
        "item": {
          "id": "3a5f6648-612a-4572-b578-f27452a00d92",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "8be9e0ca-5c4e-4a46-a5b2-ebdf25c07a4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc381e0b-2cb0-4007-a911-f55922b72e4d",
        "cursor": {
          "ref": "2fe7d216-5720-404b-aec5-07d7092ff0e0",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9049afad-306b-473b-a8c2-ce3371b44cf7"
        },
        "item": {
          "id": "bc381e0b-2cb0-4007-a911-f55922b72e4d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e5fff448-ccf9-468d-9109-b6c924c622c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cfdf074-b8da-43e3-bd0b-c4f363971c75",
        "cursor": {
          "ref": "ec321016-f3ed-4fb4-bf7f-ce6f1db7dd46",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c9cfb4c3-bdb9-4546-a46d-5482032e7b41"
        },
        "item": {
          "id": "8cfdf074-b8da-43e3-bd0b-c4f363971c75",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f8da7867-0927-4051-95da-6b741baa0ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c264f90b-1e44-4f89-9568-c813df6ad8d5",
        "cursor": {
          "ref": "55a1d4bb-7500-46d7-aaca-de7bfbd3b1bf",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4f699764-515e-4e93-aa50-e614ee7d9106"
        },
        "item": {
          "id": "c264f90b-1e44-4f89-9568-c813df6ad8d5",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a8f1396e-b806-40c6-8496-fbead702d455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de727fe9-144a-4523-a010-cd059f51fa81",
        "cursor": {
          "ref": "4033e99a-1ceb-4143-b936-c686fd7dd8d9",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "58f33d64-2715-498a-8f56-881fb16e2f50"
        },
        "item": {
          "id": "de727fe9-144a-4523-a010-cd059f51fa81",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b65e7c5c-fe7a-41a1-995a-8fcaee005818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc466ed9-db93-4cea-82d7-a82c0c59d5f7",
        "cursor": {
          "ref": "816dcd54-9f97-4ae1-b7fa-0e6a54ed057f",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "7e93ce88-6cab-4114-b7de-9c89c4de38fb"
        },
        "item": {
          "id": "cc466ed9-db93-4cea-82d7-a82c0c59d5f7",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "62d7c5be-4bc2-4b1f-a3fa-bf66e3dbcce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f224e418-5e88-4ebd-a27c-332da59bbc12",
        "cursor": {
          "ref": "db28d9d6-c689-47b7-a646-90ce10c2a63b",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "fae0f2e7-114e-4483-ac85-c92590d600c8"
        },
        "item": {
          "id": "f224e418-5e88-4ebd-a27c-332da59bbc12",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b53f27a8-d93b-4e2c-bb98-8cf6503f7e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b2d1e0-48db-48ec-bb61-13f7045d49ae",
        "cursor": {
          "ref": "2591fe7f-661d-4082-b0ea-3f6abab8f66a",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6ef4fdd4-18e9-4a04-8dde-47034ee53192"
        },
        "item": {
          "id": "c5b2d1e0-48db-48ec-bb61-13f7045d49ae",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a9e97b24-91ca-4532-8ff8-ca31f851494c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "495eef1c-46f5-4281-80dc-6433a35b94e3",
        "cursor": {
          "ref": "61e9ebf9-6679-4978-a5a6-d99bd4b4e7c6",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "b6f419a6-6a8c-4e0f-91ae-926f93c0d3e7"
        },
        "item": {
          "id": "495eef1c-46f5-4281-80dc-6433a35b94e3",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "9e32126e-f8b5-4181-8d13-fffc8c8e1ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8408716-c567-4c5d-bc5d-9a4c954fae10",
        "cursor": {
          "ref": "2be54988-6d6f-46dc-8b77-c75157e36fec",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "6c0e77ae-02df-4af4-8779-58c13575cd32"
        },
        "item": {
          "id": "a8408716-c567-4c5d-bc5d-9a4c954fae10",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a0abd924-5df9-40b3-ba65-139f9551060f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "730a57c1-533d-45c8-9b06-3c2c32fd1da0",
        "cursor": {
          "ref": "a6c9abca-b034-4205-b8f6-d9dce3c13f61",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a2568a7d-299f-4dbc-a02d-ad0193e71f80"
        },
        "item": {
          "id": "730a57c1-533d-45c8-9b06-3c2c32fd1da0",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "86663b0f-8b63-4cd0-92ea-250a5549bb95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd33964-f6e5-4e2c-8cf7-6d2e3dc59f6c",
        "cursor": {
          "ref": "2de3e9d0-b8cd-4fd3-a682-5a75151c5aa8",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "77d05b1f-fc83-461c-8f68-c413a512ae9b"
        },
        "item": {
          "id": "5cd33964-f6e5-4e2c-8cf7-6d2e3dc59f6c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "8aa62a37-6ab8-4b19-82e5-66b5abe7d9eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4342b6c6-86bb-4ea5-80a7-5723e2ddbe98",
        "cursor": {
          "ref": "df83af40-288e-4896-a9a0-f51b2c466d7e",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "1120592a-5653-4fb0-af49-880e474072d2"
        },
        "item": {
          "id": "4342b6c6-86bb-4ea5-80a7-5723e2ddbe98",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "52c3f9c6-dfec-41c1-a64d-2fab128f46bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 139,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a18cf0ab-12e8-47a4-a768-e52ee9e422a2",
        "cursor": {
          "ref": "d88e8b9a-0867-401b-8685-45ef0291b9c7",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2471b245-034f-4eb6-a342-320645f9e5fd"
        },
        "item": {
          "id": "a18cf0ab-12e8-47a4-a768-e52ee9e422a2",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f2417e43-4f73-4ce3-9043-1de6126b02f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a668a21-ba36-42de-905e-c2001cad6847",
        "cursor": {
          "ref": "36b88f89-51c2-43de-8820-fdb835af03b7",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0dee8ced-4958-4b11-a970-78aa042533c1"
        },
        "item": {
          "id": "7a668a21-ba36-42de-905e-c2001cad6847",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "90ae206d-a375-4464-a5ff-1246876fa162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a3b3a34-5b51-4d19-8a7c-59b98c02dd1c",
        "cursor": {
          "ref": "fd011423-b8e9-4243-b3df-66fc4ec27378",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "def5c498-bd5b-41d9-9f72-510b4bf6d436"
        },
        "item": {
          "id": "2a3b3a34-5b51-4d19-8a7c-59b98c02dd1c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "9f1d2d3e-dbb1-4a9e-80f2-bbda341d1109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 124,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a4723b-f3d2-445f-8a32-4adf8785546d",
        "cursor": {
          "ref": "78db6a77-14e1-4bae-96b9-9329619276a7",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "753d17f4-181a-4ae0-8b03-260d95248e19"
        },
        "item": {
          "id": "16a4723b-f3d2-445f-8a32-4adf8785546d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "bc23ace2-f234-455f-b72a-68c17b959434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e117b6af-d73c-4240-95a4-f2f296dc4259",
        "cursor": {
          "ref": "5de48d1c-95de-4e06-b8ff-3e7fee619f73",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "844d1b5b-e799-4824-87a7-a789f0474485"
        },
        "item": {
          "id": "e117b6af-d73c-4240-95a4-f2f296dc4259",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "60bd8288-7066-45f1-8a45-2a75dc517c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "674d01ab-d7fb-4cd6-bc03-894cc87a5abe",
        "cursor": {
          "ref": "583a957b-4fe2-41be-81f8-90148d65b538",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "834df4bd-6245-40ad-b49e-0cb8cfdf9baf"
        },
        "item": {
          "id": "674d01ab-d7fb-4cd6-bc03-894cc87a5abe",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "61c3a45d-2eb9-407b-bdec-a9f86644aeac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d7c9ec7-8c33-41b2-9252-115d4c4ace69",
        "cursor": {
          "ref": "8a15c740-5d76-49fd-9b90-84a9fdb2d6ff",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "dcfa5461-9432-4bd8-bd36-8c85ff8eb889"
        },
        "item": {
          "id": "7d7c9ec7-8c33-41b2-9252-115d4c4ace69",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ea8986c2-8790-4c5a-a5da-ce4148a0f893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "765a581a-93ee-4084-b4e8-6c459076de28",
        "cursor": {
          "ref": "4b50acec-7fd9-4d8f-a42e-0d2cff101853",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "5f9fa87e-8c8d-4ba4-9d4d-fe4498812ebf"
        },
        "item": {
          "id": "765a581a-93ee-4084-b4e8-6c459076de28",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e3d0bb78-b33a-4d22-b879-7989ddb8c2ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f57f8eb-12c7-48ff-9d54-4d9d792f0de3",
        "cursor": {
          "ref": "b5c2c997-d4b5-4bc3-888b-47d3da23b558",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "cc4d7ad4-a02a-4382-95c8-e36124ee4c8b"
        },
        "item": {
          "id": "8f57f8eb-12c7-48ff-9d54-4d9d792f0de3",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "52e7218b-8686-45c5-a36c-78bcc9eeb4b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "babfcc92-36b4-4524-909b-5d78b11ca068",
        "cursor": {
          "ref": "2d7581c3-0afe-4e9b-a469-0a271c1633ee",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "dd96be07-9567-4706-bd8b-bc0cc02f0755"
        },
        "item": {
          "id": "babfcc92-36b4-4524-909b-5d78b11ca068",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "21cb491c-e863-4338-a783-840f43a06cb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3226a29b-0e48-4483-bca6-2783a8733fb8",
        "cursor": {
          "ref": "5b9642d0-b4ba-4898-84ea-0b29848b7741",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7996cabd-79da-4c42-a30a-c961f6310b48"
        },
        "item": {
          "id": "3226a29b-0e48-4483-bca6-2783a8733fb8",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "3b95140c-0497-4150-a0b4-5937082aba1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3926397-b131-4013-b7a6-7d7afe3f7313",
        "cursor": {
          "ref": "0ec02a54-9072-48ac-a3b8-276491280af5",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "00791e26-eaec-4ea0-a47b-6f855748e252"
        },
        "item": {
          "id": "a3926397-b131-4013-b7a6-7d7afe3f7313",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "dea1dd42-b6b2-4a0b-80d1-7cec358399fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "595f3bbe-39a5-4218-8dc3-e6baf9fe1ef2",
        "cursor": {
          "ref": "53696879-74eb-4718-a293-a5fd96fb3fce",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "026ed6a1-a638-47d4-a661-bf175327abd1"
        },
        "item": {
          "id": "595f3bbe-39a5-4218-8dc3-e6baf9fe1ef2",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "93837c4b-a6d9-4b9e-86b2-8463752b2926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da1b514-cc4e-4b62-b145-33167ab69e7b",
        "cursor": {
          "ref": "c0405933-d9bf-4d4a-a336-8a358a44d1e8",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "7bb45341-57f7-4b8d-94d1-0b4bad76780f"
        },
        "item": {
          "id": "3da1b514-cc4e-4b62-b145-33167ab69e7b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "380bb88e-c401-4808-88c2-d3574395533f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6114c9-dbd0-45d4-a5f6-35e0783f278c",
        "cursor": {
          "ref": "d90bce64-82ba-4e0c-8c7a-322c4c9689db",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "f547e3b6-cb2f-422b-b573-d3608e188759"
        },
        "item": {
          "id": "cf6114c9-dbd0-45d4-a5f6-35e0783f278c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "fdeb9dbe-e60d-44b0-98b6-0df6e25d8064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f81c3f1-fe6a-4229-b0e7-68b3f48976a6",
        "cursor": {
          "ref": "be76d3c5-91a6-4697-bfd6-1ee92d5551a9",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "bf3a5d5b-4b99-4cfb-8e5e-3415298f5c15"
        },
        "item": {
          "id": "2f81c3f1-fe6a-4229-b0e7-68b3f48976a6",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f2576356-4b7e-4b99-9805-383571d92860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb2a91b-322b-4a15-be5b-a977007e6a20",
        "cursor": {
          "ref": "457efda9-5e04-413b-ad52-517feaad9b2a",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "763b1db8-0f17-4a70-85be-a66cbade28d6"
        },
        "item": {
          "id": "aeb2a91b-322b-4a15-be5b-a977007e6a20",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "30a1ee5f-5707-476e-819c-5bcab0ca11c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2da785b-e908-4efd-a9f7-614136fe5ef8",
        "cursor": {
          "ref": "3fa909e4-0f71-4cbb-a399-0f584ee01257",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "cfa49530-01ce-4867-8b9b-4ec36c312121"
        },
        "item": {
          "id": "c2da785b-e908-4efd-a9f7-614136fe5ef8",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "556c5060-160f-4a3b-9bdc-2d4d0de60d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "764cda44-dd1e-4d2d-aee3-0607957cb3aa",
        "cursor": {
          "ref": "405b5b2c-387f-4d84-8abb-42ed0ee0750c",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "53a8ce54-8a02-4085-ba8e-cde2de5b14b6"
        },
        "item": {
          "id": "764cda44-dd1e-4d2d-aee3-0607957cb3aa",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "76f7db08-94ad-4f87-b5a3-972fcb2bb697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7adda80b-2907-4447-9f09-8402a1be461e",
        "cursor": {
          "ref": "c2200758-7790-4fd6-afd4-bd7395062824",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a77a2b88-2670-4d3c-9819-c9b50ba32320"
        },
        "item": {
          "id": "7adda80b-2907-4447-9f09-8402a1be461e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "cb46d230-3f04-4b36-9f93-c3a913c5f8dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "583c47e7-d5ce-4f3c-96f0-3d8434f3be4d",
        "cursor": {
          "ref": "cc4aa5bb-be5d-4d0c-b91a-c7172729375c",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e136a626-3260-4494-8e41-6ebe9afa8938"
        },
        "item": {
          "id": "583c47e7-d5ce-4f3c-96f0-3d8434f3be4d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "3b5f2394-0c83-4545-9305-6a40aa071c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f537d636-163d-463c-9927-c4cc53f4325e",
        "cursor": {
          "ref": "dfe6a807-06dd-478d-860e-aa65c1334328",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "5abc0fbe-7f56-4bbf-bcde-923c83206ad5"
        },
        "item": {
          "id": "f537d636-163d-463c-9927-c4cc53f4325e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "bdb91b57-b917-471e-8a33-e8a4d725f62a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca6dab3e-95d9-4340-a21a-6f07a2449433",
        "cursor": {
          "ref": "b6efc7de-aec5-443c-9762-61d8076244e6",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "5a7c77b1-4fe1-478c-bb06-1a753a650a56"
        },
        "item": {
          "id": "ca6dab3e-95d9-4340-a21a-6f07a2449433",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "6c352591-d664-46a0-904a-665a5aa6de19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99782f10-51df-453e-a65d-77c03e611589",
        "cursor": {
          "ref": "a8503add-f9a8-47cc-9f3e-1a829774084e",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "0d8239d2-5426-415b-a46d-220e6003cfd8"
        },
        "item": {
          "id": "99782f10-51df-453e-a65d-77c03e611589",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "4faea44f-6ea1-4ba0-b751-25e44e1bffab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec8742b-ba3a-4b01-89cb-c388a924f04a",
        "cursor": {
          "ref": "5e0d0853-19ff-4973-aac1-6191cd01a115",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "3468580b-d3ac-4c24-a8ec-04df9814ecd9"
        },
        "item": {
          "id": "3ec8742b-ba3a-4b01-89cb-c388a924f04a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "0c99b20e-1f70-4e61-b2b0-c4d6f6387c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4e5c4cf-c047-493c-af83-adf69abf01de",
        "cursor": {
          "ref": "e347ffa8-8d3e-4cfb-a068-7b556fbd0395",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "2529b681-a1d0-40ed-9f82-692fc76b83b2"
        },
        "item": {
          "id": "f4e5c4cf-c047-493c-af83-adf69abf01de",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "8be2b106-aa52-4aa5-92c6-3df1e7b086ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc5900f-7475-4f12-a7fa-3d28011c27bd",
        "cursor": {
          "ref": "73d62634-164d-49b1-9c6d-3951a21d159a",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "91ffe450-e6f7-4339-93f1-a42e6787e5e0"
        },
        "item": {
          "id": "8fc5900f-7475-4f12-a7fa-3d28011c27bd",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "bdc756fc-6a50-4fc9-9345-25098438fc6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "943612f6-ef1c-4c80-87df-4ad55ca9d312",
        "cursor": {
          "ref": "9b6f9821-0659-4495-b8bb-5da70e3fb28c",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "3142608a-7b42-4691-a4cf-e558c194b5ee"
        },
        "item": {
          "id": "943612f6-ef1c-4c80-87df-4ad55ca9d312",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d32fc3e4-35c8-4c04-8883-ab19aa83bfd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d79b53-6c1d-4933-8703-cab65809c025",
        "cursor": {
          "ref": "dfd90d77-e612-4ee8-ba9e-ae6489c08659",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "507a5cc2-5892-482c-9667-f4645b118be5"
        },
        "item": {
          "id": "17d79b53-6c1d-4933-8703-cab65809c025",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "712ef5e0-c16f-479b-b1fd-2dafdfec7db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cac85ba-4604-4137-8350-4ab37b4d3fed",
        "cursor": {
          "ref": "db61caa0-3ab8-4c01-98ad-bf95da79d100",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "7b069c65-2a02-4293-bd11-af6e27db9b5f"
        },
        "item": {
          "id": "6cac85ba-4604-4137-8350-4ab37b4d3fed",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "75825671-6fe3-43b6-bff1-578158b347a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b76a4dc-123b-4a8e-bbbc-7bf7a52f2126",
        "cursor": {
          "ref": "5821cb38-b756-4653-9a7a-4912ddf005e3",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "1b2be14d-4c2e-4c9c-95f5-0e517838385f"
        },
        "item": {
          "id": "2b76a4dc-123b-4a8e-bbbc-7bf7a52f2126",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "5b732bc7-ae5d-4db7-91e6-22d4129591b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90046ea2-8a55-4464-ab5a-c53bae2d1299",
        "cursor": {
          "ref": "8dd64fb9-4e84-47b5-aefe-d5ee9b23fb9c",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "87b3d1b4-355b-403c-88b0-9e2e5b21f624"
        },
        "item": {
          "id": "90046ea2-8a55-4464-ab5a-c53bae2d1299",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "2e8f9312-e7c2-4d5f-be20-fda601b00b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68265a8c-fd09-4a51-b9fe-8bfd2540b221",
        "cursor": {
          "ref": "97d168d3-a815-47c7-8855-e82ec080cd9a",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "f92d0d3d-4f21-4125-8470-ea5f39dc99ee"
        },
        "item": {
          "id": "68265a8c-fd09-4a51-b9fe-8bfd2540b221",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7d860abb-df93-491e-9394-e5b97ef35b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a18e154-324a-498c-867a-862b356c559e",
        "cursor": {
          "ref": "205ec401-d957-4a98-b843-db03a59758c5",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "4db6cea6-2352-4d11-a71e-10cc37c1b8e3"
        },
        "item": {
          "id": "0a18e154-324a-498c-867a-862b356c559e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "999d035a-6999-46d0-b9fd-94c3a8db123a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c82890-4e8f-4ace-90af-3a4cdbe3873a",
        "cursor": {
          "ref": "673ab4df-a1c6-42a3-ad3b-f436c9bca8c8",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "09434814-84fe-48b9-806d-2513ffbf7792"
        },
        "item": {
          "id": "77c82890-4e8f-4ace-90af-3a4cdbe3873a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f7a3c3c8-6d76-4e50-bd92-665849617628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f9ceecc-6d75-4a25-bc5b-8c467703b9c8",
        "cursor": {
          "ref": "388a430c-06ab-4625-8bbb-0d178af1594b",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c370b1f0-b4ea-4832-ac81-885b5c9e7aa9"
        },
        "item": {
          "id": "0f9ceecc-6d75-4a25-bc5b-8c467703b9c8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "eabff4d6-f632-4505-bf56-45ea364b45ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46886c91-5f93-4a28-8381-811a1c5aabaf",
        "cursor": {
          "ref": "17d76903-a0e3-43eb-89a0-d533a284d303",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f5942eea-f13c-4901-89b3-30b4f0c245a1"
        },
        "item": {
          "id": "46886c91-5f93-4a28-8381-811a1c5aabaf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e7eadbbc-cff9-44a4-ad11-4cf46dd4a8c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2330993-abe8-4cdb-97af-839e7a1361ec",
        "cursor": {
          "ref": "04103e34-cfee-4348-8758-6be98ae1d7e0",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "9950d514-1474-4612-8ce6-4796fdd0de3c"
        },
        "item": {
          "id": "b2330993-abe8-4cdb-97af-839e7a1361ec",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "cac84fd9-95c0-4d27-9c32-71b560128c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e367752a-4bf9-4a04-b5b2-8b7e2fbbebfb",
        "cursor": {
          "ref": "24ac317b-7b98-478b-81df-76136fdc73af",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "4b29ed46-df4c-4e79-b3b1-1aaee10775c0"
        },
        "item": {
          "id": "e367752a-4bf9-4a04-b5b2-8b7e2fbbebfb",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "7574038a-0dd0-4db7-996c-ca5390e2bc4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a571c6ce-9ef3-4065-bbf2-a511ad09cfd2",
        "cursor": {
          "ref": "2d0c2ed1-9788-4ebb-a89d-d65ad782878a",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ba7e2f88-0ddf-4c2e-83bc-86dd0f2630c7"
        },
        "item": {
          "id": "a571c6ce-9ef3-4065-bbf2-a511ad09cfd2",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d9429452-f8f0-4e48-a474-3f99e45cb896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea94ef7-c743-486c-9e01-72f116fa439e",
        "cursor": {
          "ref": "b6f78381-7e87-4d44-8bbe-2c58cb4ab5e8",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "5e615317-d201-47b5-8e5a-e05948f606b9"
        },
        "item": {
          "id": "bea94ef7-c743-486c-9e01-72f116fa439e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e083050b-5213-4272-8a71-fa0f4eea56e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e70b00a-a071-436b-b7fc-d09fea94f375",
        "cursor": {
          "ref": "0f9bbda4-a450-4844-8067-a09ded149e6d",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a8c41b8e-5f88-4a5f-92d2-af444306f02b"
        },
        "item": {
          "id": "5e70b00a-a071-436b-b7fc-d09fea94f375",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "595a1fa7-b9f4-489a-a7b1-638d62dc1616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "172ac3dc-3ca3-413c-877e-f235bd079ba9",
        "cursor": {
          "ref": "48c0d93a-0485-4d23-9732-8a9dc8f9f7cd",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "fe1e31ae-94ec-4058-9a7d-07328d6db88b"
        },
        "item": {
          "id": "172ac3dc-3ca3-413c-877e-f235bd079ba9",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "35a35ad2-0ad4-4c48-a55a-b0ac487682e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48575087-47ef-4f36-8f00-f3aa166a11b8",
        "cursor": {
          "ref": "96ef4321-6be6-4168-ad10-76921e278556",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b110d40e-7739-4138-95a3-8c38efcfae39"
        },
        "item": {
          "id": "48575087-47ef-4f36-8f00-f3aa166a11b8",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "1a93432a-652d-4aa6-ae18-76ffbb4d57c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c94920cd-3f4a-44ba-80aa-e5efb3193d31",
        "cursor": {
          "ref": "4f5aa28b-92e2-407a-a09d-4f71acdcd28a",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "0b88d758-4106-4e4e-8629-1353bdcde514"
        },
        "item": {
          "id": "c94920cd-3f4a-44ba-80aa-e5efb3193d31",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d96c0533-df30-4b77-a396-9d068105ecc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36180cbe-2019-46fa-bfa7-21e2f174cb57",
        "cursor": {
          "ref": "bde56eb1-6de2-4884-b03d-4f7dc7c17630",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "73f64bb0-ffc6-4e54-8d96-ca4eee81646d"
        },
        "item": {
          "id": "36180cbe-2019-46fa-bfa7-21e2f174cb57",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6c2b2bab-22a0-4bd2-a9a8-ce8f47a22cb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29381a87-34e7-47eb-96e0-29541c1483ca",
        "cursor": {
          "ref": "c9691dfb-cca3-4f71-8700-83251d907be0",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4886176b-4d6f-4ae8-a3c5-5b9bfca86089"
        },
        "item": {
          "id": "29381a87-34e7-47eb-96e0-29541c1483ca",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d3584bab-e4e5-4ac1-8279-d03d915b598c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f66beb0-20bd-46b9-a15f-81847e556587",
        "cursor": {
          "ref": "f117e22a-4519-495b-9014-924b00f04154",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "4e846a3b-561b-4dc9-87ee-a4a7ee4483a4"
        },
        "item": {
          "id": "4f66beb0-20bd-46b9-a15f-81847e556587",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e9b7959a-232d-423a-9540-980ee1b15dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bcc3d0f-4507-4ea2-96e8-43b56d8c14ce",
        "cursor": {
          "ref": "a2565a40-6222-483f-951c-2dd214ad6cc0",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "dee5a08a-8949-4654-8298-a0b329090973"
        },
        "item": {
          "id": "1bcc3d0f-4507-4ea2-96e8-43b56d8c14ce",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b72fd7ad-16a1-4710-804c-83e5bda385bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ca474d-7773-4914-861f-9c0783a141b3",
        "cursor": {
          "ref": "92acaf43-3abb-45b7-9aa5-70da29b4942a",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "5a3504e5-1831-45ef-85ad-d5b5ce8e16cf"
        },
        "item": {
          "id": "73ca474d-7773-4914-861f-9c0783a141b3",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "90638449-0e15-46d2-a767-53e3836534af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f155821e-666c-4548-b47b-fbac204208b1",
        "cursor": {
          "ref": "063d05e3-770b-4e9d-aae6-0419e46a3f8c",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a893fab2-e571-47d7-901d-1c62a22e522d"
        },
        "item": {
          "id": "f155821e-666c-4548-b47b-fbac204208b1",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "da986cb1-aa2b-4b93-998a-d60a9268d785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91e7e3f-e12b-4214-8a96-f97b985a78e0",
        "cursor": {
          "ref": "ba769857-d8e6-4d79-a5c0-fb22d2208067",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "98013906-00a5-49b2-8aa6-ea1ae471eced"
        },
        "item": {
          "id": "a91e7e3f-e12b-4214-8a96-f97b985a78e0",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0ddcd0a5-9d53-4aca-beec-fafc50daa62a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5baa17e-801e-4ec5-8846-4be78fe732dc",
        "cursor": {
          "ref": "7498e80b-a2d8-48d3-bff2-8453ec2e664f",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "02d87176-4e07-4ff4-b71a-4fa8befd9c16"
        },
        "item": {
          "id": "c5baa17e-801e-4ec5-8846-4be78fe732dc",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8bb27814-6347-4add-b5f5-5d924d3cc1ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed3c6c9-9fc6-4801-bffa-a6ec334d58eb",
        "cursor": {
          "ref": "93072d5e-3359-4b22-b204-02348cdb7fac",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "47f5fd6c-194c-471b-bf2f-fc1155cc39ef"
        },
        "item": {
          "id": "1ed3c6c9-9fc6-4801-bffa-a6ec334d58eb",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "68ce4db3-388c-48a5-9884-48deb984f334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98661d07-0b0f-460c-b1fb-27fb2bda838e",
        "cursor": {
          "ref": "5de07428-a0ca-4ba6-b2be-65ba2aeac64c",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "adede955-e08d-4bc6-8f1f-fb083953b537"
        },
        "item": {
          "id": "98661d07-0b0f-460c-b1fb-27fb2bda838e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4f6c3060-fb87-4689-99e9-c73f3eb89353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7627f013-eb2a-4352-8ba7-121a123afcd6",
        "cursor": {
          "ref": "8f7e825f-ae9e-4d3f-af7e-7948c97e3c3f",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "7c54e6db-4b9d-4629-b2a4-b2f11f3e1aaa"
        },
        "item": {
          "id": "7627f013-eb2a-4352-8ba7-121a123afcd6",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "9e6fed79-1eb4-4705-afa7-371ac69f983d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "678564ba-652f-4e18-9e5c-91b3d9d19b2a",
        "cursor": {
          "ref": "2dcc3e41-88e0-43b1-9d45-b35b54251e71",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ca3acb03-530c-44bd-a4ca-56d4434816e8"
        },
        "item": {
          "id": "678564ba-652f-4e18-9e5c-91b3d9d19b2a",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3aaef4a4-b3bb-416a-b1db-3216ee8704ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d827a0ef-5e2d-47cc-8d42-3efc7daeafa8",
        "cursor": {
          "ref": "8b86f94f-ca20-4e9a-b215-f415c24b457e",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "1aae234f-07f8-40c4-bbd0-5e92cd7e33ca"
        },
        "item": {
          "id": "d827a0ef-5e2d-47cc-8d42-3efc7daeafa8",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f475f005-2bee-4857-8d5c-50003eefb291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2630beb-9d09-4927-9924-6d72d1d685e0",
        "cursor": {
          "ref": "7fdda7a7-9f92-4033-a616-d7674fc4e1f0",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e8f94fec-f56d-4901-b85d-c67987ec62e0"
        },
        "item": {
          "id": "e2630beb-9d09-4927-9924-6d72d1d685e0",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "2bbff4ea-9dbb-49f1-a034-8cbcbdc7cf04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5309176-970a-4430-8cd1-38a4aa38b319",
        "cursor": {
          "ref": "7ff1f460-e9e8-40ff-896f-af5f0882762a",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c6eb8945-3d8a-4025-a522-4b460007dd20"
        },
        "item": {
          "id": "b5309176-970a-4430-8cd1-38a4aa38b319",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "ee7f253e-5d40-46f7-936d-94f0817792b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a43474-37e1-4394-99b9-e43f7c3e2dfd",
        "cursor": {
          "ref": "64787010-e3ad-419e-92f3-be4fd922355a",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "de7ec731-6b48-4af7-b6ae-bbae34832e9b"
        },
        "item": {
          "id": "27a43474-37e1-4394-99b9-e43f7c3e2dfd",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ddeef235-d9ce-4e8c-9159-1370cbfbd40f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82765a64-0e52-477c-9ef0-e66438d17d2d",
        "cursor": {
          "ref": "63ab8a3d-c00a-4bd4-a8f8-0577765cbf29",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "6137303b-6f9e-436e-8054-c2c7ebfc985b"
        },
        "item": {
          "id": "82765a64-0e52-477c-9ef0-e66438d17d2d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a30cc06c-b234-4457-83d4-9d9acb04f338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce1d368-2a5d-466a-9060-b462f37f5707",
        "cursor": {
          "ref": "0eb35690-8812-476f-bb72-b47fe040c1c1",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "9507fd4c-c7bb-40be-ad67-28c2e27af376"
        },
        "item": {
          "id": "bce1d368-2a5d-466a-9060-b462f37f5707",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "26e795b4-ec2e-47b4-a51d-fb818cd21345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7885f21-e23f-4d19-946b-3c2593b0a761",
        "cursor": {
          "ref": "4652ebc8-64d2-4e60-88d3-2e1674cdbaa4",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "46dda10e-da0e-4dcf-8eac-4c4787466cfd"
        },
        "item": {
          "id": "e7885f21-e23f-4d19-946b-3c2593b0a761",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "319338aa-2984-45ff-b7d4-0adb22f01b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38c0af7-b8f5-4b76-892e-bf784c293002",
        "cursor": {
          "ref": "3660bb3c-0e46-409b-9df5-d578759dbc6c",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "0138ed4b-0292-431b-a1e6-e373e2e34211"
        },
        "item": {
          "id": "b38c0af7-b8f5-4b76-892e-bf784c293002",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "9699b4c9-fb07-4628-b67a-6dabdf1f6d19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0053670-2c6a-445a-9f48-2bc3868ae6bd",
        "cursor": {
          "ref": "76927f62-12f8-4fcc-a5f6-961954debf92",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c8d11770-76ac-4b24-99b3-8980cddc38d2"
        },
        "item": {
          "id": "f0053670-2c6a-445a-9f48-2bc3868ae6bd",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "72a4b3b3-e6b2-4d03-b81f-3488b7410515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4854fbbf-7672-4886-bb56-5d3dc2b2d1d8",
        "cursor": {
          "ref": "4671df55-278b-4155-be1f-8016d040038f",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "26eead80-1280-4154-97b8-450ee288736c"
        },
        "item": {
          "id": "4854fbbf-7672-4886-bb56-5d3dc2b2d1d8",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "66324c67-0113-40ef-8684-f394956a7cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a765b2dc-6921-49c2-860a-c2ee581048d6",
        "cursor": {
          "ref": "45cf8ea0-aa27-4dce-82e4-f6242358b34c",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "362e3fc3-0948-42d4-99a6-a14181638d57"
        },
        "item": {
          "id": "a765b2dc-6921-49c2-860a-c2ee581048d6",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "10c012d2-ff7a-4211-9101-5247c1f1bd51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b16b652-7503-4c33-9630-785040ff965a",
        "cursor": {
          "ref": "f6acfaf6-f258-4625-955c-8e857e25a881",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "decf3d9a-f388-49fd-b880-2b5d4f922417"
        },
        "item": {
          "id": "4b16b652-7503-4c33-9630-785040ff965a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "8485aaf8-d615-440b-b037-b58a1531b13b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b9b8f66-6060-44cc-8c59-31d21ff3860f",
        "cursor": {
          "ref": "0cc70309-aa75-40e6-a52f-776fb673586f",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "1e1cffe7-19ab-44e3-b18a-3fcd5bcabb37"
        },
        "item": {
          "id": "3b9b8f66-6060-44cc-8c59-31d21ff3860f",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "057e92a4-b77b-4040-8f2b-bc2d20df24bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "147c64ee-a4ba-4df8-9478-07f61e71657c",
        "cursor": {
          "ref": "30bb37dd-52c6-449e-b433-dda6c9bef606",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "2c1d9c00-14b8-4da9-857e-93231738cb75"
        },
        "item": {
          "id": "147c64ee-a4ba-4df8-9478-07f61e71657c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "fe7aa8ae-04e8-44b0-8044-5394fc2ca349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "f5ef5527-62ab-457f-8615-cb3cd1d0fb41",
        "cursor": {
          "ref": "a20698da-4df8-4053-ad0c-e234a32d8db9",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "dcb35a01-a411-4e52-8bd4-f67b5a4aee8c"
        },
        "item": {
          "id": "f5ef5527-62ab-457f-8615-cb3cd1d0fb41",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "4ae05d43-3960-4551-bb89-008877eaed95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "e8366e24-595a-464f-8469-68d60dd18b1e",
        "cursor": {
          "ref": "9a38a82f-7103-4be7-a764-00adffd310f0",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "12b75624-f79f-4750-b3c1-e0f16fc2083b"
        },
        "item": {
          "id": "e8366e24-595a-464f-8469-68d60dd18b1e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e21e370c-60ae-4abf-a565-9c91f6422b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "de8914f2-1137-44ec-8e4a-a1336eacb53f",
        "cursor": {
          "ref": "cffff364-e126-4b36-bc92-28ab7a630952",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "bf5d2ac0-03f8-4c63-82f0-e83cfe73b0e6"
        },
        "item": {
          "id": "de8914f2-1137-44ec-8e4a-a1336eacb53f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "8b7e784f-220f-4d2f-aaa9-d25f9a8d3957",
          "status": "Created",
          "code": 201,
          "responseTime": 10543,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9391b7e5-4917-4526-9326-16ebbbae3f9f",
        "cursor": {
          "ref": "06ac05a7-7df4-4a48-962c-c134cd731f49",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a662fd64-6255-4d4d-905b-7cad69151424"
        },
        "item": {
          "id": "9391b7e5-4917-4526-9326-16ebbbae3f9f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "2fc00ad4-d8ed-4f13-b0b2-24c4c9fd895d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 117,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "1d21adcd-dcf7-47d9-b0d9-dea2d0f5cbf6",
        "cursor": {
          "ref": "18090792-5ebe-4c7b-980e-afd5068d502f",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "aac4e446-9df3-482c-9794-886620b5cb1d"
        },
        "item": {
          "id": "1d21adcd-dcf7-47d9-b0d9-dea2d0f5cbf6",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "436eabef-0cbc-4678-8457-a95ec3a775de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "865ba7e6-892e-465c-85e4-e4d507956ce4",
        "cursor": {
          "ref": "4b533ce9-65e4-40c0-87f4-9fda785d2466",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "590dc715-9967-45d3-bc12-62c936abce46"
        },
        "item": {
          "id": "865ba7e6-892e-465c-85e4-e4d507956ce4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "667d820e-3865-470d-a7ce-8040f557cacc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4764814c-85ad-4e9b-b5cc-37c7f6d47b5c",
        "cursor": {
          "ref": "7584132e-a29f-40bc-9354-00ebe51df2a7",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c3235561-c687-4716-baf9-25143f373e63"
        },
        "item": {
          "id": "4764814c-85ad-4e9b-b5cc-37c7f6d47b5c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b60692af-4d19-42d6-b956-f26f57851c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d65dbd4-459f-4450-a44c-a557b48a231d",
        "cursor": {
          "ref": "9cd539e9-5950-4f68-b028-c129e5dd5b15",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "12affe3d-398e-431d-863e-becc8578f249"
        },
        "item": {
          "id": "0d65dbd4-459f-4450-a44c-a557b48a231d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b009be2d-b536-4675-982a-88cf03971715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e44f7c62-0910-4d73-93dd-8ea75831078b",
        "cursor": {
          "ref": "aa8d0908-144b-4e86-8b9c-6eb4c5d72c59",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f9ba5085-10a1-4f68-9e35-b53da928df1d"
        },
        "item": {
          "id": "e44f7c62-0910-4d73-93dd-8ea75831078b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "83b6829b-fc1a-4315-8182-94c27f53c653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "805b320c-3da7-4c16-92e9-aabca519615d",
        "cursor": {
          "ref": "f908a630-afd3-43eb-9f08-82999f192507",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "5ca2520d-303c-4f4b-8d48-fddf4bb5565e"
        },
        "item": {
          "id": "805b320c-3da7-4c16-92e9-aabca519615d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a3791d6b-5053-4c7d-969a-e8a73cfd71c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364ca927-0f3f-497a-8f40-fcfb614cdcb5",
        "cursor": {
          "ref": "030235c4-a151-4b92-b004-861b47e71fbd",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d6800a22-4da5-4200-b468-de8bfd1f3f8b"
        },
        "item": {
          "id": "364ca927-0f3f-497a-8f40-fcfb614cdcb5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8576b6af-be81-42b5-b34b-82dbba266233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b37a77-e05d-46a5-94eb-4d1c12ea0f98",
        "cursor": {
          "ref": "ea3763f7-8a85-431b-8220-90219dcedbe1",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b2aa7739-0a40-42d5-bcd0-90861048a4d5"
        },
        "item": {
          "id": "90b37a77-e05d-46a5-94eb-4d1c12ea0f98",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "85e09feb-c6c6-4ae6-999c-e62bb924ecb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad45ced3-3272-4ef5-b0fd-d52759a9b3e1",
        "cursor": {
          "ref": "9216282b-0168-4545-a0ee-b18e42a4cce4",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ce7b6b5f-c1c7-4f80-abbe-e29b5d0de9dc"
        },
        "item": {
          "id": "ad45ced3-3272-4ef5-b0fd-d52759a9b3e1",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1c65ade6-0600-4724-ac0e-95b771f64ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da20412-a6f7-4d0a-864b-a4f9d7b84e24",
        "cursor": {
          "ref": "d15c46a1-81fd-4478-b417-49e2712e0741",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "0f10d3c3-3d93-471c-9296-f00ef4b2e677"
        },
        "item": {
          "id": "0da20412-a6f7-4d0a-864b-a4f9d7b84e24",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f3e509bc-8937-4d87-817c-35c64df190a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fb935fc-2445-4954-89b8-e8e4cf8f2893",
        "cursor": {
          "ref": "7cc74326-fe91-4779-913d-f5c6a563937f",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "dead113e-72b8-4e4b-bc2c-0e5afde93004"
        },
        "item": {
          "id": "7fb935fc-2445-4954-89b8-e8e4cf8f2893",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3b6140cc-7c6b-4413-aab9-463e37d7b259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cfcee40-39ac-432f-9bec-566e7545df33",
        "cursor": {
          "ref": "1257bb90-b774-4975-b836-50703dd9e4bd",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "09ceccb8-fe39-4a4a-bb02-d1aad2d28a78"
        },
        "item": {
          "id": "2cfcee40-39ac-432f-9bec-566e7545df33",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "fb467e4d-0915-4126-8a4f-638ddda81b40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a68401fc-f6af-4372-a5a9-b2a51c4ce22a",
        "cursor": {
          "ref": "ac1e6196-7ca4-4b1d-9e96-fbdc28926603",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "14e884c5-828c-42c0-b205-eabdc092a92f"
        },
        "item": {
          "id": "a68401fc-f6af-4372-a5a9-b2a51c4ce22a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4ef94852-98fe-4ead-a45e-78281e3e70cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a9c0571-f76b-428b-bb0c-1e4b03d5b63c",
        "cursor": {
          "ref": "7c1e388e-e105-4577-aaff-704fb6777e8c",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "051dc7c4-4e0a-4060-9f79-302298a3c092"
        },
        "item": {
          "id": "7a9c0571-f76b-428b-bb0c-1e4b03d5b63c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "77f2c68b-ec49-4c09-859d-3b1678faedbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0fbb0d8-441f-4a06-8f8e-b548840ca50b",
        "cursor": {
          "ref": "652cc593-da8d-423b-850b-907881724894",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f67da734-e6e5-402d-8688-277c6a2ef655"
        },
        "item": {
          "id": "c0fbb0d8-441f-4a06-8f8e-b548840ca50b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "40e7fac2-bbcf-4837-aa7f-ed0bdb51bb33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e5e1f92-176b-4703-8f1b-0b19f16026c2",
        "cursor": {
          "ref": "9cdf7421-eeb8-41c9-b4bd-433c9ed1879c",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "38d5071c-506a-49f4-9cea-425b346ddfb4"
        },
        "item": {
          "id": "2e5e1f92-176b-4703-8f1b-0b19f16026c2",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6652b168-2e43-4198-a817-d7c4b7478c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcfea241-da8d-47ce-9406-3ba291df454a",
        "cursor": {
          "ref": "98833250-1ed1-4434-b622-04c666e6715d",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "be707852-56bc-4bfa-9f0b-801879798bb4"
        },
        "item": {
          "id": "bcfea241-da8d-47ce-9406-3ba291df454a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8efd93f6-5c5f-41d6-9d7e-4a1186f15d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ffca61-ed04-4a75-beb8-107b535d661f",
        "cursor": {
          "ref": "84c63b0b-361c-41b3-843a-f71241d56ec2",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "afa77091-c9b7-4c21-a523-9ad61bae0b32"
        },
        "item": {
          "id": "f3ffca61-ed04-4a75-beb8-107b535d661f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5c1bac58-a001-4e2c-831c-17b6e5b0b1ac",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "b0c6b003-d128-4210-8ae3-aba5cae1db84",
        "cursor": {
          "ref": "32cdccb3-ef70-4045-9e8f-e771d6693684",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "76377e55-9e47-4ce2-bcdf-0b54e41a01aa"
        },
        "item": {
          "id": "b0c6b003-d128-4210-8ae3-aba5cae1db84",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1f9693c3-d8ef-4e1c-b33a-cacec5eb8bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a058bf44-ae31-46ef-82c0-30109467c412",
        "cursor": {
          "ref": "bdfa099e-678e-4940-ae0d-e8da80e40574",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "5a7ed061-b66d-4782-8baf-5e091e894c56"
        },
        "item": {
          "id": "a058bf44-ae31-46ef-82c0-30109467c412",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d56e3175-ea70-4d04-ac90-a51bb3b3a773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "832c63e4-b15d-4764-a8d2-9a0789a32a0a",
        "cursor": {
          "ref": "7836f430-dcda-4c62-95af-157d2529a1e5",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c92fbec8-67f7-4b70-9e44-a3aa03409cde"
        },
        "item": {
          "id": "832c63e4-b15d-4764-a8d2-9a0789a32a0a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8ab5a3d1-c370-44e5-9569-10c9b578e700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18fb36da-35d4-41d8-bae5-c7571069a8e2",
        "cursor": {
          "ref": "3b019476-304b-4b54-8ee9-9edbd59e9d52",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ea16cc8f-6388-4570-818e-20364ce53c14"
        },
        "item": {
          "id": "18fb36da-35d4-41d8-bae5-c7571069a8e2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8bf4c462-b2f4-47f2-9da8-117bc3984c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "755a9a9e-a1ff-4238-ba40-2cf260c6f125",
        "cursor": {
          "ref": "286b4bf2-1cdb-46d2-b6d9-7d30161fa83d",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7cb7eba2-71fe-425f-ba23-ea058ac6d5cc"
        },
        "item": {
          "id": "755a9a9e-a1ff-4238-ba40-2cf260c6f125",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d008c55f-c6ff-4a1e-a00d-3f23cc0f3789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80dbfdb6-8f31-4349-8b65-f7602fa021bb",
        "cursor": {
          "ref": "ab954114-3776-404d-b6af-3b261b87bc17",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4bb4200d-825c-4e26-8a03-9512d921d233"
        },
        "item": {
          "id": "80dbfdb6-8f31-4349-8b65-f7602fa021bb",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "87b4f9e1-0290-4b14-a774-c3cf23022f7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f49d97-defd-41ed-87c3-5ba17294bd4a",
        "cursor": {
          "ref": "14405f13-b820-4f12-b317-97812ff334e8",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "84e13a9f-8321-4f1b-b154-fe8b20cb3719"
        },
        "item": {
          "id": "85f49d97-defd-41ed-87c3-5ba17294bd4a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b7a118fb-1eaa-4ada-b6ff-e71570a3a2b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd7b4f7c-9b88-497c-8996-69389fa6abb0",
        "cursor": {
          "ref": "ad0acd42-ebad-4abd-b510-d15aa2ea5c5d",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b67469f5-5f80-48eb-9582-8e118dfc2417"
        },
        "item": {
          "id": "bd7b4f7c-9b88-497c-8996-69389fa6abb0",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c84994b2-fdc6-48c0-a8cf-e5a46b512551",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 63,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "d4c96bc9-7492-4262-b594-17418a8249a2",
        "cursor": {
          "ref": "94972d43-e518-452b-bd20-162f5f06aa2d",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "eb422299-9f4c-4508-9693-204cba3fd384"
        },
        "item": {
          "id": "d4c96bc9-7492-4262-b594-17418a8249a2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f3053295-8a65-4d6d-b69c-d9d3d0a7d589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b2aaa71-db62-4068-a474-02afe8ccd196",
        "cursor": {
          "ref": "582c8ece-cf5d-40f4-877e-7d8ac8f468df",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b949dfe1-61e0-446b-b3b1-774ef337f7ea"
        },
        "item": {
          "id": "9b2aaa71-db62-4068-a474-02afe8ccd196",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "61c1c58b-5971-4f20-800a-78f9c41b4274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "280bfaf6-a77e-4e7a-8a60-d48fb5dae437",
        "cursor": {
          "ref": "30148643-7d6f-4478-bdac-15a59e31bab4",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "1cba53e2-cf90-44b6-830f-82acb24dc74e"
        },
        "item": {
          "id": "280bfaf6-a77e-4e7a-8a60-d48fb5dae437",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0189bf9a-27bc-4b1a-abd7-5e07a7d02191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6bd838d-166f-45e8-b917-4a3bcf1491bc",
        "cursor": {
          "ref": "9e01202c-b91d-4c0a-aafb-0183443be000",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f717336e-a354-42b6-84aa-15d6ac390630"
        },
        "item": {
          "id": "b6bd838d-166f-45e8-b917-4a3bcf1491bc",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5073b243-1210-48e2-b0b0-e329cd94fa7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c2bde8-39d2-4be4-9835-740b952f2d15",
        "cursor": {
          "ref": "3d60e8e8-a265-4f48-b63b-18d6a178be42",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "eb6e5679-f9ef-40b7-bf8b-3c948953173c"
        },
        "item": {
          "id": "c1c2bde8-39d2-4be4-9835-740b952f2d15",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8d9cfea2-cade-4af9-ba67-eb5e9b545188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f31cddf7-3b48-48f8-8c5c-a228f406adbd",
        "cursor": {
          "ref": "eedb95d9-50d6-4af6-88d1-51607a30a7ba",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c9c1cf57-e6fc-4b52-8889-02fb262ba46d"
        },
        "item": {
          "id": "f31cddf7-3b48-48f8-8c5c-a228f406adbd",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c94ca159-90a2-4633-a1f3-00ee3468dda5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43724650-2882-4b2f-a902-b37925287616",
        "cursor": {
          "ref": "326e069e-9217-4753-9423-96fa6f85fc3f",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "6bf1a617-8f28-4dee-9bf1-0a54d2127f4f"
        },
        "item": {
          "id": "43724650-2882-4b2f-a902-b37925287616",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "fcf9e28c-4c2f-4932-a8ba-db1e29bb800d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "0f7cbc03-99d2-4d29-b86a-2017cb3d5f10",
        "cursor": {
          "ref": "f759e72d-4274-4c08-8b02-53747f2795d2",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "514f32a6-8b54-4d93-a3a6-f3e61bfcda0e"
        },
        "item": {
          "id": "0f7cbc03-99d2-4d29-b86a-2017cb3d5f10",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "a80208f6-7d38-4ad7-bd7f-815e8ada1b3c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 74,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "63371f72-7c41-4fd7-9ae8-c0935c66fc55",
        "cursor": {
          "ref": "13da80f5-d36b-4a71-87be-2b151459b57e",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b8138c55-1d3c-4dff-8598-d1a3f875263f"
        },
        "item": {
          "id": "63371f72-7c41-4fd7-9ae8-c0935c66fc55",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "cc5778a8-174e-46ad-9134-7aa496cad1a1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 62,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "cd4286b9-ba69-479e-ac65-1340b0dc2e17",
        "cursor": {
          "ref": "a8bbbbcf-ef07-4b31-9eca-54ba485e4b7b",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "dc76d701-9b1a-47b5-8e93-3fd90344d509"
        },
        "item": {
          "id": "cd4286b9-ba69-479e-ac65-1340b0dc2e17",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "a601e6c6-b6f9-4808-9879-ccb688704abf",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 76,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "bf5c1530-1916-48c6-9610-31a232116ea8",
        "cursor": {
          "ref": "82d0b1d9-e143-4652-93bf-4f5b8ff4f72f",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "39fe231e-8783-4423-91c9-e311b9494d88"
        },
        "item": {
          "id": "bf5c1530-1916-48c6-9610-31a232116ea8",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "d71e7ee3-391a-4bc8-8258-3587ac095eb6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 63,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "c0d164af-689f-496f-a11d-ef0e99fcb5ee",
        "cursor": {
          "ref": "1e6fc68b-0846-4fde-a58c-96ab2dfa7fc1",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "dc626e17-870b-41ce-a097-db978cad7c47"
        },
        "item": {
          "id": "c0d164af-689f-496f-a11d-ef0e99fcb5ee",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "923a3ada-932a-4c89-ba17-47e055d7f3ab",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 61,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "448e5b84-1e3e-43f6-b8fd-454971fe291d",
        "cursor": {
          "ref": "df370887-902c-4255-9402-ce3edbb2c2ed",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ef08b476-48a4-4b6a-bfb7-0123e2cb49db"
        },
        "item": {
          "id": "448e5b84-1e3e-43f6-b8fd-454971fe291d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7fe66da2-65c7-4c4d-bdcb-e1f455edd9dc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb452cf-9117-4f97-9996-692160e54c23",
        "cursor": {
          "ref": "a1860877-44b0-41e0-8cbe-b4c92bf8e48c",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "6be8214f-1a0c-41ea-a50a-7564d360e102"
        },
        "item": {
          "id": "2cb452cf-9117-4f97-9996-692160e54c23",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8f8f6e04-b7be-4a44-b3ee-17990249d91e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "887611ed-91da-4d4b-9ffc-0001221220b1",
        "cursor": {
          "ref": "c44b5f0e-0d1e-45aa-bc2d-9712cde0f2f7",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "8710cd45-1416-4374-a7ee-ca7032d16a1a"
        },
        "item": {
          "id": "887611ed-91da-4d4b-9ffc-0001221220b1",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4c41136c-ee60-4f6f-baa1-be15f552ede5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "210bf636-15b6-4ee3-9095-92c0e933a2f0",
        "cursor": {
          "ref": "b72dffdd-1fb4-41ff-af50-ad7798653bef",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "06abd9dd-4e31-49e6-a7b3-80eb1d59b9c5"
        },
        "item": {
          "id": "210bf636-15b6-4ee3-9095-92c0e933a2f0",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b8f8c8ab-346f-4336-83d5-0bd7715346a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1756b3-e521-4922-a7c6-09a9d35cda6d",
        "cursor": {
          "ref": "56859cec-8a15-4afe-bd0e-342bfd67f43c",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f17107dd-68b2-4f61-ad75-f5c44d4e8f55"
        },
        "item": {
          "id": "cf1756b3-e521-4922-a7c6-09a9d35cda6d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "8b8fdc87-932b-44aa-a7d3-d0549d068f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c6245b-35a4-4fa5-96f4-cda05969f243",
        "cursor": {
          "ref": "e8729098-da53-41c6-bc37-97145b6854c7",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e31aaf82-e179-4cf4-9ffd-a9ceec54945d"
        },
        "item": {
          "id": "39c6245b-35a4-4fa5-96f4-cda05969f243",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "357c6973-cfaa-451f-af2a-decf78489ef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7426d943-833b-4a85-8194-182f841627c9",
        "cursor": {
          "ref": "943c7c3d-6d1d-4e1c-8b63-3caba58b989c",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "196e9795-e657-4d9a-9365-0e6c5f1ebc0d"
        },
        "item": {
          "id": "7426d943-833b-4a85-8194-182f841627c9",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "dae6b57c-e8e2-405a-acd0-c600fb8dfb1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6173d882-9a64-4f3b-a197-d81e1ffbb368",
        "cursor": {
          "ref": "94ef2ce0-1ff3-4487-895a-19122b05fad7",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "2f813a71-5d86-4f52-98da-6e6cf5f9dbeb"
        },
        "item": {
          "id": "6173d882-9a64-4f3b-a197-d81e1ffbb368",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e1ee5580-804b-49d3-bcc5-80f9676d9512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340cac1e-df66-46e8-9976-8bf83a9fe9d1",
        "cursor": {
          "ref": "453d22a1-6495-41c3-a458-8c5ab9fe8d5b",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a3bc5259-ac9d-4cb1-91be-9bee07b2fae7"
        },
        "item": {
          "id": "340cac1e-df66-46e8-9976-8bf83a9fe9d1",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "4461f02c-a45d-4d24-a169-013fd60701b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14700db1-3a13-49ab-bd29-18a94b708ec5",
        "cursor": {
          "ref": "b5a2209b-08ee-4640-892b-0021b3d9bb29",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a428fb85-9db3-475b-b484-aa7952688245"
        },
        "item": {
          "id": "14700db1-3a13-49ab-bd29-18a94b708ec5",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "1f1070d1-50f8-4e69-a046-a2f1e8af03fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 176,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e547f711-af1b-4a01-999b-f2d6305c2f99",
        "cursor": {
          "ref": "b79c1e45-bfbb-4101-96ca-7af2cd8c1b0a",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "47129b01-274a-4afa-b837-9758b3d8cf0e"
        },
        "item": {
          "id": "e547f711-af1b-4a01-999b-f2d6305c2f99",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "62cea2c6-eb3e-4748-8b08-9710a4053863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2376304-4fdc-47d0-b6bc-a14f7fc03630",
        "cursor": {
          "ref": "bf007fe4-b252-494e-9740-ec8e51ccb3ac",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2b409c05-68f8-4fc2-9ffa-654bfb8cf95d"
        },
        "item": {
          "id": "f2376304-4fdc-47d0-b6bc-a14f7fc03630",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "eed44b4e-7205-4c4d-a2a1-cc3f8469ed4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a466fa-95ad-4259-bd50-4ba2ac948a80",
        "cursor": {
          "ref": "790701b7-6592-4ae9-9a00-f70aaf34d06c",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "0089d047-9d16-4805-a0d7-49db7386d2c8"
        },
        "item": {
          "id": "e6a466fa-95ad-4259-bd50-4ba2ac948a80",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "cf4d2580-6a76-472b-97fc-1166aa8ca192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56906e91-945f-471c-a657-80e518a5a126",
        "cursor": {
          "ref": "c562a185-0afb-4518-8d1c-5819a903a27d",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "626ac55e-20d6-4cb0-b097-d2f91ac6498a"
        },
        "item": {
          "id": "56906e91-945f-471c-a657-80e518a5a126",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a35b0833-0e0e-4846-a8d5-918e3d9fb71f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "198b47f3-8491-438a-aaca-f11f5ecb5d17",
        "cursor": {
          "ref": "59b6dd51-692d-4e71-a55a-4eae313d3df5",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b9c85029-d22d-4c22-a0cf-339beed47fa7"
        },
        "item": {
          "id": "198b47f3-8491-438a-aaca-f11f5ecb5d17",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "11449d06-429b-44ce-a05e-5475064fc47c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3851338-9600-412a-a2f5-4fca236e12cd",
        "cursor": {
          "ref": "0602f363-2473-4556-a0f4-000493410c54",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "20cb951a-1380-42c7-b747-4604d9d6f8db"
        },
        "item": {
          "id": "b3851338-9600-412a-a2f5-4fca236e12cd",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "4b1abade-4fff-4ab2-a6e4-d7186cff32d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb688fa1-2e85-4e70-8bbb-683ce1816ac2",
        "cursor": {
          "ref": "85244117-bd0e-4d1e-b5c9-429758f7350f",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "7260bdd7-4900-4076-b5d3-cb23c3fab0e8"
        },
        "item": {
          "id": "fb688fa1-2e85-4e70-8bbb-683ce1816ac2",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e58f1aa2-e2f6-420a-9f11-190ba115012e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41fa8288-76a4-4c0b-aaeb-737591b6ad24",
        "cursor": {
          "ref": "cd499e3a-97c8-4206-b326-a3ca8d257b2c",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "1d3a8d6e-66bd-4434-807e-13f2021f087a"
        },
        "item": {
          "id": "41fa8288-76a4-4c0b-aaeb-737591b6ad24",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "7e58acec-8e1e-445a-b109-2f94821b8359",
          "status": "OK",
          "code": 200,
          "responseTime": 87,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "592a9975-f431-499c-ba28-18d3f5e41dc6",
        "cursor": {
          "ref": "7a136eab-1af9-4442-9ac6-b99b90110bc6",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "eb99b05e-70d9-4ee0-aae8-b23c40c4a3d9"
        },
        "item": {
          "id": "592a9975-f431-499c-ba28-18d3f5e41dc6",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a649af08-a436-4b93-8be3-05031e22a672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "192cbc8a-d111-4e4d-b11b-2ea1a1b2389d",
        "cursor": {
          "ref": "bf559b12-d679-4e71-80e4-71f4912f4bfc",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "96404589-c589-4df2-9cd1-14a616b6590a"
        },
        "item": {
          "id": "192cbc8a-d111-4e4d-b11b-2ea1a1b2389d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "cde7299a-0a2e-4458-958c-2db26dac07a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ee33b8b-2ada-4256-87a8-013cd92430aa",
        "cursor": {
          "ref": "1cbc72c5-61ab-4a3d-960b-115dd95edc7a",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "bc768228-0071-4122-a2ff-f00869ac5fca"
        },
        "item": {
          "id": "2ee33b8b-2ada-4256-87a8-013cd92430aa",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3f2f22fa-b197-4aa1-acbf-6acf2794dfad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c9ff94-76f5-44aa-988d-1a797b6e964e",
        "cursor": {
          "ref": "bb4f1954-1717-42f3-9fa8-f1baa33c9326",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "95ea0458-783a-4cda-8424-8b8f61dfd277"
        },
        "item": {
          "id": "73c9ff94-76f5-44aa-988d-1a797b6e964e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "08b999b2-7a10-4907-bab8-900a699b25d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2310cf3f-5bb5-4acb-af5b-bda8b93a9387",
        "cursor": {
          "ref": "f322ec6e-ca44-4f66-bab8-e27805dadb4b",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "53f18e19-5054-4167-8363-05499199c319"
        },
        "item": {
          "id": "2310cf3f-5bb5-4acb-af5b-bda8b93a9387",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "198e0608-7610-4986-8c6b-bf66920f3961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 142,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "975bab44-6778-4b3d-a38c-3a6867032eea",
        "cursor": {
          "ref": "92d6a537-36cb-41b5-9078-f1749ea73cfc",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0d16c09e-bb50-4060-918b-8eabe425e1ba"
        },
        "item": {
          "id": "975bab44-6778-4b3d-a38c-3a6867032eea",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "e7f96490-ce77-41e0-8d59-7a038fc4ea9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af3b4788-edd7-4d0b-a276-f085ded3a443",
        "cursor": {
          "ref": "6fdcef70-3c84-4404-ba39-f5d4f15a961c",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "25be2535-ea7f-4ec6-9be3-5975fe5661d4"
        },
        "item": {
          "id": "af3b4788-edd7-4d0b-a276-f085ded3a443",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5deb6604-e4f7-45ca-b110-407df62af417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fcc6dfc-9e77-49e9-8cbc-c3a5431d7289",
        "cursor": {
          "ref": "1e04eaf5-c626-4cbd-aa10-b3346b1d28d9",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f80143ce-eff5-4184-8cbc-460991e75018"
        },
        "item": {
          "id": "0fcc6dfc-9e77-49e9-8cbc-c3a5431d7289",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8a64d57f-f6bf-44dc-ab37-f140f837b649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84885928-4a3e-4007-88ed-d7a634f89027",
        "cursor": {
          "ref": "92ce04b2-5822-4789-9d5e-fa4b2ae34ed5",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "3b484f66-8077-47ec-950f-2ff45c477454"
        },
        "item": {
          "id": "84885928-4a3e-4007-88ed-d7a634f89027",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "dd42ecdf-8670-42d5-b536-96984b723e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "503ebef5-5ed5-4048-88e9-a7aee7d2aeda",
        "cursor": {
          "ref": "568ce050-0bff-42ec-b6d2-bc919dc8e524",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e3177d28-502b-442c-81bc-233736ccc2f3"
        },
        "item": {
          "id": "503ebef5-5ed5-4048-88e9-a7aee7d2aeda",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "940e247d-cffc-42d2-9abb-2b12e0b55eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d073758-796d-4493-85b4-61f8bf58a6f5",
        "cursor": {
          "ref": "7d11d14d-1ccc-4b6e-b674-9cd0c0877a29",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2658e367-9331-4778-86eb-2a2ed138367e"
        },
        "item": {
          "id": "1d073758-796d-4493-85b4-61f8bf58a6f5",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c6c409ed-8fd6-4f51-b55e-be9f72cc1caf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 830,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da2e766e-6b41-43f9-a8a2-ffebbee5b9fc",
        "cursor": {
          "ref": "cf308dc9-d484-45d2-a688-6d776ed77702",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "38dcb6a6-35b5-4704-af82-4b2b32bb84eb"
        },
        "item": {
          "id": "da2e766e-6b41-43f9-a8a2-ffebbee5b9fc",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a334ca34-18d4-4d08-8edc-9f9e677b0e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94f29d78-d18f-44a0-8073-7bdbb5a6e7a3",
        "cursor": {
          "ref": "14aaacc6-e784-4afb-9b5f-e76643bd3a4f",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "73a0c10d-3ab7-4201-9e65-6d7fe1e1caf4"
        },
        "item": {
          "id": "94f29d78-d18f-44a0-8073-7bdbb5a6e7a3",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "867612dd-c65a-4602-85b5-3fddc050af81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d3952ef-6081-4646-b140-bfdd4e66a7fe",
        "cursor": {
          "ref": "5799930b-1840-42df-bb95-4dcaee28052d",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "da4281ed-8f99-4759-b720-8b8595532f42"
        },
        "item": {
          "id": "1d3952ef-6081-4646-b140-bfdd4e66a7fe",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "de9432db-1997-47c3-abc5-996f1281251d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c579b964-9c10-409f-90a3-89edc612474b",
        "cursor": {
          "ref": "c3e6efa1-8ec7-4711-b4b7-ba342cf04bd1",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ea8b5513-c175-407e-b5d6-4146afd2aae9"
        },
        "item": {
          "id": "c579b964-9c10-409f-90a3-89edc612474b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a032fc6c-ee7a-4cc3-8a35-6310acfa0af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fbd6da8-6e7f-4152-aff1-99821c81a6c0",
        "cursor": {
          "ref": "8b304d49-df64-4bdb-bb5c-cac1dc9256d5",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "65584eb2-bef4-4c45-8af1-bdd8efb0c560"
        },
        "item": {
          "id": "0fbd6da8-6e7f-4152-aff1-99821c81a6c0",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "44ae321f-10d4-4f55-bc7c-889abf0d3e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75742c14-cd85-47d0-a9a3-f09a2491cca2",
        "cursor": {
          "ref": "a98d900f-3103-4f96-89b5-a9b297066d63",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "66f9361a-3b8d-463e-b6d5-4f19e91b0393"
        },
        "item": {
          "id": "75742c14-cd85-47d0-a9a3-f09a2491cca2",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "58f622ef-c5b6-458b-9f86-a2e7cd023eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd97c7cb-70c8-48de-b619-a1d9732781be",
        "cursor": {
          "ref": "c792d3ba-a028-466a-a485-6424c383e273",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c8d8476f-7166-4d3c-8a3f-f1dc36c2f0f1"
        },
        "item": {
          "id": "fd97c7cb-70c8-48de-b619-a1d9732781be",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "2c1e2ca4-910f-4d30-98c8-71963771a6d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f64646-f906-4390-8751-84dda2382761",
        "cursor": {
          "ref": "d14692ac-f56b-45ef-b05c-90904426d881",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e3d4e116-9dec-45a7-ac0b-1ff472562456"
        },
        "item": {
          "id": "e2f64646-f906-4390-8751-84dda2382761",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "59d5379e-5dec-4302-9eed-cfd494df153a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d9c9d1-d6f9-4ea7-9634-aeb34cc62cea",
        "cursor": {
          "ref": "823bbf1a-6fb5-4c75-a8d2-525f14fec898",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1d32d980-09d0-439c-b0f7-a29d655d7c3f"
        },
        "item": {
          "id": "07d9c9d1-d6f9-4ea7-9634-aeb34cc62cea",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "8b4f2ee4-d325-4a20-b6d4-2de923640464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6991259-fd56-4a2c-ad0c-f68932b64ef4",
        "cursor": {
          "ref": "5c2894df-ee5f-41cc-89c4-2e1db7e4c426",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b7010d70-a10a-44f2-bd84-eba3f27976ee"
        },
        "item": {
          "id": "b6991259-fd56-4a2c-ad0c-f68932b64ef4",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "216ae813-687f-4617-baa7-59d741a615ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ad1fb5-c2ce-4270-889e-92bd1a985ca9",
        "cursor": {
          "ref": "12735b2f-82e5-4478-b5e4-c466172c264b",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "af41b726-ab80-4cfe-abed-464e191db403"
        },
        "item": {
          "id": "69ad1fb5-c2ce-4270-889e-92bd1a985ca9",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "55ff93d7-fc9c-4a3a-a577-bb8e208a7c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f5b8db-5d38-4ced-93a0-5ea3ce4aa4cb",
        "cursor": {
          "ref": "347905e5-c26c-443d-a629-c0c6cf660ad4",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "898e9cc9-3db7-4030-97dd-807c1f3a7618"
        },
        "item": {
          "id": "26f5b8db-5d38-4ced-93a0-5ea3ce4aa4cb",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "f56be184-4423-4c72-a4ef-eab6ab21e9b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ffc8b22-7544-41c9-82dd-79400b47455d",
        "cursor": {
          "ref": "57cedba7-c956-42db-b945-c61b195c819d",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b04b1d42-1fb0-4e13-b48b-532020c9b85f"
        },
        "item": {
          "id": "1ffc8b22-7544-41c9-82dd-79400b47455d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "2a92b65d-9787-4f72-afe7-6f3172dda0e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ca38e9-0972-44eb-8af5-326ef7925439",
        "cursor": {
          "ref": "9065794f-2a29-4f6f-a746-e3a8494a43d5",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f15442e1-f106-4c0c-bd54-9197019f5798"
        },
        "item": {
          "id": "56ca38e9-0972-44eb-8af5-326ef7925439",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "401b7f08-3087-4936-93c0-b43e318faf5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d2ec20c-7043-44d3-bf68-70f94ebceb42",
        "cursor": {
          "ref": "0a3a9440-b92a-4477-9bd6-a438ba978b71",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f68365ff-a21c-4c92-851e-776217090481"
        },
        "item": {
          "id": "5d2ec20c-7043-44d3-bf68-70f94ebceb42",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "cd9a5130-579e-48a9-9746-30d0328f7235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e535b2-a5d0-49b4-b1db-3496fbcd5338",
        "cursor": {
          "ref": "78ac1cd2-8499-4f0a-a8df-05780a7f640a",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "46beba0b-b316-47ff-905f-b766497277b9"
        },
        "item": {
          "id": "08e535b2-a5d0-49b4-b1db-3496fbcd5338",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e950dce1-9cb3-4bf4-a89f-24cdf3aef2a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a85c32-d2ff-43a2-910e-4168d94905ab",
        "cursor": {
          "ref": "19b279a2-b459-46cf-82ea-fdecfa9ef9d9",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "be24ed46-1895-4726-b606-e1932b001851"
        },
        "item": {
          "id": "42a85c32-d2ff-43a2-910e-4168d94905ab",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "017d2da1-2cb2-499d-9595-05d6fbab54ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "015850f9-5681-4935-bacb-9f0d43754c86",
        "cursor": {
          "ref": "04a45bd4-092b-4928-b692-12d673fda677",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ec387ef6-29ec-416e-8178-c62ba8e788c0"
        },
        "item": {
          "id": "015850f9-5681-4935-bacb-9f0d43754c86",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "4dc19816-1409-4348-9de2-d54714d94db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa25cf12-c91f-4d4c-9a6b-d8144a68f709",
        "cursor": {
          "ref": "6b59b7d6-0a1c-48a8-933e-b82496bc3d52",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "055020d7-6300-4a08-a64f-f6f6dd7109cd"
        },
        "item": {
          "id": "fa25cf12-c91f-4d4c-9a6b-d8144a68f709",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "8a309bfc-6215-4daa-830e-81dd0b9304a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40545af3-e44a-468b-af6f-3ed8f3e0d623",
        "cursor": {
          "ref": "84de12a2-4444-4d0e-b19c-8de43e786c8c",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d3ee2fec-7c3c-43a5-9625-4f45cd2b6fd0"
        },
        "item": {
          "id": "40545af3-e44a-468b-af6f-3ed8f3e0d623",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "39057b0f-c398-4251-aaca-61a21f6b1ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795a15be-6387-420f-8a5e-aead803837c7",
        "cursor": {
          "ref": "c7e4594b-10b5-4111-84ae-611514264098",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "426fc783-84ef-430d-bf94-dfb0c29c127a"
        },
        "item": {
          "id": "795a15be-6387-420f-8a5e-aead803837c7",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "870b0048-bc47-455f-82c8-5a6875e50ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b850f38f-0bc0-4272-9fa2-e69933ebc357",
        "cursor": {
          "ref": "0197991e-71e9-4b2b-96ca-987953c4ef3c",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5f5e9cc4-2b08-47fd-9fc6-341dbff3a11d"
        },
        "item": {
          "id": "b850f38f-0bc0-4272-9fa2-e69933ebc357",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d36c6176-94d0-46ca-b9ca-6fb6e0cbd041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e36aa61-0cf8-47ef-8aaf-6415981a56ab",
        "cursor": {
          "ref": "74fdcd82-2dfc-4721-a925-2385342b8ee9",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "75e44baf-83ad-481b-8252-fd3c4a17e8b9"
        },
        "item": {
          "id": "3e36aa61-0cf8-47ef-8aaf-6415981a56ab",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e370ea51-2880-4c13-ba58-e719a0c095dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce8a16cd-e2f8-49ed-aaeb-d41a9f7fa09c",
        "cursor": {
          "ref": "068ab96d-e53c-4ea5-9be4-4ac8a42f1a1e",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "8ad456c2-b86a-4631-804e-1d465bd12077"
        },
        "item": {
          "id": "ce8a16cd-e2f8-49ed-aaeb-d41a9f7fa09c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "071a6350-a2bb-4007-9a7f-2d2bd7d347a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "164394cb-7649-4647-a9bd-c8b9473221fa",
        "cursor": {
          "ref": "99e1227d-a24e-4f56-bc9f-c909beda103b",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "38fe47c2-8438-42ca-a429-c8fa16816a62"
        },
        "item": {
          "id": "164394cb-7649-4647-a9bd-c8b9473221fa",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e100c83d-5aac-4d01-b376-f42caa0ec9b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ed5ac8-6a50-414d-93e5-a3dc472ebd1b",
        "cursor": {
          "ref": "1863845a-9d00-4672-a4f1-a758f49dc07e",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "bdb0c2bc-2fb3-4e0b-b94c-d9094dc92c89"
        },
        "item": {
          "id": "79ed5ac8-6a50-414d-93e5-a3dc472ebd1b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "66bea257-6d0f-4986-9639-1816f16d100c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050edcbb-3371-439c-92e1-be4135bafe27",
        "cursor": {
          "ref": "2727917f-2e09-4fa1-ace6-0673dc751f6e",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b2f336c1-7f5e-423c-a798-f50523ee6343"
        },
        "item": {
          "id": "050edcbb-3371-439c-92e1-be4135bafe27",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "4e87cadd-a4e1-4b4d-898a-003c4fb8ddb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b25802a1-6adf-4e0c-905a-fa44773a8732",
        "cursor": {
          "ref": "acbe86e8-7f0d-4499-8f47-a30cac3d9cf1",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d586eb3d-99a9-459e-bf09-e2509d8bd58e"
        },
        "item": {
          "id": "b25802a1-6adf-4e0c-905a-fa44773a8732",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "8b32a608-ae30-481d-8818-529e206ae132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "628bfac1-0111-49b8-a0cf-0019016a4d7d",
        "cursor": {
          "ref": "53d04711-137b-4830-b7e3-166586aa5d98",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "90669ce3-2408-4780-916c-bd00b99449a5"
        },
        "item": {
          "id": "628bfac1-0111-49b8-a0cf-0019016a4d7d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c9bdb7ec-347c-453f-82d8-c24ba1f54548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa06e065-461d-46a5-bdb8-00198cc519c4",
        "cursor": {
          "ref": "ae2a7182-e9c6-4f55-9344-825b7084f0a3",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "57bd50f8-7597-4630-9420-5b74c5a91143"
        },
        "item": {
          "id": "fa06e065-461d-46a5-bdb8-00198cc519c4",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "70c3beaa-0443-4433-a568-d05162a65592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0a6287-9ef4-4bbc-afe6-0a8ab8967d67",
        "cursor": {
          "ref": "ae437d0b-367c-460c-a5c9-d9ac7af36eae",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a221dffa-67fe-4081-b09f-ab6039f62d60"
        },
        "item": {
          "id": "ac0a6287-9ef4-4bbc-afe6-0a8ab8967d67",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e9966e32-002b-46ce-a6a2-2d954ec3ae1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "880084a9-2665-45f9-a820-6693531c781e",
        "cursor": {
          "ref": "68e4b6ee-65d6-41a5-90f0-93aebd71a90c",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "73d6c6fb-1cf2-4b74-81c5-7c4a5d297f6f"
        },
        "item": {
          "id": "880084a9-2665-45f9-a820-6693531c781e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "1dd64000-34c5-4f38-b6aa-2337f1d8e67f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcee914c-5cfa-412e-a89f-44b9c2ee9bd8",
        "cursor": {
          "ref": "64eda09e-b559-404f-a71c-b24231a2c07e",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "3808a54d-187f-44e6-b6cb-acd2b0c2d0a8"
        },
        "item": {
          "id": "bcee914c-5cfa-412e-a89f-44b9c2ee9bd8",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "cb60a017-89ef-45f8-8adc-e7b496bbfeea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b08f6d5c-a958-4b78-bbc8-9e25966c69a0",
        "cursor": {
          "ref": "cd9d0bbb-e268-4d55-8d0f-e1d67db51db0",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "265e9154-7844-4954-8cc8-d0fb2dfc7092"
        },
        "item": {
          "id": "b08f6d5c-a958-4b78-bbc8-9e25966c69a0",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "30027262-adba-4d03-aa66-c4621f107a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a1c2da1-f92b-4d9c-92a2-78c795da038f",
        "cursor": {
          "ref": "de86fa0e-d677-458a-8282-f9da3c63f0af",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "8fc20e3d-50bb-4f14-a505-addc5a673e82"
        },
        "item": {
          "id": "4a1c2da1-f92b-4d9c-92a2-78c795da038f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "158315ca-1dd9-415b-a932-f864d15ca2c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7913e45-3be0-4286-8149-df8562c5bcdf",
        "cursor": {
          "ref": "dc2157ef-2254-4f23-993e-e07f976061b5",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ab9440e5-11a8-4985-92ab-c8954b20293b"
        },
        "item": {
          "id": "f7913e45-3be0-4286-8149-df8562c5bcdf",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "66a8f812-a298-44ad-8535-1f35bc9df508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c0cb109-2ba0-4dc8-9b9f-c1febe130c64",
        "cursor": {
          "ref": "527c7555-e02e-46ba-b139-85d835d1628c",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "21b39847-f233-4cbf-a09a-505146cca13f"
        },
        "item": {
          "id": "4c0cb109-2ba0-4dc8-9b9f-c1febe130c64",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f23a1c52-c62c-4677-ad4a-a4d81c5ac100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b12a713a-c2fb-47b7-b998-3ccf84a84d21",
        "cursor": {
          "ref": "5bfcc82f-4897-4854-aeec-dc40d768e259",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ae016ed8-3303-448d-859d-f89efc31fb88"
        },
        "item": {
          "id": "b12a713a-c2fb-47b7-b998-3ccf84a84d21",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "845da812-c0e5-4664-bd8c-19af243d7620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d709afd-9b2e-46e1-aa66-e15fd0a1652c",
        "cursor": {
          "ref": "a85e0dfa-3de0-49d4-adfe-40251125cbc0",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "410bd5f0-c31a-41a3-9d08-79facf2ad037"
        },
        "item": {
          "id": "1d709afd-9b2e-46e1-aa66-e15fd0a1652c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f72b5fa0-745c-4215-bc1d-d3ec736b6a56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ee9b2f-eb31-427d-a6c3-237bb7ce22e1",
        "cursor": {
          "ref": "8004ba77-cefd-49e4-98ec-15e1e2404ac1",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "e3d5ac96-b361-4525-acfa-623ace22f5af"
        },
        "item": {
          "id": "68ee9b2f-eb31-427d-a6c3-237bb7ce22e1",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d3156760-1346-43d5-af91-c9649be09d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bda81b6-0c7e-405f-a6e2-4f3152232eff",
        "cursor": {
          "ref": "62db7783-8612-40b9-b7ab-997e4b99bd44",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "d8339e6e-7891-46d6-a2cc-145ef781e181"
        },
        "item": {
          "id": "2bda81b6-0c7e-405f-a6e2-4f3152232eff",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "66e245ed-c547-466d-bc30-efb2b1310708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54185387-fd48-41da-a1db-58671c6c1e19",
        "cursor": {
          "ref": "a6e87e2f-a1e3-47e2-b5d8-c1d62a9c0ea7",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "bc68fdb4-0934-44a5-a494-a30597161e6b"
        },
        "item": {
          "id": "54185387-fd48-41da-a1db-58671c6c1e19",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "11171098-cc47-48fc-9cc5-477b92b55d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a94c36f-9183-481e-b10e-eabae354eca4",
        "cursor": {
          "ref": "6bd94c81-c63f-42cc-a74a-a4943ba3078c",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2d7da142-25e8-4f3e-b754-b59f93774db7"
        },
        "item": {
          "id": "2a94c36f-9183-481e-b10e-eabae354eca4",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "2b067099-b425-4b12-b71b-5bbb95b20194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa85392-df70-48c2-9f4c-1cedc0b2bc52",
        "cursor": {
          "ref": "9121b6da-bb91-463b-bdd0-d390b27973fe",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "19c3d773-94e4-4008-881a-1c2a797e9afa"
        },
        "item": {
          "id": "5fa85392-df70-48c2-9f4c-1cedc0b2bc52",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "4bd9b14f-4569-43a6-901f-7503598c9158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 138,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e13d30c5-3385-48c3-a169-b98edee47f0d",
        "cursor": {
          "ref": "a57f0058-038d-436b-a773-b69cda6cb57a",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7df4b6b7-5b73-4838-8e92-08ec9ac4d98a"
        },
        "item": {
          "id": "e13d30c5-3385-48c3-a169-b98edee47f0d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a93971a5-264d-47f2-a456-f7848b9c03ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c236c4d-9b44-42cc-bdf7-2687b7b22746",
        "cursor": {
          "ref": "03408cef-8737-4a60-8e52-12b8ae84121a",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "4e894d31-a4ae-493d-ab16-4d68c48543b4"
        },
        "item": {
          "id": "8c236c4d-9b44-42cc-bdf7-2687b7b22746",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "9513ad1e-3498-4206-9195-3847ef5f4f64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d6969b-764d-4441-b858-84e30c485b8f",
        "cursor": {
          "ref": "77fc1fc6-f37d-4162-b0e7-2d0aa1dfd4b1",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c5571eb7-5179-4d73-a915-649602c86150"
        },
        "item": {
          "id": "35d6969b-764d-4441-b858-84e30c485b8f",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ee7603e2-9098-471d-9c3e-edd3e158263d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ac7892-6b0b-47fc-8fb0-c99e0684a362",
        "cursor": {
          "ref": "ac8f0f0a-a6d1-434e-ac84-76b05481511a",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c2dc7b09-4689-41ae-b7ac-1ba0e022b581"
        },
        "item": {
          "id": "47ac7892-6b0b-47fc-8fb0-c99e0684a362",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "4d14ac8f-2e94-4fef-93cd-1ca2907d555f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed973cdc-0a64-44b0-b8d2-561b4d0d81a0",
        "cursor": {
          "ref": "bd874b8b-cc54-47b4-917f-91afb94af453",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "851359a5-baff-4206-94a7-613b6b9afe69"
        },
        "item": {
          "id": "ed973cdc-0a64-44b0-b8d2-561b4d0d81a0",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "23e6b6c2-2a97-40e0-b962-89e0fb114f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71cbbce7-83ea-4c8d-9ced-da1209673aa9",
        "cursor": {
          "ref": "b2181dd5-b281-4c97-ba22-c28d05370c9b",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d0f28432-91d3-40d3-b0a5-3af8171aacbe"
        },
        "item": {
          "id": "71cbbce7-83ea-4c8d-9ced-da1209673aa9",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "1ea1cab6-9f33-4f57-ab32-881d8af0c31b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbb70f9b-2657-4f1e-bf63-71918c11c40e",
        "cursor": {
          "ref": "61a7d6ab-cc34-4957-ade1-5c80d3da2866",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "863bd20c-9417-466f-85ef-8fa48e187955"
        },
        "item": {
          "id": "bbb70f9b-2657-4f1e-bf63-71918c11c40e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d62c0719-43d1-430a-937d-c7cf9d11a6e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f86198-90bc-4c63-a6bf-fc4578919e7a",
        "cursor": {
          "ref": "34f3a795-6db9-440b-aaae-afcd1dbb4146",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "84e1be4d-a66e-4cea-9278-19bf72ae8f48"
        },
        "item": {
          "id": "c8f86198-90bc-4c63-a6bf-fc4578919e7a",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "55d17c25-b465-4cd6-9a90-817c6df3072b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b03dbacf-4293-49dd-87ae-e4653cc5c7f3",
        "cursor": {
          "ref": "9c60a566-ae0b-42ae-a56a-f39a39a032b3",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "272d3c11-582b-49f4-8248-7d4889461165"
        },
        "item": {
          "id": "b03dbacf-4293-49dd-87ae-e4653cc5c7f3",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "dc8f3e96-a249-4314-bcc1-1272567a2748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f6fcbf1-812c-4cb3-b96f-b8ba2fc77845",
        "cursor": {
          "ref": "ebeda818-d382-45c5-bebf-b8a49ce925c0",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "98c98e97-b741-4056-a413-0a2a8f161ce3"
        },
        "item": {
          "id": "0f6fcbf1-812c-4cb3-b96f-b8ba2fc77845",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "dd57b52e-10cf-4e0a-a8cd-ab7a7022adc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "609bcb4a-4048-4e50-8db0-6dba10896f62",
        "cursor": {
          "ref": "3373f0d2-3d80-46ad-a421-1b379855ce7f",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b8608ddc-eab0-448a-902c-0856d3a45c3f"
        },
        "item": {
          "id": "609bcb4a-4048-4e50-8db0-6dba10896f62",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "54bbb959-d21a-4969-9177-fb04e358e7ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3054638-e755-40c1-97ad-92256e67b75f",
        "cursor": {
          "ref": "f3c07af3-8697-4378-8b64-75b84397880e",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "745ef8cf-71ba-476f-be6a-e500b2fe5ce2"
        },
        "item": {
          "id": "f3054638-e755-40c1-97ad-92256e67b75f",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "35c25d8b-3038-4644-97ad-d2f9efa6a5a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a574974-7b57-43a3-87f4-2531b6e3c4d9",
        "cursor": {
          "ref": "e64f20d6-43e1-4f4f-ab24-8e0a502993b2",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "4ae87e70-6357-4d43-b53b-5d2127e15cba"
        },
        "item": {
          "id": "5a574974-7b57-43a3-87f4-2531b6e3c4d9",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "fbc922d7-8012-49ef-b231-f705c70719da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b58e8d-b4e6-4654-ba4c-e06a22a10592",
        "cursor": {
          "ref": "f70294c3-4876-4fb1-a633-0d976a2f2fe5",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a017a1ef-5ea3-41ca-93fe-f3d1c238eee2"
        },
        "item": {
          "id": "c9b58e8d-b4e6-4654-ba4c-e06a22a10592",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "dd6e9392-d22a-4335-8bbc-132469a017ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478ff9d4-6ba1-42cb-99f7-909ba8ebbbc4",
        "cursor": {
          "ref": "297347fe-9b49-47f2-b81d-b8acecc97019",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "afb1457f-418d-4bf8-a0c4-d654e2a6edcd"
        },
        "item": {
          "id": "478ff9d4-6ba1-42cb-99f7-909ba8ebbbc4",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7f8c8974-8d10-4023-be8f-6dc9ed957284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a440c51b-1e01-4b4b-98e0-f1a469093437",
        "cursor": {
          "ref": "7e70d94d-72b4-47c5-959c-4b855bdc6ac3",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "86091599-2bef-4868-8d40-4a59e6c4aa1e"
        },
        "item": {
          "id": "a440c51b-1e01-4b4b-98e0-f1a469093437",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a225493a-1c3e-40ce-ba0e-8d679b8082a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f75633-6079-4070-8fe6-5c19852fd58e",
        "cursor": {
          "ref": "fa7fba52-0ae6-4c35-9841-5756a03d4a8f",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c8828d5c-95a3-4fba-90fa-c1226ec7aeef"
        },
        "item": {
          "id": "13f75633-6079-4070-8fe6-5c19852fd58e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "814167f1-3126-4029-82ba-57908712b70e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d46e33-e769-4d79-b4b0-f90bc6cc88eb",
        "cursor": {
          "ref": "c83c974e-d6ec-4698-9491-cce9ece7c306",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "0fa60393-5249-4933-ada6-733e49e111c6"
        },
        "item": {
          "id": "56d46e33-e769-4d79-b4b0-f90bc6cc88eb",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "9c8a72bf-7596-432f-8f09-4520f5b76314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e4d8f04-ad4f-47ae-a956-583ed8e70380",
        "cursor": {
          "ref": "1290fc19-61b3-4048-9315-d8c265fcc9be",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a9425824-c0b7-4281-8f2e-0d70abda10b3"
        },
        "item": {
          "id": "8e4d8f04-ad4f-47ae-a956-583ed8e70380",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "8ca87f46-a1aa-4aa6-acd3-897476b52a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bddfa628-33eb-464c-8197-38a7408ccdd2",
        "cursor": {
          "ref": "a35f284d-08a5-45ec-91e9-8d4530156a6b",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f72ed591-9b5a-4462-bf6b-b3122ac4acbb"
        },
        "item": {
          "id": "bddfa628-33eb-464c-8197-38a7408ccdd2",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "05e4f496-9e9d-40e9-b0b4-c1ef391e5bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1099da58-392d-4e92-9e64-37eedd6252cd",
        "cursor": {
          "ref": "e054c4c2-91b9-4f5d-8325-59cad4776a8b",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "cd2f3ca2-a73b-4655-b7aa-6412d175ee91"
        },
        "item": {
          "id": "1099da58-392d-4e92-9e64-37eedd6252cd",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e118a56b-653f-401c-a069-2f21a3fb526b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d48485-5ab9-48dd-b2b9-4131591a969b",
        "cursor": {
          "ref": "04a9988e-83be-4d57-9684-46443ba662cd",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "9abc38e8-8204-4676-b4f9-199bb429c1f4"
        },
        "item": {
          "id": "43d48485-5ab9-48dd-b2b9-4131591a969b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "0d750b2e-5f80-4220-a9e6-2f7971305fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "671eb5bc-3c10-4d69-83ba-5443585571fe",
        "cursor": {
          "ref": "d2472518-9d00-4c40-a71a-670f8e9fde4a",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "39a490fe-b45a-4725-a96f-09e9888cfc50"
        },
        "item": {
          "id": "671eb5bc-3c10-4d69-83ba-5443585571fe",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "efd41044-bd22-4167-b254-4691a2ed42a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de96dd2-7670-4db0-af95-7d4c1aa8bd9c",
        "cursor": {
          "ref": "33b68275-22b9-46a0-a730-a8086405d084",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "fb3743ef-bccb-406f-9bf5-3f63475d2a09"
        },
        "item": {
          "id": "1de96dd2-7670-4db0-af95-7d4c1aa8bd9c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e30354c0-7600-482c-8473-d32c2a340a5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1827562a-4bcb-4948-8879-4806d9f482a9",
        "cursor": {
          "ref": "d88e8b0a-2fc2-45ce-b3ba-5fd48a9bbb33",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "12528b5e-96c0-4c3c-a66f-734c650827dc"
        },
        "item": {
          "id": "1827562a-4bcb-4948-8879-4806d9f482a9",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "60a85d6a-5746-4767-81dd-b9cff06284d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "511b86b8-30e8-4c05-a07a-68087e95092d",
        "cursor": {
          "ref": "79b473b9-afe8-404c-8b5b-b8d648b5c651",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d3a91021-8b32-4df8-8e88-7f0347356894"
        },
        "item": {
          "id": "511b86b8-30e8-4c05-a07a-68087e95092d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "2cbe1f97-19c9-4bc8-a77e-9b93fcfb92d1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b05d6b7d-d2e0-4638-bf0a-3dc620ef1b6c",
        "cursor": {
          "ref": "a67b2505-b304-4857-b113-6f972371a7b3",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "fd6d081a-6a0f-419f-8d3d-32169bc9c320"
        },
        "item": {
          "id": "b05d6b7d-d2e0-4638-bf0a-3dc620ef1b6c",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b375ea8e-07e7-4231-8b92-7e32ce0e5bcb",
          "status": "OK",
          "code": 200,
          "responseTime": 152,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "0960c687-a8ad-488a-9226-99e6dc9ac8ce",
        "cursor": {
          "ref": "45a64b92-66f8-44c5-a6a0-5bd310832a96",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "5374252d-3326-4b8d-9e14-901fb64eeff5"
        },
        "item": {
          "id": "0960c687-a8ad-488a-9226-99e6dc9ac8ce",
          "name": "credentials_verify"
        },
        "response": {
          "id": "5e35fcfd-3613-4d62-8169-8050033bfce9",
          "status": "OK",
          "code": 200,
          "responseTime": 2182,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1fc016c-f9dc-418a-8f6d-aa3d2c6f66bb",
        "cursor": {
          "ref": "89ee2bdb-a17a-404f-bb48-afb8938d3f80",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "f598a0b1-9496-444b-9a94-94054c1b1281"
        },
        "item": {
          "id": "a1fc016c-f9dc-418a-8f6d-aa3d2c6f66bb",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "69320b29-9493-40a7-a9b3-eba66b8f9960",
          "status": "OK",
          "code": 200,
          "responseTime": 2449,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbde6719-243a-4fa4-a089-496e83c89afe",
        "cursor": {
          "ref": "239c413b-efb4-4de6-8e9d-1e0667fbee7b",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4561f3a9-1356-494e-8036-edcdb3e8934c"
        },
        "item": {
          "id": "bbde6719-243a-4fa4-a089-496e83c89afe",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5175f0d0-b934-408d-b61d-01495f95e8ce",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbde6719-243a-4fa4-a089-496e83c89afe",
        "cursor": {
          "ref": "239c413b-efb4-4de6-8e9d-1e0667fbee7b",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4561f3a9-1356-494e-8036-edcdb3e8934c"
        },
        "item": {
          "id": "bbde6719-243a-4fa4-a089-496e83c89afe",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5175f0d0-b934-408d-b61d-01495f95e8ce",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5061dc7-4e14-4836-b926-91b846ac5a77",
        "cursor": {
          "ref": "72debd80-4b2b-477a-923a-301f9e9cbd59",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "9de86200-77eb-40a3-a62a-2979b024b86c"
        },
        "item": {
          "id": "b5061dc7-4e14-4836-b926-91b846ac5a77",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ff3b4d0d-99eb-4dc8-b335-48e62b5a638b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "177e000f-475f-409e-aa53-b39a861a613c",
        "cursor": {
          "ref": "43c35533-7be3-4298-8136-6e7f2097c6a8",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "72b0e7db-a03a-4e3b-9250-cdbcd5fa485e"
        },
        "item": {
          "id": "177e000f-475f-409e-aa53-b39a861a613c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "87fa155d-ff88-4011-b638-0921d575f3d5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}