{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "fdf5c347-1d4a-43fc-b855-7686e9a9c08e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "4036524f-a5dc-4c7e-a05f-70f06c136d0a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "17d607ec-01b4-4358-a6d9-e4d084cd4039",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9c559d77-e23b-4dd4-a240-4fb4ac581b3f"
                }
              }
            ]
          },
          {
            "id": "67dba1c6-462d-4e60-b2b9-cd3c2b07bc27",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8896f904-96f0-4bbd-95ea-134fec3459a2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c2704797-7c1b-4863-bc0a-b18439026402"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9d52f96b-01a8-472c-ab69-016a8004e498",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "cdf61590-c053-4511-94c4-8c2611c746e5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b164f2c3-51a1-4aaa-ba0d-74118a6bad3b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8554c8b5-9565-45ac-b46f-1b131fd38c4c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7d976c67-3d3a-4fb5-8169-9060399ff471"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "633afcec-d06d-4f3d-9dd1-5494b9e68b5a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e58a68cc-6934-43e5-adf8-953413c598ce"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "85cd1182-d5cc-4744-bfd2-a348b268fdbd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "72d30495-c434-46a4-b967-63ef1b52bccd"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0e198c65-902c-48bd-b25c-e42a9d227a54",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "5942ba0f-e237-4f4e-9492-26c76afe9912"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9db7b6b9-2097-4729-bcae-f28f2ab48541",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5825da16-1f1f-4a93-b0f4-6a09c5ac8a73"
            }
          }
        ]
      },
      {
        "id": "e4fbec1f-fe2f-4f49-aefb-793d82b7fe65",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "6e44b52f-a97f-408b-8f4b-660aff3ad0ae",
            "name": "Negative Testing",
            "item": [
              {
                "id": "99774c88-6bf6-4dea-b00c-a2a03623ff6e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ffd57d55-6b9c-4a4a-97d1-2494e3bd67d8",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "420eab7e-7549-4343-9b37-cf3601a82c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "12c1f3eb-c219-43a3-8f5c-c1aef3efa275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02ca24fe-5989-4c27-afe5-a480b860bed6",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf3782b-7bd4-4b28-bb5b-0846b19f0539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e216b877-a290-4b6c-ba19-602981480a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd49bbe6-8169-4a15-987a-34f8330b2e86",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c2b161-a716-482b-acc4-c243cf130f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d0b6fee2-3014-4706-ac99-f0c993e87508"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b814c59e-1d67-4ab8-bddc-ddfb3d9c1d54",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3709ab4e-1312-427f-919c-d368c8de037e",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed94a58d-4665-4db4-968e-2f59988a81cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3bc58de6-7b2d-4323-8496-cdd753464eb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76aaf9b0-a2ca-42dd-a7bc-2926f6f880d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04fc6db9-4837-475f-bf85-36e4ab1d90d5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "07e6797e-09c3-453c-b789-945e4cf932bc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0a37694b-5705-45f6-b6cf-715b32def7cb",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "de0469b4-fa5a-42d2-a910-357a78f3cddd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d5599ee7-f859-4d48-b596-61dc91aee4c5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ba699f49-02f1-4ae0-bc22-ef24c8cff249",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "482a5f44-e473-42e1-bdfd-fe193812273c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "add47176-7c03-4a1b-b263-485556d37abc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e0f43aa7-12d6-4025-9c0e-940f630c46c1"
            }
          }
        ]
      },
      {
        "id": "b5c73882-443b-4d81-9fbf-683713bc98e8",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "7a32f217-1e17-4098-9b02-e93808de6887",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aaac3f96-966f-4cf8-a6b0-ea5e861dbaff",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "6c79b72c-3026-4b8b-a56f-0362d4ac9006",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d899cf9b-8955-45e2-a1f9-8a3b16bc2dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca1012f6-30f0-4ced-8db5-ec696f46afdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d37c17b1-3297-4e57-8b7e-28de83411391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea342a2d-9d40-4e1c-a84f-0b7e9e431a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14663332-dad0-43bd-be1f-76ae6d92864b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe698c4-de3f-470c-9a34-5bbeb0b7da1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50e7fc52-8dfa-4d32-8d43-d621158787a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3b2107-3d82-48b5-b36d-946279ddbb0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "195ca89d-d07b-41fd-b719-35ac76e3f442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcdb2687-fcbc-4dfc-937a-2cf01e20718a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7277c6e1-60b4-494f-a6bf-7aaee1519251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9844ecf4-765c-48a2-8946-0197c01ee134"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b3204e-0b29-42d8-a786-8b050bb60a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a9fc602-73e6-4446-ad2d-149cb480d287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23bd1270-d44f-4a65-aebc-815fde7d0350",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ae0e24b-baba-45e2-b2c3-c31b49b2b843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c99a1e9d-9ec5-433c-bb3b-71cf3ea8c48e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29afabf5-c214-476c-ba11-d82f432dc709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3cb0eb4c-cc37-442b-9f23-f5924e390fa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "582179ea-86e0-482b-bc31-4e18b315ec53",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97461a4-d959-4d84-a2b6-002756a567bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4579629-40b8-4cd0-a971-4d2d8c81cc62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "922ea9b4-f5ce-4bf8-bb2e-59de70ee0e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e009feb2-1faf-4e80-8ddb-98d073615a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a30c68a8-318a-497d-8a43-b522323f6e6c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca511013-e137-455c-b7e3-49e046918187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a1b383f-844f-49b6-bfec-c5d5e91c9484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3bcbae6-6d1d-4c9a-9f9e-65eb76354615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e665bf0-4eb9-4603-8d4b-88b2f8dc6325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed331bc2-c178-4b70-ac77-2d8045e5607b",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b73cf55-cc39-4772-a75c-29a045598a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf7c81c1-0e98-46e6-96e5-025dd3395d6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "136e1a7f-9af4-494d-982d-259dca2e5cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eee9f576-3996-48b6-9d0e-c68344220a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e68790b0-502c-43c1-a8ba-433f6cf4f6de",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab66713a-3c7d-45c8-b6bb-ea6749a19acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03d9ea3c-ad2c-4b9b-978b-d1bc146222c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fd617de-927f-4c7b-ba99-c2171389212f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "160518b4-23a7-4664-9309-de68f46a1489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf2d715-8246-40f5-81a7-2dbe759c3551",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d1e5d1-6609-41a7-9112-2891ea37e143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d01755ca-46fe-40ee-9e3e-1ca314db41c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be689d46-f5a0-467a-9b42-d2297e24c9f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83f732ce-9a5b-4558-b561-07c9750a7b87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e5737bf-a6d8-4756-befd-27b4ea859511",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98aa9467-0d23-4fb0-9078-06e266b6d000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e7da22c-c6cc-4d52-a412-55c273689e5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb6baf2c-fab2-4ed3-9755-63b83a36ea13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83406f82-00ff-4149-93ec-ec8274a1aaff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c2dbc9d-02bc-4d6e-8889-0f2aecb536c6",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dfcc2e2-3c3a-4a2d-a63c-a824e8368bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c263bda7-deb5-4fcb-965c-5a2a918b8e00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "094223cc-90ec-423e-aaf7-725a46a7408b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fdbe722b-0860-4140-8910-14c6828aaae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9863f4-d340-46f4-90d6-9061a166d12f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62045be2-ac05-4cf9-85b6-30d774692c7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87e196e7-41b1-4d3e-be06-66aa7d77a647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "784624e9-c53c-4797-8d62-9c0a47b9270d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17b71785-8832-4ac4-af30-f7f419f8d5a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e31fa1f-17d8-4fd9-9edc-093e3cfdf172",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f238aa-b829-4c9d-8dce-0b01df19b0fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3ef4a3b-8bd6-4bd4-9002-eb79acfec822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a63ff086-f0e1-41b7-9f11-a0caa9206461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eba974b7-5d56-4415-b600-b2b11449281e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed19e8d4-25aa-481d-85c6-cf0601cb3cf3",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0881fb-d43b-4b93-8c04-f16b19ab4e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd9d9616-d29e-400c-b72a-55504b834bef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ded27f-7fe5-42ef-9ef1-01bb2042e256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9311b743-5261-4ad0-b7c4-a850df1f5cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d257097-57e3-4034-b7c1-2dc78a09ee4f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db91680d-644e-4424-b465-7944f498162f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "829ca5df-b565-4ad2-89b6-507d4415e481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b16ae4e-9361-459e-a337-1be89bfa18cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "90bb2de4-b1cc-4b2f-ad5e-9cfce9437e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2843e59e-1e66-4323-ab86-8db5fe8d5b48",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dbc5454-104b-40c2-bcbe-3f9b1ec61eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d88831a0-b68a-4f07-83e0-f081db159722"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2546b00-574c-4152-b9e2-86c00aa3bb45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92425ade-dac8-466f-9b4c-9514c33daef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a8b09a-bea2-4843-99ef-761e3511b450",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db343658-c225-4ec1-baa2-249ac78a3b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cada67b-18c8-4da6-a772-2317a4c9e339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b9557ba-346f-4140-acf8-c4e8c0feab8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a9a4a51-ef5d-40c9-bfba-000e0e2185a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa77f3bd-91b4-4199-ba8d-c99647408c75",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "553618f9-e960-4a85-a21c-66e86fda0d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6cb823b-dfac-4bc6-b7f3-61270557b6c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2394be7-13dc-4f9f-b082-c6ce30010fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e281819-b851-4690-b513-7bda28a0d409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd3e1d3-fe25-4483-838d-8057035b724d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f26df8-e1a8-4987-bdd9-cc76c129c424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bf5c476-25bd-4626-84e6-3c3cbc963e66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3259c7f-a157-4a91-be07-c9ab5142124c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "23a8e0fb-92c3-410b-91bc-d634af52fff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "366429f0-c350-456b-b4c9-21e1e0909043",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "772a053e-ca73-4516-a5e8-783b9f898e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "196253e5-c118-4e43-8094-efae19b39eb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a869bfca-de43-4aec-b19c-b0c9513da9d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8a8af85-6127-4125-958e-b842f04f196e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "023123c6-d3e5-4140-b9d0-b24b6b1dbad4",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f4656e-7c32-48fd-8660-ff922356c709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e934be2f-f252-472d-96a7-296b790dcf7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c75425be-d8ea-4146-a19c-489163f48826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6944821-7576-47ca-87ea-2dbdd1f0d30e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5699f0ae-d5b9-41ba-88b3-f08e521816bd",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab329c41-364f-4d42-9c2c-aa3c5b66f86e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b6431a1-16a5-4973-8d53-6ac58965be98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5094f6-a93e-4600-bd94-87ef61e10f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4576046-8929-420c-90e8-f09a268d63bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f462f8-d75d-48a6-8c3d-ff28430d0f70",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af48eff-2023-4751-bdcf-fdf12aa29953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52dd68cc-2aa5-4d67-b9d7-9e12acb1b144"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2405ca9e-05d1-4750-9a8e-bcc3d061e848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "00167341-4f35-423c-bc6d-469a0043409f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca0817c-e07f-4d8b-9a9f-ee487e2c1684",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "decfff09-8ef9-46ba-bb08-43222472d297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50640337-1d6f-461a-a0bc-ec4e231c997f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63d178c3-793f-49d4-9e0d-91ab201b0ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "641e2d47-ea6d-4589-9102-47801eee22c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad62015-0203-4539-9932-5aa4c8d178b9",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11966c69-19d3-4ae6-af99-05849b91a220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c4ebb49-0718-49ec-9af6-5553b481848d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ecb46c-8af4-46fd-9d3e-5ebaecd048ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc813d86-a899-45ad-b4d7-230dce44143c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f27b7d32-a964-4ff1-a5be-3bb2780455ab",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6509a101-7ba3-4914-8c53-aaf6efa395fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f2738a9-8aff-4628-b22d-32ddd64b7a3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14713a41-8426-4ebf-80f7-69ee9435441f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bf46819-8525-4a73-8030-413b9cc85ea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2642d0e1-fb77-4a32-b0de-610dd072b847",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca82b801-0625-4bb5-ab82-ee57bb7598fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6b75b7d-8c07-4f4f-9a45-6bbe837caeb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077708aa-d93f-4f7e-a4bf-81ec74eb22c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e4fdbe8-d9c3-4acc-83fb-28e230e00c4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "226ccc8f-d917-4d07-9d01-84b964f5e15f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b016cba-36c1-4410-a82e-b3f8d9b8a2eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9d13e58-c820-494d-a923-69a71a06a373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2bc444a-2a55-4d2e-a74e-cb8e1ddaf597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b19f3ac-1652-4623-b39b-dcddfc929be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "943c8fd8-8efa-4733-808d-e5d67e10aa3c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eea94a4-7e65-4d0e-a0b9-93745bcf2506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "754dd6ff-606a-4bf0-b16b-639add016595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb33b5d-4b3a-4865-8caa-8eabc29c6a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "83365c46-addf-4103-9e07-a327dff2f456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d5b3062-f47a-4a61-8b52-b727f4077f3b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae30a99-f656-4509-8c13-4942f65d4f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9656f9db-296b-4728-8a87-03dd8a0f9958"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fec0280-b79e-409f-96be-8bc30189ad82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b35b11d2-140f-4af7-a67c-ed0ca0e52baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e25cad-da25-4e9b-a53a-5bd6f65e964e",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f66e8cc-f8b1-4cb8-b410-1e40d4248d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dfa5358-4408-45bc-a0bb-a43e3e78227f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa2ffb1-7c42-4306-99e1-bf63d1c6f8d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3380da0-0e7f-449a-b7ac-6756e187c79a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95350ef8-b96c-40d4-9d89-6f50939a8be8",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6bf4109-ea69-4a3a-91af-f097b8090918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7e9b8c9-31bb-4023-9868-f33378322a68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a7cc56d-2c29-4a4d-8640-c9b139bd1949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2c97810-cef6-4152-aac5-ad3fd7629480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "440fec93-a25d-4ad2-b3fe-ef9a72331b04",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fb5d6e4-35c1-4556-8acd-510ee2631e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "092a5008-260e-4d5b-a214-d555b8b528fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3061cae9-c5c9-4840-a493-24a48c065460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1af618e-37c8-4377-b589-ae67aedf8b37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dab256d-5949-4ffe-bb09-7bebd719b6cd",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "347f4874-07a1-4e5c-ae9e-0a9f32dd777d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f504a69-daf7-438a-96cf-c1a1c2a4e68d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d81b95a9-f0cc-4172-b124-64ee01976f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b002403-2ede-4791-a04d-a3f0ed8dc96a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced51ceb-be8e-4ccf-8822-86fba07ea0bf",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50892da-1ad1-4cf0-a313-7d4b0c33f2d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bd82dab-94cc-47bf-831c-245d63552aba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "092a6c6d-6b31-4318-967e-13d1110285b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "3e5a0eef-3366-4ef8-b04d-b4ec57352429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "643f4704-8514-40f0-a513-d4e78484d6ff",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "027e884e-a696-4f93-be8b-ef59871e1880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f65af47-793d-4508-8db4-5d24a5491c39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee402b42-24fc-4e95-a59a-59bce68a0ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9a619f23-f80c-4642-b176-05951f91458d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f22aa4-337f-4816-8d9a-199383025722",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1372abf2-2814-467a-a2e8-233cc4c8b289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4df0e76-8e13-4aee-8152-125e164efe50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c3ea2a2-8866-414e-a9e4-ab3df3889e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d19d164-2008-42b6-8393-3552f30e8f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ffc9e3-6e61-44e9-8766-698487acf9cf",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d73e48-9d92-4ba7-8825-500bb93ec06e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "490465cf-7df0-41c4-992d-8bc91e5f2490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d4ce83-91e3-4110-a931-7cce96792b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d4dea57-5df9-4c64-b697-3940ddee3b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a93a13b-7e95-4c10-83be-4b25cc92ccaf",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae6f8941-a372-46c2-b89a-bf334c600fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43430a7d-84b7-4c89-a964-9977ce803655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a95f53-e119-4e26-91fa-31c2d8aa63af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "10ef9521-cd0d-421d-9f12-b2b7e44af91b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "018adfaa-278b-4d88-aa13-2ad0baf93295",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d76e8049-7fd6-4aef-b05f-bb156b8db9d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc3e510b-6382-4061-9d73-bf0760a1805b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca876f85-07e6-4cb4-a9f8-047d8d990eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "93aa44bd-f20c-43d5-bded-3d969116fde7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b359a975-6910-4fdc-9364-3fadb3878649",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "974e077c-af5c-455b-8431-2fa2b71be6ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8921375-d93c-41f1-8ac9-fa6bb2f6d157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f788ac0e-5ca6-4981-b4f1-289de9e0cd08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6aea4d48-8a48-4c69-970a-269d89fa6734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90bf287c-597f-4915-810d-e60750d1bc1e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3314ebb0-2c91-43ab-8934-b57e3795cd87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c989003d-3819-4701-b44d-2387b4487070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "970d2893-611a-4e6a-ba7d-1b5d7b99566a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "cad2e543-94c9-4bc1-ae51-ba2456d0907f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2085829-14f4-4a42-806f-345f2e92ab3d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c241fe1c-212e-4f89-91c8-e93247080150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56283abd-5252-4c4e-89fb-66c0e85800ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcdebec9-0428-449a-b6b4-e4ec82a2dfb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e19deec-8e2a-4154-ade7-0b99d8c74817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73adcb3f-81cb-4bc7-9db0-0f37b6a6c846",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4007737-5cf5-4092-881c-c29c73040fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "734572b3-2f9a-44bf-a520-11aba5edd53c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af6ea905-0974-4854-b411-fa0eb76cdf23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f38740d3-78cd-4e12-8ae7-281ce3375ee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03f91421-b89e-4044-9fbc-0ab56ed9838b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f675bbfe-10dc-4a56-834e-fffca78642b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe509ebd-7688-4e5e-8afb-67845617df89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "020fc27b-0f98-413e-afa1-0348be004640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "45fb8bbd-4f0e-4e58-96c2-82f207d130e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2894d45-b85f-4906-b270-b3314cee45b2",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be14aad-0608-468e-89c9-7c2ee6abdbfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36d372c7-c4ca-486a-96bb-b37a4d2a702b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4fb3835-06dd-4cd7-9f45-03411820e44e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bc70f06-b78b-40fb-a0f4-446e3f11e7bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f34d78a6-4198-47e6-b77f-a8d6c155357a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14c34461-4f5a-47e5-8f28-682103d60728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08d8414d-9ab6-4be6-a4dd-b27e0d05ba95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a376d728-7be0-4dce-a479-ce49322c7d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "13c6daab-6b9e-4512-a64d-fb5003e05d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb451313-a2c5-49c3-86b3-da133efe1672",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b79416dc-c5c0-4012-a98b-e90a50a40120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ffc0934-3651-41ba-9418-dec09c7bd7e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e98ef7b-0605-4f21-9379-26947f1d92c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7180ebbf-2929-49c0-b44d-b695afa26177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a48979-6c74-4ef4-b526-51f4f54a9b20",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c550b126-80dc-4aae-8a72-b87980f9542b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0373877-38c0-499b-b32d-282728b13488"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff5d8fb2-5638-4431-b3ad-2d90b8d9be1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c776d721-1206-47c1-9f09-8334666305fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a862873a-89a7-4fba-b604-8471df960c4e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea65212-dd68-47d0-861f-e42c45b594b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9b7e2f6-4d25-4877-8db6-14e1d04c6731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5b8f4f0-3ea7-4091-a45a-e663dc54e873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "20411941-e28a-45aa-9c55-e18267103dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "674c7abd-fde2-45d9-a9e8-40c3326c6b50",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a7c7c15-e045-45d3-a769-a3cf64f874cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19f3198b-9a0a-4921-919c-83f93a3ee286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87582beb-3b5b-4457-b7b2-8067d4f0ef08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a119022-06af-400b-ac3b-7d50630997df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "827391ad-4de9-4223-81ea-4e46fa706288",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "587fdb7f-532c-4d51-9423-92564fe7e0c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16e5b1b2-6ce0-4cd0-9363-e72d91e8f4f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0cbd6ed-c1ae-48fe-b2bb-776b41a157f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e57acae-78cc-4c51-b375-81d883b2a877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d962e25-c309-419d-a7c0-5c22d9724293",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5344241c-9491-48b0-bfdb-93870c22006a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c119e46-b9b9-4364-a318-7c3ca8a3721d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c99e76f-60a6-4469-9089-06a9b7e9497e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "508dfae1-b3cc-4061-a969-8ae9446080dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ccc3dfc-9a0c-4388-8ed0-72e485c0e920",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "006564de-0b6a-4c07-8523-68b75db9f17c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9821e6e-f33b-47e5-8fa7-9569003cfc3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3454c70-9e8e-40c3-b6cb-7aa376aede3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fac0ed1-1aaa-4364-b929-3a10d4e75d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7acb2dfc-ab47-41a2-9537-009c647251e0",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e131ca5-7fef-4b78-b305-fe5d3e0fe3c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25eeb0c3-d260-400e-a2e0-56ef23abd164"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d37fe53-b9e8-4cb8-ae2f-3f3f6c041548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "956d9ceb-bc27-4fde-8264-96050cbb4601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22b1ea85-05d8-46d4-b1cf-d50bca664fbd",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fcd9490-a7e2-4181-95fb-a5b46eb04d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59575bf6-c47f-48df-9725-99ddc015b9ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4629596-0753-46bb-b7c4-6a2f64f3fd27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d273f117-5ece-4606-aa2b-8225aea37609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf57d2c-42aa-4e84-8ec0-b1b770b9b975",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af216668-cfe3-4e8a-b69b-6c9e9ea594f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e5a7e12-a35c-4aa1-bf5d-643e5b5a758f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d416e2-33ff-4984-b088-2b1b8c6653d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "91dbd1d8-418b-4f47-94fe-b377435ce74b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "521956c0-35cf-4c98-adaa-03f43c14604d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55e4227-5e06-4083-8267-98f87e883006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53baa877-c163-45fd-9304-59e01dd0699d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c24f45-9494-4c50-9867-4e1140b0796e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9deeb49-53fc-4db1-bdde-b4c09786cd4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec169c0-1bb0-4022-8b50-b66f7414e9b8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f3b96d3-b5e9-4a86-aa31-d210d25e183b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40fa03f6-1ce0-46a8-8da1-3db69a7576ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5014221c-1b25-40fd-998b-27ea3756be48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2b40430-0348-411e-98a3-c133f1c84e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ec245e-5a1b-41ab-b05c-e0222e863fc8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8205bf89-0d8b-4503-9c4e-3b292b8d103d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86698dc4-2027-4b7e-82de-069ff9303314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e24af62-b2a4-457a-8c1b-455ef8553f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8baf8941-86ac-45ae-8a92-9bad8e335e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b57ed0-8283-4399-bcab-028e8b3a6709",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55df39b1-df48-4d4e-88d6-a62fd871faeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1edb919-1b03-47a0-80d1-c60bba3acc52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d62999fa-0045-45fb-848c-43d6feceb039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "22acc6a5-afe9-4542-b088-f08d9e55795d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23bcf4f9-05f9-4916-9ab3-0b58280fa2cd",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd2a03d-3bba-4dc0-b692-096645432c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c19d190-7340-44bb-b522-ff23878d074a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bde910f-8fcb-497e-90e7-5929cf53b37f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fb1ad22-96e3-4815-a8d3-d2029ec305f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e821229-d055-46ba-a303-660ecf6bff94",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8fc3f3b-a455-4d74-86cf-8733074af1da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d01bbc84-7169-472e-bef5-5d69e0d3e735"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e482a03c-8514-411c-a8a7-556c8651de09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "47d0494d-f682-49fc-9b10-ef69c3e39011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fffd1ca-b3e8-4777-8fd8-a9b7ccbc6d21",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d705d41c-fa0a-4717-8c75-8c1c082ef94f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7df61e9-9887-4268-9235-91bc9482af74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c48b242-10f5-4650-993d-aa32e50416b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ebbffbb-e155-45a6-9a82-b8ecc741255c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8774bcf6-7c2a-4de9-afd0-064034dc9432",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bad7603-6995-43a8-9362-b3085c5338a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22a6cc28-0606-4efd-adb4-a5480e063d6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e079e8-3aff-4d5d-aa7d-05e0f2c733c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f2cfee0-8a11-45fe-a675-d00dafee9b37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ece79d6-26a2-4e1c-bc92-547680b4bf71",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e29d6dab-70c3-48fd-a704-d07a0bd31faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a3776ae-e5e5-4775-97fd-5713f4d5ed86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d744ee-344d-4869-89a7-029cd005bbdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "39b5f2bc-467d-4e1c-b0e1-45d5a313498c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c6471f-a187-490a-95dc-0d6e0e7f728a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c62d2b88-88ae-48fe-a895-21c47d734fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "131fec51-93b9-4faf-9859-625670b7f187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58bbe725-8295-45d0-9aea-50333de8b1a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7ad904bf-4f9e-4ed0-8c7c-f6868427d7e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9544fac9-60ac-444f-87ac-398d28ab5f75",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f1f083-c4d7-41b2-af59-16da3ee54a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "368101c3-71d6-4a7e-94e2-0c112a14fcf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25db7b29-7d9f-4f20-88bf-88131660d8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "762af82f-0c95-4e2f-925b-01dcfd3a1819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7342ce0-4314-4eab-b793-24c8cae27d95",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e94248d9-322e-41db-a53b-655a25cb52b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "895a333c-c1a5-4729-9917-9ab208053255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d466ca-eb02-4896-a23f-8910153dbaea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d9e223c-2979-4e17-8112-80386640de06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06613de5-dcdc-477f-9a9e-ab7247eb305b",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb96d01-2e53-4a0f-9ac5-8a77d35b7204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f3b326f-2e4e-4ba8-9d0d-c64a07aeb0d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73060177-2196-4424-9d02-2dbef8ff35cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6751b526-44e5-4e27-b36d-f10998b2eafb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b935a5b0-13de-4e21-9830-7a5f7658fd6f",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4570524d-c518-477f-8045-b0036b4e0cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56480c28-34ea-47e4-a3ac-388a9ab87be7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71736717-a9ab-48f6-a026-7eb77ae4a648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf7d64a6-9add-49da-9ab8-634be5f9b57c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43835723-2d06-499e-985a-aaeed7e190df",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e73f366f-d6f4-4687-8137-72e5d57cbcc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "482c5b90-154c-40c6-831a-3e09411bccb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b43ac89-5da4-47b1-84e7-52ac9bfeec00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f55cb63-9978-4ff1-a0d6-b4dfc6f83376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10440dfc-990f-4cb6-a52b-f403b0680ad6",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15cc8f25-2c41-4df4-a862-90fbe50b99f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d270eb5b-4c5f-4e71-967e-6b5bb8b6ec53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b25ce3c-3575-48d8-84cc-9988f6617c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d30b1744-c2ab-4dcc-9d81-6a6753a053eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db8be3cb-ac6b-40c3-a370-322c4ce202f2",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d830cfa-9518-4141-8681-5669afc5be48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c025acd1-8ba5-4b60-b02d-5c8f5f652aa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2abfd694-dcc9-4546-9302-3b616607b64e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c0de75fb-b84b-46ed-9040-c1976c6643f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d07b3e33-3821-440a-a283-01333f364265",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a5b0c2-2430-4cfb-82cb-23f50081d376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d75e442-0632-4a54-808c-44321660a387"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3992ab6-f397-4ca0-8d62-b02cd0dd08ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8da84423-6f6a-460e-b4ac-077cc69154c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e952240-9719-42bb-a2fc-c06f91813dcf",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b60d2498-0969-43ee-8bff-efa56973a00e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b839a8d0-5fbd-45a9-97ab-a41321dcc5e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "494ad0d0-2a36-475a-b1c3-1aec13f518af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "88b8c5ff-15df-4485-bbab-0c88674b5e56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "147f27cd-dd40-40ac-b0e9-1841ba058170",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6304fa3-0933-469e-b77f-c2534829e289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70d08f23-895c-4b6c-b4fa-b62e94e82b0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a80d4f-5f0f-4e58-86a4-53e0c82cb9cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "04c8b7ab-9362-4c67-a4bd-3030c7537aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b2a000-f300-434b-a5ed-aa1cd112ce4d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d5a08c-7f48-4e6c-8904-3eed168f5a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23bd0f65-944b-41fc-b6d6-b529be5b6496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81f93ba3-7e62-4c7f-afda-eea093d8d2a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fba174a-eaf7-4c05-9b33-899b4158da46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5d751ef-7b36-42de-a39f-9b885857c6d7",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa3be80-068e-4382-83b7-c46fbbdc9fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27f2f6d9-1992-4a09-ab51-768e34da5a6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e58787a-9991-43ba-918d-31b84e5efd8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "49adf03b-8947-4238-b191-aef0ac0ba277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e164ddb-6d61-4e04-9361-4ed334e20b7a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7ad243-ca13-47ec-8be7-b2cb45444d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63724a5a-c741-48ba-8bee-9596c0844e60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31a15d7-6fd7-4359-b955-99058664d339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "20f6051a-1b1e-4de8-9e80-f13b35bc0b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb0f85a4-b521-48fa-baad-cac6bcdff056",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38946c01-55da-46fb-ae8f-3eb0770a93c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03dea037-a739-4575-af9b-a0c671d7fcdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff871dbc-4a86-411a-8439-df01c3a1333c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0650ab27-e39e-4d23-bce3-3e90a43038b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a984c8a6-c3fd-4bd5-a577-8c2955fe1b20",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0de0c6e-6775-43a2-afe1-c9b2654ee29f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b9b316f-b2bd-4f07-86d1-581f07ea2216"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c81e81-1d4c-4be5-95f4-eee2d58a0cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb46454f-7e15-4b87-8682-3a9abc382430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f99e2934-6fcd-43c5-994e-ad00ac54ecb9",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb6da50-09de-4f90-8638-8be65179dc94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6633be0-c210-410f-92bc-8d740210a2da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea44902-2f2d-4810-bda4-216d583f0fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9484f999-015d-4e79-9599-5d8e83e4b868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9376da6e-45f7-4daa-958c-200931852549",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2000b99-6a89-44a1-bea6-9b808d4d8bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31e6604e-cf97-4db3-b923-e58dfe283375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a0db28-1e2b-4c93-b32a-326c0f1539bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "852a32c2-c3eb-405d-b1b5-d2eaa3640619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3098b18-9e0b-49b2-b0fb-8fcef50302dd",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50362935-1b9f-472a-8855-b9342a239891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "541cfbba-f266-4975-80f7-d2ee7b3d1d46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9516bcca-ea9f-4f18-9ead-20279f209bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2ce5a9b8-5836-4639-b219-e97a371b02d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae855d8d-05b3-4e3e-9cc6-7d5dc9c5a725",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c58f2c1-18af-438f-978e-1dd51dd3fbdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb20abfc-3b72-4459-9caf-e14fd5146cfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db00c616-18b2-40a2-a031-65486b921edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a62febe2-fbe0-4b2f-bd93-7dfaecbe80bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a28646fa-f3a8-404a-a1af-6b6011100902",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1197cca-8f96-47a4-9524-40a6c22024f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a10a1fb-0ca4-4ee5-bbef-40b8ca6f6436"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae0afad-a111-4f48-aee0-e730a0ab96d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e58217e-563a-4042-bb5a-3b1ca9769c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa87c68d-dd87-4aeb-bc74-3af000154a60",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fcdaff7-9d41-4f9e-a57f-c3a4774aacb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a3890db-5772-4b9f-8def-45cfcdb2efb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13bc3659-0070-4763-95cd-0acf36d16efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d0a31d3-10d9-423e-8d44-a98c0adadce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e636518c-ed31-4f9d-ba19-12fd1cf1d9e6",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a562af-6537-4463-89b4-b14b5dbff1b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "081e3717-3538-49a1-9ecc-54649ce59165"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76edc10a-8a2d-40e3-a2fc-6d611a158efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ec228e8-3a66-4906-b99b-974571022fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ab7998-0774-4606-b9c5-135edd8f7ad4",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7da0b35-fb41-4622-9f65-c85a547034bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62dd64d4-4d17-4d25-9e4c-abb5dcba4d81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c5a6104-cc0a-4b37-856c-333ed0b5c736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb20779d-94e2-4b51-ae0c-f0d1205efff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "183561ea-3ce7-4f6e-95ba-065b30b70c38",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e7ee7b-58f9-4cfd-b2f1-8a743cb16888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e257439a-9372-4f79-8551-d6488d13498a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa6dd3b7-1c30-4dc3-935c-edee787b7d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "08795a1e-ba33-45df-8041-2dd2d402de11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f0d70b-b38c-4b1c-92de-da04c2b49ef7",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb75697-8b9c-4cb2-a377-a4cb397f6642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "006e36f2-7d39-4d9a-aab7-e24a9999f87e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9767eb5d-5551-4502-8ce9-b97837529caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f474a83-5c76-4f69-8f45-35573b12d1e7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1ff50e89-a5d9-4ee9-8533-76764d2ef8f9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1d4f176a-f877-4144-8f93-6130213c2e97",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de737f54-0441-4ee3-8258-2259575fbcf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea6297c1-4ee0-4c8d-a048-fd563904bfaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b45d97-aa9e-4c98-b8a1-dcd0195181cf",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4359d64-f027-49f6-a0e1-5a66907766af"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f04ecdbc-82b8-44a1-8497-77fc9bd060f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "37535a94-cc03-457f-9fdc-34197b018655"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d46c977c-02e7-41b8-9385-5b736bbe114c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26f2150a-a727-4ac6-a9b9-124652270503"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "470eaf43-beb9-422c-bf51-5c60f282f06a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "25177d63-d8ed-4429-9ab1-daa67df75338"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ed97bc73-4bf2-4a72-a920-8ddd0e16156c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "aac4f35e-edc7-4d1e-9146-f424b70afc31"
                }
              }
            ]
          },
          {
            "id": "181c527b-f66b-4fe3-be40-0a4dcee1e7f2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a4b07018-f5bc-408f-bedf-02b0b7ada7b6",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "e5b1f14f-cb9a-4c2a-8316-58322dc008fb",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "944b9e27-b7f1-412b-b2ac-053e0d96c51f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a88c8820-73c5-48ac-9e78-94e7abc9f7e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dcbd0d3-0e62-4a96-af2c-685bc50a8252",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbb966ab-e7fb-4648-8a48-1c159b028366"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "474d6e1e-2e00-404c-b53e-27a7cc58af6f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "66cbd3d3-5a0b-420f-92c5-9924a467620f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e990f16c-a3eb-4227-aaf1-b5913a5bf036"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d627020c-dca2-447a-82cb-b1d4a39625c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9aecadc1-c594-4017-ac7f-f60c00f83b27"
                    }
                  }
                ]
              },
              {
                "id": "d5c0a5d7-77f5-43ab-9097-2aa737a7e316",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8da0edf1-6ef4-4e11-a2f8-7b7ed2027886",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "49cdbe31-96e5-48d9-902b-66e559b6ca48"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03a082f9-2d47-4c51-95e6-5018dcb79093",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4c8e234b-96e2-4fdf-8b0a-f6abdeb2d7f2"
                    }
                  }
                ]
              },
              {
                "id": "b6d02e17-ca24-42ca-ba1b-729c32da4c4a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e4ce45af-34e7-424e-9680-a40563d0566a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2f6937eb-7839-47c1-b4bf-fbd657c5d55e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db1ed406-a950-4775-9ff9-0b79b22fc288",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f24af565-cb87-4da6-b002-b3891400cfee"
                    }
                  }
                ]
              },
              {
                "id": "a93a15a1-f997-40e9-be00-2b8daf8146a8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2de1fc4-d140-48d7-902f-a6aabe83e765",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ee154729-c5c7-4c91-a8ac-9d8394fbca3a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68b94041-0fed-4d89-b6ed-75c317b20ae6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e3c74ed8-b803-4e50-987a-9bd20b4bbcb7"
                    }
                  }
                ]
              },
              {
                "id": "6942f060-b232-4999-b6e4-cbafa5adb8c4",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fddd5142-7d07-4a88-9318-90114204d3c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bec4f8a6-a70c-4c00-b4dc-cbab06dbc4a2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a903d5d-322d-4313-9e3e-833cfc180954",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "0a427afc-94a8-49de-b1bd-7bb4365da16d"
                    }
                  }
                ]
              },
              {
                "id": "b5d1574d-fbfd-4d47-be64-fc7f833316da",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cad2002a-70e9-4de8-aac6-4c8718f8905d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d53ceb8e-6eb0-4f6b-9b3b-d01e1295cffd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "382a5f10-2672-406a-8c56-ddd743fcdad8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f701689a-4ab7-44aa-b200-54d1a2cef07b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2140f661-d545-48e2-b953-0c88d20ea863",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8c796c4f-c451-4e74-bb88-e029aff32465"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8c98e316-fc63-44d2-b89b-6bb6aa2506cd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "aa038c9a-9129-42ed-817a-6d7f51647424"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "68694eac-9128-4d11-a075-363d373d848e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e8f1efc8-583a-46fe-8db4-b689a518c0f1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6dae2538-14bd-4cb6-9f03-687130e266af",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4a1cc6b5-8373-4924-96c3-a81e28b8b6a8"
            }
          }
        ]
      },
      {
        "id": "05041d18-f164-4752-a868-7a98798f68dd",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "fc96fb26-52f5-4be9-8e42-9d304e1f0644",
            "name": "Negative Testing",
            "item": [
              {
                "id": "18ce5052-df78-4ab9-91cb-bce69878b840",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cd4a337b-dbab-4e29-b402-792bab1c8785",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4efc1123-4497-4cde-899e-9cf5a42abbfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6ebccbb-6edd-4e99-9283-b1596498463d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb1afd5-1c8c-4722-82f5-4476e4dfadcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c927855-a0d0-4317-b5e0-37cb09917679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0535006-d5ea-4acd-9f7a-079534aaba0e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc274d6-e4e0-43d4-a132-885188cfdc8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b64d9515-c727-4920-9f89-2363d82debd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e324366c-aceb-4fa9-9502-b659c895d6e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "363706d4-9721-4a18-ace1-7b3b9869fa86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04051ff9-b07c-440b-9b01-5c99e19611e1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad40896b-154c-4d01-a7dc-999b6f1410fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80258d44-2086-4a20-bf01-c6fa35d3baa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633f0960-60bf-417c-b301-c4437b96ec22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2dd3dfa0-3ae7-468a-9a4f-59d5d7ffe21c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed6fb220-161c-4bf2-b8db-25774e3c197a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0075c1e-a977-4c9d-bca8-e4a2a5ec7912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d017504c-8cf2-4e36-8d14-37be315ff543"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76e7a535-3780-41bb-96e8-1e125ab08745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "65fc26c6-4469-4276-a693-55d4ed8e978c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "444023c8-6205-4a09-8d2e-b55da3ff881d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb74bd5-8a80-48b5-b452-0441487147ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "718b6175-7097-4206-8c05-40b670c9fc56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3aebf2e-8ee6-4499-8fbf-0de9b460f654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b19de53e-dc0b-4e5a-be5f-4e6eca9b2486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929edbf2-f879-41da-b8f9-dcb83997c3b2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53824256-7451-4dae-a83f-7f55f7ab0766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9da77be6-622b-4d2f-8a51-e9f34b325567"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "386b2f72-bf85-4009-91fa-9160824acbe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc46e7c7-30c7-411b-8b60-f40768767cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dc51f8a-6b12-4961-a07a-3dab90037931",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f7eb96d-b98e-46a4-be1c-49c192d1d466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0108d5b8-88ec-4921-810a-8bd95a46d6e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a0fc3f-dabf-4b0a-815b-1d68c8d9d341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e76246c2-c575-4a37-b597-09539e87c266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbcc2977-522a-472d-b484-58ca666ed4ac",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e9dc611-c394-467f-8cec-99e9b8cdc7c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45af28bd-1b0a-46f9-b0a4-e926d68b2104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "751cad88-7512-40d0-9ec3-3e40c86841d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bf4199e-cf45-4165-9964-afddf3d6ad33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0234524e-7398-4ed2-a8ba-c28235ec54cd",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7345a810-29a8-4820-b732-f95fedd4e8f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa58d5ab-d052-47e3-9d56-79e3c7d2c3ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e122d4e9-5ec3-4df1-8387-60c0b48c54fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cd220ed-d089-473a-b215-33acdce4042a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4107d13c-7e44-4dc9-ab7a-892c04c2463a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac2373fc-9f3c-4929-a960-954ded326239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6281c5b-3b76-4893-8783-a179bdb48e3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c781590a-783b-451b-8efc-ed26e990fd24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "62458de8-7409-40e8-b640-739eb2fe3f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05920821-09d2-418b-877c-e901a7c9f86c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a956d876-dfb5-471f-a7e6-cbfa341ec138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "922e62f4-d703-4bff-acd3-06ca3725df56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "874d4d60-871a-4263-9e67-75236edf61c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ebc9afa7-5ae1-4e67-bb4f-c41089f52b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11210b73-1a91-4c4a-82de-09b949bafae1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe1b04e-8667-4405-9e9f-c29cc9dcaa7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2a69300-13ae-4415-a324-385a044326cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5872f3d1-98d3-46d2-8b72-a22453a9dbe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0435253a-94ae-44f5-9156-00f7df8e9840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5918abc-7b77-43a7-acec-0deeabd98bac",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ea6e6d4-bb4a-4f71-b5f3-ad2a478368e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8df5baab-d3c9-4a7b-ae0d-4652e136517a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad4fde6e-c0da-43a0-be8a-954b299997f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e937dd3a-ddc0-40fe-8a95-9ad2df019797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b10f191-cfc6-42b2-9800-ec98ea075404",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d247e88f-ea40-496a-bcbb-7d6555285383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53cb13ce-7ef5-49fd-aa89-5147142bd86d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "740b5378-ba46-4c42-8c03-6080a3be4b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcb816ea-bf7c-4a19-abd1-59c48351a1b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f5eb3e2-d318-4198-bc39-d8ba9f7ba59a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3317844-83dd-49c7-9eb2-4c2db2276dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56c6f43a-45ee-4a54-8191-baabdb284620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ddc776-95e5-458a-ba0e-2f63d7c57f02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b067083f-8e6c-452d-83d3-f1c735e11252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814b1447-d576-42ce-bb40-6d66bdfcfad1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82817f07-833c-45d6-9756-902f238cf2e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a4569d9-5cf2-413b-85cf-fbf53f34b2db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4fe7c45-d85d-4125-b740-ee5d1f48c72b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "89a982e0-9466-47f4-b624-57242c39166f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b24e1042-742c-462c-be70-7bb60eea1224",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d0158bc-eb1c-4df9-8606-fe1c38febd24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b65c8cdd-58e2-4780-8499-6ad2b5c2268e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5530bb46-0757-4e31-af26-261f11d52f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f7ab7dc-3638-4389-a98e-b2fffda6b745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a961db9b-8b89-477e-affd-ab15d16db55e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b45a467d-a616-49bf-8cc8-3bdcfeb50728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d644d739-d73f-4f40-aba1-69c3260aca1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea92c861-80df-44a6-8b3c-6449a4f3371c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "29e0a218-1231-4b3b-8765-2f957df6d232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23014669-fc34-4448-b237-e35f77f12e84",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7bd2010-eebd-4ecb-b57f-9d08361d16ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edecbdba-c9f2-4356-92ae-d189d05cee3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81945a35-c406-4e00-8faf-547f76af4a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9a6266e-0e58-4a1e-9efc-fe895fb09be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1530e0e-8a0a-462a-94df-a1cc8f570427",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb0ac6d-c0fd-40d4-9cf1-3104468e9884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27e6e141-f625-4af3-8f81-32cf73690465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "699d8fd1-bf20-4e37-a57d-a3ada8d5e9e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0eaf91e4-ab0b-4066-a3d5-49b8519af829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed9a0ffc-f95c-45c6-8b94-462fe82f8708",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50151613-613f-4673-bf72-3076c4e177d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "353a8b5f-eeb7-4ef9-a7a2-d6ad56198480"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27375cdf-27d4-4f5d-9669-ad84ba732262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e9e1223-e618-4332-98fb-ccf7cd1474bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f409da9-dda8-4d40-a4d7-6b914b23998c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "153f6f72-b1f2-4e5b-b9fb-8268f94bb014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec96a72a-1c91-4da6-98eb-0a156019cc82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9863fc07-eb6c-4aa1-8688-498bc752103f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a124cc7b-0ef7-448b-b8ac-8ac64d4ec095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d4babe0-8b0c-44ca-98eb-87fb9a8bf927",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7115ca5b-f6b3-4838-921e-d4faa5a4bb5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a1c849a-a558-44f0-8475-3ae618af526d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef148a34-bb0e-469e-8813-9eb27ceb79ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8683c226-70ed-44ce-9bd3-60435e777581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cdccd83-d3a9-47ae-94c1-965026ce9dce",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de340fc6-4fda-4679-919e-b2da55f45724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4a29386-a08b-4c17-8d9c-e43f19c5e638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d28bf8f-6fa6-4b67-895b-8b94cd9cf9cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38151df4-592e-47eb-97df-95026fe7dc2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b358d55f-281d-4109-a11f-c0ed3ea13c82",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac6ac6a-1732-43a2-a7ab-d98b9b00ee38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00ddf8a9-4c08-4414-b51e-21ff8c6a336e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e05a928-5e72-40e1-8ee5-148a45e30a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a711f6a-c4eb-4c0a-8607-8a29fd6f70d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c958ecb8-8039-4fa6-ba1c-2a538550f9fd",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f4b445e-8c8a-4a06-beb9-10254f0e489a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47d69c65-526d-42e4-bde6-8ea0d84b17ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df34fe7-7127-41f9-9b8d-dd2e386eca1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b06cbfb-a2ad-4dfe-9b7c-0eaca6773254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f83262c7-a02f-49a2-ba9a-57ff1108771d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b804da45-e5aa-4707-aa87-0c63fd17cec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e6f5b72-cb89-4ce9-85d9-14b9c9c9fb1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e6914e2-11f1-4ea1-829c-caace1803e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "983171bf-094b-4179-947a-ef8062a1f081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "add19f69-0d72-4dbd-abfd-8d61b8269a41",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db85f02e-f1b8-4c7a-9e25-05d08ffb2fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f010d7e-79f2-421c-bf1b-147fe8adfa79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d6438da-4e30-4321-bfec-7f9b1cfa26f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c85fa10-397b-42b0-aca2-170fc4043dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d214ded8-c7db-4591-967c-35b02ab02222",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a3ce99-14ee-4b2c-a341-67a422edbe92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "926cc18c-ef55-4654-8aa3-d5c27a266539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e758fa-bde5-451b-9164-18564efd1bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e13c6e2-1359-417f-9643-c1c2581e34e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d48dfb07-a203-4532-b433-c27d66c66c45",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f558cbc0-4ec1-4459-a9ac-4daf9f661029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e94b7d9c-bec8-4d2d-83a6-bab655163f8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c18c6ce-aa6d-4063-87f2-8b48c42c9319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "525b58c8-7f1a-4ae4-809e-232eb6c5f2ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ec40d6-18c7-407c-a98e-cd04ff3a211a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a505f6-58a6-4f0e-bb2c-2b6564c3009a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de9502d6-abe6-4a0d-8aa7-94b78fee2374"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bdabd40-0afe-431b-aff0-0a9953176c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e4262c6-3f1b-4277-8239-a226a0b51a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc07ba9-1c02-4b22-8cfe-662070750fc5",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9c0ce43-34bb-4551-8161-1880df614dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed64f824-8101-4c06-b41c-fa77af17b378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fece108-7c24-4077-9df0-a4539cf3f656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "816f99fd-d788-463d-898b-7bb8d646e3c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e4d0926-ce95-4776-b713-3c8eb15e9720",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2848d5a1-736b-4d96-91e3-377a3f964cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "975643ff-7d94-4746-8724-df08bdd87f3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ae7259-1c5a-476c-bcb0-73b8c5c3c8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7300147-820c-4de3-bfa4-8ab2cef53f2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ebdf48-a796-45f5-a1dc-c3fa32287d8b",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af3e6eaa-fce9-4530-bf26-ed05b5eed7dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2470a570-2abc-4666-a6e5-2a9ab1b3b574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e07bbfa-e4af-4709-aba2-67b5cfd74d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4297e31-c346-4b72-868c-1234dd4be91c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0adf4708-a8d9-4f7c-826c-10a1a766f284",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f4282ea-dbde-4ff2-aa12-957472205c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5a69153-fb86-4bcd-a0d8-fa6d921df129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a02c02-2654-4ec4-afd8-038ec2e9e716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf1a5f2d-76c3-4215-81cf-d11b323b41cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc9525d-0cb8-4bd0-81e7-2695c30907dd",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9027ab-b775-4315-ac37-5475596d9a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "900b7568-5c7a-425d-accb-2fd543aa11c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9fe294e-e6f1-4f44-b219-d959f5802ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "405413ef-68a1-49fe-9cd2-e89111becd50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06d70d4a-e5f0-4923-bf79-7465ea41a72a",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c36b63-83a9-460d-9969-1df10cdbcc9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79f9f1db-1ca9-4529-94f7-280c74ea0984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66031d9-9747-4a5c-ae11-c52871700b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d4ee565-db1a-497a-9b01-adc4028d7618"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4ed27246-13cc-4737-a4db-904489b66c42",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "99ca1fb3-41d7-4ecb-b2de-deffbb85690d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b0ab8d6-5af9-47e6-b7e1-dcf870a2dfc9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "bbf42308-6261-4bab-a1f9-7060e0637390"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3534e30f-e372-4661-ad4e-4ffc493ff385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2b7ac6d4-09d6-4ab6-b5e5-fc1b14020582"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0b87b84-0bb3-4419-9edd-55782ab96e7c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7943db5a-6196-4a9c-b5a8-172f3fcbd47c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6beb5447-0b77-4093-a08f-ab2acb1f026b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "73ba2b02-8463-445c-80ba-6e891c97247e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "48b3fd6c-68c7-4c38-99e8-917d6f4cbb82",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "49fc1613-509c-495d-959c-9c1fd4182422"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d365095a-86cf-4c7b-a5b5-a89743327c59",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3096f16c-c5b6-40a9-a193-e21de07205d3"
            }
          }
        ]
      },
      {
        "id": "69b2bc6e-5005-4931-b1de-adbe7f99dd3c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "019dc5ad-f04f-48f9-adde-c7b01c864bab",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a441f77c-02fd-4b1e-a7dd-df378fbb7a6a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4f02188b-1842-4cba-8b4d-fd0e5c171535",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff3fad1-9114-4343-82f0-68b8b437c547",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "581e89dc-7034-4f26-8c98-859b232da461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ab30a4-29b1-4710-9682-db10f7077604",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95da1699-863a-4ab0-9b72-29d5a0117aa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4560ea58-bbf0-4f02-ace9-2bff64ae8776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74646008-2fec-438a-a07f-ff1522ed74e8",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae3cc739-c02e-40dd-b088-8dda94b58504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8583d39-4ff3-4cee-a242-fa8549e83da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d0a368-e4cb-4324-ad76-3bf1f1718ac4",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d842ec-648e-4036-b2bf-7eec6956f5f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd9ec501-3c8e-443e-8794-b16de3605322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "211deded-4e1e-4f00-9f9b-b2ae03b5a05d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b397910b-47ca-4651-a4d5-6137c70526dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20c7e400-e50f-41d0-9829-7e81c0b38ee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b782bf1c-9275-4f65-bd07-7e105071a503",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c30db18-689c-4dcc-9274-173573cfe164",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc1b674d-26a8-4e2a-937a-1cfd2a4af8ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967cb987-1af8-460e-be2a-8daa6db3d0c6",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5165fee3-514b-48a8-a71f-193af2ca9ae9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b62d35d-8f0f-43a6-a98a-50cdbfac74c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd02bb01-a4ea-45b7-9a1e-006454c17097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dddec4a-9ad8-487c-b7b3-70cbc13fa79c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141a7bd1-94ac-4ce4-91cd-3a25e7acffb4",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb92f8b8-3849-44d1-89d3-c981cde413e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "260ce056-d952-4369-95e1-ef492798f8ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc5c5167-f909-42b5-9ff5-191b4ab950d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08ed5091-1c43-4d8e-8079-ac57e7c8cdef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2b54eb1-b08a-4e58-b274-aea381ea8fa7",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eadd5d51-9a31-463a-a03d-261aedd0e375",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a76b050-e3d2-4f13-8ad9-19f929530445"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5407953-024b-4b09-84dc-275b5c179407",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "206dcd20-5bd0-4d52-99dc-5bdfa8dadb15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97c73389-35ef-4ba2-86ff-471970dfa58a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bbc6212-4f39-464a-9522-7359ccc4197c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0f4dcf2-42c9-4742-a1df-1c865a933f95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04b9a0a1-3667-4eef-9cf4-283fe9cb03f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "391cc73e-7d58-4f37-882a-273468497e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc89738-6ed6-4f97-a706-877a9aa67aed",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a79caf-532a-41fb-bcf3-08d74ff3ad95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85bf3b08-eb21-450a-bf56-f2d8b5cb680b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74afaca7-ca9d-4210-ac2f-a9290356ccc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87c53160-34aa-4a54-94f4-ec4f4eff9716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f628f10f-e2f4-4924-b895-e9ca9f8b0021",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07405216-3aa2-4b8d-97bc-6ea1b29cea69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cc5457d-27ee-4202-a791-bc4ea3ff09d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d2c9da-08af-46c0-99e5-c9c8a040a2f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae6b7ac5-4ea7-4508-b707-2ee98b60b9a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "257587a2-a717-4af6-9f48-05582aa9df4f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eb5055b-78f2-4d79-9f4b-c471f68b6ce6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "956cdf7f-626a-4222-a59c-11972348567b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7206ae64-a5c5-42ba-b04e-94ebad499c54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be4fc523-a111-4cd5-bcc2-c652533a12e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef6729bc-b683-47ab-a2e5-2781c8d2b0b0",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74be78ae-17b5-4f48-ba7b-75b356438b0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16fa39b4-0fb9-4215-beaf-bf958ffd3394"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4df9da8-9986-4fdd-8aa5-f11f45aecb52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc5f9202-6a26-4ac8-8cfd-ad715a31086c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2313b70-6466-4cb8-b539-4eaec761823d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1fbc0a8-74fe-4953-8345-f13fe578d09b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c286d3e2-9e64-41ad-a835-09b099fecf20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba6db4cc-e1e4-4b49-88c7-89178e2966d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81572291-25fe-4396-ae05-0d4c7965cbe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a3d149-c6ce-4f6c-991d-7b0b3b7b4c71",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b28fbd3-42ea-448a-8273-56fbb07d0bea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4a7d6f9-5cc3-4ea6-8e96-a062af672970"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce2625d2-ad54-4563-a758-ad13e68ea075",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86dc992d-7538-4778-b644-1d95f50f7e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c962aad-4bd0-45e5-979e-f0bc91abd998",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c0876d2-f52d-4473-a1f7-6976084b453a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54994642-8170-40ee-a6d3-71301f370744"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46196b14-1b17-4a95-9b2a-c97eb28f6ecb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1980163d-33e9-437b-b2f1-797e58a5cb42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d818a83-4a05-40e2-b7fd-e07f84f22950",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd6f1841-6661-45aa-9a13-37a2676d7e34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12f6d3e0-2d41-468f-81f3-849f75691a85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "883b73a1-ca12-4b73-9526-18221368b15e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b143e627-ec85-4eb7-9306-8cdd08dedfd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def32864-a17f-46cb-91e6-6dc48e1330d6",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e69a197-0792-44a5-bd41-aff94ce2c6c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98543a5a-aa05-47d8-a622-ac0bcad0f69e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92dc38ef-577c-48f0-99b9-94dc11531c61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5058f362-07c6-4047-ba43-644a21b5f8f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe74a3bf-faaa-42df-b59b-3faa9da77533",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86dfdfef-d106-4d3f-84a5-0d4aa65c2241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3a47023-1955-465b-a0de-0c53c0b6eaac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "700428b2-382c-47b7-a1d4-9ddc93ee4ded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e75f5ea7-d76f-495e-a2ca-bcacffcb2eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21a1c754-115a-4070-bcba-73e21d272e0d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca55b14e-25c7-4527-b49a-ade531054012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3175e7a-eec4-48ec-a3d9-ede1dec79cfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3d075ac-f1ee-4a60-b937-6fdabb0c5575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba0051bd-501b-45af-8a9b-2f6129d88d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c0352e2-83d1-48bc-8fc3-fc718b0a95e2",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66338f18-f082-49bc-a177-0748d6800eab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ad06559-2fab-45de-a0a8-3eddb2b36214"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1440c3e3-1db0-4658-9f54-1336b129597c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72063162-40d6-44c9-bf64-b0068f7dc095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c791603-8e16-4f28-840f-84ddd2abc058",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02258985-7f40-474d-8c62-6f12bf166b80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38b50d4e-5e95-4ee5-8459-683ed6131fef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14889dfc-d652-45d9-aa2b-0d98457bb444",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "899ebe15-fac5-46ab-9112-654e4e2211eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58fe15e9-8710-46a4-952d-2ea9dea9f74d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d645df-2df5-4ee2-a538-361d4b1915f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25ac1344-f7e6-4163-9522-e81cba2d0bcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad07e8ac-2ff5-4c70-a850-7b82bcca7b08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a1627f5-4bd4-4ee4-b759-5c2ee775e521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1019a679-3cd9-47a2-a448-710e05c54cfa",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d007f7d-1738-4ba9-9093-bced202f8cf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9b703e0-dbcc-4ca0-86bb-462fe92030a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ea0508-0942-45e0-9b77-dba126570224",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff912dc8-2e0c-4d84-b566-574e263c9350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b3693a3-13e9-4b36-8eec-f88f5f5a0867",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "864000ba-6b73-4d6f-a2a6-109ce31c05ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "348d05c6-953f-4221-bee7-5521451d3b09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78141235-e2ff-4ee7-94f2-487510a344f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbec1eb8-af9d-4905-ac1f-1531519f5255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e90b5d07-39e3-4060-bfcf-46635646d302",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa8faeb-6d8b-4722-a053-244162f5f21b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10714421-fdff-4a3c-bd1e-e07d7c65bd97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29109284-5ded-46c7-9973-b547ad572f71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b119708-6076-4da7-80bc-65c74227889a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2378c02-ef24-4a8d-b674-2a2a2ad8a56d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6932643c-ec7f-44e5-afd9-59df84eb71fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d84ff44e-1e28-409e-aa8c-14a64c9cc282"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00307d72-d52f-496b-bb44-9d07acdc5d55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e0197e0-562e-4c59-bb4e-99f12c653fef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da7a87f6-a40a-416f-b2ec-9a638cd7b8f9",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f35f21f-804a-45cc-a0f0-e5bb1446cf93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e847ab5-4a24-482c-905e-83b42c25a804"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9675b07d-2de5-4b5c-a955-47e70cdb3f77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83e9aa0e-ea19-47cb-83b1-26bb9ae2c828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88c6ec6-121d-4895-97e6-1561aee0f5eb",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "193ba702-3181-498c-b167-618d45c98521",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f9bc38a-7536-4fe0-b6e6-13a6cfbc1300"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82de5fed-9a6c-4f36-ac9d-f1ad7457db6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "775ede8b-7e60-4cb7-841a-bb600e124371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44979f27-2e18-4731-b737-77333fdd2dab",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbb92ce2-55c6-4347-98ea-a70b6a99a981",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23c72749-2219-4b62-8619-1ec6ca36a1a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b2f46f-1d55-4ccb-835a-7014b4ebe714",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3f6a566-a0e7-44fb-9851-12bba33461e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de09a001-c639-4954-ae80-86d08de5f2dd",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0213a052-75a0-4459-80fb-82b5c1eb1b1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b11655c-a064-4373-abfa-615067ebf792"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb5963a-89d4-4675-bd1a-986882ab6f9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03db71e7-6fb0-4f01-a6ef-906ba0c14fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af42a1a-ed83-4dbd-a2c9-8756573252e8",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e72bf7e2-5501-4c8b-8e8c-349d548e6b9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ae00b37-be60-49dd-9f00-caba1dd53706"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b190d9e-eb2a-43b8-8c34-4fd980699f3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70ce5009-8882-4353-9ae8-db1e013ff3a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9e56f36-a0a7-4372-97f8-2892a0e4eee6",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43514a30-9c1c-468a-8f2b-46e413646b7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c377817-74f5-4fe3-b344-125f8be9de92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6efb7dea-5d77-44f7-9c88-126764ab1a48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d5effb0-ea17-4505-8cb5-8bc612dec91b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6720b166-eaa0-4590-8377-00fa6e179b04",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f303cf-3c68-48f7-b34f-b710194dfc30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8179ecf-9ded-4e63-a314-eaa5a41b1126"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5387cda8-70a6-498f-8a92-0c992656753a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82ee4c41-9503-4796-8eef-b609c358f140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e10d05e-2c27-478c-adcb-8fb332cb6ac6",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab3a105-5001-4d45-ad87-2986dcc45364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "523b7911-319a-41c2-9ec9-24bce36ff48d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40412b51-94b7-44ae-a7f4-d599a4b02f36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1354f4c-ddd0-4969-9962-1f9c9a470573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a73760-0b89-4718-bc05-38d1a75e44d1",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ff4ec28-1aa5-48c8-9203-1e6d6d3cc71a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc16c242-3fa2-4431-b2db-659e825f7946"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "216a444d-92a3-4e14-90a2-33315a8c320d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4863af5c-6a2a-4170-8640-fefd56c72757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d44efc21-8ce1-4827-b416-15e0d5efeb8a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac386f2-84a7-44c6-b693-4db828bb83d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a827d6ff-5164-468f-8fd8-320d6478d00f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e67d8a8c-6026-4a04-9bb3-ac86e6e65644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faad1c9f-09d2-476a-9138-de2812cfe6b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a89d5d0-14ca-4889-a0c9-f36e6a7892e7",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34b6a0a9-3b6c-41e3-b66a-0bd8a4744b2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d3cbe36-eace-42cc-9604-942e1e303113"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0521713e-ff1c-4e2e-8682-a86923de6f2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5553c728-592c-49e7-bbab-002d9780a8e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "804a6f39-970f-44e0-8afa-f7c17b83b46b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3054da47-228b-4124-98d0-1b61f9367ea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa5a574b-bcf7-461a-b9ca-ed3828064120"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc4fcd5-74fb-439e-87fd-209a6112ddf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d484feb9-becf-4cb9-8b9b-b7748401272a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d5af8bc-1f57-4e94-8600-34021df967b8",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76830191-4d13-40a9-a55e-86368e50bcf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f7a2dd8-5f44-4d16-960b-c58ec26dd1fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a545357e-a3b6-43d0-bea9-09da58eae7e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8deb2382-8e51-49e9-b3d6-35932e546b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c28004-83ef-45cb-92f2-99a5bcfc708e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc463e74-260e-4fb8-9e6b-1e883e799d2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dfcd67c-7da8-4032-be89-73756b1d69bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d0373c-45fa-44aa-979e-645322603367",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcc8687c-850b-4201-ac3c-d0d91a4f4b07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37f656df-6236-479f-95c3-7b149e2bba80",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e67946-14ed-4c44-9e16-f181fa644a17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "631efff5-1a41-46d0-9824-3c0450e1acc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab531229-d9ed-4359-9572-19bf99457ec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e0bb9e0-c829-4cc7-8775-c313677490dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb1aba7-4f17-4931-8806-9312fd33e76b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ecc7c2-1d03-4589-9cf7-b36d4709810f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "560e653c-1e66-4336-b361-d2e110823633"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2bbe0c2-e035-498e-9c36-3661936c3752",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f4c6918-4c58-4bc7-96c6-45def1a360fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02ae551a-e15b-4a74-b4ea-6ecf093f1ee4",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3157bf8c-2b6f-4502-b234-84184acd3962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16c35699-aa46-4784-ac3b-ee12d54e889c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cdba7e4-8887-4389-a8d0-0ff082c8d75a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8015a6a1-144f-4a19-84da-b91c1ad9a146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b492152-bfc9-4b1a-adfd-c5bcb1d536fe",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4790d3f5-823d-4000-a0ba-4e5cb747ab9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c68c2e5c-a9aa-44fa-8100-418b2a8950e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "013e2d43-343b-4ed2-a26d-aaa28c91cf87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd3b6810-bb3b-4594-b7d2-92049bf87a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2f946d3-80cd-45b3-ac73-a86dd6f0b814",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd3abe3-734b-40c5-bb81-647b3c8bec88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4ab5b79-416d-43bb-ab11-72a7ee5d1e7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e32c8c8c-6644-436a-8bb7-0f6563889b23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aca52890-0e31-4504-9230-8ac2e6df2666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1844e99b-0642-47c5-a8ad-132fe50b3fe5",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c1cb76-90a4-4e10-a32f-92984b94d967",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbbbfc9f-e0c1-4247-b1ea-f4a62328e8ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbddf8ae-2ab8-406a-b4d9-8909e8bb421d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "206e971a-ccce-4a5e-8d1f-86befbc1ba5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0a12a7c-3633-411d-b3e8-121e3e9d3062",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "237089d4-87c8-4f63-ac9e-b022102fb7ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97091bab-3c69-4783-997f-9a48b02da296"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d8a356-0d96-4e53-95c3-cee8e153efc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33ead43b-0a0c-4a21-acd3-ee04ce0b4e29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad519f0-494e-47ad-a59b-08826903562f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60586093-a702-42e0-99fd-0ebbcbcd736c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90b7a655-8774-4bd4-bbc0-5f1d1c9822d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9224c1ab-155d-4522-8023-4561bc442299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7959bbda-3023-4dfd-8475-9c1087321f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a50ea7d7-1f40-4130-b308-e84c430e6574",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c9fd01-cbad-4edc-b212-00f49c45da56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "550fc636-832b-479f-9fc7-e214929450f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53642266-03f0-4fa6-b9f1-3424596b810d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dfd1ef7-e726-484f-a42a-7ef9716dcb6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "742848cc-0f5a-4f29-93a5-83b09f174f04",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d034b87d-3882-418b-8d78-b19216c2230e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b93d3e81-26df-460a-913a-99e62e97f8b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc9b469f-9c39-41a2-937c-861cd5b0b300",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "716eddee-5231-433b-af9c-88ddfc18f1fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e0fbaef-e03b-4cb9-b437-56eab7439dae",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74077e81-c689-4808-9300-8b41bb35fab4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e26e611f-15df-45e8-94cc-72f8ff2403cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a513f03-1180-41aa-87bf-18cdf371b78a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a99ee95-144c-4591-bc3f-3b84b7f28c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dce605bb-f7d0-44a7-879b-408dd8c3c846",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "472d3b61-7700-4e8d-bb17-b649863e4990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f96c753-ed0d-4781-8b17-08edcdeadf49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61483ad3-459b-4a41-83a5-edd2e8cd03a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59c634df-1608-488b-9525-38c4016cbb9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d67edfe5-99eb-4cb7-9bba-7764c718e748",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9562f2f7-10c6-44e7-bacf-afc4ce17b4c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "317e7bbc-173a-4376-9170-b39fd32fabcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9345e01e-7c75-48b7-ad3c-4a5fa453277b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d4ec64c-b27a-4807-a0a7-bba9c0695120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c77d29-ab05-4f07-a3dd-783c3f830421",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a427bed0-2fef-4b4f-aaed-3c27c341e23c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03355989-5a2e-44b7-8d67-982388ac57a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1fccb4-efcb-4832-bdc4-40f683ae4a53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72ceef0b-43da-40ac-8040-1a23ef23d26d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b80343e1-c367-451c-acea-644a8accdaeb",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e8cce4c-5507-46d0-96fe-25e5417fc267",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab77ddab-aa77-4622-a076-d661f77b01c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2dd6347-0586-48f6-9e8e-e325b73f368f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6a370da-d6a2-4717-a21d-44ac46f4aa7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee29c0b1-e4f9-43ce-b792-1df3fe91e9c6",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c38fb9-4cd0-4486-aae9-0cc5f9c04ddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ca0c6b0-2941-4f6a-b92f-bad47dc6ef6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eba9d59-ae05-4ea5-a89c-4077bf85aa48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b63b8110-0763-4394-8b51-6657bec18139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f49453c5-2575-48e1-acaf-cc4559b20d1e",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b343e7-7778-49d2-9f15-a52cfcb17050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26f0d9ae-23a4-40ba-a9e4-f4121e440771"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d526b11b-d44c-46ad-92e4-acc561a88fbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a246b541-9598-40b3-a4f6-441661a095ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7f6332-7568-4e8f-90f4-2c27d3a52a19",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d518105-5754-417e-9820-c551b4e90330",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e41173ac-f87e-4a27-a050-50aeec1bf93d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b44cce2-5d59-47ac-a5a8-bdf77310bfbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d417c26b-909e-4d2e-9c6f-d12bfdd1093c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b2600cd-3d6d-45d1-ba9c-2f568855ac59",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d9d57e9-6480-42f1-93c5-01bebd06c32f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8bd2ae3-7091-46d0-8efb-14af46681f3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f31ec7e4-3955-4dc1-adbd-0d4e6db48264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29261434-47f6-4bc1-9e64-3bfdfc02fd61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec5259d-50c9-44ea-a586-5ca5ad16544f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b27e4aba-c020-4bd3-acf4-24f190018624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccc1e5ac-2285-4c6f-8b5c-40b5da4a388d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e66c1bd8-965f-4e59-93a6-969333590512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aae4aba6-a4e7-47f7-a203-fe54fb12079a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df91ccb0-2f9b-48cd-b844-ae438b0d406e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f3591e-631c-42f9-92c6-57a4d8cbbf33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa5db3dd-c4bf-4361-bfdd-e02c4ee52f16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66663efe-1901-4ae3-86a9-0260579a1b2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "397925c0-4080-4c64-9730-3634365537e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55c4ecff-fc2f-4d2a-b507-4a31319702b1",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a673adc0-9491-4ed9-90b8-18d6b6e6387f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a67ffb9-278c-44d0-86f2-07cc6ff09699"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0adbb5f-0abc-48fa-b5d3-e883aada4963",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56cfa5c7-c0d7-44a2-abb5-cff1388ab203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cda54209-be4e-4335-8425-2441a62e1b80",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd0bdcc-5f46-410e-b829-ed9c9fa30c12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e8512ab-bdb4-4ad5-95f4-05b53c47e87c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb689744-ce42-4dcb-8176-18eba30bb108",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39b3fa34-b808-44aa-9e8b-ca8d739441a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9220a3c0-db27-4040-ba0f-33156b01ca9c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a83bb4b-22d1-4de9-b559-3bb044c4cae9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d9d2e67-c64c-493e-a1cc-ea4a409a78b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c641e75b-1fa2-4cd1-99cf-650e425b3bb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39dd298e-4473-4c68-be40-42e22507cd69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc5e8e9-403c-4e4c-b68e-9d585f0c0e71",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44234eb6-380c-48c1-b672-46520b5b5fe3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "847165bf-7491-48da-a398-a09330eccb58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f3d2de-f168-459f-b0e0-b091ee25d9a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df2cad88-2dd9-4633-8c7a-c28987d116a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e6f3110-f724-40b5-90b7-aad0a6ce7388",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31bec793-721d-45ee-82e6-3584fdcd4abd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03d7cb7d-fda3-40ee-a105-9f730a570ff5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1465895b-b633-4914-b7fd-a98e7370e9bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc6172a0-1038-4252-9ee0-ccc3a4a1525a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa6fb7c-6c63-46f9-9a77-70ac1630194b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af05398-3d9c-4796-83a0-68420ae3403f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8e6c008-e777-4237-be45-35a180455137"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d1ae27-65ef-47b9-998c-81b95ca99879",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3033304e-a3cd-47da-bc1b-16fc3ad25d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e652a5-f703-4bd3-9292-d2566e9593da",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da0c173b-84d5-4c15-8402-f6cdecc0eef1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8d3047a-d88a-4918-91ea-c8b348262b05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5902952-00ee-4977-9175-30d74c48eaa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "725d8a21-ccd4-4281-8e1d-eee5a67deaa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a6b56a-b692-49d2-ba2c-0cdcad92250f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b00290f-b8f5-477f-bd1c-cc93da4d9c13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e4e4d59-abdf-4d7e-bc7b-4fc5986c5092"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0abef81a-2a8f-432f-9290-6f277b5a05a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2f598d1-d57c-4a81-9478-7b5e48229345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aabcede6-e008-46f7-aa80-7710d10d278f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b19c04-fb74-46bc-8c84-84a6ba56c93f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b88ce535-e85c-4f22-ab48-27ea65f090c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d3b7a4-3362-4f40-8333-d4ff94277f0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3f4ccb6-9f61-4411-bec9-ff3caae6dc98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6058f153-efdc-41f7-a7db-381cd8e85763",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4270ac5b-5779-49ce-acc9-3fe2d3f11adf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f73c5c7-b6fd-4fd1-8146-0ad47fd08992"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9556ef88-1d9d-4a21-ab67-ab30047c068d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bad74548-83c8-4690-88f4-62cbe5ab7144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41cb1a4e-0d50-4a51-8035-66c34d806326",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "093d7169-5ca8-49c7-9be0-95b45a825ab6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e8ebc37-3a59-4c59-9a30-e313895b7ab6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "911c31ad-a74d-4006-909e-c33c2cb072a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0742e6af-f92c-428e-a954-858a6fc03ce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebcd1600-dcb6-4355-85c5-9bbf07ba2701",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca68a3a-ef73-4de8-9d33-df6382b308f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d879239d-1ede-4e0c-a34c-68cea429cbe6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9372ccd-7683-451b-98ad-5a62a7f58661",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a92e7ad0-c622-44bd-9810-963071c54c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc11f3b-77bb-4598-b529-c598a2bede3d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "729918c5-a4d8-4695-83a2-ba31553273f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55c9ba12-7eb1-4560-8320-1f43884cf8f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b52f82cf-8884-48f3-b57b-de08adf0afc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2179896-e9bc-4362-982d-67007e50a627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e2fc10b-457f-4ca3-bfb1-ed8e41cf6754",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7945ba0-403d-4f98-946f-b3bd06e03fe4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "640561fa-07c8-4725-88ad-2be43a587d82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c103c62-ab45-4c53-8e24-6a320c1a57e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4838eea-4cf7-4293-9b84-d3a14bec1186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb8d160-7780-4a49-ac8a-b984a37e6cc8",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da826397-140e-4896-9ec3-e2964ff71906",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36fbdbfd-ed6c-4e9e-8ade-f4673bb9febc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9928780e-a29e-4d0d-b5c7-31ac80a765f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d76c684b-e40f-4634-957a-00eeee4c1db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e6e742a-0297-4362-abc3-a8e691592433",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e136592-d60b-4a20-97c5-6532f54cabdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3be0bd1c-79a5-4c04-aa7d-1c740f31cf8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd99b41-104c-42c2-9ed1-2c08b7238a2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5767d829-22bc-4904-b6a8-360d5ed361ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d45668-bfa5-4fb6-b731-60caf9367eeb",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eac3b6f-2778-435d-9441-e49db5c1847c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a53e280e-58de-4929-a620-41dce6639e2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29585237-8cec-476b-83a8-135bc7591516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27206bdd-0f08-4a3c-9509-437bb3e78e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ded07d1-26d1-47c5-8792-f2f9fc00a89b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fadcf318-af8c-43c6-a466-cc138e2dd2a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d2146ec-54ef-4a0f-bf84-fbd912457835"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a34f15-36ef-479f-9c1d-f04bccba5094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edcf6c15-89db-4fa1-b68f-1f156c250318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6431ec23-ff6d-4e6e-8877-a8998dc60c50",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24075106-e5cc-469c-8e97-91f28561447c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e556eeaf-f3a3-4d8f-a5d8-a857c4babeaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d6f2f7-c9ff-4804-9d2e-a4ef18542876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9055fe5f-a3d3-4304-a59e-acb4b19c2f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8e24453-517d-4515-88ec-adc061101009",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "521ba3da-3641-406c-b34c-cf92bde80298",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46b1e94f-86c7-44c4-8f91-79841afd89be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1663082-3ce8-41a6-a3bd-232b1e625010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be6759cf-bd47-4479-8b46-cde63870390a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d59140-2fd3-4728-bf2d-0382fa536f5b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32787b4c-01c3-4bd2-baab-6f8ef3079850",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0cdaefb-2fd7-4295-b271-25b43b1c848d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca29d118-49dd-4b97-a715-8e4b2fbcbdea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54060b1b-ebd6-416d-99ba-5551d75ea380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c0dc5d3-05b8-4410-9f7d-132c21d459f1",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ed1af7a-d2a5-4eeb-8762-c116905f664b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c243d0e-2297-4d1a-a0d7-9c03091a9d57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a93f34c3-feaa-4085-ae9a-7f4197358dec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29e36270-3b8e-4826-b0e8-cc962384727f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b19a4ff-3e17-4047-8b59-237e6e13eb6e",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b337117f-37b0-40a1-a663-8452f0dcd16a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d8b51f7-fbd4-4282-84ae-7574779ec510"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a34ef76-7ea9-4d1d-807b-867cda8eca2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31ca8758-54d4-455c-aeeb-8f7a7980caff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "976075ba-b033-44ef-af47-63e2cbd5b1ca",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d30f30e-3933-49dd-8cdc-8d6068151544",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f292b238-2263-48ef-8c50-a377ea0c4aa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9021721b-8b49-4c0d-bca6-b440364f9099",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1672d1b2-e5e9-4749-b04c-ab31a92f59f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be5b9244-ebad-4fb4-99f1-11a73cb5aaf8",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c45bcb0e-ee5d-4768-abd8-f08c349956cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "451adc3f-64ae-4b0f-8b48-5653b4161f96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d827e5-ec4a-4d4e-a32d-200badd2aeea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a038f853-fb0a-4c7c-ad75-e2ec1d945c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99750060-9e35-439e-83b9-fc31b17592a5",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90991781-f8c4-4d85-a271-f265474e6de4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06b8b096-2220-41eb-bc02-15cd55f8e6c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6acc0205-52c6-45eb-b692-b5cd960b0e96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0e8b6ef-43c1-4b31-8e9c-ef4c443906f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f5b275-89e6-4d3c-980b-d20b5aa4e045",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7013a1-244e-48fd-9991-f70090572a6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c758e61-b361-4ac5-99b7-757911c6da5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "650257eb-0361-4b2f-8c43-03ba1353f327",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f2a5d04-fcdf-494f-94e1-9b968ec5929e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd6ea5f9-25d0-4ed7-bfd9-5dd2634268c1",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b1fd5a8-1345-4d8a-8bf8-1321dafca316",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16bffd96-fe23-4a2f-8e18-061628c6749b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed97794-d543-40fd-9a49-997ba6dd9079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bee326fc-141e-404c-add4-cdc969a1ef3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f09c28b-59ec-4891-89e2-7c33d1241b87",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "464b5a6f-4b66-437a-a61c-4c540eec01cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "209923f4-16d4-45bb-a50f-b8b306e4d9e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62997296-1638-4cdc-9c71-852d86c396bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1fcc55f-2ef2-4c1f-aab9-6faec8441b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdd2e520-c738-4b01-a046-3b9646ae7b8c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad34d51-87c5-4af5-b5fc-e111677e913e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b418fece-bef5-4db3-9fa1-78a4011508c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c07f24d9-6040-4d87-a8bb-f448ef6e0ce1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19a2230b-3293-4413-8f8c-4540acfe2e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d07804-a54e-4209-a829-7bd3d9d9da90",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20abaa74-1677-40eb-8195-89c96cba45ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "959c3a4c-dd7c-4f1c-bff5-2cf259a7001c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bac9577-0376-4ee6-b3a3-3c2e8f473e8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7d51d5b-e6c8-4a56-9f68-1212b9693b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b1b254a-cf9f-4ce1-8e13-752b9744fbdd",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a72b5cb-aae6-4395-9007-ad87e8efdec1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe616571-4274-48d8-94a6-7a78205a388c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd6e995-715a-408d-8eb4-c0bb3b5d1000",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16e50111-e079-427f-b80d-f61df9c740a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd174d0-a58f-4876-8a7a-de740e622e67",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "464ed2f4-db2d-4468-9dde-936574648106",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53966ab4-ca9c-4e8b-ab3a-169ff58ad9f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e2a7f1-35e5-49da-9cdb-c3b82822d685",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09530a57-1cc8-4083-850d-dd508896560b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e685b2-8dbd-40d2-98d5-aa53cb370a7c",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db0b6e10-0036-42d2-8e02-6a8c3d116550",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbba6583-d3e3-4c3d-bb1f-29c7ea5ed90b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b59b5ea-1ef3-4f39-9e7a-d52eb5e0f4d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c10417a5-3f81-4469-9bfe-748b5510ac49"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c8f1725-abd2-4415-bf65-51fc6068461a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "44619156-257e-4dd3-a0b7-9755cf2fe23e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf741bc8-4fee-4f98-9801-302942d349e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b9cae3db-c4d5-4d7c-85f3-40163037ad26"
                    }
                  }
                ]
              },
              {
                "id": "b619b2fb-8a19-4a06-a659-935f3466fbce",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "243949a5-2df9-4b5c-813b-fd164444e755",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6c5be83-fb29-483f-8df0-3785402782d9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "004fc4e7-844c-40e5-9816-f9cc32bba3a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a7fc14-4f02-4b8b-80a0-313dc0f66899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d351e80-cadf-4dd1-b9d2-5e07789a99dc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6766566-2d7e-4094-9809-fb846e7b1d63",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8897a7b5-f044-4fbd-9e9d-2905b063ad22"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dbf96a74-74cb-45e5-9512-31aa1ce98e9e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f3c9481-d36c-4352-814c-6b6947c31cb1"
                    }
                  }
                ]
              },
              {
                "id": "8302942f-5f60-4cfd-8596-c6159a62072d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "fb3c61d5-73ae-41fa-b1f3-a701e7f31a65",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f0818ff-ec42-447a-964b-34575160bc31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "2bd074f8-6822-40ce-a834-87257d5bb39c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbcba8de-bcbe-4a50-9c2a-867d859803f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35fa91aa-d401-4db6-945c-b1c6ed5c9836"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "381b5f50-ff37-4423-b03f-ec5c409139b9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d9d6abad-47fe-41bf-a552-50fe84ceefad",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d18cc74-8ce1-4792-8dc8-c483511fb3d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e9ae863a-bd86-4c48-b9f5-096f60110ed8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7fdd0eea-21d0-4d7b-b536-671b09676e65",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "348cca81-0643-43cb-832e-1608fbe22113"
                    }
                  }
                ]
              },
              {
                "id": "779e1884-d55e-4172-adca-7bedd2048df4",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e63326a-4143-4b6e-b8db-d518cb7a6c06",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c10e2319-4271-43bf-85e7-a727df089cc1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b9dd7eb-11fe-4a8a-992c-530d22729d3f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0227c7f2-f4fd-4a96-8882-0d2719ea9f51"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ae291d09-8c5f-478a-9876-c20a3e0bfbbb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "afcbafe1-097e-4cb8-893e-8cb4f5e68d95"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "06e73463-1f94-4a7d-a460-1ffc7d7703e7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0a06db3c-e221-4889-a6ac-f02881c92fb1"
            }
          }
        ]
      },
      {
        "id": "b8a3c5b6-ede9-4137-bf22-2cf5f15c5bd8",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "56f86e04-cfdd-4320-9e7b-342ebe31f0cc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "27adff33-7cd8-4fba-957e-9abbb5ac6c2e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6ac8b458-5f79-480b-b230-e061eced8316",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6525ba07-a972-40f5-a0c6-c91b667374da",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ddda5c5e-cfa5-4d8b-93b9-f7ed7eff48a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a06be02-ad53-49e9-9288-5da644d3fb00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aa841eb1-2c3f-4a76-9da9-0cbe15d7269b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a24fa6cf-b8b2-4d99-a45d-507b1e2015a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d922d9a0-13ef-433b-950a-61060b64b5c1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2b1397b-ef80-4a29-87f0-0168b0f90104",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f73a927-3978-49c0-a13f-a150bf098151"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "93e6a825-e2c8-4d7b-97b9-6c9fd1760c1c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "10f946c5-c1f1-4e83-98c0-cc26b839a832"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f6e071aa-6803-401f-b1d3-06d3ff4cdf70",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7a750ca1-57f0-455e-9c59-f346b1f53af3"
            }
          }
        ]
      },
      {
        "id": "ec97fdff-037f-4786-aef0-8cf15b7b2bb3",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "cece7624-ea5d-4993-8ea8-19399c5592e5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c31f32c4-c0cd-4ff7-9f7b-3b28fd41f891",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9dfc2553-2547-44bb-9d03-bd482b766112",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16017122-4fe9-4613-a5a4-5d4538f23ba1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8aaaf605-1aa0-4697-92c0-e84400709885"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed36304-aad2-41fc-880c-33589d52fd54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1c92b1ad-ca71-42bc-9cc6-21899faeeac4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e44c5ea7-ecb5-43a2-bd40-fdab20f42791",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b817be9d-3c27-476f-b542-ae51d8f32911"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c85e4e66-01c8-47c6-a5cf-49b48cbaeab5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24a9dfce-4eff-4564-a6c8-88b64421f359"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cf21edad-f17c-4106-a605-d0cceabf20ca",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "77564013-f140-44e2-8506-79fae1cba8c2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "62fb4761-88c0-4cc2-b1bc-0ffa628f1e2a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a134c8a0-0f71-4f50-a551-d2f9edc635b9"
            }
          }
        ]
      },
      {
        "id": "3ff48130-9093-4c25-97b3-fad3d35c7514",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "745920ba-8569-43c4-a1b9-000e0983753c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1994c6c4-a69f-4883-94d5-bde217775edd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "de2592b9-e616-405d-897b-dd238ca839ea",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c0e040-21c5-4b23-9b59-5512daa98f94",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "934de71f-aef8-4dd6-928e-99ae40cf51ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e6ea8a-4799-40fe-b81b-7be3bb6e67fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eef89fbe-0d49-41da-ba8a-fc15b1e88441"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f53dc28f-703b-4bec-8722-5b9f7c3d4aaa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9c0e5c4-3aa5-47aa-ac74-73e232ee05c8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7e77d65-84be-428e-b8ff-7b2440e159da",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9dc2ffca-ffcf-431a-a69c-6db556bd8bdd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "92e9b0d8-cb5d-4d8c-81a8-49715a1d9264",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6ee2c1de-c0c1-42fc-ab7f-fabb474483c7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7020872d-d0ae-492b-9d4b-c93765389280",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8f90c40c-5aeb-4b52-b759-8b73825087ea"
            }
          }
        ]
      },
      {
        "id": "a80cb86b-0d07-46b2-b7d9-26f980aa3853",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "145ac6c4-114b-4ee4-b485-4b455874cb8a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "14977d84-451e-4562-b46e-21fe5d73806a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "9514a956-30e5-49bd-9a67-08985273b897",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4dc727ed-b2cc-4d3f-a869-7e668c992b9d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aac6373f-7a0e-40a2-a8cf-e14e261a3d7c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 7.440476190476193,
      "responseMin": 3,
      "responseMax": 282,
      "responseSd": 26.044688940270827,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1720226252861,
      "completed": 1720226262767
    },
    "executions": [
      {
        "id": "4036524f-a5dc-4c7e-a05f-70f06c136d0a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "5cb0adde-9a29-4b71-b2fe-285931594b5c",
          "httpRequestId": "fca62e5a-ea35-4171-af6d-30aa0caa0fc0"
        },
        "item": {
          "id": "4036524f-a5dc-4c7e-a05f-70f06c136d0a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "5d8763aa-9a02-445c-8230-36962565f957",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 0
        }
      },
      {
        "id": "67dba1c6-462d-4e60-b2b9-cd3c2b07bc27",
        "cursor": {
          "ref": "1d9d3b47-cbf8-4bd0-ba6b-b0e7ac6702cf",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "0a5a19d0-086f-45a6-9aa7-30e0a7ff6608"
        },
        "item": {
          "id": "67dba1c6-462d-4e60-b2b9-cd3c2b07bc27",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "2511c84f-6b9a-4a1b-8e5d-311914134e37",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "b164f2c3-51a1-4aaa-ba0d-74118a6bad3b",
        "cursor": {
          "ref": "e8366f75-1554-486f-aa9a-fce772c05dc4",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "21df88b5-0d34-4ccb-94b6-b280c41f0cd6"
        },
        "item": {
          "id": "b164f2c3-51a1-4aaa-ba0d-74118a6bad3b",
          "name": "did_json"
        },
        "response": {
          "id": "50ba0a42-e186-4b6e-b3ac-545bc295860f",
          "status": "OK",
          "code": 200,
          "responseTime": 90,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd57d55-6b9c-4a4a-97d1-2494e3bd67d8",
        "cursor": {
          "ref": "0066a7b4-7682-4ca9-8252-b769b9c87d82",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bb523b39-1c61-4a6e-a6cb-bef9a7afa57e"
        },
        "item": {
          "id": "ffd57d55-6b9c-4a4a-97d1-2494e3bd67d8",
          "name": "did:invalid"
        },
        "response": {
          "id": "7c0e36ae-c4a7-4fb5-9492-709ada5fb95f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd57d55-6b9c-4a4a-97d1-2494e3bd67d8",
        "cursor": {
          "ref": "0066a7b4-7682-4ca9-8252-b769b9c87d82",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bb523b39-1c61-4a6e-a6cb-bef9a7afa57e"
        },
        "item": {
          "id": "ffd57d55-6b9c-4a4a-97d1-2494e3bd67d8",
          "name": "did:invalid"
        },
        "response": {
          "id": "7c0e36ae-c4a7-4fb5-9492-709ada5fb95f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ca24fe-5989-4c27-afe5-a480b860bed6",
        "cursor": {
          "ref": "ec01fbd3-eb94-4755-8409-78c743e74717",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "7685a696-b407-4416-8704-43a64c0a407c"
        },
        "item": {
          "id": "02ca24fe-5989-4c27-afe5-a480b860bed6",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "bf7369f6-962d-4955-aad0-9265c5103f2f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 190,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd49bbe6-8169-4a15-987a-34f8330b2e86",
        "cursor": {
          "ref": "88f8112f-61c3-47c4-a4b6-5e8fd36ea20f",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0af9306d-30f0-46f4-9866-09a1a132ee67"
        },
        "item": {
          "id": "cd49bbe6-8169-4a15-987a-34f8330b2e86",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "53bb1aeb-e221-47d3-b07c-aef277eaf13c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3709ab4e-1312-427f-919c-d368c8de037e",
        "cursor": {
          "ref": "d8d6482e-0d7c-482a-b7d3-f4001d59aa3f",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "1b0fcb33-2ca6-409f-bae6-6d1a93bef457"
        },
        "item": {
          "id": "3709ab4e-1312-427f-919c-d368c8de037e",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d69405f6-6a1e-4ecd-889f-0afb6910b961",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a37694b-5705-45f6-b6cf-715b32def7cb",
        "cursor": {
          "ref": "703e8fdb-4762-4bfb-a12d-4888551cd262",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8d052f82-7eb1-4251-9915-8b20aee9c59d"
        },
        "item": {
          "id": "0a37694b-5705-45f6-b6cf-715b32def7cb",
          "name": "identifiers"
        },
        "response": {
          "id": "e2bcb811-f9d5-4593-9fe9-11ceabf63312",
          "status": "OK",
          "code": 200,
          "responseTime": 223,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c79b72c-3026-4b8b-a56f-0362d4ac9006",
        "cursor": {
          "ref": "9278b6cc-a120-4a81-8794-10e4be24a8ab",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "10023a88-f0c9-41d9-b662-4fbc014b663e"
        },
        "item": {
          "id": "6c79b72c-3026-4b8b-a56f-0362d4ac9006",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "50189d4a-e8a2-44d5-b26e-c9caa540a39c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14663332-dad0-43bd-be1f-76ae6d92864b",
        "cursor": {
          "ref": "3bc93ef2-9e38-45aa-8683-9c005e126dc5",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d7eaec9f-03c3-4a47-86a6-34428655b9b9"
        },
        "item": {
          "id": "14663332-dad0-43bd-be1f-76ae6d92864b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "046096ea-f59c-4761-9429-8b686b7170fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcdb2687-fcbc-4dfc-937a-2cf01e20718a",
        "cursor": {
          "ref": "458cf26c-ad10-4199-9c55-a54ee7daeb85",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "4021db0c-05bc-4286-ba48-c8d1afa507d9"
        },
        "item": {
          "id": "dcdb2687-fcbc-4dfc-937a-2cf01e20718a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "abf53be3-46ab-4256-946a-e0b47a933034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23bd1270-d44f-4a65-aebc-815fde7d0350",
        "cursor": {
          "ref": "e39ad74f-84da-4b7e-9623-c00043231b25",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5f520afc-ca59-461f-97ee-d5b6ff260934"
        },
        "item": {
          "id": "23bd1270-d44f-4a65-aebc-815fde7d0350",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "fab70e0e-7341-4573-b33f-dc657b0fc61e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "582179ea-86e0-482b-bc31-4e18b315ec53",
        "cursor": {
          "ref": "323a7844-c52f-4a22-b855-b82bd77ae4fb",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "3a28ff5e-2190-493f-9d16-6a9970e9bac6"
        },
        "item": {
          "id": "582179ea-86e0-482b-bc31-4e18b315ec53",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "0fc78f50-050f-4b74-977e-fcb8ed76e85c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30c68a8-318a-497d-8a43-b522323f6e6c",
        "cursor": {
          "ref": "db374c2f-d1f2-4c9f-9768-7cc57997d560",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d5e686f7-4df5-47c4-b254-e0637aaede77"
        },
        "item": {
          "id": "a30c68a8-318a-497d-8a43-b522323f6e6c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "4bde79a2-4b7e-4899-afa0-079a3ec10a1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed331bc2-c178-4b70-ac77-2d8045e5607b",
        "cursor": {
          "ref": "e35bd704-dc16-4823-bdc2-37fb098f03ad",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f3c34a76-7112-44ea-b756-b45e00d36e32"
        },
        "item": {
          "id": "ed331bc2-c178-4b70-ac77-2d8045e5607b",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "7f9ceb7c-1f05-403d-8b02-e5cf39f4d3de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e68790b0-502c-43c1-a8ba-433f6cf4f6de",
        "cursor": {
          "ref": "23561a93-f71b-4f3a-a1a2-d9ff82479ef6",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "cc9d5c98-40af-4901-8d89-970ac4bb7361"
        },
        "item": {
          "id": "e68790b0-502c-43c1-a8ba-433f6cf4f6de",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "86f3cf4c-f65a-4356-81f2-a2f3694d5e9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf2d715-8246-40f5-81a7-2dbe759c3551",
        "cursor": {
          "ref": "182c15cf-c49c-45d6-8942-6352bb8db896",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "824741e8-e425-4984-9039-0d228e50df3b"
        },
        "item": {
          "id": "3bf2d715-8246-40f5-81a7-2dbe759c3551",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "12012d17-bd8e-43c0-a567-4513226e6f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e5737bf-a6d8-4756-befd-27b4ea859511",
        "cursor": {
          "ref": "2d15a082-fd4d-41f3-b066-c381704bc0ef",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "421c3192-d920-4fa9-95f6-7a7649ce2e42"
        },
        "item": {
          "id": "1e5737bf-a6d8-4756-befd-27b4ea859511",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "3abcd74d-66a7-4d2a-943e-3b19460616ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c2dbc9d-02bc-4d6e-8889-0f2aecb536c6",
        "cursor": {
          "ref": "630ccb13-7adc-40b3-9ca0-a107c498cf02",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "0836bc40-888c-4aed-9973-8e4148035656"
        },
        "item": {
          "id": "0c2dbc9d-02bc-4d6e-8889-0f2aecb536c6",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b1bcf538-3f20-4853-b332-864dd86979fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9863f4-d340-46f4-90d6-9061a166d12f",
        "cursor": {
          "ref": "91de11b2-16fe-47e1-a41e-fd9a53122f9a",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "70eebdba-6c2f-42f2-9abb-461f33147fbd"
        },
        "item": {
          "id": "fa9863f4-d340-46f4-90d6-9061a166d12f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "01d6bc00-4b8e-4ae6-b052-60bea6100e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e31fa1f-17d8-4fd9-9edc-093e3cfdf172",
        "cursor": {
          "ref": "155c667b-3442-4a74-b167-75aaa44f7b81",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d38aabcc-2b45-497b-8f5e-d819aff1d3b7"
        },
        "item": {
          "id": "7e31fa1f-17d8-4fd9-9edc-093e3cfdf172",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "a62e8bc3-c599-429f-bdf2-1cfb57089d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed19e8d4-25aa-481d-85c6-cf0601cb3cf3",
        "cursor": {
          "ref": "b9274889-7c4c-4e76-b878-fe5d56ce6f56",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "dd92dc6d-5710-4ab1-a311-64ea603ce327"
        },
        "item": {
          "id": "ed19e8d4-25aa-481d-85c6-cf0601cb3cf3",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "80e764eb-afb8-43b3-b730-27b1176e979e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d257097-57e3-4034-b7c1-2dc78a09ee4f",
        "cursor": {
          "ref": "ef868fc8-96c6-4532-9c26-a99fc4e6f629",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "72459641-4bf0-4a7c-a0ab-d829d91f7188"
        },
        "item": {
          "id": "3d257097-57e3-4034-b7c1-2dc78a09ee4f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "365a5d34-2739-40c6-85db-9cbc9b697d67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2843e59e-1e66-4323-ab86-8db5fe8d5b48",
        "cursor": {
          "ref": "0d526151-cdb6-42db-b93e-78f4186264eb",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "5881508b-4c23-4126-add0-05374f3c3828"
        },
        "item": {
          "id": "2843e59e-1e66-4323-ab86-8db5fe8d5b48",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "bef53599-3742-4c3f-a561-aed50a1ccc75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a8b09a-bea2-4843-99ef-761e3511b450",
        "cursor": {
          "ref": "b6de3f5c-f695-4056-b7cf-dd81e8e50051",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c806658b-ec40-4c4a-8586-c2bf5a3e31ff"
        },
        "item": {
          "id": "23a8b09a-bea2-4843-99ef-761e3511b450",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "16b72b0b-4c1c-436c-97c7-bdd74abc653f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa77f3bd-91b4-4199-ba8d-c99647408c75",
        "cursor": {
          "ref": "1ff37be1-2523-4710-9e21-bcd015044e49",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "625521d0-375a-4b85-81a5-cf3fb701b648"
        },
        "item": {
          "id": "fa77f3bd-91b4-4199-ba8d-c99647408c75",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "9de57676-aa24-4a72-b107-ddda785b0434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd3e1d3-fe25-4483-838d-8057035b724d",
        "cursor": {
          "ref": "90ea4e88-514b-4cf8-9e7e-8f99e6e6721c",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "53d9c1d5-0009-4d2f-907d-23fab6fe5a38"
        },
        "item": {
          "id": "bbd3e1d3-fe25-4483-838d-8057035b724d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "049c50f0-d4d2-4512-a17b-351f9b0262a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "366429f0-c350-456b-b4c9-21e1e0909043",
        "cursor": {
          "ref": "b6adcf5e-2570-4e2b-a560-41cb74f0f901",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d5211c6a-5292-4b06-9a41-5d97e0e8dcfb"
        },
        "item": {
          "id": "366429f0-c350-456b-b4c9-21e1e0909043",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c219a268-0f99-4313-a989-805889cc9a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "023123c6-d3e5-4140-b9d0-b24b6b1dbad4",
        "cursor": {
          "ref": "09fda0a5-37af-4438-b0e7-fcee09e12f2a",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a2e8cc73-bb02-4b80-a7b1-e79a5fe000be"
        },
        "item": {
          "id": "023123c6-d3e5-4140-b9d0-b24b6b1dbad4",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "012a0bc3-30be-4821-aab1-3ad26391efaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5699f0ae-d5b9-41ba-88b3-f08e521816bd",
        "cursor": {
          "ref": "dbb3c929-9529-4975-9149-502048791ea5",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "da5120a7-b6d7-4751-9284-731aa8916ea2"
        },
        "item": {
          "id": "5699f0ae-d5b9-41ba-88b3-f08e521816bd",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "98deab01-61fa-445b-9a1e-e9a913e98198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f462f8-d75d-48a6-8c3d-ff28430d0f70",
        "cursor": {
          "ref": "34a1a8a3-f6ba-4718-afd1-120a7f01ca66",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "24a67f22-a1bb-4ce4-a2f7-cb07eb4f4081"
        },
        "item": {
          "id": "b2f462f8-d75d-48a6-8c3d-ff28430d0f70",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e9ba787b-c6c5-46a6-a32e-59abae63d4af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca0817c-e07f-4d8b-9a9f-ee487e2c1684",
        "cursor": {
          "ref": "0c7a22d5-029d-46b9-acf9-1dfbfd132606",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "0a6b2703-f753-46db-836a-070dd376bf32"
        },
        "item": {
          "id": "3ca0817c-e07f-4d8b-9a9f-ee487e2c1684",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "5ecaca01-16df-490f-a705-c921ac6bf01e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad62015-0203-4539-9932-5aa4c8d178b9",
        "cursor": {
          "ref": "947b80fd-c684-47c6-9eaf-6aa4cfeb5251",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ee9d82d4-acef-4af2-a717-b35e7ad1ebd5"
        },
        "item": {
          "id": "3ad62015-0203-4539-9932-5aa4c8d178b9",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "144b088b-c10a-4071-857a-8741ad050e9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f27b7d32-a964-4ff1-a5be-3bb2780455ab",
        "cursor": {
          "ref": "0640531d-8c5f-41da-b021-3425f7d71e69",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0d128a18-60d7-434b-b63d-0b1e11af99fe"
        },
        "item": {
          "id": "f27b7d32-a964-4ff1-a5be-3bb2780455ab",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "dc607fa4-5118-4a66-9cf7-703096ff65cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2642d0e1-fb77-4a32-b0de-610dd072b847",
        "cursor": {
          "ref": "c8ef29f4-a02b-46a3-bbe2-b4ef375766d2",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "6422186f-938d-4e20-9fa4-45a8471bbb72"
        },
        "item": {
          "id": "2642d0e1-fb77-4a32-b0de-610dd072b847",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "35aeb0eb-bcc6-4368-b801-15729a0f1065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "226ccc8f-d917-4d07-9d01-84b964f5e15f",
        "cursor": {
          "ref": "c3a010d3-041c-4e98-85f3-b117b68e6642",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "e239b2e9-1092-49b9-9d7f-dd2cf9745f64"
        },
        "item": {
          "id": "226ccc8f-d917-4d07-9d01-84b964f5e15f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "bd514145-fb84-46a8-80ca-89a8d1270d48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "943c8fd8-8efa-4733-808d-e5d67e10aa3c",
        "cursor": {
          "ref": "ab7806ea-8ec3-48cd-bd08-1c001c45e1da",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "2201dfb4-32fc-46e9-ac37-ba1ccc08547a"
        },
        "item": {
          "id": "943c8fd8-8efa-4733-808d-e5d67e10aa3c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ed5ac326-a34d-4fc4-b776-c57a16d7f248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d5b3062-f47a-4a61-8b52-b727f4077f3b",
        "cursor": {
          "ref": "7f31e2ff-33c8-415b-9510-cb7c9c80269c",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ad5785fb-315d-48ab-a2e9-18f678e2e1ec"
        },
        "item": {
          "id": "4d5b3062-f47a-4a61-8b52-b727f4077f3b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "30cd8bb4-0946-4eec-b088-8175c2fe4311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e25cad-da25-4e9b-a53a-5bd6f65e964e",
        "cursor": {
          "ref": "1fcfcfd4-f547-4ce6-823a-f5bf614aa47c",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "b5a58d47-7249-480d-bf49-afc200adcc5b"
        },
        "item": {
          "id": "a0e25cad-da25-4e9b-a53a-5bd6f65e964e",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "8a5a92ed-d7c7-4f9c-8d14-536ecbb8de30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95350ef8-b96c-40d4-9d89-6f50939a8be8",
        "cursor": {
          "ref": "58c97644-ee30-4ea5-8b7f-abac2d852eec",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c03266ab-cbb5-479d-962e-7cb00e5ef925"
        },
        "item": {
          "id": "95350ef8-b96c-40d4-9d89-6f50939a8be8",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3ee0982f-f8ec-4237-af90-22965d95405c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "440fec93-a25d-4ad2-b3fe-ef9a72331b04",
        "cursor": {
          "ref": "1e86cebc-4347-4fc7-87d0-ec0b1d25b440",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f91cf5a1-0c23-46ef-94d0-d9c968f941ba"
        },
        "item": {
          "id": "440fec93-a25d-4ad2-b3fe-ef9a72331b04",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "71598965-844c-45fb-8920-02465135bfbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dab256d-5949-4ffe-bb09-7bebd719b6cd",
        "cursor": {
          "ref": "9888cf5c-a4af-40bc-8f1e-864b08e1ee40",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "bcbe6eef-9841-431f-a2b4-84bfa7f44803"
        },
        "item": {
          "id": "4dab256d-5949-4ffe-bb09-7bebd719b6cd",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "2cf5a6e4-7f0c-4874-a7fb-24a1c70b6ad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced51ceb-be8e-4ccf-8822-86fba07ea0bf",
        "cursor": {
          "ref": "414fcf65-30d5-48fb-a6f1-11c6fe23d1b0",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "07dfe4a8-ade3-48a1-9026-ae69e46ffad9"
        },
        "item": {
          "id": "ced51ceb-be8e-4ccf-8822-86fba07ea0bf",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ee85b3df-dcec-40d7-bbf0-afd473579a41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "643f4704-8514-40f0-a513-d4e78484d6ff",
        "cursor": {
          "ref": "0059e8a5-bc4f-4723-bf6a-43a4938023bb",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2ea775dc-11f9-41d7-8c97-ad5650006fed"
        },
        "item": {
          "id": "643f4704-8514-40f0-a513-d4e78484d6ff",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "482e92ad-43c0-4190-a7e1-42156d371bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f22aa4-337f-4816-8d9a-199383025722",
        "cursor": {
          "ref": "9ee4dd97-4288-4f6b-a3b3-381c4dae608d",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "7cc35606-f7bb-4d37-a886-2a3a70534041"
        },
        "item": {
          "id": "f7f22aa4-337f-4816-8d9a-199383025722",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5ce99b82-e3ca-4e53-a1ac-e2d05fd07d45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ffc9e3-6e61-44e9-8766-698487acf9cf",
        "cursor": {
          "ref": "f31b3da6-78fc-4930-80e9-73986376bd4d",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "af56fb97-7746-47c4-b4e9-846299c4a9f7"
        },
        "item": {
          "id": "d7ffc9e3-6e61-44e9-8766-698487acf9cf",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b0bd4855-549b-47a5-831e-703ed9a7c48c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a93a13b-7e95-4c10-83be-4b25cc92ccaf",
        "cursor": {
          "ref": "a1654016-e993-4472-a0cf-6fabf9200a89",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "bd556b09-dd5e-49f1-85f2-1095e205f540"
        },
        "item": {
          "id": "6a93a13b-7e95-4c10-83be-4b25cc92ccaf",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "9c1d7f5e-fd17-40fd-b765-df61127f4d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "018adfaa-278b-4d88-aa13-2ad0baf93295",
        "cursor": {
          "ref": "f65d6466-d1aa-45e7-a58e-d6081a470ab3",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "161d96da-053d-45ae-a39a-fbc5700d6aec"
        },
        "item": {
          "id": "018adfaa-278b-4d88-aa13-2ad0baf93295",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "26bea545-f1c0-452d-85e6-8129e7525b01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b359a975-6910-4fdc-9364-3fadb3878649",
        "cursor": {
          "ref": "206e138b-f98d-4262-8b07-4dddd5764db9",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7f9685a0-d12e-426c-83eb-92127eefa1d2"
        },
        "item": {
          "id": "b359a975-6910-4fdc-9364-3fadb3878649",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "46d2c3a2-c8d9-43ea-bdae-5901bab3169d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90bf287c-597f-4915-810d-e60750d1bc1e",
        "cursor": {
          "ref": "b6b3a772-4350-4b76-8f69-0b7a1486ea8f",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "9101acd2-36f8-4eb9-a98f-16c60b39b1b2"
        },
        "item": {
          "id": "90bf287c-597f-4915-810d-e60750d1bc1e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "79642e59-93ec-43fd-89df-8c14586a5739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2085829-14f4-4a42-806f-345f2e92ab3d",
        "cursor": {
          "ref": "45ed482c-183f-4dc1-a309-21676adaf244",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "4843b44b-45a5-4cde-a4b1-a2514eba284d"
        },
        "item": {
          "id": "b2085829-14f4-4a42-806f-345f2e92ab3d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "cd811ee7-e7b3-47fa-86fd-26143e5a05a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73adcb3f-81cb-4bc7-9db0-0f37b6a6c846",
        "cursor": {
          "ref": "246ccd21-ecd8-482b-8fb7-ca2d9ce07715",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "77a1f4ad-f780-4ac8-b906-4ba2f70ade80"
        },
        "item": {
          "id": "73adcb3f-81cb-4bc7-9db0-0f37b6a6c846",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "7e3a2f42-0af3-4083-acc6-333b1d824c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f91421-b89e-4044-9fbc-0ab56ed9838b",
        "cursor": {
          "ref": "a2f6fa9b-47a0-495f-940e-c820543ae60a",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "306697f3-46b1-4e00-929b-6af115b6a46d"
        },
        "item": {
          "id": "03f91421-b89e-4044-9fbc-0ab56ed9838b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "059f8981-3f98-42e2-8253-b69bfaa14d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2894d45-b85f-4906-b270-b3314cee45b2",
        "cursor": {
          "ref": "2032587d-5ce8-4891-956f-a0fe98d91581",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "dbab63e7-efa9-4aa2-aa5d-d69d672b8ee5"
        },
        "item": {
          "id": "d2894d45-b85f-4906-b270-b3314cee45b2",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "de559cf6-5d55-4242-9367-098e8ec919eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f34d78a6-4198-47e6-b77f-a8d6c155357a",
        "cursor": {
          "ref": "8f1882a0-55fd-4a18-a4fb-2dec4263267e",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "416ac6a8-72c8-4db2-a6ff-62fa8ae1a4ee"
        },
        "item": {
          "id": "f34d78a6-4198-47e6-b77f-a8d6c155357a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d0aa7991-44ce-43ff-95bd-8e2454fa34e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb451313-a2c5-49c3-86b3-da133efe1672",
        "cursor": {
          "ref": "70ae7b93-e906-4248-8a47-755bacc53262",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "bbf69588-f640-4269-bba1-56f7b9e866cc"
        },
        "item": {
          "id": "eb451313-a2c5-49c3-86b3-da133efe1672",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "8f49148a-694f-4400-b4fe-5dd54774f04c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a48979-6c74-4ef4-b526-51f4f54a9b20",
        "cursor": {
          "ref": "91932598-7a35-485f-81fa-f251058b8750",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "0ccfb69b-5210-4ff5-a34d-fd326eed5510"
        },
        "item": {
          "id": "42a48979-6c74-4ef4-b526-51f4f54a9b20",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "bdb12231-051f-4bf3-8553-7ccf5f3a165d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a862873a-89a7-4fba-b604-8471df960c4e",
        "cursor": {
          "ref": "c16c8a03-fe7a-4f31-9f5f-147aeff2ffed",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "8e52e012-72af-4a3a-af0d-279ed45087dc"
        },
        "item": {
          "id": "a862873a-89a7-4fba-b604-8471df960c4e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "5d9d639f-a1a7-4425-9010-ed1a451305f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "674c7abd-fde2-45d9-a9e8-40c3326c6b50",
        "cursor": {
          "ref": "2fd4380a-f34f-4364-a58e-8508bba4f1ea",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5d82d930-3050-4297-90aa-b5007eff6a55"
        },
        "item": {
          "id": "674c7abd-fde2-45d9-a9e8-40c3326c6b50",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f4d5a3e0-662d-4c81-941f-dc850f34cc58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "827391ad-4de9-4223-81ea-4e46fa706288",
        "cursor": {
          "ref": "5fd5ad6c-721c-4af0-9244-23060d26af31",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "9d3ed54c-d6a1-45d0-845c-ce2a5beb5562"
        },
        "item": {
          "id": "827391ad-4de9-4223-81ea-4e46fa706288",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "752c16dc-b7f0-4c49-9382-06f4d6458e79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d962e25-c309-419d-a7c0-5c22d9724293",
        "cursor": {
          "ref": "e59c7a4f-18f6-4b48-a381-6dbb855d369a",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "93902550-a239-4382-ad77-901c25e95e2f"
        },
        "item": {
          "id": "2d962e25-c309-419d-a7c0-5c22d9724293",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ca742c31-2c2f-40e4-9729-81b997f2278c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ccc3dfc-9a0c-4388-8ed0-72e485c0e920",
        "cursor": {
          "ref": "01aca359-4f79-4897-b765-fc52afb8077c",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "cd778325-796f-41a1-b958-3f434d269a5f"
        },
        "item": {
          "id": "6ccc3dfc-9a0c-4388-8ed0-72e485c0e920",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "4abc1729-5a40-4f53-8ec5-7844ff1b70a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7acb2dfc-ab47-41a2-9537-009c647251e0",
        "cursor": {
          "ref": "98d4687e-1e14-48fc-a9bf-62961fab0006",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "dbe3fd17-cc1a-49db-ac19-c8b263b1e31e"
        },
        "item": {
          "id": "7acb2dfc-ab47-41a2-9537-009c647251e0",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e4e56978-5bc6-4c67-9a25-d5138e9321a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22b1ea85-05d8-46d4-b1cf-d50bca664fbd",
        "cursor": {
          "ref": "5ae00498-8926-46cf-877c-375753f1ecb8",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e731d3b4-11c8-4312-bc4c-61d65174eea4"
        },
        "item": {
          "id": "22b1ea85-05d8-46d4-b1cf-d50bca664fbd",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "65f97f64-7620-4c5e-a359-9b75b0716030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf57d2c-42aa-4e84-8ec0-b1b770b9b975",
        "cursor": {
          "ref": "2613bded-6de8-4d77-9272-00746bce0ea0",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ca1535ad-6baf-46f4-9e7d-9e7e62af1e03"
        },
        "item": {
          "id": "faf57d2c-42aa-4e84-8ec0-b1b770b9b975",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a863ff24-ec08-471e-98a2-f08cac5dc683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521956c0-35cf-4c98-adaa-03f43c14604d",
        "cursor": {
          "ref": "75ce9071-2723-4348-bec3-843287aca773",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "80572de7-eb5e-4c05-a9b1-6b28634afd20"
        },
        "item": {
          "id": "521956c0-35cf-4c98-adaa-03f43c14604d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "86a7c7ff-c07f-48d8-9272-6dbcd3b92082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec169c0-1bb0-4022-8b50-b66f7414e9b8",
        "cursor": {
          "ref": "3c3c6ecf-6f20-4fc1-b888-2c3aea1d6d88",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6ecb8d7f-7fec-49bc-80c2-8fd780bdfae8"
        },
        "item": {
          "id": "2ec169c0-1bb0-4022-8b50-b66f7414e9b8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "52addd6c-1846-476d-89fc-45adba076acc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ec245e-5a1b-41ab-b05c-e0222e863fc8",
        "cursor": {
          "ref": "c38082fd-a365-4b7d-b4ad-3c2c5b617526",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "cf1335dd-6844-47a9-9aaf-f23ccf647172"
        },
        "item": {
          "id": "21ec245e-5a1b-41ab-b05c-e0222e863fc8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "7ceee49d-7be4-49e9-afa2-3b7825f8eadf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b57ed0-8283-4399-bcab-028e8b3a6709",
        "cursor": {
          "ref": "c5ccda16-4264-4095-bb00-31ef911c8a7a",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "490e14d6-f379-4788-b3d3-cc8a84742f53"
        },
        "item": {
          "id": "65b57ed0-8283-4399-bcab-028e8b3a6709",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b41478bd-da5a-4735-b348-759cbab0b146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23bcf4f9-05f9-4916-9ab3-0b58280fa2cd",
        "cursor": {
          "ref": "c00b4241-de5e-4ce0-ae9e-8af4c2d192c2",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "61678563-f3d0-4d78-a4f8-2eef081f444e"
        },
        "item": {
          "id": "23bcf4f9-05f9-4916-9ab3-0b58280fa2cd",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c5716a01-098a-4a1d-bd13-9e337a049ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e821229-d055-46ba-a303-660ecf6bff94",
        "cursor": {
          "ref": "a55a3da3-cbff-4815-bccc-0227dbd33dd5",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "46841c38-a8f1-41ff-b17d-db7f8a231244"
        },
        "item": {
          "id": "3e821229-d055-46ba-a303-660ecf6bff94",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "2ec4ac0d-2efc-4038-bfb3-2fa86f890fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fffd1ca-b3e8-4777-8fd8-a9b7ccbc6d21",
        "cursor": {
          "ref": "03de27d7-eed3-4260-930e-e2279e50e02c",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "265e0b80-e951-4811-a635-39bc0c96b4a0"
        },
        "item": {
          "id": "7fffd1ca-b3e8-4777-8fd8-a9b7ccbc6d21",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b51f307c-4e84-4368-a864-09d1a3cec75c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8774bcf6-7c2a-4de9-afd0-064034dc9432",
        "cursor": {
          "ref": "85f48978-6058-41b7-8da8-5084f32acdf5",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "37c8d09c-bf12-4963-b5d6-f962a7aaf39d"
        },
        "item": {
          "id": "8774bcf6-7c2a-4de9-afd0-064034dc9432",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "55a1d0d7-477d-4afa-9ff0-27ce858ff02b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ece79d6-26a2-4e1c-bc92-547680b4bf71",
        "cursor": {
          "ref": "7b8fd94f-d1a5-4733-b72d-b00405f8322a",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "41dbee33-edaa-4948-9208-efd528ff05e8"
        },
        "item": {
          "id": "5ece79d6-26a2-4e1c-bc92-547680b4bf71",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d92ce275-5c52-4bed-b868-0ee9cf15c500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c6471f-a187-490a-95dc-0d6e0e7f728a",
        "cursor": {
          "ref": "f0c2714d-6ec6-4b5e-b193-14553e45521e",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f1a9ad7a-9641-4141-a4af-7217926ca2d7"
        },
        "item": {
          "id": "83c6471f-a187-490a-95dc-0d6e0e7f728a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "89163474-564d-4fb5-9788-66095297035d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9544fac9-60ac-444f-87ac-398d28ab5f75",
        "cursor": {
          "ref": "c98c018b-5f62-4b29-9818-c35b971dc4fb",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "48168113-4d45-4f6f-9ae6-d14bffc5b70e"
        },
        "item": {
          "id": "9544fac9-60ac-444f-87ac-398d28ab5f75",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "16bc5f39-ef96-428f-a2c5-d1c95ad6cd43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7342ce0-4314-4eab-b793-24c8cae27d95",
        "cursor": {
          "ref": "0016b961-55be-41d1-8a84-40657934acdb",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "47a8f45a-0cec-4a94-b8c3-d4d837a84393"
        },
        "item": {
          "id": "d7342ce0-4314-4eab-b793-24c8cae27d95",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "72e3c706-9d5b-471b-84ea-e102368d8952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06613de5-dcdc-477f-9a9e-ab7247eb305b",
        "cursor": {
          "ref": "e72f59f2-97d6-4c56-972b-a083ab3552d3",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "75b5565f-3a58-45a3-9c21-1ec113f9dc8b"
        },
        "item": {
          "id": "06613de5-dcdc-477f-9a9e-ab7247eb305b",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "19896b98-4628-44fc-a414-b3e3151ba14a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b935a5b0-13de-4e21-9830-7a5f7658fd6f",
        "cursor": {
          "ref": "d5778622-ff03-48e0-b90c-4f0697220efd",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9e22a060-1b65-4430-a637-f20466c7ae19"
        },
        "item": {
          "id": "b935a5b0-13de-4e21-9830-7a5f7658fd6f",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "4541a4e8-6f9e-4678-be1b-7bf7d735e2e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43835723-2d06-499e-985a-aaeed7e190df",
        "cursor": {
          "ref": "0befd913-1d52-4b57-9d55-6d668c43efe5",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "32c85a58-2735-467b-b0fe-4a3f5dd95a67"
        },
        "item": {
          "id": "43835723-2d06-499e-985a-aaeed7e190df",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f53d0302-4c54-4458-b8ce-88c5d3dcbe7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10440dfc-990f-4cb6-a52b-f403b0680ad6",
        "cursor": {
          "ref": "31434758-30f5-48e8-9e67-581b6b160d7f",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "8b3d9479-be7b-4427-9115-6b12d12404b8"
        },
        "item": {
          "id": "10440dfc-990f-4cb6-a52b-f403b0680ad6",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "6552f029-2b96-4d22-8447-4fe86a685343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db8be3cb-ac6b-40c3-a370-322c4ce202f2",
        "cursor": {
          "ref": "9870bcc2-58b5-457a-96c2-a330e442ddd7",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "74b18c51-ed22-4ac4-955f-b6a06a35dfc0"
        },
        "item": {
          "id": "db8be3cb-ac6b-40c3-a370-322c4ce202f2",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "0061a0fb-bf7a-4068-b55f-78b8ca341968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d07b3e33-3821-440a-a283-01333f364265",
        "cursor": {
          "ref": "60b8a5a3-8753-42a7-92f7-5417f2f80011",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "39f1ae1d-107a-416e-94b9-555fac5caeda"
        },
        "item": {
          "id": "d07b3e33-3821-440a-a283-01333f364265",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6ecd2d02-aad7-4e18-bb48-0fc90b3b9293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e952240-9719-42bb-a2fc-c06f91813dcf",
        "cursor": {
          "ref": "99c15c10-4a98-4cb1-a661-3238dfb2ea2a",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d83d44f5-089c-4a84-a2d0-25c1ad31fa7e"
        },
        "item": {
          "id": "2e952240-9719-42bb-a2fc-c06f91813dcf",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "29f69737-fa35-43a7-a594-f16e16377742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "147f27cd-dd40-40ac-b0e9-1841ba058170",
        "cursor": {
          "ref": "f6b771c0-1b95-4a4b-ab0c-b223a36232ca",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "efefb640-620a-4a53-9d3d-43612fc692ab"
        },
        "item": {
          "id": "147f27cd-dd40-40ac-b0e9-1841ba058170",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "fced2564-7edc-4f67-aaa3-80a01291ba9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b2a000-f300-434b-a5ed-aa1cd112ce4d",
        "cursor": {
          "ref": "4cb19f20-f133-4c31-9441-32b9a91edb38",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "059752d7-17ab-4ca8-877f-c38ebc2579da"
        },
        "item": {
          "id": "76b2a000-f300-434b-a5ed-aa1cd112ce4d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "501e1da2-57c0-4cc6-9064-c869c62daa7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5d751ef-7b36-42de-a39f-9b885857c6d7",
        "cursor": {
          "ref": "2057c20a-f2fa-4325-99a9-44d387b776fb",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b9cd12cb-2255-402d-b357-2dfe6f90eeb9"
        },
        "item": {
          "id": "d5d751ef-7b36-42de-a39f-9b885857c6d7",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d53f229d-66ba-4cc8-b67e-45db66ef6a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e164ddb-6d61-4e04-9361-4ed334e20b7a",
        "cursor": {
          "ref": "42a27104-cabe-4229-9cf5-065a3b581e2d",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c00c7fd9-8c0e-4025-aac3-ec91079be9f8"
        },
        "item": {
          "id": "6e164ddb-6d61-4e04-9361-4ed334e20b7a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "8301294c-dfa6-477b-854a-d3ee3f975f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb0f85a4-b521-48fa-baad-cac6bcdff056",
        "cursor": {
          "ref": "2bca03a8-355e-4aff-b469-2657a8166e31",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "d1aa64ee-3a10-4f48-92b6-decc1786d898"
        },
        "item": {
          "id": "cb0f85a4-b521-48fa-baad-cac6bcdff056",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b0ad1f6a-2bbd-43ca-aac5-5425b4a3a27b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a984c8a6-c3fd-4bd5-a577-8c2955fe1b20",
        "cursor": {
          "ref": "9821bdb9-793a-4a86-9617-7dc1af88e214",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a851cfe1-fa08-4d7b-ace6-1e69379a291b"
        },
        "item": {
          "id": "a984c8a6-c3fd-4bd5-a577-8c2955fe1b20",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c449b349-9278-4d35-896a-84429a5cc6ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f99e2934-6fcd-43c5-994e-ad00ac54ecb9",
        "cursor": {
          "ref": "df2c4fcf-f8e9-44af-80c0-997d58ea2cf5",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "bdb699b5-0a50-41f3-ab0f-8164f23c9f6f"
        },
        "item": {
          "id": "f99e2934-6fcd-43c5-994e-ad00ac54ecb9",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "29c4711c-ee8b-4dc2-9279-076facf039b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9376da6e-45f7-4daa-958c-200931852549",
        "cursor": {
          "ref": "c95201ad-a124-41f7-86a4-60d112b1c53c",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "43ab3a09-c1ec-4471-8dcb-fc7b63d03407"
        },
        "item": {
          "id": "9376da6e-45f7-4daa-958c-200931852549",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "adef8d87-71b2-4f3d-9976-43c007ab2303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3098b18-9e0b-49b2-b0fb-8fcef50302dd",
        "cursor": {
          "ref": "322b33d0-edca-4d46-94e9-5d2c7295c550",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "23de3137-7ebc-442c-ad45-593a792288eb"
        },
        "item": {
          "id": "f3098b18-9e0b-49b2-b0fb-8fcef50302dd",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "78bb5c25-8a09-41a9-8035-b70d0f750e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae855d8d-05b3-4e3e-9cc6-7d5dc9c5a725",
        "cursor": {
          "ref": "9851d31a-93b2-4006-83d7-feb3dd9f746c",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "087cb244-9abd-4f92-91ba-5dd649267a38"
        },
        "item": {
          "id": "ae855d8d-05b3-4e3e-9cc6-7d5dc9c5a725",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "7606dee8-c2b0-43da-8c40-01fa3f7abe63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28646fa-f3a8-404a-a1af-6b6011100902",
        "cursor": {
          "ref": "e1d17ba3-8a4d-441d-89e4-e6772066908d",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "737ded52-75ee-4040-afd1-48fdb4039cff"
        },
        "item": {
          "id": "a28646fa-f3a8-404a-a1af-6b6011100902",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "226c85a7-c206-438f-b2b8-d769d1da4f18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa87c68d-dd87-4aeb-bc74-3af000154a60",
        "cursor": {
          "ref": "e8b1a2a4-fc2e-404f-8982-974d0bdc80ff",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "0c8e5df9-c344-414a-a506-d7fb06840dff"
        },
        "item": {
          "id": "aa87c68d-dd87-4aeb-bc74-3af000154a60",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ae3b28f2-a6fa-442a-83fd-1c987db4389f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e636518c-ed31-4f9d-ba19-12fd1cf1d9e6",
        "cursor": {
          "ref": "e123c6b2-c5a5-4d79-b1c4-bad5640d797e",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "bb1798f3-0d88-49c1-beaf-d0f646ea3ac2"
        },
        "item": {
          "id": "e636518c-ed31-4f9d-ba19-12fd1cf1d9e6",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "24044a10-2e97-490c-b071-21efd89b020c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ab7998-0774-4606-b9c5-135edd8f7ad4",
        "cursor": {
          "ref": "58c0c5f5-ed9b-454d-9024-266ff8ba2bd0",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "3413337c-a02e-4272-946a-c498a34a2df0"
        },
        "item": {
          "id": "92ab7998-0774-4606-b9c5-135edd8f7ad4",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e8fddca2-180d-4322-9e17-8d7eaca4cdf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "183561ea-3ce7-4f6e-95ba-065b30b70c38",
        "cursor": {
          "ref": "9e570650-0d27-4655-8ae1-3d1c20f4b4b0",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ccb08686-6302-461f-bfa0-7e84a248d3fa"
        },
        "item": {
          "id": "183561ea-3ce7-4f6e-95ba-065b30b70c38",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "9dd4ee92-a338-4818-b1ab-73360bab68e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f0d70b-b38c-4b1c-92de-da04c2b49ef7",
        "cursor": {
          "ref": "7d65d80c-b90b-468b-81fd-957cd680f91b",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "809af33b-4fe7-43da-9c07-2ee229168f4b"
        },
        "item": {
          "id": "a7f0d70b-b38c-4b1c-92de-da04c2b49ef7",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e356fc49-7229-4dc0-98a1-c0273f5442e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d4f176a-f877-4144-8f93-6130213c2e97",
        "cursor": {
          "ref": "eca676c1-f08c-4511-ad00-d8470491e595",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6683399d-1b70-42a1-8699-bdc6b52d2589"
        },
        "item": {
          "id": "1d4f176a-f877-4144-8f93-6130213c2e97",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "41e9a601-73c3-4d28-aba7-79cc69e528f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b1f14f-cb9a-4c2a-8316-58322dc008fb",
        "cursor": {
          "ref": "cf9303b1-96df-4219-9e59-351da23b75d1",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f331cb68-ae2a-4ac2-9996-1fc5e1595147"
        },
        "item": {
          "id": "e5b1f14f-cb9a-4c2a-8316-58322dc008fb",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "a5ded819-5728-4c40-879c-2f3bdc3c055b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "474d6e1e-2e00-404c-b53e-27a7cc58af6f",
        "cursor": {
          "ref": "58e7e8f9-8071-4dc1-ad96-1a98a017b3fb",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "5ccdd5b2-379e-4261-b94a-bfd70efa0811"
        },
        "item": {
          "id": "474d6e1e-2e00-404c-b53e-27a7cc58af6f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "74049cb5-fde4-450a-a807-37ad8aeeff5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "d5c0a5d7-77f5-43ab-9097-2aa737a7e316",
        "cursor": {
          "ref": "90fa3590-e249-4850-aa19-3606f223f78d",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "831ab163-47d1-433a-8a49-b6bd170191a1"
        },
        "item": {
          "id": "d5c0a5d7-77f5-43ab-9097-2aa737a7e316",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "45aa437e-b0cb-4f43-a72a-e92070f344f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "b6d02e17-ca24-42ca-ba1b-729c32da4c4a",
        "cursor": {
          "ref": "dcc06aeb-4110-4a2b-aaa9-12cf5d4b8fc0",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "fe18372d-19aa-4f71-9196-ff982df71c00"
        },
        "item": {
          "id": "b6d02e17-ca24-42ca-ba1b-729c32da4c4a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a712e84f-76ef-4383-9c20-5af3acee7077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "a93a15a1-f997-40e9-be00-2b8daf8146a8",
        "cursor": {
          "ref": "5a319aed-b72f-449b-b29a-5042cd6b761c",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "08e58e25-dcb5-4c11-be4d-be487a1ce4b9"
        },
        "item": {
          "id": "a93a15a1-f997-40e9-be00-2b8daf8146a8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c30c0112-b92b-4b5b-92e3-cbedf595c84d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "6942f060-b232-4999-b6e4-cbafa5adb8c4",
        "cursor": {
          "ref": "89991e32-33a5-4928-ab57-123a24310dc5",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "642aa00a-d3ac-4835-8441-128aa25bd7f3"
        },
        "item": {
          "id": "6942f060-b232-4999-b6e4-cbafa5adb8c4",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "981fbfde-dbcd-4ffa-a675-25e85b732dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "b5d1574d-fbfd-4d47-be64-fc7f833316da",
        "cursor": {
          "ref": "c6125596-7ad8-46bb-9943-b1f22272a72b",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "5d2d1b30-e575-4108-8628-20938eb026ff"
        },
        "item": {
          "id": "b5d1574d-fbfd-4d47-be64-fc7f833316da",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "0fa086f4-8cc8-410e-b2cb-a7ffe4ae82a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "cd4a337b-dbab-4e29-b402-792bab1c8785",
        "cursor": {
          "ref": "5f99e5ac-2435-4c3a-9f65-d32aef928053",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "f43bcfe2-729d-4e18-95f5-d738c5f5d937"
        },
        "item": {
          "id": "cd4a337b-dbab-4e29-b402-792bab1c8785",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "65c53093-3d38-4a18-9ff2-f36cc244d5eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0535006-d5ea-4acd-9f7a-079534aaba0e",
        "cursor": {
          "ref": "38d1363b-324f-4b08-9572-afd2eabd01c7",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e1d9e20f-28bf-4917-9fb8-64f7c8395aca"
        },
        "item": {
          "id": "d0535006-d5ea-4acd-9f7a-079534aaba0e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7feed588-a5ad-4f07-b57e-51bc808dab10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04051ff9-b07c-440b-9b01-5c99e19611e1",
        "cursor": {
          "ref": "4ac94623-0a5e-4067-b850-c6e787fb9d23",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "43740521-a5c0-42df-a210-1dcaee9ddb93"
        },
        "item": {
          "id": "04051ff9-b07c-440b-9b01-5c99e19611e1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f84f060d-f981-4c2a-9cee-d669594d827b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed6fb220-161c-4bf2-b8db-25774e3c197a",
        "cursor": {
          "ref": "0f29827e-2a8a-4465-bc63-b7ea5bb33f1b",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "352781b6-a9fe-4023-a23c-a0fb84e98681"
        },
        "item": {
          "id": "ed6fb220-161c-4bf2-b8db-25774e3c197a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c01a15cf-f89a-4c9a-83c1-441453527712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "444023c8-6205-4a09-8d2e-b55da3ff881d",
        "cursor": {
          "ref": "d8d0e4c7-1e4e-4865-bc5b-45440255664a",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "dee5fb73-41e4-4201-b8f8-36b92a18c30c"
        },
        "item": {
          "id": "444023c8-6205-4a09-8d2e-b55da3ff881d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d34b0c2e-b6c7-4d99-b85a-80c868e52e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929edbf2-f879-41da-b8f9-dcb83997c3b2",
        "cursor": {
          "ref": "32b52b78-b5a4-4153-86ce-360dc7b8f76b",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0235d99e-0f81-4d68-b255-3f8dc34da777"
        },
        "item": {
          "id": "929edbf2-f879-41da-b8f9-dcb83997c3b2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a530ccd7-4d4d-41a1-8bbd-886219dc02a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc51f8a-6b12-4961-a07a-3dab90037931",
        "cursor": {
          "ref": "3748b0ff-e6b8-4c74-8b77-d5a552a41885",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "1369f06c-31ca-492a-ba1b-55f1f57c4cde"
        },
        "item": {
          "id": "3dc51f8a-6b12-4961-a07a-3dab90037931",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a0a840a8-08e7-4b21-a5d7-5a9deb8162b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbcc2977-522a-472d-b484-58ca666ed4ac",
        "cursor": {
          "ref": "86f8718a-9c98-47b8-a5ff-d8b5382a686b",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "4e35dd22-d5cc-48ec-a4d0-9381729ecf3e"
        },
        "item": {
          "id": "cbcc2977-522a-472d-b484-58ca666ed4ac",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "05b097d2-ca10-48e1-849a-3bd832da8ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0234524e-7398-4ed2-a8ba-c28235ec54cd",
        "cursor": {
          "ref": "71865e34-7bcb-4ef3-ac17-2ebc76c8fe69",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f8ab99ca-5169-4b10-9dab-36b010479d71"
        },
        "item": {
          "id": "0234524e-7398-4ed2-a8ba-c28235ec54cd",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "44466150-bff1-4b74-8eab-06cbd8ed961b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4107d13c-7e44-4dc9-ab7a-892c04c2463a",
        "cursor": {
          "ref": "651409b2-ac41-4e4c-98d5-42172b075c4b",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b459dcd6-d473-46f5-b98a-a524a64c3006"
        },
        "item": {
          "id": "4107d13c-7e44-4dc9-ab7a-892c04c2463a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e92f3268-0420-426f-a4d3-5dc06ec610eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05920821-09d2-418b-877c-e901a7c9f86c",
        "cursor": {
          "ref": "811a8d23-0fc5-421f-a174-f726473a4525",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b7c9acac-1910-404e-b599-05a1e6c282f3"
        },
        "item": {
          "id": "05920821-09d2-418b-877c-e901a7c9f86c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "33f8c74a-645a-4056-9125-2cb70c223459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11210b73-1a91-4c4a-82de-09b949bafae1",
        "cursor": {
          "ref": "878096da-791c-4940-95cb-1947d7e700c8",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "4f95b5fa-20c5-40a2-808d-c211af0c3e2c"
        },
        "item": {
          "id": "11210b73-1a91-4c4a-82de-09b949bafae1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "98f4781e-c27e-41e2-bd6c-6a6bbb5b779d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5918abc-7b77-43a7-acec-0deeabd98bac",
        "cursor": {
          "ref": "099a4a7d-bfb9-42b1-983c-e6fa3f0d74b5",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "8dd0276a-b6b9-47e0-abee-f8297d1777e0"
        },
        "item": {
          "id": "a5918abc-7b77-43a7-acec-0deeabd98bac",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2a222142-a45d-4d4a-bb8d-b3acf980caa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b10f191-cfc6-42b2-9800-ec98ea075404",
        "cursor": {
          "ref": "b20a48a5-77f3-45d2-9444-2a7075330f77",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "8b6aac18-7309-4ee5-96f6-2ddca093cbf1"
        },
        "item": {
          "id": "1b10f191-cfc6-42b2-9800-ec98ea075404",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "fe939509-fb4e-426a-82ae-981edb3d18bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5eb3e2-d318-4198-bc39-d8ba9f7ba59a",
        "cursor": {
          "ref": "5ba47fdd-4eab-436a-bd03-08694c9f34d0",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "11b5031a-b219-431b-b90b-587c5bf3eece"
        },
        "item": {
          "id": "3f5eb3e2-d318-4198-bc39-d8ba9f7ba59a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "494320bf-aa70-4f16-8685-0ee5f474e3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814b1447-d576-42ce-bb40-6d66bdfcfad1",
        "cursor": {
          "ref": "f66f4a6b-0cbf-4ad4-a2a3-e2e585cfc943",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e2fd934e-f9cd-47c2-b215-8e5184b8e615"
        },
        "item": {
          "id": "814b1447-d576-42ce-bb40-6d66bdfcfad1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5c39c51d-54c1-4430-bac4-1a468d8cbce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b24e1042-742c-462c-be70-7bb60eea1224",
        "cursor": {
          "ref": "000275e1-2f1d-438a-8f53-21792de278fc",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "fb3b53c3-8944-4101-86a8-5f24878e0f03"
        },
        "item": {
          "id": "b24e1042-742c-462c-be70-7bb60eea1224",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7c7c02a3-c1a0-4b4d-abe7-6a2bfc65d082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a961db9b-8b89-477e-affd-ab15d16db55e",
        "cursor": {
          "ref": "e0b98034-ea57-4959-9e80-2e0a96873849",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "21fcdda4-634c-434d-8b5e-ae9fdc58cc92"
        },
        "item": {
          "id": "a961db9b-8b89-477e-affd-ab15d16db55e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8fe3ba12-4f51-4720-8550-4aa4d2aec8b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23014669-fc34-4448-b237-e35f77f12e84",
        "cursor": {
          "ref": "b6811cc7-98fa-4abb-a17d-6fe1fb0cbd20",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0f27957c-f18e-4ed0-b9a5-17a21ac5854e"
        },
        "item": {
          "id": "23014669-fc34-4448-b237-e35f77f12e84",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0012fd4a-b37d-4490-ab7e-ead505db0ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1530e0e-8a0a-462a-94df-a1cc8f570427",
        "cursor": {
          "ref": "9a378891-9ad2-43d7-af93-09ed6c0c8073",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ab710a8e-f8bc-4fb3-9e0e-f078e85c3ca2"
        },
        "item": {
          "id": "d1530e0e-8a0a-462a-94df-a1cc8f570427",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "bb957b58-ad4b-4bdb-a8bf-b83e0400b74a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9a0ffc-f95c-45c6-8b94-462fe82f8708",
        "cursor": {
          "ref": "2852eac8-a855-43a2-9b37-414688771245",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e9ef5e95-83ff-4f8b-8c02-42f25d63a99f"
        },
        "item": {
          "id": "ed9a0ffc-f95c-45c6-8b94-462fe82f8708",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c4d1d587-64fe-4329-bf4d-0fa6c54157ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f409da9-dda8-4d40-a4d7-6b914b23998c",
        "cursor": {
          "ref": "a8c588ec-77d6-4496-979e-c688cc3ca093",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d3a26738-1e70-43c5-9415-9888efad20aa"
        },
        "item": {
          "id": "5f409da9-dda8-4d40-a4d7-6b914b23998c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "df09b03b-506b-4bf9-9727-89c7ffc518b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d4babe0-8b0c-44ca-98eb-87fb9a8bf927",
        "cursor": {
          "ref": "5f156f8d-51dd-4359-bb4d-02c667d66a33",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "7a9a6b05-ecc0-44fe-a914-39a45f188b26"
        },
        "item": {
          "id": "1d4babe0-8b0c-44ca-98eb-87fb9a8bf927",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "db2e5d2e-ab36-4345-a575-bd189c975f0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cdccd83-d3a9-47ae-94c1-965026ce9dce",
        "cursor": {
          "ref": "d1d69c23-7931-4f74-bd31-d5529505aa91",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "5a74d373-8d03-4aa4-b53c-92b6a0763ad8"
        },
        "item": {
          "id": "8cdccd83-d3a9-47ae-94c1-965026ce9dce",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "370c17c2-c414-42a5-8bdf-dbb91ad104c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b358d55f-281d-4109-a11f-c0ed3ea13c82",
        "cursor": {
          "ref": "07ef04fd-fdea-40b7-9187-9f6018d8d77e",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "7c20f924-e65c-4d37-a942-eb235d8462de"
        },
        "item": {
          "id": "b358d55f-281d-4109-a11f-c0ed3ea13c82",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "76bf8ab0-61a0-4ffc-9aeb-b4c6fb8b7e1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c958ecb8-8039-4fa6-ba1c-2a538550f9fd",
        "cursor": {
          "ref": "757324cc-9db7-4afa-b7bb-dd5a7c65c6c3",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "6dc4e473-23f8-4295-8c5e-454e0baf0e56"
        },
        "item": {
          "id": "c958ecb8-8039-4fa6-ba1c-2a538550f9fd",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "15f0093c-a885-46e2-a613-5fa82ecffc42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83262c7-a02f-49a2-ba9a-57ff1108771d",
        "cursor": {
          "ref": "fbbf1475-e2d7-4dde-92af-3dfb004c5756",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "9feaefb0-6c2f-4fbc-a402-73f6f2356304"
        },
        "item": {
          "id": "f83262c7-a02f-49a2-ba9a-57ff1108771d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d168d626-e651-4b4f-8037-4069e3b0dae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add19f69-0d72-4dbd-abfd-8d61b8269a41",
        "cursor": {
          "ref": "524c60d7-12c0-4bca-a235-c6bd670e0fa3",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "0b8cb6b9-1e9d-4cb9-addf-611ca760d74c"
        },
        "item": {
          "id": "add19f69-0d72-4dbd-abfd-8d61b8269a41",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "fc3f20bd-4d33-43b0-a8b0-41d648004cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d214ded8-c7db-4591-967c-35b02ab02222",
        "cursor": {
          "ref": "ee94c739-5bf0-4d35-9072-a60237940f72",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d7913fad-7645-40a8-9c21-1eb7d2ed3822"
        },
        "item": {
          "id": "d214ded8-c7db-4591-967c-35b02ab02222",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9d5bb322-9d19-4ef4-a469-23c2796f60e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d48dfb07-a203-4532-b433-c27d66c66c45",
        "cursor": {
          "ref": "166d28e3-1206-48b1-8bf2-f9a2a8f096b1",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ecaefaed-a169-41ae-86a4-d1464d927865"
        },
        "item": {
          "id": "d48dfb07-a203-4532-b433-c27d66c66c45",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "981257c9-2952-449d-a6a1-522074d7b5e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ec40d6-18c7-407c-a98e-cd04ff3a211a",
        "cursor": {
          "ref": "1937d307-c062-47bf-b722-50229de3e1c3",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "9a742f0c-1668-4bd4-a506-d3927dc57d16"
        },
        "item": {
          "id": "80ec40d6-18c7-407c-a98e-cd04ff3a211a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "91e5720d-f2d5-438c-a981-517ffd793c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc07ba9-1c02-4b22-8cfe-662070750fc5",
        "cursor": {
          "ref": "896432e6-512c-4222-a189-9359c50e82a7",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ba59b006-8a2d-4f9a-ad44-3a6a5813d0da"
        },
        "item": {
          "id": "ccc07ba9-1c02-4b22-8cfe-662070750fc5",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "61f6aa7a-b67e-4c42-9c08-07012805b863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e4d0926-ce95-4776-b713-3c8eb15e9720",
        "cursor": {
          "ref": "65ec062f-b0bb-40e8-b7c2-997de7f3acf8",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "6c5e8569-3431-4030-bec4-2b39891aa5bc"
        },
        "item": {
          "id": "7e4d0926-ce95-4776-b713-3c8eb15e9720",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c1358b5e-6767-4eca-8283-b3e82d2a3afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ebdf48-a796-45f5-a1dc-c3fa32287d8b",
        "cursor": {
          "ref": "4c8fde7b-d64b-4579-a0e7-aa96eab80420",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b72cea88-1d2e-448d-98b7-b90589b12aa7"
        },
        "item": {
          "id": "93ebdf48-a796-45f5-a1dc-c3fa32287d8b",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "9b9fd5c7-8fba-4467-a74d-4164e2efddd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0adf4708-a8d9-4f7c-826c-10a1a766f284",
        "cursor": {
          "ref": "25a03bd7-9650-4c65-8b47-f93ea6c8b323",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "0ab3fdab-94b4-4107-b5e7-068d99e45b61"
        },
        "item": {
          "id": "0adf4708-a8d9-4f7c-826c-10a1a766f284",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "4208bdbd-dba9-4577-aec4-c6addeea9a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc9525d-0cb8-4bd0-81e7-2695c30907dd",
        "cursor": {
          "ref": "bf22a147-a341-4b0d-9f9d-c96cfc6f16bd",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "94916f41-ca36-4b60-9f7a-5be5f5a805e5"
        },
        "item": {
          "id": "abc9525d-0cb8-4bd0-81e7-2695c30907dd",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "b2675e68-3602-4b71-8df3-2d446aaa53cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d70d4a-e5f0-4923-bf79-7465ea41a72a",
        "cursor": {
          "ref": "7769fb9c-c287-4442-888e-99259596f305",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a0ce75f3-b573-47ca-b204-df1ddc6fc47c"
        },
        "item": {
          "id": "06d70d4a-e5f0-4923-bf79-7465ea41a72a",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "e713f3d5-57f7-43ec-8c21-0ae2d5a2e372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ca1fb3-41d7-4ecb-b2de-deffbb85690d",
        "cursor": {
          "ref": "06f888b3-0f39-4bb6-a3b3-70a218404223",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ac713f47-48ed-4674-8911-be99d133dbc4"
        },
        "item": {
          "id": "99ca1fb3-41d7-4ecb-b2de-deffbb85690d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d71d5599-9829-495c-8d42-13c46767a795",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f02188b-1842-4cba-8b4d-fd0e5c171535",
        "cursor": {
          "ref": "dd72c35c-0941-41ff-8fd8-d7b120ce4039",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "59bae213-270f-4436-95bd-b194af3789e1"
        },
        "item": {
          "id": "4f02188b-1842-4cba-8b4d-fd0e5c171535",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "934b8078-0adf-4937-9685-f427ebd60f4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ab30a4-29b1-4710-9682-db10f7077604",
        "cursor": {
          "ref": "0fd13232-dc36-4fdc-8573-ffeb366adcd5",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "44d50a66-1b4e-4653-929c-fa95cfce2947"
        },
        "item": {
          "id": "74ab30a4-29b1-4710-9682-db10f7077604",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "02d95e91-8e5e-4000-88b3-1332eaa94ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74646008-2fec-438a-a07f-ff1522ed74e8",
        "cursor": {
          "ref": "1a309e3c-433d-44ac-befc-59c273c2a755",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "47f47b90-f732-468a-b16c-f0d8be33fee3"
        },
        "item": {
          "id": "74646008-2fec-438a-a07f-ff1522ed74e8",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "667c65fd-6a98-493f-b2f8-00bf4654ef93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d0a368-e4cb-4324-ad76-3bf1f1718ac4",
        "cursor": {
          "ref": "c78f4607-408c-4292-aaa6-c35f94ba1257",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6e1504d3-03c7-4596-9a64-23393920cf0b"
        },
        "item": {
          "id": "94d0a368-e4cb-4324-ad76-3bf1f1718ac4",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "23e9997b-1a44-4531-8073-548a80952d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "211deded-4e1e-4f00-9f9b-b2ae03b5a05d",
        "cursor": {
          "ref": "bba60eef-f177-4bea-8895-4d7da05bd12a",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "8ec4a3a0-b26e-4dc3-a0af-0069d25ddfe3"
        },
        "item": {
          "id": "211deded-4e1e-4f00-9f9b-b2ae03b5a05d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "68d49743-698b-4750-8389-109d6308a81a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b782bf1c-9275-4f65-bd07-7e105071a503",
        "cursor": {
          "ref": "14785809-8f1a-4f12-9b28-5bd0a6a937a8",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "69e55bfc-8410-4186-acaa-1a4bed097deb"
        },
        "item": {
          "id": "b782bf1c-9275-4f65-bd07-7e105071a503",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c36cd696-d7ad-4c1a-8dc4-cc813e1d3ed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967cb987-1af8-460e-be2a-8daa6db3d0c6",
        "cursor": {
          "ref": "7de342fa-9c8d-46e4-b04c-3f688eb45f78",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "83170969-bc2b-4073-a2cb-a0d6b99df953"
        },
        "item": {
          "id": "967cb987-1af8-460e-be2a-8daa6db3d0c6",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "2a8d31db-8549-4569-8bdc-fd7b8d5b106f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141a7bd1-94ac-4ce4-91cd-3a25e7acffb4",
        "cursor": {
          "ref": "cb187cef-ade3-4ac9-b89b-2ab6520349ab",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "1586233f-5eb2-4262-b49f-3100b8cbff20"
        },
        "item": {
          "id": "141a7bd1-94ac-4ce4-91cd-3a25e7acffb4",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d6242afe-1bee-4f92-b750-02456f012f0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b54eb1-b08a-4e58-b274-aea381ea8fa7",
        "cursor": {
          "ref": "79dae3d0-914d-4934-8a7d-bba906e3e67d",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "6f6bc004-e9b5-4dba-bc3a-818b351ca9d5"
        },
        "item": {
          "id": "d2b54eb1-b08a-4e58-b274-aea381ea8fa7",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "1448d2ef-a358-43c3-aeb1-f5f8921cb8d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c73389-35ef-4ba2-86ff-471970dfa58a",
        "cursor": {
          "ref": "05890e9c-eccd-4aaa-94d7-f62ca14a4675",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "da5f350a-ba18-463e-bafc-114a5b9d46f0"
        },
        "item": {
          "id": "97c73389-35ef-4ba2-86ff-471970dfa58a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "7acb0c76-fee5-42a4-a755-e7e83a1085ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc89738-6ed6-4f97-a706-877a9aa67aed",
        "cursor": {
          "ref": "fb301a9c-cd41-4ce7-b65f-b6fdd6da74cf",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "9804fbcc-90f1-446e-aeb7-67d5463d970a"
        },
        "item": {
          "id": "0fc89738-6ed6-4f97-a706-877a9aa67aed",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f41933e9-b0ab-4550-b4b9-001739822023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f628f10f-e2f4-4924-b895-e9ca9f8b0021",
        "cursor": {
          "ref": "84855337-980c-43bb-a12b-468e58b62e2d",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "29fbd35f-56f5-4426-a5f1-8ea0d25633d3"
        },
        "item": {
          "id": "f628f10f-e2f4-4924-b895-e9ca9f8b0021",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "f72ceef8-9ae3-4c6d-9c62-df6a0b37454a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257587a2-a717-4af6-9f48-05582aa9df4f",
        "cursor": {
          "ref": "880c231a-ec28-460a-9bed-8877a5103b1e",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "aa55887d-c58c-4c4a-a09c-3495af638110"
        },
        "item": {
          "id": "257587a2-a717-4af6-9f48-05582aa9df4f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "9b2b71e6-0e4e-4487-a52d-d567b1072582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6729bc-b683-47ab-a2e5-2781c8d2b0b0",
        "cursor": {
          "ref": "d66cd863-d9f1-46d2-90c6-52cf5c733ab7",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "281d9395-6fa0-4af0-9692-1778499abee2"
        },
        "item": {
          "id": "ef6729bc-b683-47ab-a2e5-2781c8d2b0b0",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "76418fef-f737-4dd0-bd05-57414e038315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2313b70-6466-4cb8-b539-4eaec761823d",
        "cursor": {
          "ref": "7fe7ea21-b577-4d94-8130-58211ee7ac47",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c8d0c384-3bc0-462e-9d28-c4f7038c8b2c"
        },
        "item": {
          "id": "f2313b70-6466-4cb8-b539-4eaec761823d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d1a1fd41-e3d8-4055-bfca-e67232fda971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a3d149-c6ce-4f6c-991d-7b0b3b7b4c71",
        "cursor": {
          "ref": "5956f5a2-4ac1-47da-938a-d70863ef9360",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f511f69a-8102-45aa-9abb-1ee4b365b8d4"
        },
        "item": {
          "id": "e1a3d149-c6ce-4f6c-991d-7b0b3b7b4c71",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e6515d2a-0018-4854-834a-abf233e61c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c962aad-4bd0-45e5-979e-f0bc91abd998",
        "cursor": {
          "ref": "21743636-2be3-4e15-8271-18fadb5d4d9a",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "89345fca-5c00-4622-a4eb-17f44a94f8af"
        },
        "item": {
          "id": "7c962aad-4bd0-45e5-979e-f0bc91abd998",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f3bf399c-e68f-46a3-b1d9-783f34a8f9ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d818a83-4a05-40e2-b7fd-e07f84f22950",
        "cursor": {
          "ref": "c97b87e4-372a-4747-b171-5e3b5055cb7b",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "cbe83e49-af20-435a-ad0e-1dbd09cdcfa7"
        },
        "item": {
          "id": "5d818a83-4a05-40e2-b7fd-e07f84f22950",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "8e0c0dd1-b8f8-4eef-acd6-81738de45f51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def32864-a17f-46cb-91e6-6dc48e1330d6",
        "cursor": {
          "ref": "1fb70f2f-c6bd-4bd7-9b76-90131f5cbb14",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b8930535-241a-4f0b-865f-9e8d505afa88"
        },
        "item": {
          "id": "def32864-a17f-46cb-91e6-6dc48e1330d6",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "5f6d8943-3781-4cbb-94bc-6df68b94a42a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe74a3bf-faaa-42df-b59b-3faa9da77533",
        "cursor": {
          "ref": "d01d1483-4a34-475e-9a4c-e3b063ace4bf",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "230d8390-b2d5-45f4-8a89-10cffa8474cb"
        },
        "item": {
          "id": "fe74a3bf-faaa-42df-b59b-3faa9da77533",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e84a27f2-ae92-42b9-bc7c-5982a333b9a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21a1c754-115a-4070-bcba-73e21d272e0d",
        "cursor": {
          "ref": "6f619c31-4559-4abf-9ce5-8aa45d4b8dd8",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ffe58169-4931-40b7-9da2-09852bae6aef"
        },
        "item": {
          "id": "21a1c754-115a-4070-bcba-73e21d272e0d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5e13ac30-6605-4363-860e-bde89b038a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c0352e2-83d1-48bc-8fc3-fc718b0a95e2",
        "cursor": {
          "ref": "f3fbcd09-a863-4350-8c4a-9ddd3266f7b6",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "df7db12b-e481-4f94-b602-0c82b88b907e"
        },
        "item": {
          "id": "2c0352e2-83d1-48bc-8fc3-fc718b0a95e2",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3c3b4ea0-022a-412f-97b2-50b223d81705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c791603-8e16-4f28-840f-84ddd2abc058",
        "cursor": {
          "ref": "5522043e-7100-4491-a02c-7ae4cbb6e92d",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "07ce723c-c74b-4bb7-ade1-6c290f298e5b"
        },
        "item": {
          "id": "2c791603-8e16-4f28-840f-84ddd2abc058",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0861e305-3ccd-4fb2-a03f-57e0ed77399f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58fe15e9-8710-46a4-952d-2ea9dea9f74d",
        "cursor": {
          "ref": "fcc5cdf5-1b41-4921-b711-a1aeb6847a07",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "362ec5e1-035c-4432-8040-cb8b87a1fa8b"
        },
        "item": {
          "id": "58fe15e9-8710-46a4-952d-2ea9dea9f74d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e171c45a-32d6-4b7e-8c56-c52bec48c964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1019a679-3cd9-47a2-a448-710e05c54cfa",
        "cursor": {
          "ref": "7f05df65-4b49-411d-9f45-98425cd76bf6",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e7a19601-6110-4b79-ab38-2aec1ea74c15"
        },
        "item": {
          "id": "1019a679-3cd9-47a2-a448-710e05c54cfa",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "caae7de6-223e-4c51-b45f-c414aa790fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b3693a3-13e9-4b36-8eec-f88f5f5a0867",
        "cursor": {
          "ref": "0077efac-8cd2-4639-bd3a-8885d15d3e65",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "5d161c4d-9249-4996-9c1f-719e4b41c50f"
        },
        "item": {
          "id": "9b3693a3-13e9-4b36-8eec-f88f5f5a0867",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "7bafae69-3f08-4a95-8ecd-d4b0ff5cbe93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e90b5d07-39e3-4060-bfcf-46635646d302",
        "cursor": {
          "ref": "e21e88ae-c9bd-4025-93d8-2b1f4e45fc38",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4fe11eac-6bae-4d16-8004-f61afec7bcd3"
        },
        "item": {
          "id": "e90b5d07-39e3-4060-bfcf-46635646d302",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "fd1719a4-e73b-4292-9c44-35b4bca8825d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2378c02-ef24-4a8d-b674-2a2a2ad8a56d",
        "cursor": {
          "ref": "12de64ea-b33b-42f2-a8f1-1af0738e62d8",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e8a04676-ab32-476e-ad0d-047b899d1436"
        },
        "item": {
          "id": "f2378c02-ef24-4a8d-b674-2a2a2ad8a56d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6421b2e3-72ea-403d-8974-e9424db08ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da7a87f6-a40a-416f-b2ec-9a638cd7b8f9",
        "cursor": {
          "ref": "20763ad0-9a4e-4286-a63a-c5c017ed0c81",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "92596966-ea23-45c0-a936-939ba7ccaf1e"
        },
        "item": {
          "id": "da7a87f6-a40a-416f-b2ec-9a638cd7b8f9",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "1f029f16-c0c6-40fe-8c2e-3845bbf031fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88c6ec6-121d-4895-97e6-1561aee0f5eb",
        "cursor": {
          "ref": "c314793b-ae61-412b-a8ba-20a1af9042ee",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "af7b6082-9352-4494-8b93-7925f75d37c1"
        },
        "item": {
          "id": "a88c6ec6-121d-4895-97e6-1561aee0f5eb",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8c896ad8-03f5-4052-8f21-1bd4850ef2bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44979f27-2e18-4731-b737-77333fdd2dab",
        "cursor": {
          "ref": "9e1ddedb-6d20-46c3-8ac8-9dfb98f61e33",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d3b6c6f8-e827-4dbe-a574-1ea063631d52"
        },
        "item": {
          "id": "44979f27-2e18-4731-b737-77333fdd2dab",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "3d2325c8-1721-4c97-835f-6a7d19edd9d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de09a001-c639-4954-ae80-86d08de5f2dd",
        "cursor": {
          "ref": "de487a2c-0889-433c-b0a1-5a806e552d5d",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "4a6cba57-b9e5-46b9-9b63-596e2116f5e8"
        },
        "item": {
          "id": "de09a001-c639-4954-ae80-86d08de5f2dd",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7d65a529-362b-4dbf-b17f-a6d105ba3c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af42a1a-ed83-4dbd-a2c9-8756573252e8",
        "cursor": {
          "ref": "2f220c2d-2149-415e-9d8b-dd398ff1b303",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "4d4844bb-f105-47bb-8b1e-cadb165e6ff4"
        },
        "item": {
          "id": "8af42a1a-ed83-4dbd-a2c9-8756573252e8",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "4b62cd49-2a54-42f6-a4e1-7828662ac2df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e56f36-a0a7-4372-97f8-2892a0e4eee6",
        "cursor": {
          "ref": "583513cf-d86c-4930-a436-b567eb661dee",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e042c585-3039-42da-b4af-027be838b031"
        },
        "item": {
          "id": "c9e56f36-a0a7-4372-97f8-2892a0e4eee6",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "d5586cdc-40e5-4bfc-93f1-1c9bf5506c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6720b166-eaa0-4590-8377-00fa6e179b04",
        "cursor": {
          "ref": "4426837f-bad0-41b5-bc6b-3d47b84d84b4",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "3ad97ac3-791e-44bc-88a3-c01935182d3d"
        },
        "item": {
          "id": "6720b166-eaa0-4590-8377-00fa6e179b04",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "64b1bd51-c60e-4469-b128-a7b02d2003e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e10d05e-2c27-478c-adcb-8fb332cb6ac6",
        "cursor": {
          "ref": "4e97f33a-3421-4929-a72e-0e1a1205c731",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c7f33327-bf29-4436-bc1f-8d35b2bd8d5c"
        },
        "item": {
          "id": "7e10d05e-2c27-478c-adcb-8fb332cb6ac6",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "fd6c834e-dba8-4353-9e33-3b76b1055990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a73760-0b89-4718-bc05-38d1a75e44d1",
        "cursor": {
          "ref": "b3373d96-b861-4171-904b-f9b5c15de674",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "5620abba-6bca-4679-b5a6-927632e0016b"
        },
        "item": {
          "id": "a7a73760-0b89-4718-bc05-38d1a75e44d1",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "76a6e112-e64a-4429-8c0f-0111f357afab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d44efc21-8ce1-4827-b416-15e0d5efeb8a",
        "cursor": {
          "ref": "a97fd608-c163-479b-94ac-4bd8f5938e2f",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "f829cd60-25ff-4a4d-8ae7-804914e05373"
        },
        "item": {
          "id": "d44efc21-8ce1-4827-b416-15e0d5efeb8a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "42ec73ae-147b-4297-8fdf-12a4ebedda05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a89d5d0-14ca-4889-a0c9-f36e6a7892e7",
        "cursor": {
          "ref": "1b26eec4-5bf9-4042-a829-a4469b44c3f4",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "2dc3565e-9365-41b4-b643-6963c7f9b208"
        },
        "item": {
          "id": "7a89d5d0-14ca-4889-a0c9-f36e6a7892e7",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "56aac2b8-5d85-4c12-a085-5a1f99176885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "804a6f39-970f-44e0-8afa-f7c17b83b46b",
        "cursor": {
          "ref": "a7e92231-57ca-47a8-a647-b519ad12e727",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "0ea6a8f0-eb13-4d4d-9d1b-33c34af3764a"
        },
        "item": {
          "id": "804a6f39-970f-44e0-8afa-f7c17b83b46b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "fa56af90-9326-47ca-be9f-3f47b966e81b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d5af8bc-1f57-4e94-8600-34021df967b8",
        "cursor": {
          "ref": "dd2abe35-5b84-4ae5-9974-81ab42bd8a81",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "fb496669-3c62-44d6-bf07-5233754d1576"
        },
        "item": {
          "id": "6d5af8bc-1f57-4e94-8600-34021df967b8",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "9dae3889-3725-4095-845a-9b8cb338035d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c28004-83ef-45cb-92f2-99a5bcfc708e",
        "cursor": {
          "ref": "d22a4359-18a8-4ea8-8a3d-ba3914d44f34",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6cbb998f-7b85-47d2-9bbc-6436df709457"
        },
        "item": {
          "id": "96c28004-83ef-45cb-92f2-99a5bcfc708e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "0db2d331-dc23-4e31-a631-0da428654a9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f656df-6236-479f-95c3-7b149e2bba80",
        "cursor": {
          "ref": "0b5c80f8-63dc-4184-a83e-f161d2c542d3",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "0875d467-1a03-4c92-9767-c19295eeca9d"
        },
        "item": {
          "id": "37f656df-6236-479f-95c3-7b149e2bba80",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b9b91506-f599-48bd-a1ba-08eb9a0769a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb1aba7-4f17-4931-8806-9312fd33e76b",
        "cursor": {
          "ref": "5db6b2ed-09a6-4d24-aa77-f4ead00810ed",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1e04d169-3202-4a72-8394-07d656cd22e4"
        },
        "item": {
          "id": "6bb1aba7-4f17-4931-8806-9312fd33e76b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "22b34aa0-09aa-49a0-8d78-4e6e46fd63e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ae551a-e15b-4a74-b4ea-6ecf093f1ee4",
        "cursor": {
          "ref": "f6a31583-0634-4121-a46c-efd30dc8ca53",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "8e4ba721-4088-40ff-a1e8-d646520bc731"
        },
        "item": {
          "id": "02ae551a-e15b-4a74-b4ea-6ecf093f1ee4",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c3c67e7a-ca63-4abd-b9b3-07a919860d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b492152-bfc9-4b1a-adfd-c5bcb1d536fe",
        "cursor": {
          "ref": "5e4d5200-b5ed-4308-aefe-89120f0cd6aa",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e0cd5445-e834-405c-8812-aa9c2580a1a7"
        },
        "item": {
          "id": "9b492152-bfc9-4b1a-adfd-c5bcb1d536fe",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "37823f28-f411-4c32-a580-bec564206c6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f946d3-80cd-45b3-ac73-a86dd6f0b814",
        "cursor": {
          "ref": "c249a611-ce5d-4c59-8f68-931e137736bc",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c7ec71da-9770-490f-9e93-bd24d423438f"
        },
        "item": {
          "id": "d2f946d3-80cd-45b3-ac73-a86dd6f0b814",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7ba0b97a-ab27-4788-9886-b2230d4bf8b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1844e99b-0642-47c5-a8ad-132fe50b3fe5",
        "cursor": {
          "ref": "39b51b0a-ef08-4e15-8816-928f39fbfa36",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "2215b705-b9bd-435a-b1c8-fdd0d3e79383"
        },
        "item": {
          "id": "1844e99b-0642-47c5-a8ad-132fe50b3fe5",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e62becca-bb73-4e04-920e-35b58fcebe47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a12a7c-3633-411d-b3e8-121e3e9d3062",
        "cursor": {
          "ref": "03932deb-336d-477a-8956-a81fd8515da0",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a17d5d7b-9e2e-4da3-b538-ac986e455a9c"
        },
        "item": {
          "id": "e0a12a7c-3633-411d-b3e8-121e3e9d3062",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "08b1fd25-149f-4a1a-8851-80be584eb133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad519f0-494e-47ad-a59b-08826903562f",
        "cursor": {
          "ref": "d6285ed1-d9bd-4b86-97a3-609ea0a9741d",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "dbf82c1f-f64f-49bb-9846-26dc4f1f798e"
        },
        "item": {
          "id": "4ad519f0-494e-47ad-a59b-08826903562f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "17cfcff8-40fc-4297-a126-a8d621127e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a50ea7d7-1f40-4130-b308-e84c430e6574",
        "cursor": {
          "ref": "7f9614e8-c5b6-40f4-95b2-e14f6185396d",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "cb9a0ea9-ae98-4ca0-b439-abd21128ae46"
        },
        "item": {
          "id": "a50ea7d7-1f40-4130-b308-e84c430e6574",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b54a3f73-f3d6-402a-a291-7a55600ce861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "742848cc-0f5a-4f29-93a5-83b09f174f04",
        "cursor": {
          "ref": "565db901-1b70-4110-99cc-45ea96ff959f",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "1d9fd712-a4e9-4e57-9c98-5ecca598a0bb"
        },
        "item": {
          "id": "742848cc-0f5a-4f29-93a5-83b09f174f04",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "42f316ea-8299-4f59-bd22-e579e4cbd1b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e0fbaef-e03b-4cb9-b437-56eab7439dae",
        "cursor": {
          "ref": "13e164fa-e7b1-49d2-97f7-84a98be240a8",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "ec69b7e3-e0e5-4fc1-b715-02d28430a06a"
        },
        "item": {
          "id": "1e0fbaef-e03b-4cb9-b437-56eab7439dae",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2d3bd6c8-2400-4d08-85e4-5ee822344434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce605bb-f7d0-44a7-879b-408dd8c3c846",
        "cursor": {
          "ref": "b83ddc89-814d-4d51-a27f-3d4902afa3c9",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "3f7f38b8-3a8c-4d51-9f59-bb0948e5d396"
        },
        "item": {
          "id": "dce605bb-f7d0-44a7-879b-408dd8c3c846",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ab64795d-09e4-4c84-947f-fc083b5009b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d67edfe5-99eb-4cb7-9bba-7764c718e748",
        "cursor": {
          "ref": "dfa7141d-7673-46cb-8b89-a8cb33023cf2",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "c5333870-0023-42f7-a560-747da560e4f2"
        },
        "item": {
          "id": "d67edfe5-99eb-4cb7-9bba-7764c718e748",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "13639fbb-20c5-4e69-b3b2-7ef4ca35d99d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c77d29-ab05-4f07-a3dd-783c3f830421",
        "cursor": {
          "ref": "23611e3c-ae6c-4b66-b324-a31e32899a9c",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "1da7ccf9-2c2e-409b-ab24-808593f4f1e4"
        },
        "item": {
          "id": "a9c77d29-ab05-4f07-a3dd-783c3f830421",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "333b166d-b6ab-4205-9188-4955095c5340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b80343e1-c367-451c-acea-644a8accdaeb",
        "cursor": {
          "ref": "256ad559-ad3a-409c-a1c7-e68ab5945b24",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "11bb31fd-9382-49bd-a443-a54ff536899d"
        },
        "item": {
          "id": "b80343e1-c367-451c-acea-644a8accdaeb",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "dadf4df9-a3ff-47e5-b325-f4ae50e210b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee29c0b1-e4f9-43ce-b792-1df3fe91e9c6",
        "cursor": {
          "ref": "4d81f187-2853-4670-8458-4a2864b5d5fc",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ecba4ddc-0e1b-4b7d-ad51-dd8a2892faf7"
        },
        "item": {
          "id": "ee29c0b1-e4f9-43ce-b792-1df3fe91e9c6",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "5a9889bf-cc3f-45f4-81bd-ca5733b2dba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f49453c5-2575-48e1-acaf-cc4559b20d1e",
        "cursor": {
          "ref": "64f7564b-f6d8-4ac7-ab8a-0388202b42be",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "7c8d0d80-7e7c-49b7-9270-a8ad544633ba"
        },
        "item": {
          "id": "f49453c5-2575-48e1-acaf-cc4559b20d1e",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "97ca0101-c224-4e70-b12e-12438e85062d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7f6332-7568-4e8f-90f4-2c27d3a52a19",
        "cursor": {
          "ref": "4f13ec65-6a54-4a4f-8dee-e4f88ad6aa0e",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "487f2af9-b643-4364-ad4b-1a728a7cd8aa"
        },
        "item": {
          "id": "bb7f6332-7568-4e8f-90f4-2c27d3a52a19",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3c44aa63-23f8-4ced-b48a-bcfcfc3ed75d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b2600cd-3d6d-45d1-ba9c-2f568855ac59",
        "cursor": {
          "ref": "f0ad2143-c254-4788-b660-27455eaec5e4",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "872d72cc-5b56-4665-93c5-c8461adfcf88"
        },
        "item": {
          "id": "9b2600cd-3d6d-45d1-ba9c-2f568855ac59",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "3e886072-6a1a-4e96-a417-61de7c2fa144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec5259d-50c9-44ea-a586-5ca5ad16544f",
        "cursor": {
          "ref": "3c035a1e-5496-4610-9f9d-f60e6f5a00a1",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "dba42be8-8f74-4e19-9683-fc2dcc6ab5f2"
        },
        "item": {
          "id": "fec5259d-50c9-44ea-a586-5ca5ad16544f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "6f73e04e-792c-4f2f-8f6b-4d1e0c4639b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df91ccb0-2f9b-48cd-b844-ae438b0d406e",
        "cursor": {
          "ref": "2c83bd5d-7ab2-4fb6-8855-5b9ca937afe8",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "991fd10d-f875-4a71-b12a-d5c7991e5f27"
        },
        "item": {
          "id": "df91ccb0-2f9b-48cd-b844-ae438b0d406e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f460a35c-de82-45d9-a2f8-38dccaf726e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55c4ecff-fc2f-4d2a-b507-4a31319702b1",
        "cursor": {
          "ref": "23c99583-312b-472a-be63-30817223267f",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "20faa823-165d-4729-8b9e-3281a54dd905"
        },
        "item": {
          "id": "55c4ecff-fc2f-4d2a-b507-4a31319702b1",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "74a9fe75-bacb-4602-bf69-82190f5ea612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cda54209-be4e-4335-8425-2441a62e1b80",
        "cursor": {
          "ref": "ce472d3e-d3e0-4b10-bd6b-d86de1d6d6cc",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "82d37a4c-d5cb-4e7f-b1a8-64b0188299f9"
        },
        "item": {
          "id": "cda54209-be4e-4335-8425-2441a62e1b80",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "233ed66e-5efb-486a-9878-36058dd4c6c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9220a3c0-db27-4040-ba0f-33156b01ca9c",
        "cursor": {
          "ref": "2dd44e3b-696a-45a1-82a5-8a83d1ffa1c8",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "86bc266f-0cee-43b7-ab58-09cd1d049618"
        },
        "item": {
          "id": "9220a3c0-db27-4040-ba0f-33156b01ca9c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ba3a02c1-ab28-4811-978a-77646a75950d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc5e8e9-403c-4e4c-b68e-9d585f0c0e71",
        "cursor": {
          "ref": "acbcc143-6898-4099-955e-658246ded768",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "3446a385-956d-4ea3-87ce-b3820fcd95f8"
        },
        "item": {
          "id": "bfc5e8e9-403c-4e4c-b68e-9d585f0c0e71",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "edb84e0f-65e8-4725-b790-645207399e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6f3110-f724-40b5-90b7-aad0a6ce7388",
        "cursor": {
          "ref": "d40eaa96-a90d-419d-8206-b2895e203192",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "9c469d22-8549-4e3f-a315-709aff5fbe17"
        },
        "item": {
          "id": "6e6f3110-f724-40b5-90b7-aad0a6ce7388",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "fabc3587-44f4-423e-a7de-ee86ff447cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa6fb7c-6c63-46f9-9a77-70ac1630194b",
        "cursor": {
          "ref": "ef515414-875d-4795-b3ce-8508046c5cd1",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "cf1f0488-9225-44ef-a2ca-7a90e2441b7a"
        },
        "item": {
          "id": "daa6fb7c-6c63-46f9-9a77-70ac1630194b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1f470b27-60d8-4c9f-8191-42ce46c90d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e652a5-f703-4bd3-9292-d2566e9593da",
        "cursor": {
          "ref": "cfc90b89-0a23-4d6c-b2dc-5fe1bc3020cb",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "bd34a917-fc36-405e-aa63-ee050adbd3a9"
        },
        "item": {
          "id": "d5e652a5-f703-4bd3-9292-d2566e9593da",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "9efa2183-a772-4a25-bf7d-48ca4bc37c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a6b56a-b692-49d2-ba2c-0cdcad92250f",
        "cursor": {
          "ref": "1f7964fb-2da8-4559-8fdd-54f502b610bd",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2baa8d21-1208-4f54-9db6-09da14e7066e"
        },
        "item": {
          "id": "d3a6b56a-b692-49d2-ba2c-0cdcad92250f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "58645fac-0965-4b3a-bcd3-b7755b9bb843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aabcede6-e008-46f7-aa80-7710d10d278f",
        "cursor": {
          "ref": "70803894-0131-4036-a636-b2c9f7b3865d",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "0bdb614a-0222-438d-ae83-3738e92650ec"
        },
        "item": {
          "id": "aabcede6-e008-46f7-aa80-7710d10d278f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d247aecc-8a8b-426c-bc08-44d36e3de501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6058f153-efdc-41f7-a7db-381cd8e85763",
        "cursor": {
          "ref": "480f65e9-4f87-44a9-86a4-e39217b50d2e",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "9ca4c66b-31d9-4f09-a20f-5d1daa24d547"
        },
        "item": {
          "id": "6058f153-efdc-41f7-a7db-381cd8e85763",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c5434bb5-2778-47ee-a396-275d82f4a5f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41cb1a4e-0d50-4a51-8035-66c34d806326",
        "cursor": {
          "ref": "7931e7eb-1f7e-4b56-9bf6-0b74e7cd84f8",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "482be543-c94f-4b74-82e8-166795b31571"
        },
        "item": {
          "id": "41cb1a4e-0d50-4a51-8035-66c34d806326",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "1e876cbc-4993-42e1-93ad-502388a5e98b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebcd1600-dcb6-4355-85c5-9bbf07ba2701",
        "cursor": {
          "ref": "83fdf725-b584-4900-9d4e-ca762e578be2",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "3024f4b1-92af-4054-bf75-cf2f490a3f9d"
        },
        "item": {
          "id": "ebcd1600-dcb6-4355-85c5-9bbf07ba2701",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "6858479c-85b3-4385-85e4-92467473bc77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc11f3b-77bb-4598-b529-c598a2bede3d",
        "cursor": {
          "ref": "315deb02-b9f0-411e-bad6-7a8c72c9cd0b",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "583fbdf2-0613-45de-87a6-3e13f74f415f"
        },
        "item": {
          "id": "0fc11f3b-77bb-4598-b529-c598a2bede3d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "09f4e428-e984-4e44-9415-2664f4a999df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e2fc10b-457f-4ca3-bfb1-ed8e41cf6754",
        "cursor": {
          "ref": "2e6af624-5859-41cb-82f0-a35defa75d0a",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "dac80963-f4f9-48a9-b89f-142bfa67692f"
        },
        "item": {
          "id": "9e2fc10b-457f-4ca3-bfb1-ed8e41cf6754",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "9366611e-cc5d-4a7c-b95a-7ae1b5a46587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb8d160-7780-4a49-ac8a-b984a37e6cc8",
        "cursor": {
          "ref": "6632824c-9820-4d06-a363-82ec6c4c6437",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "1f6e070f-6ccb-41b5-ae03-7b2db6c00fbb"
        },
        "item": {
          "id": "efb8d160-7780-4a49-ac8a-b984a37e6cc8",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "fdbb5e7d-cd8a-4f27-8737-4984d2b10dd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e6e742a-0297-4362-abc3-a8e691592433",
        "cursor": {
          "ref": "bc674802-d657-4f4f-ae96-3e6629299972",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "eee71ab0-76ad-4f22-a4db-13b6dd2fef28"
        },
        "item": {
          "id": "5e6e742a-0297-4362-abc3-a8e691592433",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b70eaa76-51a2-4fb7-afd5-36e9cf5e92a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d45668-bfa5-4fb6-b731-60caf9367eeb",
        "cursor": {
          "ref": "a6813855-438a-4647-ba92-9aa58658e871",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "a3d2c15f-df5d-440d-aec6-4f3fa95094b3"
        },
        "item": {
          "id": "29d45668-bfa5-4fb6-b731-60caf9367eeb",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "54784140-a242-4e07-910c-54abd01690d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ded07d1-26d1-47c5-8792-f2f9fc00a89b",
        "cursor": {
          "ref": "c57db424-3974-4a65-8d39-cece9066cb0a",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "144d4620-e9b7-4038-b969-09f902dc12a9"
        },
        "item": {
          "id": "8ded07d1-26d1-47c5-8792-f2f9fc00a89b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e578e8f3-f0fb-487f-8277-1af972881e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6431ec23-ff6d-4e6e-8877-a8998dc60c50",
        "cursor": {
          "ref": "5a3142c1-1647-49a4-ba3c-d7cf70a703ab",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "802c6a03-d610-40c6-85e3-870465a1e133"
        },
        "item": {
          "id": "6431ec23-ff6d-4e6e-8877-a8998dc60c50",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "f7972d0c-0cd1-4a76-8c84-6dffb01881bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e24453-517d-4515-88ec-adc061101009",
        "cursor": {
          "ref": "d71ce918-a1c2-41e4-8a6b-44ff2b8f6967",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "5d3d63e2-1dca-47ed-b65d-a1c83df80e6f"
        },
        "item": {
          "id": "b8e24453-517d-4515-88ec-adc061101009",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a058b4f8-30c7-4d49-bde4-5792ccf8672e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d59140-2fd3-4728-bf2d-0382fa536f5b",
        "cursor": {
          "ref": "57a72cca-649d-4a09-9c37-6ebabb7f646e",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f9366dea-e421-456d-87bf-a0624d21f46f"
        },
        "item": {
          "id": "64d59140-2fd3-4728-bf2d-0382fa536f5b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9f88aba7-c479-44e4-a4fb-0d2ed71dad39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c0dc5d3-05b8-4410-9f7d-132c21d459f1",
        "cursor": {
          "ref": "8653061f-08ee-4918-b82e-05d5b7e32188",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "54e9458d-546c-4979-a0ea-d150eadfc507"
        },
        "item": {
          "id": "8c0dc5d3-05b8-4410-9f7d-132c21d459f1",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "137b7aa7-6f65-4378-8d85-992a223c95c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b19a4ff-3e17-4047-8b59-237e6e13eb6e",
        "cursor": {
          "ref": "afded314-72a1-4641-976e-59665b2deebf",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ae4f5d49-bbb2-447d-b189-538fe7d47eea"
        },
        "item": {
          "id": "7b19a4ff-3e17-4047-8b59-237e6e13eb6e",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "5c2d2a40-a79f-480d-888e-ca287db8ec7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "976075ba-b033-44ef-af47-63e2cbd5b1ca",
        "cursor": {
          "ref": "02997824-95fa-4bde-9cf7-cdde4d65ccc5",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2da879d0-91e0-458e-80c3-602bad8e919e"
        },
        "item": {
          "id": "976075ba-b033-44ef-af47-63e2cbd5b1ca",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "3f27ed1e-ac23-4c49-80e6-56a575ed8d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be5b9244-ebad-4fb4-99f1-11a73cb5aaf8",
        "cursor": {
          "ref": "e66e1936-9b9e-4ba5-bf68-ee16627c14dd",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "2ba052a6-d8fd-4cc1-a079-01139f37c5d6"
        },
        "item": {
          "id": "be5b9244-ebad-4fb4-99f1-11a73cb5aaf8",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "3d483dc7-acde-478d-a7f0-3727d09d8646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99750060-9e35-439e-83b9-fc31b17592a5",
        "cursor": {
          "ref": "9492c67b-c515-4bf8-be8e-7bf5bcb38d22",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "52012a2a-973f-49a4-9222-e631010d110f"
        },
        "item": {
          "id": "99750060-9e35-439e-83b9-fc31b17592a5",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "abfd3ffb-6e9f-406c-a8c4-0f216ed4ab67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f5b275-89e6-4d3c-980b-d20b5aa4e045",
        "cursor": {
          "ref": "298ee82e-1434-49ab-b03c-f41860bbcc50",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "8b33f657-123b-49e8-b6f8-93429e33f897"
        },
        "item": {
          "id": "84f5b275-89e6-4d3c-980b-d20b5aa4e045",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "777c97d1-a2fc-4f56-bcf7-a6ac24c394aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6ea5f9-25d0-4ed7-bfd9-5dd2634268c1",
        "cursor": {
          "ref": "6d8cd622-57dd-4ee0-8205-93c0e3e5dcaf",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "9dd06f62-a629-42da-a8d2-3177c90d0de9"
        },
        "item": {
          "id": "dd6ea5f9-25d0-4ed7-bfd9-5dd2634268c1",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c12bab00-c4af-41fb-a8d2-d89bbd371447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f09c28b-59ec-4891-89e2-7c33d1241b87",
        "cursor": {
          "ref": "4162a396-d27e-4048-8ea3-b04188e2c560",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "83f3419a-6409-4cdf-853b-2ee93242da5c"
        },
        "item": {
          "id": "8f09c28b-59ec-4891-89e2-7c33d1241b87",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8104c7c5-bdda-4cd3-b8d1-5bc4cd7d7146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdd2e520-c738-4b01-a046-3b9646ae7b8c",
        "cursor": {
          "ref": "e12a679e-0759-47d4-ab1d-616a12e01256",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "3f5736e4-d4e4-4dac-a5b7-da1109366ad1"
        },
        "item": {
          "id": "bdd2e520-c738-4b01-a046-3b9646ae7b8c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "58c82c9a-f504-4020-8b5e-77c8340036c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d07804-a54e-4209-a829-7bd3d9d9da90",
        "cursor": {
          "ref": "f8828192-2a7c-417b-b007-8813c6f440f3",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d76ad57a-2c9a-4d81-b2a3-3c4758a571d7"
        },
        "item": {
          "id": "78d07804-a54e-4209-a829-7bd3d9d9da90",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "54f8b211-e98b-43ca-befc-dc7fb2a8c4f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b1b254a-cf9f-4ce1-8e13-752b9744fbdd",
        "cursor": {
          "ref": "25b186e3-6f7f-4a1b-a2a3-8bea75d27a3b",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5b3edbc4-2b22-4d98-a8b5-dae872be2d0e"
        },
        "item": {
          "id": "1b1b254a-cf9f-4ce1-8e13-752b9744fbdd",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "3066ff63-f764-4e84-9576-e08100ebb2c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd174d0-a58f-4876-8a7a-de740e622e67",
        "cursor": {
          "ref": "a4249ff5-a96e-4619-bb13-5049b0b75412",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "128b58df-d597-43a7-be28-12de162db423"
        },
        "item": {
          "id": "5cd174d0-a58f-4876-8a7a-de740e622e67",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d24a22bf-80ae-443c-b820-5f6739f2105c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e685b2-8dbd-40d2-98d5-aa53cb370a7c",
        "cursor": {
          "ref": "71051cdf-cd9e-4bfc-aede-a609100e84cd",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b200f164-13bd-4de6-a09c-de0adb4d1ade"
        },
        "item": {
          "id": "b5e685b2-8dbd-40d2-98d5-aa53cb370a7c",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "13548482-070a-41b6-bb6c-e698663bd273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "243949a5-2df9-4b5c-813b-fd164444e755",
        "cursor": {
          "ref": "53769448-b69a-4c0f-8dfc-5dcec576f3f2",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "eb23d77c-f40f-4f4a-8c5a-5be09fd82b74"
        },
        "item": {
          "id": "243949a5-2df9-4b5c-813b-fd164444e755",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b1f74fbe-3802-4517-8ed7-c4082a6dd38f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb3c61d5-73ae-41fa-b1f3-a701e7f31a65",
        "cursor": {
          "ref": "b6ae4da6-50ef-4c1c-ab17-92a6a8f30af7",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "2deec187-53b3-4be9-a4a0-70209a55e6b2"
        },
        "item": {
          "id": "fb3c61d5-73ae-41fa-b1f3-a701e7f31a65",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "8fed4512-de35-4562-8f52-af2257a9cdb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "d9d6abad-47fe-41bf-a552-50fe84ceefad",
        "cursor": {
          "ref": "4f3def78-11b3-400c-9555-edde9b9113e1",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "a7dad077-bb37-467a-bf46-4c8aeafe4e93"
        },
        "item": {
          "id": "d9d6abad-47fe-41bf-a552-50fe84ceefad",
          "name": "credentials_verify"
        },
        "response": {
          "id": "7a796bcb-1612-45e4-987a-1fadbe232de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "779e1884-d55e-4172-adca-7bedd2048df4",
        "cursor": {
          "ref": "a71d1339-cde5-4693-ac08-0e4a736c3d59",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6bb6717d-c846-4885-b595-eefa810e7e5c"
        },
        "item": {
          "id": "779e1884-d55e-4172-adca-7bedd2048df4",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "9771462a-6abf-4a5f-9d72-a1180af8cf91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "6ac8b458-5f79-480b-b230-e061eced8316",
        "cursor": {
          "ref": "d0d48552-ddc8-49f8-aa93-a5f5e2a1f9b3",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "48c72783-8549-48a7-b84e-8d24f112058f"
        },
        "item": {
          "id": "6ac8b458-5f79-480b-b230-e061eced8316",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "135a905b-c3a7-4502-ae2c-a698fc672c2b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac8b458-5f79-480b-b230-e061eced8316",
        "cursor": {
          "ref": "d0d48552-ddc8-49f8-aa93-a5f5e2a1f9b3",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "48c72783-8549-48a7-b84e-8d24f112058f"
        },
        "item": {
          "id": "6ac8b458-5f79-480b-b230-e061eced8316",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "135a905b-c3a7-4502-ae2c-a698fc672c2b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dfc2553-2547-44bb-9d03-bd482b766112",
        "cursor": {
          "ref": "092cf8d6-7baf-45a8-ab51-8ed411936009",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c4885040-aeb6-4a2c-9863-f8da670f8fc5"
        },
        "item": {
          "id": "9dfc2553-2547-44bb-9d03-bd482b766112",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ef89a1a5-70aa-424f-b5fd-b1431de5bbde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de2592b9-e616-405d-897b-dd238ca839ea",
        "cursor": {
          "ref": "467fb4ed-bc11-4723-9084-c97c601bbdc6",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e4ca9def-6e8a-4798-b97f-03428dac8ce4"
        },
        "item": {
          "id": "de2592b9-e616-405d-897b-dd238ca839ea",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "62530fd4-360b-408c-992b-516f3a3cb0bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}