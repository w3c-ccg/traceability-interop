{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "784093be-9268-4706-8eb3-d944d9329ee3",
        "name": "Clear Cache",
        "item": [
          {
            "id": "33974c6d-3d72-4710-959c-0a90a71b3df8",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6e75c0e7-2f8e-46d2-9d1c-90231f3e6af4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "58c35687-d9dd-4e99-9a0a-f5c5b129112d"
                }
              }
            ]
          },
          {
            "id": "0d9ff15b-fcd4-4be4-bbb1-300403c4480c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "418e4b80-45d6-4bd1-85c2-5a3255e3af02",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7649d72b-a247-4c76-8d51-891943a641ca"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f484bcc3-a9c6-4c31-8b39-355b894e4c19",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "02b05ac2-a5a5-46f3-8869-16ce2a4ece0f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "23e484b5-5045-44af-bf69-90ab4d2e1c5b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "175679bb-f56e-45f7-874e-372263ec52b7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "453fd08e-de1c-4005-ad30-80175cdd3286"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d727d2f6-e01f-45be-ab46-e439795a1ee9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c4b1b60c-e3c2-45d4-9457-e3e50e18b5d7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "015f784f-fbe3-4afb-8ed9-d9c6bfd3941f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d993e77d-8d05-43fc-8f57-934bbf64ed77"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "073cfd18-a5ee-4616-8b7d-00fe1bef4216",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "96b00443-bf7a-412d-8a91-54ad586e598a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0156bbce-206a-4b8a-9290-6c6924b61b7d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c10af67e-2b7f-4e79-8091-90966b8f93c1"
            }
          }
        ]
      },
      {
        "id": "8013a7af-74b0-4a46-8683-d91e7283cd95",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c8af141b-255c-42d1-9d62-3100e3b23183",
            "name": "Negative Testing",
            "item": [
              {
                "id": "479f42bd-01c1-4887-9418-88c4ef994a97",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b54dde88-2039-4331-b72d-518bbb39e1cf",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1600916-e753-4b6f-94c5-222bbe2adcab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9609f619-793b-4cf6-a61f-981801b26b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba9bc81-26b3-4386-996b-dca7f57d8406",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c1e47c-ce6d-4cbd-9343-46a6c55cb516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "66eed7f2-a580-47ea-8375-c6754bcc494b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c44981f4-315f-4ffe-a46a-7f688b307d74",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f4b28a4-051d-4e28-b893-9854d957fc43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "95a4c93e-4cef-48f7-a475-82dab83f94f1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b69e6eb3-c468-47c9-ae7d-0aa3e3e1a003",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1ccbe179-0b27-4b35-8804-d361506071b5",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34fd54cb-3db0-4814-8d97-35628d2355fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32af6634-ccc3-4878-aece-719c4b4908a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f262afd-b6fb-4614-bd55-6948319b6fe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdb89a00-a884-4a39-be97-b9dd056d0ecf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c0815f6a-ce8c-45dc-869e-29ba4075afdf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "82f94405-fe55-45aa-8850-3346bce443fb",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "502ae355-23b2-4744-af3e-7304d8945f7e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "03812b25-c36d-4758-94b8-156b8e3d0c54"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "92524e42-c9e7-407e-b278-6b15676fdd31",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d2a437cd-3aaf-42a5-9b30-14567ca442e5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "823fdb4a-6edb-47ed-be51-d91422e7d0f2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "145339a5-37ba-45fc-bfb2-c3f67ae03dcd"
            }
          }
        ]
      },
      {
        "id": "573d0107-094c-41ec-9567-58fc979a17b7",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "2daebe6d-cbec-4872-9753-0cd923ad563d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ea53805c-3f64-4873-93e3-b9f48570aa26",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0965aa7f-d7af-4bd3-9beb-ab94a042a8ff",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e49cbb70-f8ef-4454-87d9-9ca62ead7ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9739fded-3f10-4bfc-8296-5c33f60f16bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1d2cb44-5da0-48d0-88e0-b1c945b0b4bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c3ad8fc7-1af3-478c-be52-865c982ad88e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a12fe0c-ff5a-4562-bb1d-3c946fb56aee",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca8049b2-460e-437c-a7ad-41cae5bb62b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "069fb0e7-a9b2-4476-be7f-bc9e2c0558f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "718135f0-991b-476a-bfec-275af45b37d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c63e97f0-915e-432e-ba8c-13afc3803d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94871f53-46a7-4ba1-b0ef-b9bca358b6a1",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8cb29c8-7e24-4230-b6a8-87ac817e16d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52577e79-8d8a-47b4-ae5e-0173a046ae46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a564cd-bed5-4bb2-bd6a-b6c46d78acd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fbf400f6-75f4-4638-9479-fa719a3ba022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a18792b-4e6b-4f2b-866c-e96407812ffc",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7018d299-42e0-462f-8f65-e11ef9fc69ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22163a19-8b9f-44b7-bcee-8e018082023b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f9a775-3dab-40ff-bb8a-403d1336f81e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47d96103-d593-413d-a3b4-8987cb3b9708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "575ecfd1-7a74-4cf7-a6ca-a2d8d849a5ef",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2824dab1-641a-4447-8e7a-3d8a1c4448f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9432c9bb-347b-4ce8-b214-cb91c18c9d9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9445968f-5559-41f9-a9fd-143b8a6b3b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "919e8782-658e-47d8-b034-113643119145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57fc73f2-dde8-4fc9-b79b-015fa96047d5",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f7fb4f-49c1-4c9f-acee-fd159fa79cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88c10657-5d53-403f-a7e0-0d2e640a3bcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "972e70de-aa6e-4c4c-8ef0-4231b7c107ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2196f5a-ff43-450c-b480-daf9d4a51f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41afd0ea-6f8e-400c-b912-3a933156cdd6",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5729ae1-2d76-4273-8782-95f5fd5d4b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c93c802-c734-412b-ba88-421212f8e52c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b3bb25-c664-4d63-80bb-0b171c7ef17c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dabe1fe1-e864-482f-816e-d47a504f4302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2357f5c1-1a3f-487c-ad68-17858507ad2a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f92627b-aaa2-4387-b329-efe0bf77f466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f9744d2-6a66-4ea8-9477-28955b414fde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e6dfa41-d805-4ef8-8a61-caba70b5fb88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1ff241f-9817-464a-8dc7-055680dcf815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0719de86-a85a-4a5c-911c-292b7ec02b15",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a6358d-73a8-480d-ade8-72166e951193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b27cbc35-b8b9-48ed-8eb1-2417f959b1b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90292688-064c-4ea5-a6ff-546e1080f9c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82d3f177-ee3f-4983-a5a5-b469c943fa1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7648401d-c3dd-4353-aecd-d1e021a52839",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45997020-1c6c-4ddc-826c-f4ec9610be1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ea22094-539a-4a9f-a5b1-d756f08ba5c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a51339e-1d15-4318-959b-4acb023a5ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "04c8eef5-6f21-433b-a1dc-1729470f5274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6134302-377a-4794-b6d5-1aee37c2d619",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1605ef6e-bda5-4bde-a0b5-688beadc47d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edf667c1-d393-4fa2-a4f2-7c4b255680e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "320b01f2-2fce-443f-a182-a62f9a3d9629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bdd87d79-ecd3-4c8c-9eb6-3ddc2e6eea57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e5465e1-cc14-436f-abd6-4e9be32d4892",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1081861-fd44-41ef-a644-2a21b8e050bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62514645-c4c4-4498-a485-0a47c4240e10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3078ecd-200c-4ed1-b29d-81ff0ff30a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b9d324c-6b55-49be-be03-3a6afb436ab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42462d72-a4e4-4fcd-92f9-f76b25c2d5c8",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8afd152-5e32-45ba-9026-70d505c6288e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86fac44f-16cb-468a-9d42-07e2553a2817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8da5c46d-8e89-4361-9c31-791951fa302d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f102350-b27d-4c04-adf6-1a2bcf92af48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ed7460-a459-4302-8be8-384c310fe393",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "083e5724-b9c4-469d-a46d-d861d5590e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2be8f5c0-b88e-47b0-b690-162e576b8906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbf8c80a-7a54-42aa-a0dc-2e0d09add06e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fbe529ae-bf38-497b-a272-cea5df4dc39d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb08267-1c28-427d-a249-db307ac13a36",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb662bf-4822-46fd-8da2-1c37035cb0f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "100b60fc-020e-4550-bef6-f8f50f52017c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480bb753-8ec4-47df-8350-865b700a9648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a72b8e8b-7165-4d6b-85f1-5f0fd4e75c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7bdbd9b-0af7-4f1a-8d7d-d4b080eaf29c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba2dab6-e21d-4175-949f-c2f83bd23c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a7e3b95-387c-4927-99ce-b24d56864ad2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c54d19-12df-4f32-8103-ee56addb587a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8f222f2-4f7a-4fdf-b96b-1fa1657e117f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce218e3-c1ae-4d57-882b-9aa74296a46f",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e95e4c3b-352f-46a6-80e7-2f646fcdbcad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "774d530c-4242-4846-86b3-aa3fb840a78d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7854fcc8-99d0-4d2c-aa8c-f6021250515d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf8418ae-d114-41ec-be8e-965c60ff0df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e2ffa12-13f2-4d88-a682-1108a457dd7f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c75b75-ef81-4338-bf9e-0de12774d00d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d2eab64-16eb-4b27-800a-11701b6fcbad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edf77c7b-9d54-4b30-a699-f54184e6840c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a0b5a4e-6978-4f41-bd67-1ddd409c18e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff16c030-d078-429f-a856-3edfc994931b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "788d92eb-e107-466b-8a23-df5f3a9e8b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ac749c2-7f5d-47d1-9ab8-a1495ac1fb32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1994fa2-6d86-4da8-9ca1-2815c24a6f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8dba85bf-5fb0-48af-8a74-91bbb33fd2cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c723affe-3232-4ac4-9c08-53d36495265b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd7cc472-9725-4225-adf7-f7b14e80e149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "263cd716-3c4c-4b0f-8c86-9b91f41ff5ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc7dcccb-d62d-4fa8-91ae-328d63e72b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3158f5f4-d3fa-4dcd-b10a-89fa94fb994a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f903fa9-4eb3-4248-b836-5061991e234e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db962deb-1293-414b-8f67-ac82358cce1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddd16f43-8c97-4746-a89d-3960f8c54e00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b607d67-0910-4f18-84a4-66f2e08c6cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "05d4f68b-8ce3-4a58-97cc-ed4f9e6d17e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5099b690-ebd0-4b28-a66d-54ea6cd835bd",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db2890d-9336-4305-ad72-5793d12e0c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24b77de6-a462-4648-bcc8-136c726e1ba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb76ff9-406e-4ca1-ac44-4818341dc3b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3cb483c-d7e3-49ce-a1d7-10802538fb0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4504f2aa-2413-4c91-a322-94eaf2f03b4f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d681eb-c9a5-4cd2-93f2-f34716fb01c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bb70e5f-c872-4d90-8803-55602b3f2bac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de172b7a-f628-4fe5-ae70-c565df3ee1fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "950783cb-4f6a-479a-a182-8b2401c896d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "858b583d-458d-4c60-a947-c98af48571bd",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b443d5e-a1b6-42e7-9f31-d09440e598e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40f4ae23-fc59-444b-b197-489b43f9af64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d0de76-afa3-40ff-98af-589d0fc92d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6fd5ced-332b-466b-956e-073b0f9ec4d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99c9fef9-238f-4070-828c-d68808361e49",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26f2cdd5-45c3-42f7-aeda-f510e908d138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81a25d44-f28f-4c93-9517-414399f1ef42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c111fe2-3e2c-47ab-bccf-f3a876674fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0133aeb4-82c8-410f-8dd8-c263639209be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a79fdf-2036-4167-bf0a-e185e6c76aa5",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef898189-8301-43cb-8759-e02165edfa7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f3919c7-8edf-4ccb-b387-0fd3195703bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17120899-d890-4698-a28e-a75815b092df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "de4a56e5-b143-46b1-a977-b95c93ed8532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8551e37f-8004-4788-a19f-4f81ce1b3f7a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e276e625-09e7-4bba-bc87-afc41ab833f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cd31b14-2be9-4007-831f-002efb5ca30d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4093be8-07a1-4576-8b76-9750bb8b7af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "33a38225-ea18-4840-b8e5-a7fbb6ecdfc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88de16b-a40b-4305-b838-f1c999bef5ac",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "223392ab-b735-4f61-be2b-90f51f1fdc82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf4a9602-f0f0-4e2c-a6fd-e2aec9d47cb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a1a596-8910-4b58-b5a2-dbcd7dc006dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c41914b-3668-42bf-8b82-f203938e5175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0747ad0-744a-4ea1-9602-88f730f60137",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9298a91-e8df-4938-af9a-43ff8e582524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae8fd081-f0d0-45ac-9103-5cc299308fe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2760e738-6684-407c-b13f-c1dce0910fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "83a48c77-a366-4a02-a47d-2dcffb42f98a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d3dda78-8a0d-43c9-b7e2-9a2d10a4bd35",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "627599c4-46c1-4d05-849c-2354cc3b3a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "741f7677-c94e-4779-9b2b-85fbefe947ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d0e7c26-aa4e-4762-aaeb-bee318b5a0e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "52293001-2862-4c53-893b-1fd652cb6a2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7053ad77-4b98-4c2d-a8f5-0975801e9ab0",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf84f16-45b9-4125-aad8-e74c70ef1b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0fa96d9-c27d-4e42-979a-d6d231034008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "645b53bc-a228-4502-b51d-ad352abcc808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3b23a4a-45f1-4501-ba7a-45e69b784d62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d85e0a45-7c83-45b3-a3a9-3d3aba8c8a41",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48cdc2e2-1136-433c-8fa0-4f80f7dbefdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0fc973b-113e-45d6-8319-75bebf3e4d8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe7b9f3-71c1-4a8e-bf7d-920ca3b9c833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6961e44-6fab-45ce-98f4-3c9d776d3b9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73753281-1867-4fe5-84e6-5fab9a27df58",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22881578-9104-4e71-a60e-c344064fb410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abe4ebc3-ff45-4ca9-bd1e-604f22b7684f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d8ac80-a623-4b3f-a283-b699dd3bb40c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d818f982-c68e-4b9e-b6d2-106d7ab95f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e91d049-198d-4b1e-90a7-45c7f4080f90",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d30a0aa-bb62-4dd5-b050-5a5a96b83f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c975b469-0526-4126-a13c-7cab60bf02e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a3bc3ce-b8df-433b-bd66-01727d2442cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "da0e78d9-57d2-4848-83ee-30d161614585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c56eca-780b-475d-a708-644b82f36ffc",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c92be40-6bae-4ced-bf2d-e5a8bb24e0a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7516c0b8-5a6e-4b9c-9d39-3cda51480fa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda26668-ed71-404a-a92e-b70a6db999df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "110095a5-f928-447c-91b8-f28c1d85f804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf0a285d-973c-4372-9807-4978e650f660",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd8b4f03-fa26-4284-93da-7ba13b131fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9ff4a210-a550-40cc-b457-400f1644f413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a05578-9cf8-4545-a091-74732e78d784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e6e14170-02ce-443a-8169-441d856d308c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa266a8-1eb9-4bb2-9944-cf9070785922",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf1f5e4-f294-4b32-bc39-2b278a14f091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3247a54c-d901-4db6-83b9-1873e1bc54ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821508a6-74fc-4dfc-a96c-76f8a209cbdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7dbe79b8-904d-4e7b-a6d0-526ee5ea0e60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e6c8ef2-194b-4f55-9bea-ab015ff4a2a9",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b322c067-bffd-46f3-a6b7-f4df1c13d8ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bbfd274-c8ff-461a-8ce1-a82b1f7d0fc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "190c60ca-2978-40f5-9be9-c595eb6ad29b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d980f6b-2417-47d2-a76f-cf4fe8c8ee6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2888a33f-543a-4dee-a8fa-590e4822d0c3",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d784cf-58c2-41a4-bea2-3a17a1f8bd66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e02e0b4-d147-412c-bd6e-ac563d215063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c29641-8457-4d92-92e0-88b3873195b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2848a602-ec41-487c-94aa-cc6ecd491879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b6b615-0b61-4872-b344-f8c494bb0f2e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af10a8c-a7e7-435c-ac55-ec07fae1c6f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecb339ea-83cd-47d7-926f-bbcd8f9ceac1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be5ce389-169e-44a4-81bb-4cb2ddf47404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2d3dc3d-3da4-4b50-ae21-0a6f072d873b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9118a001-6eb4-409f-a554-093d73f161c0",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "759592a4-d5ea-469f-a7f5-db754d7bbc1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9f62808-0180-4795-a630-bdd30122216d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d2a580d-5ef1-4ae9-a8a0-64b5659cb90d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "609fced6-6773-48d6-8fce-80602facc005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b1eeda7-8e83-4c26-8cc8-9f72c35337c9",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf6d90a0-7458-4af1-b5ac-de14a557a7f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11514ffc-7cb0-4d3e-a7b5-7b0c8581b2a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5245397-7abb-4cca-b9ba-f1469ab0fd16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "16caded9-d5af-4183-8e68-416eeedc627f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cf1409f-957b-454f-8000-091501a99e5e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca8e9b7-b894-4b0e-af12-fcd03c5677cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70c868b5-9d88-4eb5-964d-5d42382e8ae4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b52c65fa-0322-423c-b97a-254fe3f64b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d49257e4-982d-4b50-b598-88d516a88088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0388e844-992e-47f9-a99b-cc079ef92de5",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2323213a-66ab-417a-9a55-2dec2f95fb2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4864b177-3215-42a6-aeb7-0317b5eada50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd0011f3-c5d0-4de4-9e17-b5142e6c6f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "35cf4621-31f7-4a50-9c74-c94238877c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b5f8841-026c-46bf-9915-32b716d2b902",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48447912-7111-4861-b162-54e3db0323b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b53a27c7-4bb0-465c-8129-bc5559fddcfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70fa7a4c-4f8a-411b-8927-efba8eb7671f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9671f56a-871b-4231-a680-cde2c2f01a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5059b53-b114-44fa-874e-c59906d1866f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f8e7c74-bd5c-439f-ab1e-09fafda861f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12185d80-c981-475d-aeb0-2e146e67f21f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ac18c7-3de8-4b0a-9df8-e97fe322e10b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "195b9ce4-5079-42fc-85f2-fad2ed3bbd95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4744c4c-950b-4598-afb4-504bdffe44c2",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf7b130-39e4-4e56-85c1-571580fddc63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f675124d-b761-4a13-86d7-fb07f7e1134d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6563b6d5-c9e1-45eb-adc5-e8a295c2e37d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a04e5567-7c3d-4fca-acba-ce0feec76631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddac24c6-0d1b-4a10-8230-dac9b0053074",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b2f086-c782-4ef7-99c4-d2e488893135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "927850f5-0b66-4f15-bbb7-5caaa90e1228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58370191-851d-43e6-ad3f-bc3fac3c6766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3465a7e7-bf85-4393-8e69-56264da2490f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c17132f4-6b2e-42c6-bc19-02a9630c831e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28bb0416-72da-4e53-b861-ab0d656aca55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beb6fc63-dbba-4057-8f2e-7e4ecd11831b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "180266c8-17cf-4f10-a41c-7d1a6cd760f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c7631c8-cef1-4fe3-a249-88263ac59ded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c5602f1-6301-4397-a5c2-366926b0a1f3",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a1abc0-5a28-491e-a940-df7895bf1e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00eb56f6-bc27-4146-9201-98b734cd92fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d295d6-d2b8-4788-b1d4-20b6707deebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bb85e39f-28e1-4d62-b2e8-c5c2c17daee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d66d8c8b-6666-43cd-8038-7d95100d44d4",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d34277ad-419d-40e9-aefd-1a1b86f112c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c7d2dd9-618f-4457-92aa-4129f2a81877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc49332b-238b-4dac-ac3f-c2be210ac1dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "75e87095-cdf4-440b-8b6f-b17f142e464f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d39e1d91-6bdc-45c4-894c-8176a9dab5f3",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "895612ed-c93e-44fa-a7e1-c9875ab2ec72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5b584ab-adbb-4c4f-97c3-c9c5eee9ba2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50152fef-d65a-4259-b2ec-8a116f2d9d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b2d229c-7baa-4c6d-99de-70301acc107b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0237481-1245-4347-a76a-6ff8ae968d0b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fbdf478-1013-4936-95f8-268c325f7884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "555801e5-5e5d-43e4-82df-6d8e26ed84ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f70bd54a-f2c9-4b03-8bd7-d2767ce62120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "858f8fc6-7be5-44aa-9f22-4285e7f73bff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb33362-183e-4ba5-851d-817d661e986c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d342e50b-c416-4696-ae86-9b6b7f859628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f34fb029-a120-468a-9676-eda7507203fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfd13ae3-fb61-40f3-9c61-03202b454827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9b7c445-378c-42f1-b6e5-e3a9189d0ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "966a4646-8927-4f5a-bf93-42a900df8924",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d4e8fe-f549-410b-af81-25e6f6aa7c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38280335-af75-4e9f-a331-db4cd32cbea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b466f1-b333-403b-903b-0598c0e3c8bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ada6d43d-ede7-46fd-94ff-5db44f70fb25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c82b0ad2-50e3-4e9b-9e55-bd22e00d24da",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09b3c85f-6223-4086-8b35-8e932510bda5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "693d793c-e489-455e-a824-c8b4c25c10b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "201b0df7-5b28-4aef-8e95-a485cebc5893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "959a8957-7769-47b7-ae15-4b7cf3dc570d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a6a269-2e0c-40aa-a7b1-a106c7411786",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24de4b07-0980-48e7-942a-7f28e1ea48f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a7505ed-7a9b-4864-b2e4-56917f1e9e02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8cd649e-0dd7-490e-b37a-fb71931c0ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a91d941-4c32-4d3b-9c1e-4d7cadb91616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffadfb1d-62b4-480a-8bd1-cc45cfc576fe",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb20579-9d64-47ba-9b74-fd4aadede28d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be9a3673-1941-4619-81a8-3e0f08206022"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5a979e-7605-47fc-bc21-f6914b6b272c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "18d9a29d-cf17-471d-b3a5-4a91699044a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "152fdea6-106b-49d0-bc64-c969e9897506",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad23d3c3-8a82-42c0-a5da-67fd6785e44b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96a54f91-9401-4a21-990d-ca02ff991c65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5bbf63c-c27f-4281-9c30-207367a3c716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9eff3f9f-a18e-4b23-8928-8a809582cd38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49068463-2ec8-43cf-a0dc-cc73e6e62c55",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f207d5-c70b-42a4-9c44-92d59c5d59e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c47a068-4ef3-412e-9bac-b7b7bc9610e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b48027-6bbc-4094-950c-adce6572485a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "73ab5627-c09f-4a5b-862e-4685ac33ca33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4ecb3e9-9774-435b-9b6a-a4f16cb780bf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff82a69f-db24-45f1-a9c1-aa8d757605c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "959ad327-3c67-4473-81e4-7f9e35dd12ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a82572cf-7a72-439e-ba0a-2a31869dce06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0bd51757-6255-4146-86f1-f3a276509e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e7da60-76d1-4d6d-a8e9-e585258a0bc0",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea4eec0-ec1d-4696-9805-cab19ab91d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4097323a-9c99-474e-afd8-a2b840392d17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec9edcf-5f9f-4437-898d-280a4e8d466f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a034b9b3-b47e-4475-b2ba-25f28f95276e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf5df37-c28f-4bb0-a4df-1cc03826bc15",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30019fa8-b700-4a13-8ce9-a7cb8a9d9738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7590d32d-f9e7-4296-9d33-35570dc0d87b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f14633b-4d5f-4b37-9016-d7f04f84a60f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d28b21e-d2fd-418c-8b26-e30f28dd5ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72ca771-3c2e-45bc-ad61-e984e87fc05c",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4caa8a4-c8c1-4f3f-b01f-47cea35f4e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ea57a99-103a-48d7-abe4-2a3eb981e98d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a145b4d3-53d8-4823-a069-679c1145b889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1a31990-de9a-4462-82c1-84b8125b7c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc541004-a36f-4691-9230-08cc27a2d9d6",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a650810-7887-4707-9bd2-838b9644f820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8749240-4fe7-42af-a75b-ba0be6889ab7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e7e81e-8a84-4a6a-9670-41900a5e60ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbe76622-7068-4372-9735-6fe7889b6d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd2bf25-c3a4-45a0-9015-aa24bc4df9e6",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9909c2-83ed-4a7c-b6ef-d9e9c76cfacb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccccdc03-9949-4f0e-8392-4af0f3a6ada1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01a5d5dd-3a85-4ec2-8594-00ace0b7d766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a243987b-8a53-4a9e-820d-e0f3d20e1838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e0f98c-ee0b-4ff2-8936-c1d2e8864be9",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1228eeed-a8e1-40e7-b20f-bb529e933252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "705f9a86-8ca7-4217-a1c9-f3d0d61e662a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea759cd9-fd7e-43a8-a611-26965354a500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a2257215-726a-4e1d-b8d4-5198e2fb83a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b07aedf9-05c1-4f94-b8a8-c09fc1d91a97",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ebaac77-ee91-46ec-bdbc-5301b0fb8a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4366c5c5-029e-472d-a9e1-ac92886afa5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d92dbc3-85d1-4929-bba8-f0ee2e156bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdb6d4f7-d537-4b53-9119-4ddc7cc5ff78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd1004ac-c4cb-4027-94d6-8243cb06bb34",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf3475a-160b-475b-8a84-92dd9408ed8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "283c609e-f48c-4e8d-ac34-45fc066b38ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7650810e-52fd-4867-89c5-744496d3d722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f13ab31e-415e-47f0-b8e5-6a5f82842f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeaec9cc-9f77-4360-a02d-f9992ab79d07",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec688c04-0d57-4d9d-b24b-758c3be130f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1e3e1c8-c0ed-4b1f-aba5-1e7081d46c00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f662d817-3f18-4a71-b380-aebafbe8fc53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5948c793-75ba-4f34-b5fe-d715e8c24147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc002c6-28bc-47fb-960b-658bbadf0106",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4411f207-36a8-4e16-90ce-541c334dcff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9730da9d-eb09-40be-9885-832fdc0e770f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9989e1f3-4133-48d0-8696-4d06861ded8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "17fb3d4a-dc4a-489e-9e08-f762be4fef4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2157ef1f-b788-4de0-8be9-1145f278b0a5",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36598df9-2580-4e0a-b1da-c894d498fb18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6970b53a-0013-441d-83e1-0e4859aa7063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73d6e352-859a-432f-aa52-928dcc3f6e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6de87f6-8c5d-4f55-9bf2-3a2eef7d4ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794bfd40-fee0-4b35-93e5-4aa4678b9e8b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30affeb2-c6e0-4b84-9e5d-feeb7a423723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3be0a64c-b2c4-46c1-8747-cf37307400be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d97900ba-f1cd-4ab2-b209-8f7b296840ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "581dc97c-c5fa-4438-8cc8-eddefb1f926d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c42d3e57-03ca-4c0f-8d7a-218b76aa77eb",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45fb638b-987d-4606-a699-15ec51eb7ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ab8ce28-652a-4cb7-8673-3e5a04c09eec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f07fbb-2ee5-4630-b466-87c907a6debd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b2783e1c-a2cc-4920-a115-8ec4f1581436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f283a0dd-7386-462e-9888-9f2ee6daee21",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d3bf97-f468-4698-97aa-86ed3ec9e300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c403dd6-12bc-44f6-b896-0b8e2cb57267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43263cfb-adaa-4feb-86a6-75bceaf617bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "63440af2-75d2-4f97-8223-eab4720bc6cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fc45c47-4511-402c-b168-e27d45fb2bd8",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9b62de-fd15-4ff7-b0b2-fe1f95bf4520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f9c45b1-d71a-47f4-8d56-281c0e23103c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d21d35aa-5130-406d-bfd9-e1601c14359f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "01e4f622-bdc5-42d1-aeaa-1ade64f67775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd8c05bb-6377-4517-aa27-81210e4372e0",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e97215e-d3c8-4106-9448-5c2e00306b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e92ee9f-6965-43db-8270-f3657bd15a4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1277ee8e-04f3-494f-aa9e-87a95c04464d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "234c49b1-6cae-4312-80e1-4945ac624a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7940179-7a59-40c7-b4f0-77e3c5f1a184",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b613766-02e0-489e-bc22-846aeb4b3df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0f431e9-4ca1-47c4-8d96-92e77e5f0bed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d50cc08b-155f-4956-90f1-2928d6b95851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "85dfd6e6-e2c4-44bf-b118-c5526d5ec58a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74416831-569f-4fd4-98c2-4d29fd297ad9",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df4e7a3-b37b-4c17-a630-03a5a7cfa874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14a41db6-e7e7-47b6-b5d0-b0bdc53192b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "032c1ac0-dfee-447c-ac53-08c8819ed0b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a311191c-66a7-4bb1-999d-136cc5677f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7535dc2-41f4-40fb-b35d-b967f3079478",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1273091-2867-4c65-8d5c-ba0e15d86810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb431dc7-5708-4c69-a4dd-19ee3ed6c05c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f7b1d43-c5a3-44c1-99ef-30994bdd1114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "38bc6bea-84e8-412a-acc7-b70f67d22d97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce09f075-3f10-4a68-ad08-0d19e01dba65",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8dee704-a2f7-40e5-92ea-08877a011252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a8be91b-a83d-48fe-a51d-ab8cf26efa60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a9b5793-801d-406e-9aea-88c944573ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "05e2def9-2b9c-47c2-a33e-dccffacc3a59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "718076d6-3990-48d8-ae31-5a9d985247bf",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d69e1227-8e41-4e1f-a02e-5f18aadefc96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4793ec78-cdf6-4638-bc22-dea5b001a9d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c02811-03ec-4ce6-b40c-61f8918ca031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6691de8-fea6-4f68-bda5-cb13327d11cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a27bad0b-9fe2-4a40-9a59-b2d7f34bdf99",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae7dc2e-4d9e-4162-aa43-cffa5f2787d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aacf839-79fa-49af-9f23-9ee450d532a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ebd9bc-4f3f-401b-9805-d435b78d832a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4604b59-b894-4cc0-91b9-adae214a63ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6deb62d-1020-4878-82ca-02f5871dbb19",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b26fc454-259c-4797-8f8c-61dbb5ddb229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26e58ba2-c116-424b-aebb-d3b9ad9939df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9619a1bd-caa9-46fb-9826-7a13216e7299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0dc1f453-946e-441c-97e9-fd4364ad0460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ef1c52-e2c0-4a91-9e30-6382aae139a2",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba29f0a-9852-4fe1-ad5d-304fb6263979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d6ddb2b-d3a9-475f-8dc6-167cf4bb8cb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d42c5b8-dd4a-477b-963a-d227b8b46a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "96bb84ec-be53-4ba0-8cdc-b1d8f430265b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c90171-79e7-4998-8090-4105248bfe62",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9aaa98d-95b9-48e1-b4ad-69a40996dd1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44dbf3a0-ae2b-41d0-898d-434a19e8d0bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce8141a1-94d5-4d0c-9754-86a8137cd64e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "39223e20-508f-4e11-b395-2af37c7fa68d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "528695da-0f36-4d2a-8753-22301d6bf76d",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce4b8f4e-b72b-4f7d-a9fd-be9ee0f44784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06022f30-1c6b-447b-9681-ab93e6793752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e51d4f6c-bacb-4525-bd18-fdfe66450f02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "785dcae6-0966-43f8-b524-cd9b8bfe26aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "326afd05-62bc-4137-a9d5-e02bb9dd3623",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4655fb4d-7c1c-4373-95b3-d12f44e545d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd636700-455f-4932-98c9-a5d0675ede84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aacb1585-a1e2-4634-bc1b-262bbf50d9fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e18b9cd-4d8f-44c4-8188-de629ed43a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdefa97d-6b10-43ba-9110-dda5d70acbeb",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d22e9c-484c-4bac-ad87-22a0bf80020e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66f75e98-052d-4c42-8329-69519a5bf7e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ced5d0-146c-4fe2-b691-7b2b426fb2e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c62139f8-eca6-4560-96ec-85e1fc9dd3ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88224e7d-888e-4cb6-8def-d4e01c371fdc",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a1f35f4-7dc2-4672-a46b-76660465e3a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44c3fb8c-0e6e-470b-a67f-240fc282bb0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001dccb8-9ce2-4561-90c0-c1e3d64ced79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb1bba54-7fb2-4c08-8981-5964ceba67dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "569202eb-fa41-4e5b-91cf-5f42f794c68f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68110213-434e-4d0d-b32f-8535cfbba41a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c2c27c3-3554-49e2-b606-21787bdcde7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b62414d5-fc11-448d-888a-63d240cb873c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d43fb813-4abc-45c3-8785-2cdd16bca3ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "547866a1-7855-44d9-ac24-62d6156463cf",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b58661-6433-40f0-a2e3-d22d3dab15d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6e0cb1ea-b12a-4a01-bd63-44720e9b1e70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e9523c2-9fdf-4025-a37d-f4935b07e967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "72a3ed69-6595-43af-ba35-db4077939e90"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0ab2bfe2-601f-4739-a9c3-d3b6f16b6d03",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e47aa28a-3aef-405c-bd59-6fe0803399d8",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d72f7f-88d7-42fd-b179-eb5b3c9376b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5cadafd4-f327-4acb-a13d-a338e1057100"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e4320de-fa2a-4d0b-b7d6-38ca80520f14",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2dff23f-13a4-485d-a0f7-af003b572af5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d2d56e9-74c4-4a49-b126-3a9503aba473",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b575048b-d0b5-433f-8c9f-03dbcda072dd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "72cdbe99-13e0-4663-b455-4e13c3bd280a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f01500d-f59f-4f3d-8336-2d35841c493b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "930eb70c-a8c5-4b92-82d8-b5ba159a4edd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "aab98ad5-2634-4dc2-b3d5-fc08f6a5a232"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5e60c95d-80cf-4178-b6db-f6322d68e7e3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8a0d3ae7-eca1-4d7d-8e42-2ab72016155d"
                }
              }
            ]
          },
          {
            "id": "9558f867-a8fa-4e03-9e47-66d87838b218",
            "name": "Positive Testing",
            "item": [
              {
                "id": "67102428-9880-453c-bbc0-e8a47a48a5e1",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "47ac13f7-dedd-4edc-90a6-0555fd1ad13c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6b0415be-4b08-4dc9-8e7a-ca58e6f78f17"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eae562bc-9bf3-4810-aec5-f1631791fd70",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4b061961-8ef9-47c5-b5c0-cc056147f5e0"
                    }
                  }
                ]
              },
              {
                "id": "a4a9feb0-4d67-4740-897a-2a17864224f1",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "13c93a70-7b3e-496d-b007-de08de70c3fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f6fd3960-4e29-4be8-b6b4-19153a1982db"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b880494-09a7-4bdb-b527-8f84fa5b7f60",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "42b2411a-61e1-4695-8aa4-c1efa79f2eca"
                    }
                  }
                ]
              },
              {
                "id": "2f4e5b71-a198-4d2a-9802-4e99a0740fd7",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a17afd7-399e-445c-b530-05f2c36c26b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0bf09e3e-2d67-413b-ba2e-4faabd5b9fb3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a93a3243-ac79-42de-806d-65e6c94d79de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "317e7fe9-4010-41d6-a8ad-e1fe50e2c08f"
                    }
                  }
                ]
              },
              {
                "id": "73005b37-71cc-40e7-b46a-cc4c8953928f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "03b97c2a-f658-4627-9164-cab4c75235c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "878021c1-fdab-42fc-8225-5eef727f8cbb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62b19107-6af5-4063-a266-efd3215dcad2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "fdf55aa8-3e58-4592-8b8d-dd73c4600db5"
                    }
                  }
                ]
              },
              {
                "id": "ee936bc7-18c1-45f7-8540-c092f3d87f2e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "320889af-529f-49f8-90b5-743d73ade370",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b0d09275-d634-49c7-a59d-199801cdcad7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f990d091-ae7a-4a21-b6a0-bde4ab01675e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c1afac77-c4ed-4896-a7e9-0612081dc766"
                    }
                  }
                ]
              },
              {
                "id": "3b9134d9-a7a5-464e-9968-1e43ba55ecef",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "373403e7-20a5-4fd2-b014-3c0e32030c7d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ac6bcce5-52f0-4686-b835-0e6089a820be"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3cf9d323-6ec1-42cf-aad7-a3d8d46fb55f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "97b9a140-9db1-4243-8ce3-275af43c3c69"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2e219e29-bb0f-4577-a950-feed56ec00cb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d02d7103-1984-4b4a-af18-c8b90e6d0a9b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a6daceef-6b9f-4d4e-b3ef-5f744f6feba0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "46a828ec-ff82-4263-a14f-d2b69d1b3140"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "82ccdbc5-97d1-4d61-8b6a-875e900c76e7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "6f6be93e-2372-4fee-bff8-b35dc582b305"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7c637cdc-1d12-4c52-b429-6b57b6d11428",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "41843326-4b3f-40af-a700-83a0eed87e47"
            }
          }
        ]
      },
      {
        "id": "56f38d10-3e7d-4f28-ac9a-9c2eefacb2fd",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "6e880f4e-0b22-4039-90b3-b49251759a42",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c3c2caf5-6e88-4ef3-8c23-294b652a8b4f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c7b0e35a-2af4-4e09-823e-9c81f049a0e3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b4d42b4-9cf7-4a78-9e73-c9c5a92c6c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fe7e322-3691-426c-bb84-2dd6f07a6238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7f8cdb6-c2a6-47d3-9c72-dcfd63af472b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "72976045-cf29-4abd-9cc8-cdcd13b1a96b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "504d2f63-4612-4218-a60e-89362793f517",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f26bc71-7c96-418a-884f-bab28ea21c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9300ef80-de99-4bac-9fe9-06a5895b28c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d738d0-18e1-4c53-9912-976952e9e6ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "00843390-19e4-4620-8c33-9adba911ed2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bda3c8d-8cf1-4922-9e54-d0d8d1aeb3df",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6678d347-8c3b-48b4-8a1d-99d9494c4ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9ec61bf-2888-4a9c-9d0d-4d0026deec8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c37980-b712-45c9-a522-e91be3f204c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "33b928b3-25cf-49a6-802e-29356b985e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beeacbee-cd6f-469f-9c32-3d198f108ec8",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f06b68a-ed3b-4ca5-8acc-fb2e4315c1c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b17b904-f61b-4a26-8179-94c28cac7c87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d32d4c3d-8519-44ce-8aa7-b9d4a672bb14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e262465-b01b-40c8-9d5c-408c64db2478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "832d989d-ce71-4a97-806c-508b1ea8d10f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a0f42a-5e67-4d50-97e6-54a92718f5a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "474b7f18-3e22-484d-85cd-89845a06e347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae22dbaa-b2d8-4598-b5f1-f040d6ed1b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "30d89ae3-694a-433b-8026-89c52af3a9db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aaa08ae-4f14-4aea-9245-828ba1f24523",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73b84e2b-3580-4b5f-b3b5-6c871afb6dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0e4395e-4ea4-42b8-a506-3cc782013f25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ca33c5e-9d70-4068-890c-9467ab4ebce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3744d032-6b5a-4b08-ad1f-dd1a96fb7e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d844ad-8c6d-421a-8a1b-a06e52bfb417",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e33f88b-095d-43db-bb72-f34107271da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc139a89-0603-4500-929a-ac2990c32b67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abcd707d-5eb4-4b29-b836-e70fa5bf0fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "106120e2-2b14-4749-ae16-353a1ed43fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb49e8fe-26c2-49e8-9d46-7932b031751a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55765932-9af1-4b6e-90b0-eaa3c5098a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf173a6c-5b6e-4d16-8e7c-4d4383d1d62f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ebb7de-e11c-4649-abd1-e12e5f482f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cfe94de-fee6-440f-89a4-e2feb6699c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "056c2ce4-101f-4c2f-9f93-2f28e4f951e6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e79a02a6-d813-4a92-aa83-02fc9e5189a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79bb4fe8-83e2-492b-ad3a-6ff5ad417c78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c985aca5-7a28-42da-97de-ccd5d86f98d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcec37f8-7d9e-4aa4-8ca0-b9bb4bf79802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db4a62d-322e-4448-baf8-eebfefc6ea85",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f7369df-31e7-4748-9edc-7f66f0b641ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4529db3-d45c-4d91-ae17-4757b5c58a38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e09b0eeb-f184-451f-899d-5a16da00e5cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c054635-3072-48be-95dc-68281645f666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72788afe-7036-4ef9-9ad9-c861b7cd5826",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69872986-efd7-4fe5-9cb4-f2f5939054ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaf8b8f5-5ad7-43b8-99c2-d5c4d0b8ed84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0998ca0-8df7-43df-935c-fe30e8480974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "05f4fe17-e0ed-40ad-90f5-94f10bd574cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a43c375-4111-4f5c-9c09-8dd6944e9016",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef39e004-6455-4f6b-acc0-708aac85a303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "234408c6-d77d-4e3b-9fa5-97b798d136e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c64e7c8a-7b83-4ef8-9418-7417b7abc570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ca3e1da7-94c1-4409-ab4f-c102f55b3589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e3b66d8-f954-4933-b0da-2d7577fb8eba",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c07f3b-66b3-43a4-9957-ea986787db9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aa2ba31-56f2-482e-a4ea-854a692b8c08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a97987-35e1-4be3-9549-568be73c081c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffcfe552-ac70-47c7-9fd1-a27db044160c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef80764-5149-4b76-b4a8-4a541059866e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc540d2-03b9-427c-926f-ece610e06cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c60c7fb7-34a4-41b6-bb8d-45a52b9191e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c84a69-c1c8-454e-8378-50a595391c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e4eec1c-5cf5-4956-ac68-5733fe8de66b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "273fffe2-2bbb-4c0d-bc05-f9faab34cd68",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76fdad3a-43fa-4fc3-a313-ea13dbcb62da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89a4dbf9-c3f5-4e90-9926-332a8ec53b2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a223169a-e2ca-4a8d-a866-e50503285976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f26f835-1607-4289-af74-2b6fd88557da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90423ea0-e3b2-4ca6-8059-d29ccf3db57b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48685b51-e039-49fa-b584-cefb8122c7fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b83b972-dbb2-436c-a58c-b469818ef04d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a4e1be3-a524-465d-b6da-83ab09a040f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "99510cb1-7622-45d2-ba1a-ea32f2fcbd1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe5bd641-f722-42b4-ae8c-de532c58cc20",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e6d104c-0126-41ca-8f05-07fa59b56756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24348693-57fb-4f8b-a886-f012aec25a1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07c52c48-de7a-4444-aa98-a1b95f3a2850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a6a03ad-ca6d-4037-8f4b-07257d564a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "862cd34a-11c9-403f-8534-d9f0b4ecde77",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13cf6ab1-3701-4470-9887-ec885fea8a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47d90f0a-b56d-4b6f-b6e8-32e91d6b1f48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef60e63-f5ce-4919-ad5b-aecfabab7bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad6d457b-b151-4392-b2eb-844db09adf91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a148c063-0d6f-4f1b-a530-941891c8ef70",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49101061-9612-470c-9cd8-4f232f7a75de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0e5ec96-c498-4a55-93f1-0b79773f3a2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3381c1d9-c5f7-4e3e-811c-a189deb81faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25b63bb7-c1e5-48c9-8114-f2537db55f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "609ed905-ec12-465c-915e-ae119eff168e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce20502e-cfe4-490b-b700-588c412dfe03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d65d94c-c32b-4128-b576-ff33f9563237"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "376d077c-cb39-4575-acf6-c4c38b6f6242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c53d7df-d4bf-4b01-ae47-ce2ed2962160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80f69a16-9423-4681-b2d5-62159f08fc76",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c205dca-63ad-4b86-b102-ca34856eac5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75c9a8eb-2908-4f72-ac28-3be544ce6172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfae216a-09fd-4d83-9622-3cf99eecb7df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80940151-7126-4dd2-af3d-4d8a60277b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "352dffd3-7407-4353-b957-3edad97261e1",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d39e9870-d02a-46c0-ba35-621ce18a6cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3647f3d6-4f8f-43d4-a1ef-888d9ba14803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d18783-4141-4ebd-809d-899bb6c64d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d37ef663-4898-48b8-9886-34403457bb92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ccc342c-4237-4d18-96d7-5db1609fdc59",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7673bd82-35fd-497e-bbe1-9727d7b7bf64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ddf0fa0-47b5-468c-9dd0-a5387e9b123f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e51ab60-c591-47e5-836b-61c16f79bd64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "939d2dbb-dde0-40fb-bc3b-2969947eecae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe65ff7c-58b0-4426-830c-87d9ab24626a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c68194-0b3b-4438-ac39-da71c0e72c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8e145ed-2a4d-429f-96c3-ee73f45c0342"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bacc980f-0e14-47aa-bb9a-132ea679228f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1908f38e-8c69-445e-a51d-1b95e01cd964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ce5f0b-857b-447e-8476-bddd02580602",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "602161fb-7051-41d1-9752-f64809a2b4df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a04d271b-62ef-46bc-839f-302b22566e00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a415d780-fb91-46d7-8d90-b78d235cf97a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9634010-9ea5-40ab-b301-e2ce2239c382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88582cc2-7355-4ef0-9a59-15488ce740b0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7e63dbc-4574-4862-8c6b-c9f0b75f0e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b1f5001-9de7-4d97-a314-b57d315ac675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd0152e-ce59-44a3-92e5-423b0ba86e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "048b4770-40e4-4cbe-b59f-6bb5b1875970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38aaa3c1-1567-49bd-ab85-9cb5c09fa70c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75beba56-3943-4b0e-bb35-39457286f31b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11c60167-fed3-44bf-817f-6cc0d8807d2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f45bd1-ce4a-4206-847b-5825c4542131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c60b7289-3c21-4a1d-8634-938a477e4861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb78ce1-11b0-4dff-bc55-92e28e56f35f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f80bc4d9-5f94-4b57-a95a-8c83489e95a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1b0a694-93d3-454a-893a-ee202c71f815"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfddc262-5289-4aa7-8e36-50e3a493752d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b89548f4-8948-4e03-9844-487b2488df08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d3b2158-d81b-4534-8d3c-7cbb23963f8e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da0564f5-b7ea-4cde-9e23-4a80d2f08bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00f647bd-2990-4bac-8eb1-6b75ffc7c156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b04a0a1-b6da-4370-937e-0d2ab5b3c468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f79c15e-a42a-4680-bf37-49f632e1706d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b565ae5-f81a-4226-92d6-72b139c2dc6c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52010e00-8cb6-45cd-8bd8-56eb71762a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50b51d60-3b0e-4600-bc17-cda5f7308ed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64434fd6-d1c7-49f6-b594-28f3881de878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f20c5a55-a52e-4554-a865-f0b583995cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e657df0-6387-4d13-b4dd-6d2ad6ebbcdb",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d64e61-e422-41bf-a447-d190a79a076a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17c50d99-0970-442b-b7db-abbedb091207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93cefeb3-3d7e-45dc-8d20-2bb75c785abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad578dd7-1ba1-4711-9a34-65cb0a099971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa7f8506-9a86-4892-91f3-54b40c41337a",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6db01b-a80e-44b8-9c3a-461cb3a18cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a7b84eb-bff3-4192-b000-a2c10f807f0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbce3244-b4ad-4c83-a24d-9579692b944c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "997a307a-d8e9-4d9d-a373-d72dad34d935"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "07b8ddcc-3152-4867-86f5-d40327226d0e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "52b0b17a-370a-4ce2-b5c2-7c028477c008",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26fc1db1-3d48-41fe-a64d-8e534acbf64c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "960554ca-8879-40c6-ac51-9e3a19eeb252"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa45ce68-79de-48c5-908e-1203fd34d0fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "accfacff-06be-4e02-be72-f2781f623bbc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0187af4f-2b60-42d2-af5f-5561e8f0f6b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "506f8590-0f14-41cf-a4df-c1ac01016e47"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c847242-7a67-461a-8f72-9897d76d6d6e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4969f0c5-8520-4942-ba49-1038310399af"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0d4071db-84da-4148-b5b9-3b36b1336d29",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dc2640ae-1ad0-400a-8d19-d52799551264"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d263929e-c9d8-41dd-b275-e92e81d74178",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ee48a6dc-5a53-4201-8c77-b490b3217d03"
            }
          }
        ]
      },
      {
        "id": "cbf93a1e-104c-4f7b-b724-ec872ce0e650",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "22bfca5f-c079-4917-afde-3135d639af90",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b7e600c6-d85e-4f67-ba6c-b01414b4b291",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d0f568e1-8d22-4215-887f-2dacef9ad2e7",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd53a0e2-499a-400b-9346-945a3f588d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8f4fd2b-3ebf-4d31-80b9-1b5702060a37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "909bde16-82d8-41e1-91cd-4389c2a117eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6621ddad-23ae-4650-80a6-beece5cbf4fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8671aa88-a630-4b37-806c-8a811dbf1595",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1262905-b673-45e2-b721-cf3af11e9da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "354a741b-6f6c-4e1f-8ebb-f763be21b41c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eb9e5c3-b891-4cc2-8ae9-f94877149e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a13b61bd-3815-44a9-a2fc-cdac41630d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d34f052-2a5f-443d-a949-9a1e83225bdc",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d648d0dc-e0dc-4b07-a6d0-5d758bd93a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cd63e49-b656-413d-86dc-04125c2e738c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a42b2db-0ae5-4f6b-86a4-70df1284fc9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf498562-6697-43a4-99f3-7e29b2370e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "839d64e7-c433-4bae-a705-6cf0c368f0a0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f7a7b42-7d53-467e-b159-faf1be1a7eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c14d900-d747-420b-a547-13fd537950e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ced99c2-b298-41b3-9f19-046f67094916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "318aee02-cb31-4f03-80f1-124e4c6c56e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f20c047f-e217-43c0-998b-e7ffe08ced55",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e7d8cdb-eb9a-4027-ab6f-9c8c83acd55b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b27300d-0a35-4df0-a681-23efad5fff11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd0baa9-87e5-488e-aa0e-e32e879ccecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1362993d-c5f1-481d-b292-ef7de43560f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a58e425b-bd6b-426e-b32b-a27322dd31c6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6ea511-93d5-4009-89da-86e97294e93b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5836aab-e476-446f-a60e-18a3c0e7cc9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef16de6-94f9-4b50-bbc4-f63943805dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b81b0486-8913-45c4-a576-52dd0bf5387d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "980b44c1-073b-41c0-9eef-ff8c50570758",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f238fa71-7793-4443-8b97-d02a20a2c0ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34359b27-f8f9-4fa8-9611-65a27edb5901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab46e60-9c06-4804-a8dc-cb8c0082f2a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "acb12e94-341e-4c39-a7f5-998b3c7496f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c0a4d4-fb9a-45bf-b3ce-5c745e05499e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91594099-183e-4d9a-a296-5fd60d2c1d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ddb6865-5235-4435-aabd-92b60bd02350"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4070d1c6-5a43-4dc8-81ca-33b707f4033e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e12385d0-3ec5-4e6f-80a9-f707cebc45c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8374f24c-cd64-4adf-a49f-0bb2062104a3",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb9b801-9fbd-4338-b1a5-9b5422eb7619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ab001b2-5e5e-49b6-b7e6-8cdace2c974a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfcfc364-4b10-47f6-b923-d23cbda8e95c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "393bed71-96ff-40d6-9dda-130ca70d7694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5faabd3-a867-4a87-b05c-34736584da4a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d8c61b2-87e8-4bc0-bd15-3936a268ce90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f922c813-385a-4bab-8ec8-cce7bc1676c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4326f22a-9f0f-4c9f-ba71-dfec92460c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9cba06d-026f-4de6-97d6-484e017309e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a7dab4-c5ff-427d-939a-97d50b3ffe71",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d78c3f8-7afe-4744-bed7-7461f7a46d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2187d4e-28c3-4d6a-bb99-fecc9b1e6c70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eefb57f7-f97b-4890-a706-ad958b21e9c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9a61cceb-3637-46bb-8d31-488006c99b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1095c98a-9b7e-4a16-9df4-87bdc51a898f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4068a928-b057-4279-a093-84e5dbf09bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4e7b3fa-3bf1-46d8-9808-966b763e3fe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4024e92c-45f8-4820-8008-c0af303d5c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5c0914bc-f4f4-43e4-871e-d720609e91f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f6ece5-93a8-4944-9089-eb5a779032df",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "988fb42d-fdee-4e22-83e5-0dc12bfd7325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70af161b-57d3-41de-bc67-7f6497ced3ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c4af59-d207-4af4-960a-8e28bb8e49b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cae5343-0253-4347-af3c-e7fd75630271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "198e65b0-7f3c-4cf7-b0cd-c99bcd37a7da",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f05751d-57b5-431c-a5cb-e2a1ff6d7268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86ab7aeb-43b8-4b6e-b243-9aa068960374"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a9bbf56-9c47-499d-b818-66ce6b535dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c0016f9-633c-49ca-8ac9-56aaea05c29b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e8ab812-7692-4ffd-bcf7-12a7c06f0e7c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de5ee7b3-422d-4f69-a955-d6b4917243e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe7db79f-9030-40c6-8cb0-5bf22da3f606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b24964c-c246-4614-8ea0-456fe544abf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb6b05d4-3cae-4922-a04b-b59221c88734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c598fae-d10f-40c2-bbfd-b68a9502e435",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb7f179-d1a0-4415-94df-6823ac00564a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fc527ae-6ea5-4428-adef-bc665c8014da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e8270b-cf30-430f-9fd6-c05b5bf18e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "06d79ea3-99b5-48ab-8de3-2a4248c6d9d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82112e5-50c0-4015-8769-d95ad1358b1e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "824cc9db-6156-4626-bc94-020d0f0a3147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9951601-17b2-4b86-b6a2-e601321207cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6931d07f-dd05-4c5e-a531-969d63a69ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "41e1eaa5-626a-4fd6-baf4-4ed8c0297a33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2bb2f79-b8be-4883-a8d8-14f0f185689d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "872ce7b4-9c30-4b53-ae32-6e70d13f984e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4f391fc-9dc2-406a-a34f-094a66db2333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2be5d65-f304-4de8-a3e4-40c039ff024f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "caa40e07-c9f3-466a-bf38-730efb43d4fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a964ac-d92c-4a7a-8249-c6112597d7e2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11cfac24-5739-423a-8073-a43cb89d0b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64cd1274-bd41-42e4-89d2-5418eead5b85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f265af1e-c124-4914-a40b-8563565fa790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7222b55e-122c-47aa-a445-f7421c2e3010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c1f7b54-690b-4498-93fa-5dc62a78a4de",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2312258-2acf-4547-8ce2-a4ed95161172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "357bb8ba-15b6-4bfb-aff9-cde0a36eef74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8627300b-cf62-4d34-8069-7633251ca5bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a40e6b9f-256d-440f-b583-d2f620df69d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd8f9e3d-d4b3-454c-80d8-c2dfc0cde5ab",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec8b07b-f429-43ae-816b-a11c8ce87182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad28d9ae-1ba4-47e2-8c11-ba2409163104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d3ea25-8c14-45a2-b5ef-454bc6345c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7122b495-0166-4ce0-9a72-60da271f03d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa450aa8-83b0-4ca4-9651-11b83f891feb",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54554328-0677-4bae-bbce-d3b888063b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "151a856f-c6ee-4f87-92a2-24e36e80cdac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b784477-3e52-4a34-b164-183cdde9244c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "413ecd18-0d1f-401b-847b-5687cc4140bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8368dd8-587b-4143-94d2-66a74735c731",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f512fd-a056-4d0c-abc5-4a0e8310829b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b6e47b0-e6bd-4464-a18a-d45976c15eac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d266392-f4dd-49d9-a772-ef39708d3f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ba93440-c2ee-463c-af22-0021034e5f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc8eef5f-1456-4284-a171-1233483c23e4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f491987-37f0-45a4-a4d3-8dab7764e253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c888b659-6bd7-475d-8295-2d79daf7cbd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d97829-383e-4bcc-9f8d-23ad3e948bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd7d9328-5074-4cd4-8205-1ae331481257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "634ed7e6-8a38-40bb-b496-761ae4bdc749",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc3bd48c-cf51-4cfa-9655-fdcdb305888f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff716860-d2bd-47a6-98aa-aa5a9c2a1452"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b9b918d-ee61-45f0-a9c0-1ae69bc597d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6253616-7eb8-41bd-a2c0-d309f3059a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1fc0fd8-2ddc-41f1-99d0-83373565d55c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab59bc5f-0bf8-41f4-af04-29e1f20d9018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9c5d041-3385-444a-b219-866f4d059534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7654c55-f9e9-4507-9425-df65abfa4ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62de903b-a881-47f1-85af-39bd2aa7cec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "013312f1-7557-4bac-8d55-ae57ac79d360",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d48e8f6-fa8e-4bba-bef0-9cd8398175d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3b93c29-bb2e-4e93-83a6-cf3e80c0ab5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72f3bf1-65ea-44ad-94ce-76884f7a318c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3e7fd91-55b4-49fb-9520-eb3bf9db637d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa486dc4-237f-48cd-b06c-11960be90cac",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4d14c99-3f8b-4216-9755-cc980fff8f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7468844b-e1fb-421a-99da-40286ef4b140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968b9216-8ab5-451c-a47c-2d8c652c643a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7711a8b3-4767-4c0d-8273-e8ac26921e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed1a0394-1040-4627-8ff1-75263a2dc146",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d67260-9eed-44fa-ac46-77ae99cfab22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91e6ccee-1b79-40a2-b1bb-6db43e63a2c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65836c2d-5f54-4c38-9c5b-055d31abeefe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f23f02db-a178-4d64-b332-133b3a126667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dab556b-dd7d-4806-96b3-6d175039ff1d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "320dd493-38c5-4ec8-a03e-01b724703dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7721e94-e49a-4d35-bf22-77440d080a65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13675b21-4ce6-4a08-b398-b9126601e714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2daedd26-352d-4fe4-977b-2469d1cdfa38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18300420-32f3-4144-b14b-1e5b669b9100",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0310f6e-70be-437e-aedc-cd50a741049f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2bf64e1-d41b-4bf7-97f0-8e401e19bc05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acab666d-3234-43a1-8a83-f8c21e05b64c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ac0c246-c8de-4418-9812-34c3d92f8d22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a70cc348-e4ee-42f1-8a1c-31ab8eb2b1b9",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f53193e3-541b-4d23-9c4f-bc3b329f56f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7df28c93-faf8-4c7a-b9f8-056dd33ea59e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8c84cdf-bd8e-451a-b68b-e40289f4993f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b844c0c5-d1fc-47d6-8f9e-0e6c54a97f7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a152c41-4a44-418b-a25e-6b06444ce443",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ef5360-27a3-4df0-83ae-a99b70dedc76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e72f5756-61d2-4c9f-b5e8-af1eee4e1459"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ce563f-7551-4fe2-a42b-491980eab75f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70140ccb-4eef-4de4-ad77-7e20507fdf58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c05ecdb-fc9a-4c56-bab2-ea328922e1de",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f4cbd13-f4d4-4f75-9324-e16bd63d18e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee25ae49-5cdc-401d-911b-f7721f14ce2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789cd5e0-8cb8-4178-bca6-59d355a562e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "641072dd-84ba-447e-a287-42fa32269642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee3b0c6-d202-4337-8d07-df595aecfd90",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a36d7dc3-ac4f-43ac-b7fb-80a9f52ba00a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b082eae-5bb1-4161-a47d-94e81f9372f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b906734d-4d59-4870-a390-c3817511e9a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e688330-baca-4bed-be65-4a627bc8d69d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84826862-6d1a-405e-b730-8c7dd4d6c24d",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4664ea89-cbee-46bc-a351-b878fd2b2370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8361a00f-bf74-4a39-997c-5070728a1d54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a3e453-627d-402b-93ca-857df32b4f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f21c358-a760-4282-9ef7-7317f3ef34b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebb7dfa2-8d07-4c60-85dc-80919caf937d",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ee802d-9372-43bf-bd3d-968a17435280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e5ee254-abc0-4154-b138-335bc41d54ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b7d452e-2b99-4d3d-bcd3-3ba74a8dae1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26561326-bd57-4c65-9019-b23a55331927"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "10d0bd8d-1736-445f-a099-e0bd080d06d3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9560855f-9bf9-4915-88c1-2f22f82818de",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2687e527-ddae-4a89-b47a-ef8a08c09295",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "be331e92-4dd7-4927-94e9-935c8bdb83d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c117610f-a4e7-4023-895f-a266775783b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c73dce95-a1a6-4ba2-ace7-9ee4f29a4275"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "44131c04-6872-4f50-b424-95bb3853c9fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53589a72-c362-47aa-8b99-4ca88d41f355"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a15e1d0-acf8-4357-81d5-babdfd7d4304",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d3b0a26-34d3-4f12-b3d6-a2484991e2f9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "61b2c5b3-621b-4c5d-a51b-1c99adbfa272",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "69ea6d3a-085f-40b5-8128-03851f9a52e9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7225a1ca-31ec-4023-a46b-c4b40c9cc74f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "01f43102-14cc-4910-a6d6-944a8ba4b94c"
            }
          }
        ]
      },
      {
        "id": "ebbf9415-4165-4616-8295-a8891f228fbb",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ee917f35-6350-4f75-a3ba-8eeca950b2d4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "40b0aa2f-5fa2-41ae-82dd-32a295836a19",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "be34c800-a98e-4e0b-827a-70c1dfd7b3b7",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f34377a-373d-4010-badf-106fa5012348",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "278990a7-9491-4d9d-869c-1e77b6927abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d4401e-8ee0-4dae-9194-63c021e1738f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48531ba8-0460-4861-a137-212abffc612a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed98a729-fe4f-46e4-b7f8-04a5e92a692e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc8f6c51-8e80-4a40-96b9-4540e7f31c65",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45c6dd9e-b041-45f4-aa67-2b0bc5a30b05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e615fd7-8dfb-472e-ac05-6339e9358adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e12eb0-fafa-4044-82d4-30245d376958",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e83615a2-96c5-4af0-b8ab-275b9c31fac2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4fc0481-5660-4c32-bcbc-a1499bcf6d00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "011b2519-da3f-4e8e-866d-9eea5a7840a6",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e165d650-20b4-4e75-a1e5-9a2254c4ee2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "505f40b4-96ad-4f83-be14-76f4a578366b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bea9466-766d-490d-b113-e2cd732bb463",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd66675-df47-4949-aa36-ab61175321f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0129a88-0773-4b4e-949e-620d96446edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d3d28b3-eca2-4c8c-a97b-397f0113529e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a990254-1177-4f40-aa1b-49f2e92522b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c16334f8-5c10-47dc-b112-1ba9c60ccf9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e51a12-68f6-41ac-ba60-23ee31d9101d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b86f7b1-87a4-46b2-afe6-d17f42b86caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41e84c47-047e-4288-ab41-257fe8c03704",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3639516f-45eb-48bb-9fd7-c183e5e63de6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78bfd8eb-e98b-49f4-a967-7b7434a67792"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d26463e-f916-4ca8-8aa0-37227f736166",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bce5043c-95c4-4894-b352-70c7a5c3b990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7bebb31-1fd1-4010-9ea4-9cb8a7a40635",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccce8f79-60e4-4cc1-bd13-4aa9109ea0ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f2318f5-32d7-44ab-a4c4-304100a88ac9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4295df9f-cc6d-47ca-9a2c-1e566ca2f8e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fe71bb7-0ce7-4700-81c2-fcfec7a1f326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df473dca-a585-4f67-b317-4d91cb5a9247",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "857a07cc-2874-4c07-94c1-d4bc279066bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "818298f9-7a82-4a36-9648-3c8d79e3b18a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b94040d7-31b4-4fa4-9d17-22513c102742",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b03c6451-5208-4bd2-a7aa-e28c446f1605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05163dd1-7bb1-462f-b4dd-7c2fe72c4fcf",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ba76d49-b400-4afb-8fb9-52c7a7d621eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d4ff82d-0d95-4c59-a01a-9deb19481f9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcbdd7a3-b56b-4bb7-8961-54162721dc8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "407fa89f-f00c-43c0-914f-c8f1b738facd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9877bc0-a0e0-43c0-96bd-888ac55f4717",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d0ffc1-c29a-4f78-a424-ed49749fe790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e5cc69e-a4f7-4ab7-92b5-4bfa6b7d1aaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c8913b1-3723-4b5a-9c70-52c6bbaab3aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88781059-623a-4a0f-ba29-9070aad966a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f02d7a93-5c5e-4806-a156-98760254d180",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff245a4-cf1c-4a11-81b5-6691470702f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c2b99b7-62be-4517-9504-98d70fe0c0bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff0ac7b4-6fda-4d37-b450-a4d749a87e91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec543f7f-86c8-41cc-920a-a33ea32e0575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc23ed53-93b2-4ccb-be15-c49387f1ca0e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad3bb9c-18f4-42bb-afe9-350946433c68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1d0da28-3d64-46f5-86a3-c52f1d208ec6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaea9b49-50e5-4806-b0e0-c063a0739219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9b11043-a39c-4fd2-b005-da9a64ac7cf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "864305ad-dd52-4d17-8b91-28e91a24f8f4",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a27094-2427-4146-abd7-42c3fdb48d14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c47b542b-2d5b-4ce3-9e75-f3d1f41cd713"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e69d1eae-5f7a-4878-93d8-5f2dbcddf31b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4470a8f7-bd12-4521-9441-210ec4e2b748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ba00d88-d1a4-49e3-997b-2f8bf77f9db2",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aec3809-cc40-419a-b1f8-1b10848d45bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea78a140-0329-4560-b347-29854e7d58b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ede4eb-3cf7-421b-934c-d5a38913fb4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23259e49-cafd-4ac5-8435-c75e3147cb11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d80e894-9daf-4c47-be74-e16b04edf4ce",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1165e1a-e834-4280-8564-cbf1448e6512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6789ab97-8696-419d-8d48-17165ffffc31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c171a29-bc50-4fda-a395-c296071358a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "273270d0-03a0-480f-814b-bc8b967eab0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62a5a04b-165a-41a4-b4a6-92ee49b02096",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69403aa3-0c1a-4d52-932d-2f51e7964661",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bd7d124-b683-4b49-8b8b-52cb8a9380f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6171b9e-1d75-470b-85af-e274c3f52f2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "118a58d5-2cee-4aa4-8702-5c6ba5c16760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a409ec7f-ec7d-4495-978f-44e70b3dea21",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f7eb2a6-4a4e-4f1c-8f1e-ba6019e7e747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adedf214-a07e-49a3-86f3-ddc474fd94ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b29581-93ba-476c-9383-a0de12139a3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "382a31ab-cd00-43cc-b7fd-efdd29b18555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a7fb5d4-1888-4ecd-89bd-f79ec01a9726",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9abf7be8-482d-4efa-aabe-88f66dd9f276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6dda09c-ce40-4d27-a932-8a12ba44c749"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51961f0b-c0f2-45bd-b6c8-cadb9e5b5c80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73ca9bb4-19b2-4d42-85ff-883c9016444f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d63eebd-984f-49ce-88f8-1f22e694f1ef",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b287b9-2f49-4738-bf57-d572ec608d30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4f522e4-9853-4386-8428-9b4e9a6eb77c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d4fdf5f-b2ea-40c7-99a0-c27c1671ec27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "072cfe80-13cb-4d09-9229-eac1c061aadc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "049cfe1e-7bb6-4121-a7cf-cdb46d36a79d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c98da886-ba88-41e5-b915-091b69e92849",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2467733b-4601-44f2-9417-c50242682a2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f31fbb77-c48e-46f9-bc34-bec8232cf855",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2408fd8d-6cc4-47b2-9136-48b07443f203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87edec56-eafa-4b13-971f-a072574cd863",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f424bda-b641-4a83-a0d4-6ed877a3376c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8a79c36-d93e-411c-9cf2-4751296aa682"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d706931f-9737-43ec-8fef-2d26067e61a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06e8d4aa-0248-4c20-94f3-aa2efad6ae22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f51b6ea2-8da0-4b61-a410-4c957ec3bc5f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d6304f7-f096-428b-b07b-afadfe1d3a46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7b7a440-2f06-43d4-8e7e-aaad432380c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba67515-4a1b-4c60-9a94-c74d83a05dc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f121134-7dbe-4fed-a5db-395cb21736d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "362ddf9b-7ae8-40cb-b23c-bf31a5e100b3",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f76ab7b-f6ec-4a0b-bc8c-6926743e0b18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f3c0d9b-197f-4e40-9586-f7a9837d350e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6996e031-3fcc-4070-bcf4-30097f13faa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e2ee5eb-4f6d-4fd8-9b45-c6414bb1d20c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41bf4967-9085-4dea-85ee-2e46e932a05a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f09b32-7e50-4d3c-85be-4f6d8e95dbcd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d800387-8b60-4958-87c1-9366eab11b34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db0abf2-ad61-4247-9775-f1e31be49c96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6e7c6a1-d8c7-4870-97e8-da86c184e74f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f571d12-30f4-4133-bb50-35fd76b1d543",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cef3901-1508-4e1a-a0ac-723276a88543",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ac8e52b-0126-4b9a-b891-2a196d326938"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc2c9b5e-6a2c-4024-8939-1370c3188a75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bd4a3b5-3b96-4afd-b65d-97087ea349cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fa9fb45-5356-44dc-b9d8-4b0ba46482c6",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c79dae-badc-4f09-8565-36b49fb56266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffd3600b-8ea9-48cd-a832-d2d5c89bc8c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96eace10-8f25-4e20-92e6-32ba0ff7d2fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "293218e7-dfb9-48fc-9bac-e659a9dc47e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567eb616-e10f-4786-9eae-3a45ac4d6d0a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b58bfaf8-0b8a-4a2e-ae2d-34800250843a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9473283e-fd3a-4f56-9590-1a46013010dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32dea34b-05de-44b9-a82a-fae9e26eb9e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ef13abe-411f-4190-9820-bdb45f87b183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5aa0fd-62d1-4a5c-b034-832911496c62",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c3ebfc-ffee-4b2f-a4d6-a9a5253c2943",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2db76cd7-b018-4374-84e7-928532a34552"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "110e8f91-2528-40a1-bc7f-f98e3e58958c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afa911ab-d3f9-4aef-971f-26a076fe293d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c0cffc-53b0-472b-8722-bd7913dc557f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e119b47a-1705-4f2f-8350-65f7827209ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c8be1bd-98d5-4de1-9e8b-d93266b76332"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6008b6b9-290f-4638-9970-6089278fd7cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b6ea6fb-2da5-4f9d-b93c-e5686d9bd47a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a7a9457-a5c6-417a-8c55-6abce4deec33",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c101ba83-2209-4954-978f-05f62218a783",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8c2ac37-0726-4834-9c14-d9934c983021"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffeadecb-f5a6-49e8-b442-5184d12511ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37b2ee88-d7db-4e05-ac29-b1a16931c0c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a1ca69-9548-42e8-b6db-df905cba2e54",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44570bab-b235-46dc-91c1-189c08ab06fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "962e5640-6356-415e-aceb-40004fdb41c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc34508-257f-4524-9f1a-3e05a8cf4cec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51c515ce-fd7c-4719-a023-73f943551039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52eed3fb-379c-48b6-b595-7dbf56853bc6",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754a9351-5ad8-45a2-b17a-54b099f1867f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d94852f-8396-4c36-945f-0dd600af1c31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac479a98-f452-45a8-8d68-84c0c83274f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd6e8d8f-26bc-438f-a17f-1cb7c70a75e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12605f9d-1a21-4eef-8ea8-e058df73e3e6",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "331e523e-9fe1-45fc-b0a4-76d372005c85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bc7a6c8-775b-4ba8-a62c-73db86561eb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6df07260-9ce1-46a4-bf1d-f99bcbd0ca1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6427d1e6-c835-4651-ba09-c5e9f7ff4ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9545d99b-4c87-416e-9a9b-1a7cc56d8560",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdf8eda7-0978-4313-93b9-b08512241d9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6e9af48-be8f-47dc-825b-fb9d558053b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e71e3559-b610-437f-a4aa-758ef25f79ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41f51f5d-3e1a-48f8-a1b8-4210ea4c09a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ca3d76-8683-48bd-b00b-d15a387fc953",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e504acac-74c8-4786-afa6-fa0bd84622dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b68872ef-c697-4b6c-a3f4-9d14bb014aed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "149b29d2-d9bc-4303-86b4-916bbcf18181",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9430fee-910f-4a3b-8c7b-47cf28aa7cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8573c530-256e-4274-8798-0b50b8657cdc",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "488bbe7d-2635-4e8e-8816-2d0668ddb2c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4851413c-85cf-4494-a1a9-6d340dc80057"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38742e65-2816-4534-8a6d-5a8d6fbe7d38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ac95dc7-f4ee-4654-b430-87f56b2bbb91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd797c99-b22c-4230-90d4-06c06603ec26",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5f26d4b-480e-40c8-b62a-abfea8cd0492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86f9abc6-5de5-4dff-afcc-4917c4fa5ddc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a076cb7-fa09-465b-bf77-ffc2fd2a1624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0392bfc4-1e7c-4450-8bb3-119e9e3b2c75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a338a85-63a3-4f73-ac94-3404d6655a55",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6153f38-b3c9-4c92-8534-49baa4128524",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3fe8f30-b95e-46da-bca7-609b93779d04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "315e4ce9-ba40-4110-903c-bdd16e2933d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ec30010-5e8e-49ab-8ae7-0afa32961ae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62d4a0b7-d5ee-4cbb-9702-ca222e04746d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef40ed7d-bc84-46fd-815a-4c553d03b157",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e597412d-ddb6-448e-bff0-073196f366ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd7e881-fab5-4a8f-a1b1-7447fc083711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9098be2-d8d1-4186-9f5f-24673f8450a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f5ecee5-8a38-4ff3-9ed7-a23343aa6aa4",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a7ea082-093a-472d-9888-c53d850e2285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e23c8a2-afb1-40b7-8ca9-a1b2877bc53e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8573997-1f5a-4171-99a1-cca4d46dc7a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2e2454c-07a8-446a-bb1a-ca32527e98b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab7abb7-36de-4c39-a62e-8c5d527a6713",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de0b7fc-8c3d-4993-933a-641a572eb2b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e0b4be1-aff2-4bc6-8f1c-04235e645b2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2478428-c7a1-43e7-8343-0513d1583239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39d7562d-77ab-43bc-a878-77a950971511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f06ef0-c50a-4460-9129-8e414dfdf944",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7a9c050-73e3-47b1-bc8e-04c60870ce38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4c8163e-df03-47fe-8598-095c8d7b8f05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d12d198-4935-450c-9b24-c7094e9fcf49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c120425b-2804-4d2a-9dcc-5a3abd768bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8a7d5f-bbe7-4d0e-bfdb-229ac7f458e2",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb73681-a3fd-4f51-a51a-39f033531101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e187b763-e280-402a-94ed-d452fce5abe8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55624f06-83fb-4bcc-8d76-853286d35d10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ee1266a-330e-4947-80e2-61031a2ebfd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0669e039-c770-4205-afee-f6e60632cef7",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e08a72a7-0d4f-41e0-a219-54185b4fe76d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d528bc4b-6309-40a7-bd1a-14e879a735b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce946a95-d703-49e3-97e2-918f56bc506e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d78f8e4e-241a-4ff7-982e-d7c3e27671e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f8dbcbe-1339-48a4-a719-32003f420504",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6939e3fc-12f6-4cbf-b37a-49c430de421d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9de47152-05db-433b-a263-e9322491872d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b31aab4f-90e6-4dfe-935f-70decae7ebf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f753a29e-8e09-4887-b6c1-003ac67f2880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "112604bc-9a50-481f-b911-ed0ec9f6b13f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e3d540-0f86-465f-a62f-bae4cd4f2e1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91560e8f-7494-45be-8075-a3dd9b11fe06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ea1486b-9927-487d-b8a6-88de5993a789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b23d3ce-7bab-450a-a4df-2cae53e78303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62d426bd-10a5-429e-8662-672fcdb37dc3",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b9009d-7d13-4bd5-ac24-67dafa42b6c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62ce9dd0-898d-4643-b0e0-6f9fb373451e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a484322-4166-477c-8f50-de55c3804b29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34816c13-15e3-4972-be65-3dcbbd44e618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "599bf313-4d8e-4bc5-846f-431b5af6bccc",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26756f40-c9f5-4634-a395-6207be1c889f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bc6ab22-7359-4348-8341-53ac231926dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "861582f3-bd88-4f15-8806-13ef27fd3907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bf5b968-58ad-49b7-86f1-bc1e52f9fa68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd56b935-5cfa-4f91-a734-864359d7e6f3",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc882ff-0644-4b5f-a9b9-79443f72f7ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7549e6fb-d898-4880-b1bf-716c880f50b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc4eebb8-482e-41b9-88ff-ee9a31066305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8263ca8b-889f-454c-8ce3-ac1be93aeb5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32eaced5-4243-4a06-af27-5a8aa8ed1ca5",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fba6facd-28fd-4ef3-901a-3813c02ac6b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c31b375f-243c-4188-9460-5f328168f535"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66567701-f4fe-45f8-9d0f-ac01c4396204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e568cb3-0705-401c-b483-d06c72d41731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90559106-876e-459c-b0cb-b8be4ffc510d",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10aafbfe-ee02-4412-8bc1-2a6743247204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc4580eb-f84e-4469-81ea-19346053d190"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e1ebbb0-079d-44ba-b45b-ac8b6b3638c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5bbe681-6392-46ea-8504-f402aae73fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e891e2a1-f6d7-434f-92b9-43f1eb39e3b6",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9524f326-6055-49cd-a251-5a7ead2639f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95d13d83-9ef0-4a6f-86fd-fe19a6c50e9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a39e9533-afe6-489d-b6c3-a6fd4f6a1428",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3b2d184-59f4-4b3c-94dd-1ae998ae65bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3535b2db-1718-4f83-965b-2cfcd7f0b097",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956ae5eb-b220-4614-9c50-f7312513f0c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "500d36a9-6680-42b4-bdb1-9a719e557ade"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8a424ce-0289-46af-bcba-6ba59ce5358f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07e02539-4853-4a19-bfe5-0064275bd7db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48bb4ced-f891-4a05-a7ca-c7825ad37d20",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d03a925-b194-4512-9c3b-2f6cc8491028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0312015c-2fdf-4d58-925c-e244ab0326d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a77bf9-7f41-49bd-a721-0c27fab31fa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d4a48f8-285e-4acb-a3ac-8d2c88c34434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2059478d-0893-4f79-a856-42cee40f38b1",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ee7659-9534-4c62-9a45-90fe54f34c62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d2818b7-f821-44d7-9053-2719d99138d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "836586e4-62b0-437a-a850-8a8e2f2f5e29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "089a7330-e15b-4cd0-beb1-442537719313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b66c12-eec8-40d2-b7a4-d67cbbfcbef2",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "befba8de-eafe-4d2d-8dca-bad238208137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76e780ff-f14e-481c-9357-24db54f216a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "351109ac-a46b-417a-8107-2eaa07dd77fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a96d91d-3984-4df1-bbdc-5bfc4e95fefc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33c9a9c-4dc7-45a1-b89b-2a14c0538138",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ab1a7b-7ff2-4318-bec6-5ece2c2fb64c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e57eb241-ac6f-478a-aa4b-e5fee5484b1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9afcc5df-566a-4e13-b3c9-dc30a885fbca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbc085b5-5f77-473e-87dd-bae880880b31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb39949-531a-4c0e-a6ee-f5c1e392e3af",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a99dbc-eb2b-4db0-b12a-a080fa753dae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec947499-856e-46e6-9d40-0d467bc27f92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b1db21-b3e0-431e-ac9a-600cb7cb5b20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd3abfda-eadd-40c7-9f55-ceea26ae53a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b2e8012-06f6-4d19-bfb0-be5779859c51",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb24d86-0dc8-4639-affa-46a99fce9526",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c881d29-d18b-448e-9523-f3caf7269235"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c979c5e-d771-4eea-8649-ac60e5103eb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9851884c-443a-49dc-8f2b-8a456f747e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce995f88-06d5-4c47-85ba-70567e738667",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f337043-9c18-4e8c-a40d-50cff5dfe2f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f404ac81-cc33-47fb-96ef-ce6d94e4b231"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46390b0f-43b9-4a4a-9f5d-4a9f27ffed02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ad8545d-8f62-41fd-b76d-011dd197b505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45abc4cf-bc56-46a2-ba80-12bafa242611",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab99461-a0c4-41da-bd63-a9d2718ca2a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f5a9704-29b0-40c4-9ce2-fdf33f4b9353"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55f5649-4e1e-42ca-b8a7-a16d3005302e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "284c3210-b1ce-47c9-b11a-4bdb09809b75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f72fc5a7-3b57-4eb9-ab19-da1eff5e0842",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1912c22e-f608-425e-82c9-93cbd07804c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bee754a-bdb5-4bc0-beb1-74abd9b3e3c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bdd1e21-99b4-47f4-a7da-e6e085d1ba14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45a7cbb3-fe7d-40a4-899d-7f7484caa6ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b18f27-1866-480a-a14a-76bac7112e7b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeb82556-746e-45d0-a717-c784f3d0518e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a95d1d9e-2c5f-42ef-aa1b-b8b4b58b7dc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f0bf7ff-7863-4239-958b-56f44ce462ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8936ed9-0b8d-4fdb-8e83-a541e4b343e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c92405-8efb-4b0f-b09c-721314104945",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e802e8af-1a91-431b-890e-f089ef310459",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ebe86cc-f918-48ee-8100-5c2d17ca99ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "853f5353-dbdc-464c-85ae-ed27d19f692a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60ae50ca-6171-4c95-be73-a18b34c11a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b2cc18d-f1d2-43bd-b784-388eb82602ae",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e02417a0-0cb9-4dd5-8d02-390e666a3618",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d534e47-f1c9-4ed0-8668-6bf2804e65c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02a02fba-1fed-4c64-9aa3-f80359d62525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24e95848-edf4-43ed-9db7-d899625fe0e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73d5d11a-c41e-4eb3-97cc-7e57489cd1f2",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d26f95f-6ecc-459b-afc8-59ffccd4bba7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e24240b-0075-41cc-b68f-dbc5cdcc1c2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ecaefe-01d3-4866-af38-eb52bd922585",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c2d910c-2ea5-4a6e-9627-d230f862777b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a83a0556-a33b-49fb-ba66-e4a757b6d589",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7949f89f-53a9-4033-8891-180f9397ac09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e962c10-d058-44bb-95e7-240937c6d3ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "758c8a3b-87e6-4c46-8c3a-fe8f9d9fedae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96e6fed4-5b0f-4718-a734-5b8747ff01d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cb1b505-60c1-40f2-a0e5-4fec036d3158",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "291a7298-d56c-4c04-8c87-7e6e8f52e957",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1b805d7-47de-4e19-a6c4-fbae02afc6ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e11fd7f-7c14-4d03-b0af-e47f204c9493",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f56c7fd-ebec-4e47-9196-9e8dbd6d4706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb2a9807-3102-40e8-a227-736070f605d6",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d5b6097-8ffc-40a5-a231-b5b17b97d552",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dc26dfa-a1d7-445a-ac10-c4dd6e14d318"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78aba37c-3cde-4ba6-a694-748176b25d29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b664cbe1-90c8-459d-b3e5-0268d262bb87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3963d184-24ad-474c-b201-e23ad3023f25",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cb77d3a-4e6e-4f0b-b1d6-c54f4ecd0fe4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "866c057a-9bda-4214-9c70-d489a68804be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3675a0d-79c1-4f26-aec1-d65cd4dbcf9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0259660-27d7-4b9e-a74f-3cdb1daf2874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c2946ff-464e-4241-8755-35e976a24920",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dceb6a7-3d92-4927-b1e0-84f6218b3dd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c6f2f7e-ae46-4030-9d01-09f80e3745c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4acd4eb-286e-406c-b60a-c9c2667b7090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4544ce2b-d404-4303-961a-4e6632b16029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23986740-3a01-450a-a525-92bae07cc651",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35124e68-1ea4-40e4-ae81-6c1b6f5ce0bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaada831-9459-4abf-8b24-476196f7801c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5752c57b-e0e1-4cae-b615-4124317115a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b1cd048-206a-46dd-815f-2f8d43ea0faf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b96af92-ce3d-4008-adc0-1d95682b9fba",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd4d4954-3c3b-41fd-8a74-27ee4828ec70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41aa2e11-472a-415e-979d-00e766bd3cfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c00884d1-20bb-41d8-b351-5ac5bb64b8d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29c4db88-a01e-4f5a-a831-66496cfbad2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c36eae-b982-4345-b2bc-11d4df510b70",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ea1397-a393-44a1-95cf-855a2996985e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "771a0f5e-125d-4c3a-b34a-97a902446eec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dfb3687-7937-45d3-8ac3-a75b04bd4af4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9a8c04f-dce8-4cec-9f16-9916930b2252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32cf823e-ec26-42ed-9778-9824531ba480",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f06d4ad-e0bd-4f94-aede-aea5178b1656",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e738dd6e-2a01-464e-8d7f-807b9aa8f9e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b1c87e7-b07e-4326-b540-00a33baaa4a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c89a1302-1afb-47e2-afac-54678fd7b8ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b4c8ba7-2c94-4e3c-a2f1-a950472164fa",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b1e8df9-d391-40e1-9454-beae30158a10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5edcdeb1-19f5-4cd1-af91-25118f192adf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef567c6-6d25-4245-a079-f07d21eb665b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41e5c3fc-cd83-4663-a252-a3fc3db95739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7516ec6d-e5f1-4ecd-ab33-481bc6d68a5b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9360792a-20c5-41fd-8886-f7871cd653dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d97c990-eb59-484e-9fd8-c250e9f3d057"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64917257-a893-45c5-855c-565795af174d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ab520b6-53aa-40ff-9708-a34594c600fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2c233aa-c0ce-481f-81c9-cb5e72db7cb9",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87b9100b-0d55-46ea-bf35-f99b9a71f70e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd2311ed-073d-4681-87b7-ab297c83ef11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33498434-2af0-45c9-8254-255ff392a9f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8271b15-f900-4714-964c-4677e21378b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0716ceff-fbd5-4f83-b7ed-b5f20b928691",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b52a0d-7832-440f-a173-2863179e53ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed3d8e7b-1340-4160-a372-1061bb786e50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e1dc45c-fe16-405d-b048-e82b77b62d1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec7a8b83-1281-4a00-a6ee-4070fd453daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9bd45ad-2175-4bb9-b3b6-21df156fd2a4",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d6c8889-e587-43da-80eb-3b204c9649d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1833f9d5-337b-4ace-8cd4-65368a91ecf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef58a41b-4148-44e8-8cec-985042bc1dbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3f036af-76e1-42f1-b61e-b5e8cdd2ee18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25a1107-db3b-4822-9ac4-8491041df972",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f43ec8-4728-4b65-b613-6f72ca8649c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ed47f3b-2a3e-4883-b927-e7c8be0613f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e38d6585-3506-438f-87e6-07cdb3d2d5c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7270dfe4-9014-44f2-a065-221692c99dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "402c2f54-cf09-4f66-9839-ef8e1c497946",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e5b373-bedf-4875-84f3-1c1b7aacef29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33135f9e-f0db-4d5d-bc8a-c7bad24c88f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab63732-b4af-42e7-826b-1383f62c7006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f44aea8-db8f-4933-84ad-c9e8e7198563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f918574-afd2-43c6-89e4-905d58cff4e3",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f42eea37-274e-4feb-a392-f1737b177967",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7087ce20-32fc-4036-8089-187e36790adc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8096e273-f59e-4304-8910-2afd98673647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "429227b4-f49a-4359-b369-ff8a8106ceed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a7a671a-6b1b-4017-a1f5-5e132ace2f7f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a7dd00-c852-4e3f-8945-7d6c4dda73d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be5a716f-7ffd-4b22-a264-ea3c95e21ecf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23fbf8c7-b6cc-46e3-b224-617ca90ab587",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1be322ec-70e1-465d-b646-7f9f96024345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d03d7b0-3f4e-4408-a1a1-d8ca65def9f7",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e918ebb1-a7c5-49fb-a6dd-b60a80f69bff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5047805-3204-4af2-be4c-00a86ffb357a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1678a627-3a4b-46ad-a543-6b2786228e16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f02c298-d3b0-40aa-90e7-da83a0b933cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b21b6cba-f9a9-441a-98ea-c3a402417524",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f605f3-9c1a-41ce-bca9-3f27da9f2869",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49e00b4f-b8ee-4f58-b7cf-2cdb5468029c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f547fa-b358-4c55-bbb3-bdf2e3a412cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74c54405-1e69-44ba-8226-4c4d3249b9f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b302051e-830d-4f27-9154-09d6931d0be0",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "785dc31c-a938-46a6-a1f0-7ec7a306a1c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5bcb932-e14c-4bfd-a8a9-1d2d70c597fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d70c3752-467f-43cc-8065-5eeea3fd3653",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b97246a-7db3-4cdc-8b43-b24d7a93e25c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a13b728a-8a59-4c08-9a01-3ed0b4052995",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "060f7a28-052e-4ba4-b75b-ca5377d2a4f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3925f7d3-7133-4a62-8657-134eb9f81a40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca9faf9-2e70-492f-8e0b-1237b6a4a906",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dcb864c-da65-4239-ae4d-752a3da9316a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae340d83-2e61-4825-841b-78761033b661",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20230815-6a43-48c0-a5d7-fe09a8bb47d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e81b7681-c9ea-44c8-9530-ba238b7eb2de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87964d61-62a9-499c-87d5-de6b740f5f5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6a560f3-1bc2-4cac-9fe1-b179b244524b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19b43ab8-ba96-4e18-85f1-89ecd5e414d7",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4a2dd8e-fcce-4867-a744-3217aa12bb96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af236dbe-fb0b-48af-9b08-fbc0c3df0739"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c0ab15-d1d9-4e61-80e6-09850b02961e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b306e39-c864-4011-b976-328a7ec55714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad41c697-6682-47f8-b6f1-fbfbaea8a809",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddfe5b60-d8c2-4c25-8277-6cd5589dd4d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ccc347c-2ba1-4620-82d2-b3183587b107"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b355a5af-eb6a-441c-95d2-2c86bdd580a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f849f156-08dc-43fa-9f33-26ddc43d8596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48a754b5-a37d-4994-b41a-968aa1eddc4d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23156d1d-ae23-4935-b811-c34e6831cb90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ef00175-83b3-4822-a5eb-fd9708297867"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff95ef2a-84a2-4912-aa22-d9ce2c78d1b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fba707c-f652-4767-9b11-0ba2a9a2349f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ceb0072-8340-490b-affa-555e9ac8c3c4",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "671d67f8-1c14-4333-b042-439076e39bc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7ea9590-1843-48dd-943c-a4e93ebdcefa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d785c7-5353-4e5b-ac37-535c1d5ee75d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff5c77bf-d975-4de4-a9b7-ec2b14e835af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e316b316-b2c1-43a6-89b4-8eb673ee3e36",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95ba411d-c427-450a-a1b1-710efd575daf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8304ac6-fd9c-437e-b142-9f58d33aafbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "732bef7f-960e-4e8e-83bf-54e7d4da6765",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd999ec6-4a41-4afe-b1c2-604d7990e336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5e9b100-d108-44e0-a1f4-216ce5e4bdde",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71f51a1e-98f8-488a-a42c-891be5fa11e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0accd3a2-1e9b-4b76-b1cd-e5e5fbde1558"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb58680-7535-4dd3-9d8c-df9c38f081d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb199383-40b2-4630-83d0-a10bdd64b8b9"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "48e6cdae-6744-4f1f-a318-e16bdbb5a93c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "195698e7-97cc-4a58-98d6-842e43513a7a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd5fc1f0-02ca-44aa-9653-061af4b5fcb4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b2ad2472-77e9-432f-a58e-5d2b95e5d2e0"
                    }
                  }
                ]
              },
              {
                "id": "9ddd630e-8fc3-4ea9-9ced-a72386169c38",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "79d31d55-a64b-439a-9038-f798b93eda5d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "115b7d41-0cab-41de-8267-495d6fd6b7cd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9fadb61b-027b-4fbf-96fb-0251b13d0f6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f6dfb30-de1b-405e-9d56-fb650f852fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "210304be-35f5-4487-9953-3ba75469ed2e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a91e28ae-8d4a-4c44-bcf5-1598d0af7d40",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26618ab7-7856-498b-b7b1-99bc5eaf5e1f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "58ac2259-1dda-4eb0-b745-8509ddcce191",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "595722f5-c71b-42e0-a538-2a65598f44cb"
                    }
                  }
                ]
              },
              {
                "id": "3936c207-7536-4432-8793-55434dcff8d7",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "ae9c60fe-4eee-49c7-8fd7-960de8296a55",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd0985c6-9afd-4ca4-b96a-47c37d997979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "dff9f91c-6336-410f-815f-6379565ef7de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf748332-5518-4944-a3e6-58877d1e5e4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f9d7977-626f-42a8-ba45-1c581a6da849"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "81d7109b-3bee-419c-a0a5-4cf3db389903",
            "name": "Positive Testing",
            "item": [
              {
                "id": "da104132-495b-45ae-aecf-3595f1fdfae0",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f01fcc16-3cc9-4a25-acc5-16b6eb30459c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0c59e9fa-8ca6-46a9-ab60-97ff11f174fb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff30ef31-2c2b-4e5c-9b4d-1de825d1b5a5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8d19da1-82be-42aa-946a-450b6ec1b378"
                    }
                  }
                ]
              },
              {
                "id": "88a311c4-2755-4e48-a42e-1698c0a4b37d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7614add7-8a89-4763-bada-53cb07babd1d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "83cdaaee-d2a1-4dcb-8e77-41540fd9d9d1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "38b129d2-cfb6-4f7a-80b4-79594eee6a29",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "923095d2-f1ba-4bc6-abf2-9672ca51d5c2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "12d51df0-882d-41b9-86b8-96d7c4d315bb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "9cdbf4c2-5e4f-43fd-b6df-56ee2384d937"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2517c2da-d6f4-4f03-b851-2627c80327e1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a33bbb3f-a0ee-46a9-8f4e-0e2740b20a31"
            }
          }
        ]
      },
      {
        "id": "ea5ab25b-2fe6-408a-ad66-6188d9946e95",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "0edb98b3-a341-49f8-ae53-0b2a1e1976f2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3ea740db-a6bd-47f0-8d1e-5907da4fd5fb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c8310b41-6d0f-4b6c-ab6f-01eaf2f0af93",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "571f1807-6e98-4d61-9d20-67d167992527",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "183b78e1-a045-4256-996d-9b592d54d690"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0942a5a6-26c9-4ce1-8099-62b82d3c2df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "729c9894-ea82-4320-b012-ebf0fbcab594"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4506b6c-3956-4562-835d-9c2fb89d1d59",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93a47562-8dd7-4861-9f2f-0c13b88312d6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "827a7f32-4d26-492b-8af1-6ad26c3ae913",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8e83f38-c61d-4c56-ad61-a32722aba932"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ee1ee811-baeb-4cf9-b995-47e453e787be",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ed9933ad-9992-4c04-8d1a-4e2a5176ad82"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "656ef5a0-3771-474b-9a92-858474282f71",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0eb72ae4-a87d-4876-8c14-8422fb7a588b"
            }
          }
        ]
      },
      {
        "id": "df4ca403-b963-426b-8817-c565432f55d4",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "1a7a688b-f16b-40ab-86d0-0cbb23eebf27",
            "name": "Negative Testing",
            "item": [
              {
                "id": "360f5b75-11f3-43f5-aec3-bf9962a3aa2b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8ae5eadc-1099-4b83-ade5-cd0e89f2e1f5",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "616f3606-9db4-4e68-95f5-84ba3ec84ad9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ccd01967-0cdb-424d-9863-e02595d47e38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46884e12-de3a-4d76-92e1-78053958f34e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8b42ac77-72f5-4aa0-86ae-236a0c0e12d6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94f3f507-28e5-49d9-b19b-29f522529995",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4a8a5f6-a9d8-422f-b686-9157f8cbfab1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b84b3bb-4796-4d3b-96aa-6e5ac674373a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eeafcfc6-1af7-41a4-82ff-490270c848a8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cab61574-be9e-41a8-a0f0-829bd6ac9a2a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "09c3df5b-f25d-4626-92f5-e69e9f01e39a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "df37de36-0ad3-4c94-9f57-ecfbbbc814bf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "392240bf-b56b-4648-98dc-799d26d678aa"
            }
          }
        ]
      },
      {
        "id": "a54aea4d-6900-46cd-b6c8-7def9c6beac8",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0f504306-c998-495d-8043-cd684b064c9a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e391b7cf-5d6c-478e-bbeb-6ba4d3108dcf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fd8ade5f-3fd4-4643-b9db-e9fc7c0ba3f3",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31958154-dce0-4520-a753-fae076d2c457",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5642367f-b462-44bc-811a-397931dff08b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe24ba5-e042-4d5b-9af8-ecadf9616820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "623718a6-ac47-44fd-9720-17970b4796dd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "01a7630b-8379-4bc6-b6ae-a2a893f219b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "08e695b8-4752-4caa-a44d-f44a92c15a4b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "53c8cf96-f19b-4c10-9579-4919c15e50fe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97a64b06-5a30-4954-ab56-ef2b6dfa9cf0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "66671847-cc49-4436-97ee-31224321795a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bd971d60-6272-49b1-a33b-066ccdb1bbe9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b43780fb-d3df-401e-a0a5-fd791213517c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2aef10ae-82ab-4a7a-9a62-3d773df3dc15"
            }
          }
        ]
      },
      {
        "id": "fee4841e-8063-4b98-95dc-938d41db553e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "72e3ca1c-3ebb-48fe-9c79-86f9a209f696",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ab4df86d-cacb-4536-8147-d502e22b47db",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "00798033-486b-4076-9f36-c586068e4e06",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c919bb8e-b3a2-4fd3-95bb-e1374befd593",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0af7d99d-0fcb-4a21-992a-8231911bbefc",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 68.91901408450711,
      "responseMin": 8,
      "responseMax": 358,
      "responseSd": 24.67629424406181,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1691541618383,
      "completed": 1691541653254
    },
    "executions": [
      {
        "id": "33974c6d-3d72-4710-959c-0a90a71b3df8",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "317c2a73-f163-46a5-a0ac-c23be5fda466",
          "httpRequestId": "9bd8b4e0-8d2a-4f12-9996-24ad2b37c6d8"
        },
        "item": {
          "id": "33974c6d-3d72-4710-959c-0a90a71b3df8",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "9059bdcc-d659-403a-a3dd-c886e2c47425",
          "status": "OK",
          "code": 200,
          "responseTime": 73,
          "responseSize": 0
        }
      },
      {
        "id": "0d9ff15b-fcd4-4be4-bbb1-300403c4480c",
        "cursor": {
          "ref": "9e18582c-35f2-42db-a85b-c4a7894c9b03",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5848f595-26a3-4c84-952f-bc61951dd001"
        },
        "item": {
          "id": "0d9ff15b-fcd4-4be4-bbb1-300403c4480c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "7e605de6-1044-40af-ba05-a35da6e49e61",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "23e484b5-5045-44af-bf69-90ab4d2e1c5b",
        "cursor": {
          "ref": "755b40a7-525b-4bbd-b906-eb065c9380dc",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "75874890-43be-45bb-9fb0-ecc3c2e3a213"
        },
        "item": {
          "id": "23e484b5-5045-44af-bf69-90ab4d2e1c5b",
          "name": "did_json"
        },
        "response": {
          "id": "b81b7c0a-823d-448a-b8f4-7ee54cbe9c46",
          "status": "OK",
          "code": 200,
          "responseTime": 358,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b54dde88-2039-4331-b72d-518bbb39e1cf",
        "cursor": {
          "ref": "46cf7d98-8748-4704-9ed9-44ff72d34ddd",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a5056ffc-469f-4731-9d4d-4e27ecbb3730"
        },
        "item": {
          "id": "b54dde88-2039-4331-b72d-518bbb39e1cf",
          "name": "did:invalid"
        },
        "response": {
          "id": "3c8e5c9c-661a-4454-9713-9b1633a5d88b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b54dde88-2039-4331-b72d-518bbb39e1cf",
        "cursor": {
          "ref": "46cf7d98-8748-4704-9ed9-44ff72d34ddd",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a5056ffc-469f-4731-9d4d-4e27ecbb3730"
        },
        "item": {
          "id": "b54dde88-2039-4331-b72d-518bbb39e1cf",
          "name": "did:invalid"
        },
        "response": {
          "id": "3c8e5c9c-661a-4454-9713-9b1633a5d88b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba9bc81-26b3-4386-996b-dca7f57d8406",
        "cursor": {
          "ref": "953b4ab0-fc20-429c-a7bf-fc35e0b88dd8",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e9968436-afb3-475c-bbcf-8910bef1cb61"
        },
        "item": {
          "id": "bba9bc81-26b3-4386-996b-dca7f57d8406",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f25524ca-1db9-476d-90fd-89b685d40af9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 103,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c44981f4-315f-4ffe-a46a-7f688b307d74",
        "cursor": {
          "ref": "c7aaf81b-7374-4c16-89e2-b78e4537ccda",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "73fc8baf-dabd-4ee3-9141-5845e7ee7185"
        },
        "item": {
          "id": "c44981f4-315f-4ffe-a46a-7f688b307d74",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9658f48a-411a-469b-a733-b951ab196352",
          "status": "Not Found",
          "code": 404,
          "responseTime": 67,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ccbe179-0b27-4b35-8804-d361506071b5",
        "cursor": {
          "ref": "d7ab847c-b248-45ac-9ae8-5d884a66a81d",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "0b0b6f88-51ca-464b-85eb-27d352ee17ac"
        },
        "item": {
          "id": "1ccbe179-0b27-4b35-8804-d361506071b5",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "14ec3dca-3efb-4244-96eb-4bde3fe1cf38",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f94405-fe55-45aa-8850-3346bce443fb",
        "cursor": {
          "ref": "66c0b0e7-328b-4a42-b398-744b417a6f70",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "879f9f9f-4bf5-4c6d-b137-e1eb494d1a85"
        },
        "item": {
          "id": "82f94405-fe55-45aa-8850-3346bce443fb",
          "name": "identifiers"
        },
        "response": {
          "id": "8f6a1d87-ddcf-4b48-8736-c88508d7171a",
          "status": "OK",
          "code": 200,
          "responseTime": 93,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0965aa7f-d7af-4bd3-9beb-ab94a042a8ff",
        "cursor": {
          "ref": "a91d0571-203e-4b52-8c8d-b269081d1470",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "9bf91885-7120-4a4c-aec4-231d16ea33df"
        },
        "item": {
          "id": "0965aa7f-d7af-4bd3-9beb-ab94a042a8ff",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "5f03f59d-58b8-4f24-9983-f3b215081016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a12fe0c-ff5a-4562-bb1d-3c946fb56aee",
        "cursor": {
          "ref": "1163f252-5043-470c-8696-068711934a38",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c18985ff-11ea-441e-aa5a-4e20606d5a78"
        },
        "item": {
          "id": "5a12fe0c-ff5a-4562-bb1d-3c946fb56aee",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "164155b3-2cc0-4c4d-9d46-500c18d32c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94871f53-46a7-4ba1-b0ef-b9bca358b6a1",
        "cursor": {
          "ref": "3c7344c5-79a7-44fd-8dee-713ab529b850",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "4537b194-bbab-48d5-be2c-c3c5e15e3301"
        },
        "item": {
          "id": "94871f53-46a7-4ba1-b0ef-b9bca358b6a1",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "eb2df300-1a4d-4065-8266-08669ff84359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a18792b-4e6b-4f2b-866c-e96407812ffc",
        "cursor": {
          "ref": "0f141583-d7f6-41f0-a8ff-dc0ca0b16263",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "bb78780d-5bd4-40f2-9ec5-01601e92ca73"
        },
        "item": {
          "id": "5a18792b-4e6b-4f2b-866c-e96407812ffc",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ef660179-6312-47ba-a37e-72256e2614ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "575ecfd1-7a74-4cf7-a6ca-a2d8d849a5ef",
        "cursor": {
          "ref": "29d1cc4b-63f7-49e4-9892-d49e39e67167",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "24acf87f-e667-43f8-a288-140681b4188f"
        },
        "item": {
          "id": "575ecfd1-7a74-4cf7-a6ca-a2d8d849a5ef",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "6408c554-4cd2-40fb-87f6-f8bfd5378a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57fc73f2-dde8-4fc9-b79b-015fa96047d5",
        "cursor": {
          "ref": "080c29ed-6fff-4500-b899-cd2e621b56ae",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e9def7d9-8f2c-49fd-9df2-8edb9a61998c"
        },
        "item": {
          "id": "57fc73f2-dde8-4fc9-b79b-015fa96047d5",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d156f08a-c128-4ad4-bca9-4ce1cb7935c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41afd0ea-6f8e-400c-b912-3a933156cdd6",
        "cursor": {
          "ref": "e4afa791-fadd-4e67-84d0-b2c519bc1289",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "bae59882-371c-4eb7-94a3-3f279dc631da"
        },
        "item": {
          "id": "41afd0ea-6f8e-400c-b912-3a933156cdd6",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c8872c7a-a681-48f9-994d-8f94b385ceb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2357f5c1-1a3f-487c-ad68-17858507ad2a",
        "cursor": {
          "ref": "0674f49a-77d3-4145-b781-cbcb18ee56d0",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "43f447cc-7337-45a9-b6ea-350cf342c817"
        },
        "item": {
          "id": "2357f5c1-1a3f-487c-ad68-17858507ad2a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "94d72b14-3efc-4a9d-9c5b-4aafd379e2bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0719de86-a85a-4a5c-911c-292b7ec02b15",
        "cursor": {
          "ref": "7d552931-f1ee-4bfe-bcd4-bcddeb65766b",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c48112c6-c0ec-408d-a078-3e36fb377525"
        },
        "item": {
          "id": "0719de86-a85a-4a5c-911c-292b7ec02b15",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ca207e41-0b02-4b73-8679-c51f6d221137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7648401d-c3dd-4353-aecd-d1e021a52839",
        "cursor": {
          "ref": "2352dbb3-5bac-4db5-b982-1ea7af55e660",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "1cd1d160-a981-44ca-83d5-cf4d5bbf98d8"
        },
        "item": {
          "id": "7648401d-c3dd-4353-aecd-d1e021a52839",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ebc96a63-0791-406b-aa9f-686e0a002d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6134302-377a-4794-b6d5-1aee37c2d619",
        "cursor": {
          "ref": "16f41633-97d8-47d2-afac-a7808402178f",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2c4c0580-c98a-4862-9c8b-f85f236fbe78"
        },
        "item": {
          "id": "c6134302-377a-4794-b6d5-1aee37c2d619",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b08f77e9-63ea-4197-a9b9-6383dcd6c86b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e5465e1-cc14-436f-abd6-4e9be32d4892",
        "cursor": {
          "ref": "752798bd-2809-492e-bff8-60e8e840c8c2",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "4b1b971f-40aa-44ae-ab9e-cc0f7a008b13"
        },
        "item": {
          "id": "7e5465e1-cc14-436f-abd6-4e9be32d4892",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "70f0ad33-6d85-4089-8b44-e3e86b1b4c35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42462d72-a4e4-4fcd-92f9-f76b25c2d5c8",
        "cursor": {
          "ref": "8e7d252c-7218-4691-a8ed-1d6992ca9f83",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1901499d-e3aa-4b11-a96b-613650af6517"
        },
        "item": {
          "id": "42462d72-a4e4-4fcd-92f9-f76b25c2d5c8",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "2ff7f682-1f5d-4b51-b5ef-367cc3e09334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ed7460-a459-4302-8be8-384c310fe393",
        "cursor": {
          "ref": "660271bb-6741-467e-8066-949b72a82477",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f7f6d518-3787-45c9-9c7a-c828b82a9b5b"
        },
        "item": {
          "id": "28ed7460-a459-4302-8be8-384c310fe393",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "4b0351a0-6e91-4a35-8974-24327590f83a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb08267-1c28-427d-a249-db307ac13a36",
        "cursor": {
          "ref": "2713a6f6-8f79-4515-a045-82f83b0fe3ba",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "04784e13-c69b-49a8-8ed7-62b01a5fad80"
        },
        "item": {
          "id": "bfb08267-1c28-427d-a249-db307ac13a36",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "16107657-f806-4f7d-b352-6876001aba38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7bdbd9b-0af7-4f1a-8d7d-d4b080eaf29c",
        "cursor": {
          "ref": "1df9e056-1888-4654-a079-236bdcd8597c",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "3922d09c-629d-4f51-864c-4ee4956608fb"
        },
        "item": {
          "id": "d7bdbd9b-0af7-4f1a-8d7d-d4b080eaf29c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "2bcab0d7-8e64-4f9d-9c08-032ade819cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce218e3-c1ae-4d57-882b-9aa74296a46f",
        "cursor": {
          "ref": "b752a3f4-a6c6-4c2b-8453-ce1bdd2766c7",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "9d5360a3-912b-4416-80f6-068a3c4a2fdb"
        },
        "item": {
          "id": "7ce218e3-c1ae-4d57-882b-9aa74296a46f",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d1b443d0-5cdf-4c3c-b3f0-93a11030ef81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e2ffa12-13f2-4d88-a682-1108a457dd7f",
        "cursor": {
          "ref": "94a48ed0-b05c-400e-a89c-1fc5c7953193",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "41ae195c-cffb-4145-8bd7-6e87728bc552"
        },
        "item": {
          "id": "0e2ffa12-13f2-4d88-a682-1108a457dd7f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "dba8db27-7607-478d-b3e9-b8d09e576b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff16c030-d078-429f-a856-3edfc994931b",
        "cursor": {
          "ref": "82b6bfd6-18f1-47a3-ba5a-d0c140d7fc6b",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "2a8712bb-bec3-4274-bb21-2ff3797d4228"
        },
        "item": {
          "id": "ff16c030-d078-429f-a856-3edfc994931b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "7aea53d3-ab48-44ce-9b5f-aea7f0093c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c723affe-3232-4ac4-9c08-53d36495265b",
        "cursor": {
          "ref": "3749e63d-0907-4103-a5c3-4e94c0fedcf8",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a1dd8399-c328-4a36-9877-80f2d2ff4401"
        },
        "item": {
          "id": "c723affe-3232-4ac4-9c08-53d36495265b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "0c466488-301f-4d3b-9cfa-9857724f5134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f903fa9-4eb3-4248-b836-5061991e234e",
        "cursor": {
          "ref": "01c84f74-1823-487c-8765-0306f3a8c5da",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "3139019f-5af3-4152-8cc3-e96b9787266f"
        },
        "item": {
          "id": "4f903fa9-4eb3-4248-b836-5061991e234e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "58a46a61-9080-4c5c-ab89-36a8c50e6b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5099b690-ebd0-4b28-a66d-54ea6cd835bd",
        "cursor": {
          "ref": "58e06500-bd7d-4776-864c-3ecb88573184",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "345890bc-ce0b-42b7-a5df-eb551d26998a"
        },
        "item": {
          "id": "5099b690-ebd0-4b28-a66d-54ea6cd835bd",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "75f79694-1911-4d47-983a-128953877c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4504f2aa-2413-4c91-a322-94eaf2f03b4f",
        "cursor": {
          "ref": "9c0575c0-7b49-4665-a340-2eb9db954809",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "1d27cf85-2146-4506-8632-9db98b05aa84"
        },
        "item": {
          "id": "4504f2aa-2413-4c91-a322-94eaf2f03b4f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "70777de5-f0a9-43ac-a366-37907b701646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "858b583d-458d-4c60-a947-c98af48571bd",
        "cursor": {
          "ref": "84a3f0d8-aa68-4ed1-a66d-15047f3c288f",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "9517122c-b432-4b78-a816-dda1f007703b"
        },
        "item": {
          "id": "858b583d-458d-4c60-a947-c98af48571bd",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "4afc7cc5-897b-4751-b599-ab06c11d86d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c9fef9-238f-4070-828c-d68808361e49",
        "cursor": {
          "ref": "f97d702f-70dc-403d-8c24-1aef5c1c17b1",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "1e3e8996-e527-4d32-a3c6-2a7436bb6846"
        },
        "item": {
          "id": "99c9fef9-238f-4070-828c-d68808361e49",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "7373b86d-d309-4c86-884b-68d0301b106b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a79fdf-2036-4167-bf0a-e185e6c76aa5",
        "cursor": {
          "ref": "3ea9a945-c6d9-4df9-97f7-655200400685",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "8da629b0-021d-435e-bb64-1d98b2b1a6a8"
        },
        "item": {
          "id": "91a79fdf-2036-4167-bf0a-e185e6c76aa5",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "9035e26b-73bc-4580-9890-bd7869333c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8551e37f-8004-4788-a19f-4f81ce1b3f7a",
        "cursor": {
          "ref": "c1ea6a41-18ed-4903-93ca-3acaff2167c9",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f3c36bde-1634-48c6-add5-aed8c68935fe"
        },
        "item": {
          "id": "8551e37f-8004-4788-a19f-4f81ce1b3f7a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e83582f8-2371-4cd7-8423-226d30724ddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88de16b-a40b-4305-b838-f1c999bef5ac",
        "cursor": {
          "ref": "c04403b2-fa39-4f79-a139-d7cf5984e202",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ab4b7c19-a908-4316-a497-fc160613f370"
        },
        "item": {
          "id": "b88de16b-a40b-4305-b838-f1c999bef5ac",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "13a4ebce-817d-4fc7-84a8-06735eb2f309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0747ad0-744a-4ea1-9602-88f730f60137",
        "cursor": {
          "ref": "46d32029-81cc-430e-ae06-25e07e4ad0a3",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "fc8286fb-0705-4a98-9a73-e19a2da50ce4"
        },
        "item": {
          "id": "d0747ad0-744a-4ea1-9602-88f730f60137",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "2d1b76e1-3149-4ca7-acca-13325e1875de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d3dda78-8a0d-43c9-b7e2-9a2d10a4bd35",
        "cursor": {
          "ref": "2d4afbf7-0746-4bf7-a3bc-b86a1aa11e36",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "29da5e87-d8e6-4eb2-9e9e-4a3dd995047e"
        },
        "item": {
          "id": "3d3dda78-8a0d-43c9-b7e2-9a2d10a4bd35",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "08f61849-21eb-4920-bb74-3efc5d04c55e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7053ad77-4b98-4c2d-a8f5-0975801e9ab0",
        "cursor": {
          "ref": "9669b8c9-78f0-496f-82e7-7403b316db1e",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e14926f7-9c2d-40b6-b631-d318fbaed519"
        },
        "item": {
          "id": "7053ad77-4b98-4c2d-a8f5-0975801e9ab0",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "34eb421d-cea1-4007-846e-80f1ed53930f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d85e0a45-7c83-45b3-a3a9-3d3aba8c8a41",
        "cursor": {
          "ref": "7c6114ef-0862-404a-a742-bd196b31ab80",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a8cee9a2-defb-42a4-b4f2-36b78bc7f6f4"
        },
        "item": {
          "id": "d85e0a45-7c83-45b3-a3a9-3d3aba8c8a41",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e9127dc5-6675-4043-84c8-d280cced9cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73753281-1867-4fe5-84e6-5fab9a27df58",
        "cursor": {
          "ref": "0a89e726-5fd4-40ee-898e-42f61819f5ae",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "07346ec8-cd2f-4f4a-937d-cefe95c12009"
        },
        "item": {
          "id": "73753281-1867-4fe5-84e6-5fab9a27df58",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "38775dec-f6f5-4b78-835e-d5c2fb215ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e91d049-198d-4b1e-90a7-45c7f4080f90",
        "cursor": {
          "ref": "eeb299d1-1eca-420c-9d21-b701cdb7e84e",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b01b126e-9388-48af-b393-97cd3d8578af"
        },
        "item": {
          "id": "3e91d049-198d-4b1e-90a7-45c7f4080f90",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "0d2121d8-ea5a-44ec-bc14-40794eea50dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c56eca-780b-475d-a708-644b82f36ffc",
        "cursor": {
          "ref": "404bd8f2-c475-4498-9b0f-9a4f1aa0ebdf",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "1ac192b2-e9e4-4c70-8f24-79684584d67f"
        },
        "item": {
          "id": "33c56eca-780b-475d-a708-644b82f36ffc",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "469f1051-735d-42d9-a421-4f674eee76d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf0a285d-973c-4372-9807-4978e650f660",
        "cursor": {
          "ref": "010d1aa1-bd6f-43a3-8ce4-0ba56784951b",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ede87bc1-5547-49ca-b76a-344b72e3844e"
        },
        "item": {
          "id": "cf0a285d-973c-4372-9807-4978e650f660",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "45047a0e-e5e8-4c49-9c4b-56fd34937f78",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 88,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa266a8-1eb9-4bb2-9944-cf9070785922",
        "cursor": {
          "ref": "e4d69935-859b-4d99-9e27-2ce85a57ed8f",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "66fd0d9f-fbb9-46d0-ac2d-f98e00972dc5"
        },
        "item": {
          "id": "6fa266a8-1eb9-4bb2-9944-cf9070785922",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "690b1baa-50d2-49ae-bf23-bd76fb3fd26b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e6c8ef2-194b-4f55-9bea-ab015ff4a2a9",
        "cursor": {
          "ref": "688a1918-f2eb-4d58-95bc-37785d4c8b74",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "62ad1dfd-981c-4933-86c2-3eba92a15ff0"
        },
        "item": {
          "id": "5e6c8ef2-194b-4f55-9bea-ab015ff4a2a9",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "8182f944-70b3-4d29-ac21-3469b9ffddb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2888a33f-543a-4dee-a8fa-590e4822d0c3",
        "cursor": {
          "ref": "bdd8217f-7955-46b2-9012-117fcfae3a60",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "b55f717b-a321-4ed4-b383-596bf219cbe5"
        },
        "item": {
          "id": "2888a33f-543a-4dee-a8fa-590e4822d0c3",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "1dd69eab-cd4c-48e1-a41a-2e2789ada470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b6b615-0b61-4872-b344-f8c494bb0f2e",
        "cursor": {
          "ref": "78c779b0-d633-46b7-a946-b7fad34830c8",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "458fe9b7-0379-4b18-afdf-ff64f4f10ec9"
        },
        "item": {
          "id": "79b6b615-0b61-4872-b344-f8c494bb0f2e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "fc9b78f9-d010-46a7-a722-814fe547f4aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9118a001-6eb4-409f-a554-093d73f161c0",
        "cursor": {
          "ref": "4d6172a6-48f0-49b8-bf1c-14a68336f042",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c9e5fee0-355c-414d-97b0-5345af9106c5"
        },
        "item": {
          "id": "9118a001-6eb4-409f-a554-093d73f161c0",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "1233a702-631a-4eba-88e1-50621799d178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b1eeda7-8e83-4c26-8cc8-9f72c35337c9",
        "cursor": {
          "ref": "1a480194-5295-4396-973e-28265ff6e67c",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "fdf71efb-7f17-4a60-9470-03d2c86e17c9"
        },
        "item": {
          "id": "1b1eeda7-8e83-4c26-8cc8-9f72c35337c9",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "0646f1c0-70ac-443c-b7d1-2a24f9584e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf1409f-957b-454f-8000-091501a99e5e",
        "cursor": {
          "ref": "3104e321-6560-4976-b042-7f32cd75301f",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "0616cf91-6283-4942-84bb-0905a55ce5c5"
        },
        "item": {
          "id": "8cf1409f-957b-454f-8000-091501a99e5e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "6a5eaec6-392f-4cb4-9fb6-2e552af0edf8",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 80,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0388e844-992e-47f9-a99b-cc079ef92de5",
        "cursor": {
          "ref": "a3ecce92-a3de-4332-93b9-1d5f585a7bdf",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d6b1a72f-24d5-46dd-91b5-08b20f0933e1"
        },
        "item": {
          "id": "0388e844-992e-47f9-a99b-cc079ef92de5",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "236df0a2-25e4-46e4-96a0-7083f94bfca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b5f8841-026c-46bf-9915-32b716d2b902",
        "cursor": {
          "ref": "8418772b-286e-42b8-b9d5-e108d80025ab",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "cad792f8-b1cd-435f-94a1-286ee966de8c"
        },
        "item": {
          "id": "0b5f8841-026c-46bf-9915-32b716d2b902",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "9e724c64-84c1-4dbd-ad6d-85b4124815c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5059b53-b114-44fa-874e-c59906d1866f",
        "cursor": {
          "ref": "e96b72c6-f093-474a-a6f2-24334a751c37",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "21fc8935-be3c-4de9-b93f-730d384bd31d"
        },
        "item": {
          "id": "c5059b53-b114-44fa-874e-c59906d1866f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "95273696-78d6-402f-978f-1acd7f87ee84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4744c4c-950b-4598-afb4-504bdffe44c2",
        "cursor": {
          "ref": "6a844d74-5535-4673-a1ee-2713b3913e6d",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "32363cef-80af-4290-95ae-3cb1a334662b"
        },
        "item": {
          "id": "a4744c4c-950b-4598-afb4-504bdffe44c2",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "125e7cf9-82fe-4d74-a4d5-79f1392450de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddac24c6-0d1b-4a10-8230-dac9b0053074",
        "cursor": {
          "ref": "0fa8f39d-c258-4980-b72e-42cf580273cb",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2a286152-9b01-46cc-a21c-7c684205bb36"
        },
        "item": {
          "id": "ddac24c6-0d1b-4a10-8230-dac9b0053074",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a92c9e31-1bff-4089-9319-320f9a4cf4a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c17132f4-6b2e-42c6-bc19-02a9630c831e",
        "cursor": {
          "ref": "9844b37f-7804-4fd5-bea6-cdcf43b36b20",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "05cb9538-75ff-46fb-a2eb-2d0b3a11fc89"
        },
        "item": {
          "id": "c17132f4-6b2e-42c6-bc19-02a9630c831e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "2e59ab2f-fb61-4f80-ad02-521cd76c42dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c5602f1-6301-4397-a5c2-366926b0a1f3",
        "cursor": {
          "ref": "0d568312-68eb-4842-b8c8-0690cfe36833",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "d38801f2-3272-4827-8617-c37a96d21b0d"
        },
        "item": {
          "id": "3c5602f1-6301-4397-a5c2-366926b0a1f3",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "82e3999b-3a93-483b-9adb-de4de9d3ebda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d66d8c8b-6666-43cd-8038-7d95100d44d4",
        "cursor": {
          "ref": "f270993b-ac2d-4090-ad9f-c471b5b2ed11",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "598f1cb6-d19d-4563-b206-aec956e51ed5"
        },
        "item": {
          "id": "d66d8c8b-6666-43cd-8038-7d95100d44d4",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "75058ba1-0e07-4f72-a0f2-e6b3ae585653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d39e1d91-6bdc-45c4-894c-8176a9dab5f3",
        "cursor": {
          "ref": "952f42a4-dbdb-44c2-8acc-7a84371d9d0e",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "2093f175-e319-4c42-b446-2a005b08ef63"
        },
        "item": {
          "id": "d39e1d91-6bdc-45c4-894c-8176a9dab5f3",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "1ee55665-d3a2-4ebd-a083-8a1aafeac4bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0237481-1245-4347-a76a-6ff8ae968d0b",
        "cursor": {
          "ref": "98aaa417-2af1-4665-ade5-df6a397d249b",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d2e7565f-6d8d-43b9-877d-208454202a1c"
        },
        "item": {
          "id": "c0237481-1245-4347-a76a-6ff8ae968d0b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "cf76ce03-c13f-4e4f-8e80-ac6c23b100b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb33362-183e-4ba5-851d-817d661e986c",
        "cursor": {
          "ref": "6916f4ef-b0db-425e-869d-69dd64b38b2d",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "161bc5b5-4224-403f-a1a6-206b73595db0"
        },
        "item": {
          "id": "deb33362-183e-4ba5-851d-817d661e986c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b01f215c-afb7-46a2-98dd-c66a5030b82d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "966a4646-8927-4f5a-bf93-42a900df8924",
        "cursor": {
          "ref": "992c69b8-2042-4ef4-944c-4225c1cdd8a6",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "5ffb651c-9f23-4b3f-bedd-a093957a2c6a"
        },
        "item": {
          "id": "966a4646-8927-4f5a-bf93-42a900df8924",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e9b00933-e003-4b14-8572-d0a7eeb5f37b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c82b0ad2-50e3-4e9b-9e55-bd22e00d24da",
        "cursor": {
          "ref": "21b517db-055e-4948-bafc-ce2572cbad49",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "cba3e53f-7179-48f6-8ee6-8a1fec7eabda"
        },
        "item": {
          "id": "c82b0ad2-50e3-4e9b-9e55-bd22e00d24da",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "9488be98-eb74-41e0-9851-9aa2205a1476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a6a269-2e0c-40aa-a7b1-a106c7411786",
        "cursor": {
          "ref": "7dde9963-1671-47bf-9471-8c7036537efc",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "251e7f0b-5553-465e-ab63-e1b33f31f65d"
        },
        "item": {
          "id": "15a6a269-2e0c-40aa-a7b1-a106c7411786",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b1978a39-2b08-4231-8ab7-6215e60f95a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffadfb1d-62b4-480a-8bd1-cc45cfc576fe",
        "cursor": {
          "ref": "938bd2b0-2ca8-402a-917e-a456bfcea44b",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ca9d3b06-90ed-4823-a55d-5e0b352bd580"
        },
        "item": {
          "id": "ffadfb1d-62b4-480a-8bd1-cc45cfc576fe",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "6d7a2eda-4b5a-40d7-acae-a074bd01ecce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "152fdea6-106b-49d0-bc64-c969e9897506",
        "cursor": {
          "ref": "1e9d1d5f-9b06-4d65-942e-db34060ecbf2",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "925a4ad5-566c-401d-b2f1-e02b5cad8649"
        },
        "item": {
          "id": "152fdea6-106b-49d0-bc64-c969e9897506",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d4e815bd-749b-4bc6-b2a5-2cf8a05b0b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49068463-2ec8-43cf-a0dc-cc73e6e62c55",
        "cursor": {
          "ref": "d8bb5905-75bb-4b9d-91a7-8d66706b3d1f",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "10df9367-87b0-47f4-9f5e-6049c6f89baf"
        },
        "item": {
          "id": "49068463-2ec8-43cf-a0dc-cc73e6e62c55",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "9e3ceaf9-2d7b-4f35-b0e5-7319942efe63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ecb3e9-9774-435b-9b6a-a4f16cb780bf",
        "cursor": {
          "ref": "eeb38ac2-6400-4669-802d-79a57cf7fb68",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "56313fbe-8a50-4e12-9556-c4e3f7e7823b"
        },
        "item": {
          "id": "c4ecb3e9-9774-435b-9b6a-a4f16cb780bf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c65987b0-f35d-4a36-83f1-60ea8fde7bf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e7da60-76d1-4d6d-a8e9-e585258a0bc0",
        "cursor": {
          "ref": "eeabe528-ffce-48bd-a4ca-3339a7692865",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "762f989e-80ac-4c30-a7a2-53de905021fa"
        },
        "item": {
          "id": "c1e7da60-76d1-4d6d-a8e9-e585258a0bc0",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "141ec858-01e3-44b5-a0d9-a564ca11b161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf5df37-c28f-4bb0-a4df-1cc03826bc15",
        "cursor": {
          "ref": "476bb97a-37b6-47e3-b4bc-820786730448",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d53d087a-ff70-4e80-97b5-ca9404985a00"
        },
        "item": {
          "id": "9bf5df37-c28f-4bb0-a4df-1cc03826bc15",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e6e3a920-9885-4369-b077-3dc8896d96b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72ca771-3c2e-45bc-ad61-e984e87fc05c",
        "cursor": {
          "ref": "ebdf6c7f-936e-48b4-b196-16f99e9a41e1",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "7da5c81f-db24-4fab-a59f-64e03ba00b9a"
        },
        "item": {
          "id": "d72ca771-3c2e-45bc-ad61-e984e87fc05c",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "3fe6c036-4141-42c4-a944-b9b4a13ea343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc541004-a36f-4691-9230-08cc27a2d9d6",
        "cursor": {
          "ref": "c21828eb-ca0d-482f-9ad6-992e479b18f7",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "c11f126d-a0cf-4014-871f-6a3872372055"
        },
        "item": {
          "id": "bc541004-a36f-4691-9230-08cc27a2d9d6",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "de6b5f0b-1d76-4abe-9060-54f0fa22b541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd2bf25-c3a4-45a0-9015-aa24bc4df9e6",
        "cursor": {
          "ref": "054db034-e118-4a7a-ba2b-9a2b238eb0fd",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "fac819b7-4915-418a-9f5f-775d27d28c81"
        },
        "item": {
          "id": "6fd2bf25-c3a4-45a0-9015-aa24bc4df9e6",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "555dd000-baf2-4997-8bfc-1b1a9bb48380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e0f98c-ee0b-4ff2-8936-c1d2e8864be9",
        "cursor": {
          "ref": "b3d23b12-c347-43ff-9012-847343744252",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c425c82c-4dac-40eb-a414-ddb736698ddf"
        },
        "item": {
          "id": "b4e0f98c-ee0b-4ff2-8936-c1d2e8864be9",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "3dc2f30e-1e92-4b6d-8da0-29118a81fb19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b07aedf9-05c1-4f94-b8a8-c09fc1d91a97",
        "cursor": {
          "ref": "14d038be-c66b-43f4-b902-f6945b862fde",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "53fb5bc2-2acf-4dbe-933c-eb4ae4037dd4"
        },
        "item": {
          "id": "b07aedf9-05c1-4f94-b8a8-c09fc1d91a97",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "9f414e32-3315-4ec9-b748-b54d28af0bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd1004ac-c4cb-4027-94d6-8243cb06bb34",
        "cursor": {
          "ref": "e3755de5-c8db-4ca7-b6ed-3e82f82f69db",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "884c4641-5ff5-43b7-b7e9-e5d870444fa2"
        },
        "item": {
          "id": "bd1004ac-c4cb-4027-94d6-8243cb06bb34",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "9d771463-c12b-4076-a49d-69e512b263a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeaec9cc-9f77-4360-a02d-f9992ab79d07",
        "cursor": {
          "ref": "3a4a3cd1-e035-4274-acf5-5ed3b75b49b1",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ee13c418-bfdf-496a-bee4-534b2140cb9d"
        },
        "item": {
          "id": "eeaec9cc-9f77-4360-a02d-f9992ab79d07",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "08d1a02c-d8ce-4fe2-abb6-2923ff5bd74e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc002c6-28bc-47fb-960b-658bbadf0106",
        "cursor": {
          "ref": "b78b223a-9a49-4eeb-8165-82120776fa69",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9303af20-856d-4e87-a157-ba4486cd148d"
        },
        "item": {
          "id": "1fc002c6-28bc-47fb-960b-658bbadf0106",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "7f35b1e3-32c3-4af7-912e-0a77d906232f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2157ef1f-b788-4de0-8be9-1145f278b0a5",
        "cursor": {
          "ref": "6d812cba-7dd2-48ee-8e06-9c788c42f9eb",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d42a3881-21f9-4806-94f2-6d31e31145dc"
        },
        "item": {
          "id": "2157ef1f-b788-4de0-8be9-1145f278b0a5",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "0046136c-2300-4c8d-a85c-b621b47113de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794bfd40-fee0-4b35-93e5-4aa4678b9e8b",
        "cursor": {
          "ref": "b9989d25-2ff3-4d25-a975-87a829f48bfd",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a2a73f3a-89f9-4ecd-8d56-5323f5f7ed3a"
        },
        "item": {
          "id": "794bfd40-fee0-4b35-93e5-4aa4678b9e8b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "dcbec258-8fe1-46f4-99a7-8cd4ab220ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c42d3e57-03ca-4c0f-8d7a-218b76aa77eb",
        "cursor": {
          "ref": "b483d2c4-3e9c-41ea-9e1d-99b0627b4c36",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "018ee7c7-1687-4846-83b6-2e6496292784"
        },
        "item": {
          "id": "c42d3e57-03ca-4c0f-8d7a-218b76aa77eb",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "adc6bf23-1379-4b9c-ae78-cbda8502b128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f283a0dd-7386-462e-9888-9f2ee6daee21",
        "cursor": {
          "ref": "ea8b166d-9597-421b-80cc-69fe33f498e8",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b8ccbd5e-bf8e-430c-bb3d-f1e74d76400e"
        },
        "item": {
          "id": "f283a0dd-7386-462e-9888-9f2ee6daee21",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d0fd5153-eef7-4a3e-911e-bb16721b7eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fc45c47-4511-402c-b168-e27d45fb2bd8",
        "cursor": {
          "ref": "a3eeebef-a13c-4592-9561-aaa744d7cc4f",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "955d9d4c-054a-48b6-b138-8106f087cf00"
        },
        "item": {
          "id": "3fc45c47-4511-402c-b168-e27d45fb2bd8",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b3211638-6284-4a5a-8ed0-4a44fcb43e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd8c05bb-6377-4517-aa27-81210e4372e0",
        "cursor": {
          "ref": "2f1c12c1-44ac-48fa-aeb1-7f7b89660c33",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "113a826b-ee33-41bc-ab76-61863cb475b4"
        },
        "item": {
          "id": "fd8c05bb-6377-4517-aa27-81210e4372e0",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "fe6cc0dc-eb16-4472-826c-8049d89b5538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7940179-7a59-40c7-b4f0-77e3c5f1a184",
        "cursor": {
          "ref": "0013933a-bc59-47fb-972f-fcf5b058d64b",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "371fe0e0-8084-4222-981e-d368a96158ac"
        },
        "item": {
          "id": "e7940179-7a59-40c7-b4f0-77e3c5f1a184",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "05a1a721-5f27-4c8f-ad3d-ba3c333e027d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74416831-569f-4fd4-98c2-4d29fd297ad9",
        "cursor": {
          "ref": "bd6ee686-bbe5-4a68-8a88-04c231fcc10f",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "5d7c0047-a8da-4986-8b18-f681838a339c"
        },
        "item": {
          "id": "74416831-569f-4fd4-98c2-4d29fd297ad9",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2c7482af-6d0d-4a59-91f6-dbc90d8b5ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7535dc2-41f4-40fb-b35d-b967f3079478",
        "cursor": {
          "ref": "c95efe43-1cfb-4ff2-9d05-9ee5da83030a",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3f9d0dc9-b310-420b-ab77-7eba2aab1de4"
        },
        "item": {
          "id": "a7535dc2-41f4-40fb-b35d-b967f3079478",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "01d60011-d951-4e5b-82af-88f839346b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce09f075-3f10-4a68-ad08-0d19e01dba65",
        "cursor": {
          "ref": "87118f1b-3f1c-4eb3-8fa4-77e729093b18",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "da18c439-3c67-41f3-b6f1-73caec223144"
        },
        "item": {
          "id": "ce09f075-3f10-4a68-ad08-0d19e01dba65",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "6d268d9f-94c5-46e2-92dd-357f69a7e0cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "718076d6-3990-48d8-ae31-5a9d985247bf",
        "cursor": {
          "ref": "1c343558-115a-4547-b19b-e26e2ebfb84b",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "071ed742-32cd-4b6c-8a1d-c6cb4b04b60a"
        },
        "item": {
          "id": "718076d6-3990-48d8-ae31-5a9d985247bf",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a659344e-9143-4aec-854c-fbcab491d6a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a27bad0b-9fe2-4a40-9a59-b2d7f34bdf99",
        "cursor": {
          "ref": "e02ecd72-b17c-4d51-8098-68181523299f",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2548d57f-d522-4183-9f57-2f6d2d4e4ea7"
        },
        "item": {
          "id": "a27bad0b-9fe2-4a40-9a59-b2d7f34bdf99",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "118e275b-4d1e-4d6e-a9a7-3b7ed28dff71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6deb62d-1020-4878-82ca-02f5871dbb19",
        "cursor": {
          "ref": "19e252e6-0fd3-4a59-b25e-243e305f99eb",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "366da23d-e3cd-4885-8b1d-480ccbcd9593"
        },
        "item": {
          "id": "c6deb62d-1020-4878-82ca-02f5871dbb19",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d5f87c49-0f8f-40b9-b23a-0a108b70c3a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ef1c52-e2c0-4a91-9e30-6382aae139a2",
        "cursor": {
          "ref": "a64d38b3-225b-4555-a141-1fc91ddaf3fb",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "647a1dec-5f94-47a4-bff6-9dc4b2086e3e"
        },
        "item": {
          "id": "e9ef1c52-e2c0-4a91-9e30-6382aae139a2",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "315b408d-2700-4b9c-b214-354513532aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c90171-79e7-4998-8090-4105248bfe62",
        "cursor": {
          "ref": "e938d22a-f078-4753-a835-1428c57abe8d",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "7c22d470-995c-4a0a-ab5b-cab9a5122803"
        },
        "item": {
          "id": "15c90171-79e7-4998-8090-4105248bfe62",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "5deb229c-47ed-4efc-8799-ac7bb34ff347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "528695da-0f36-4d2a-8753-22301d6bf76d",
        "cursor": {
          "ref": "9f5bcfbd-cc60-4c75-9204-bbc6a9cd8271",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "897c0c6a-f053-41b8-8744-f146ebf089c0"
        },
        "item": {
          "id": "528695da-0f36-4d2a-8753-22301d6bf76d",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "dd6fea83-be97-4fe0-8d34-20b54dff76a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "326afd05-62bc-4137-a9d5-e02bb9dd3623",
        "cursor": {
          "ref": "9f573464-fcaa-48ae-8feb-b40d641b4ef0",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "b0b9f992-3373-47e3-8e56-79751c709546"
        },
        "item": {
          "id": "326afd05-62bc-4137-a9d5-e02bb9dd3623",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "bab12f90-dedb-4c9c-ad8f-70676889463c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdefa97d-6b10-43ba-9110-dda5d70acbeb",
        "cursor": {
          "ref": "681904af-866f-4bda-99de-328b7e7fdbde",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "48dc3d29-db1c-454e-83be-89ee4afcc974"
        },
        "item": {
          "id": "cdefa97d-6b10-43ba-9110-dda5d70acbeb",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "44ecbca2-ef0b-47e5-998c-dc99fe6cd54d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88224e7d-888e-4cb6-8def-d4e01c371fdc",
        "cursor": {
          "ref": "3a896d6c-8e3f-4908-9389-50d5ec27d199",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "334895c9-d747-45e6-85dd-269ae93daac0"
        },
        "item": {
          "id": "88224e7d-888e-4cb6-8def-d4e01c371fdc",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "45ea76a4-0874-4b65-bee2-74e422a357aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "569202eb-fa41-4e5b-91cf-5f42f794c68f",
        "cursor": {
          "ref": "18454541-8d39-468c-ad3a-4430f431054e",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "cc7cd569-58ce-4704-b2d0-f4382d467f70"
        },
        "item": {
          "id": "569202eb-fa41-4e5b-91cf-5f42f794c68f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "95c76653-6afb-43bc-aeb0-91d534ee133d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "547866a1-7855-44d9-ac24-62d6156463cf",
        "cursor": {
          "ref": "922ea5f8-8d9e-4fa0-a21b-de98339bb3f8",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e521f40b-7fd8-492e-bbab-be99b44c94d6"
        },
        "item": {
          "id": "547866a1-7855-44d9-ac24-62d6156463cf",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "757c17c6-c8bb-4b33-a117-8a24edad5d28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e47aa28a-3aef-405c-bd59-6fe0803399d8",
        "cursor": {
          "ref": "151143ce-0eb8-4aa2-b77f-6272faadfaf5",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "bc39acc2-1937-43a5-89e0-b6807485b941"
        },
        "item": {
          "id": "e47aa28a-3aef-405c-bd59-6fe0803399d8",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "9666898f-6628-43e5-8723-6be96d9ff9af",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67102428-9880-453c-bbc0-e8a47a48a5e1",
        "cursor": {
          "ref": "9146d4f5-3be2-4c11-930e-850971a1748a",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "471b6544-9d62-463b-a61f-d97db4d76512"
        },
        "item": {
          "id": "67102428-9880-453c-bbc0-e8a47a48a5e1",
          "name": "credentials_issue"
        },
        "response": {
          "id": "edfd98bb-2710-40b9-92bf-44a7aef1417e",
          "status": "Created",
          "code": 201,
          "responseTime": 102,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a9feb0-4d67-4740-897a-2a17864224f1",
        "cursor": {
          "ref": "7e8990ec-99e9-4a64-bdbc-3b03ec6acde1",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "0b9f0261-46eb-44d2-9f77-ac8a6c63ecd9"
        },
        "item": {
          "id": "a4a9feb0-4d67-4740-897a-2a17864224f1",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ed9231ba-08ec-4844-9069-59a21295a061",
          "status": "Created",
          "code": 201,
          "responseTime": 234,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4e5b71-a198-4d2a-9802-4e99a0740fd7",
        "cursor": {
          "ref": "eba67918-c458-47cc-a85e-1638118d1efb",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c0ec82b0-9364-4cf0-a785-099f7fdc1ecc"
        },
        "item": {
          "id": "2f4e5b71-a198-4d2a-9802-4e99a0740fd7",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "6da004b5-3e37-4fa5-9d1c-de47eff62955",
          "status": "Created",
          "code": 201,
          "responseTime": 125,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "73005b37-71cc-40e7-b46a-cc4c8953928f",
        "cursor": {
          "ref": "e3b6da6a-70e5-457d-8110-a2e2c4a0ed84",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e0cef8ae-2e6d-48e8-9202-9eeb151ed97f"
        },
        "item": {
          "id": "73005b37-71cc-40e7-b46a-cc4c8953928f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "4792ba85-481f-4238-ac5e-6823bd62f71c",
          "status": "Created",
          "code": 201,
          "responseTime": 90,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee936bc7-18c1-45f7-8540-c092f3d87f2e",
        "cursor": {
          "ref": "9788345f-61c0-4195-ada3-f5dcafddf8ca",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "3cc0b597-5f8b-41d7-a9f2-9feb395b3599"
        },
        "item": {
          "id": "ee936bc7-18c1-45f7-8540-c092f3d87f2e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "03f49b2a-2295-4626-9a0f-7fee2ee837a0",
          "status": "Created",
          "code": 201,
          "responseTime": 91,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b9134d9-a7a5-464e-9968-1e43ba55ecef",
        "cursor": {
          "ref": "37281c5a-69d4-4c6c-99e7-796b854ef6ec",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "61dad34f-324c-4485-b594-8ac1a706e4d5"
        },
        "item": {
          "id": "3b9134d9-a7a5-464e-9968-1e43ba55ecef",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "05c2496a-8c18-4c6f-8e7d-6065a0c3d599",
          "status": "Created",
          "code": 201,
          "responseTime": 91,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b0e35a-2af4-4e09-823e-9c81f049a0e3",
        "cursor": {
          "ref": "d3bf580e-da53-4edd-a804-666b0bf0d5d8",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "67b3a2bf-fd3e-4c56-b7cc-7dd8be7d732d"
        },
        "item": {
          "id": "c7b0e35a-2af4-4e09-823e-9c81f049a0e3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4daa6ea5-74ac-41fb-bde6-e2d405524abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504d2f63-4612-4218-a60e-89362793f517",
        "cursor": {
          "ref": "eac889d8-7f06-4c9d-9f44-7aecf889f0aa",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "849da78d-1740-45fb-b7ae-29ed9fba0ac4"
        },
        "item": {
          "id": "504d2f63-4612-4218-a60e-89362793f517",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "20928341-4206-4d63-9b19-93323bf5c075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bda3c8d-8cf1-4922-9e54-d0d8d1aeb3df",
        "cursor": {
          "ref": "d1db5a9e-83b2-4f3e-b949-cfb18ff90cb0",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5bf4c5f2-9aa2-4790-a1b9-eaeffc1a6956"
        },
        "item": {
          "id": "2bda3c8d-8cf1-4922-9e54-d0d8d1aeb3df",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a71f9e85-9ee0-4de8-bfab-cae862ce56c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beeacbee-cd6f-469f-9c32-3d198f108ec8",
        "cursor": {
          "ref": "43cae763-fab9-4449-99d7-21764c5a168f",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "881f9902-d15f-420c-b19e-07c5f795eb0b"
        },
        "item": {
          "id": "beeacbee-cd6f-469f-9c32-3d198f108ec8",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1d790743-b2c2-4024-be47-ae214f6b3b9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "832d989d-ce71-4a97-806c-508b1ea8d10f",
        "cursor": {
          "ref": "f72b2903-902e-4853-9784-126b43611a92",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "15e5f570-d30e-482d-9c41-82023cb7b54e"
        },
        "item": {
          "id": "832d989d-ce71-4a97-806c-508b1ea8d10f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f4f6571f-5ab8-4c85-b0c0-d7971abf258e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aaa08ae-4f14-4aea-9245-828ba1f24523",
        "cursor": {
          "ref": "6cc27c86-e94a-4032-bfbd-4ddf54f5ee7c",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "94c8356a-3f7b-4ca7-9c50-d54697c70071"
        },
        "item": {
          "id": "1aaa08ae-4f14-4aea-9245-828ba1f24523",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6b95b772-f4d8-4bdc-b699-290a98aba1ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d844ad-8c6d-421a-8a1b-a06e52bfb417",
        "cursor": {
          "ref": "4c8ed7bb-8957-4b1f-b8cf-4c790ff7594a",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "9f7400b3-d25f-4882-b4d6-fac058466530"
        },
        "item": {
          "id": "c0d844ad-8c6d-421a-8a1b-a06e52bfb417",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c8600cdb-8507-4cf7-bbed-bfc836e1b088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb49e8fe-26c2-49e8-9d46-7932b031751a",
        "cursor": {
          "ref": "c30789ce-724b-4142-9a0c-d3b3cab408b0",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "894383c5-7fd1-4926-945f-6f6fd1193d32"
        },
        "item": {
          "id": "fb49e8fe-26c2-49e8-9d46-7932b031751a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7e2bd80d-71da-4c59-9cf2-4ac016b57746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "056c2ce4-101f-4c2f-9f93-2f28e4f951e6",
        "cursor": {
          "ref": "32922674-3146-45e3-9588-15763442ee4d",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9d17f196-975b-4f91-8578-ff32a39f6bdb"
        },
        "item": {
          "id": "056c2ce4-101f-4c2f-9f93-2f28e4f951e6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "10ffb456-d0ba-46a2-bf90-a16d2a7d29f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db4a62d-322e-4448-baf8-eebfefc6ea85",
        "cursor": {
          "ref": "509f424b-a0c6-41ab-b890-8c48a6948e1f",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "00a6bc23-dc59-48cd-ac1f-a7ab4447286f"
        },
        "item": {
          "id": "0db4a62d-322e-4448-baf8-eebfefc6ea85",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "dc472851-691e-465a-99ce-59968a85830e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72788afe-7036-4ef9-9ad9-c861b7cd5826",
        "cursor": {
          "ref": "66f75fc6-45b3-460c-a66e-cfb2de3c9138",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8746c7a1-90c2-45a4-8572-e88b7f959cfa"
        },
        "item": {
          "id": "72788afe-7036-4ef9-9ad9-c861b7cd5826",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "df3c22e5-2145-4c46-a08a-2848a58fa3b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a43c375-4111-4f5c-9c09-8dd6944e9016",
        "cursor": {
          "ref": "b19fd9e9-e61a-45b3-b004-5ebce74b956e",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "5b34bd3d-f08a-4386-8368-32f59ffdf349"
        },
        "item": {
          "id": "6a43c375-4111-4f5c-9c09-8dd6944e9016",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "cfe53c0a-681c-4371-84be-fc2a8cb889c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e3b66d8-f954-4933-b0da-2d7577fb8eba",
        "cursor": {
          "ref": "6e9c6536-8532-4571-b9ab-dbef96991638",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "152cda97-1505-463b-8937-736669a14fec"
        },
        "item": {
          "id": "7e3b66d8-f954-4933-b0da-2d7577fb8eba",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5bc1660b-eca3-4932-8909-26137f97b13b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef80764-5149-4b76-b4a8-4a541059866e",
        "cursor": {
          "ref": "8d431afe-4882-4983-b29a-6ea2d7f5b6fe",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "fa21d48c-e8be-4bf0-bb42-6c56732ceaf0"
        },
        "item": {
          "id": "eef80764-5149-4b76-b4a8-4a541059866e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1509f093-8e3c-4fc7-b1f9-a21d4efabf0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "273fffe2-2bbb-4c0d-bc05-f9faab34cd68",
        "cursor": {
          "ref": "07efa7a3-7447-41d0-afc1-f8f4fd0dc87e",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0e3848db-c186-4c12-a188-eb60fe9d5042"
        },
        "item": {
          "id": "273fffe2-2bbb-4c0d-bc05-f9faab34cd68",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "609c2b94-ac55-4b84-8f50-bbbe7e460c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90423ea0-e3b2-4ca6-8059-d29ccf3db57b",
        "cursor": {
          "ref": "f04046a3-917f-4d66-8084-de76c5a3e63b",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "8301ebbb-d27f-44cc-abdf-13ebc4178976"
        },
        "item": {
          "id": "90423ea0-e3b2-4ca6-8059-d29ccf3db57b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a848497a-fef6-4ed1-85b3-35ba17b34b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe5bd641-f722-42b4-ae8c-de532c58cc20",
        "cursor": {
          "ref": "f01ee856-3c9e-4739-93c6-3012e11411d6",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "a4abcb3f-ed93-4f56-8864-d3dc3c89e9ab"
        },
        "item": {
          "id": "fe5bd641-f722-42b4-ae8c-de532c58cc20",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "88f540b9-81ba-4d78-8fb6-4b774b6095b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "862cd34a-11c9-403f-8534-d9f0b4ecde77",
        "cursor": {
          "ref": "7af1af3a-fbbe-477c-9176-6973a59cd7a9",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "215899bc-c252-448e-bfbb-17d755efa6fd"
        },
        "item": {
          "id": "862cd34a-11c9-403f-8534-d9f0b4ecde77",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c4de6db4-b014-4674-a614-eccc86dd6f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a148c063-0d6f-4f1b-a530-941891c8ef70",
        "cursor": {
          "ref": "d9bc4bcb-9715-4e63-bc15-5b1a0f9dd640",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b6be65b3-0f40-46bb-a36b-c88f8845b9cc"
        },
        "item": {
          "id": "a148c063-0d6f-4f1b-a530-941891c8ef70",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2a9aee6d-16c7-40f2-a196-ef4a6ca9d764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "609ed905-ec12-465c-915e-ae119eff168e",
        "cursor": {
          "ref": "8e1df59c-f249-4192-a114-3d6308ca9061",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2661a03b-65e6-46c4-abc1-441d409267cd"
        },
        "item": {
          "id": "609ed905-ec12-465c-915e-ae119eff168e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a688f7c0-b29a-4271-b459-79ef2baeeccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f69a16-9423-4681-b2d5-62159f08fc76",
        "cursor": {
          "ref": "2f5081aa-8828-4116-a380-f7bf3aa46823",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "478a5e5e-0668-4203-83ad-d34db8449d63"
        },
        "item": {
          "id": "80f69a16-9423-4681-b2d5-62159f08fc76",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1782c9ef-0fea-4ad9-944b-3a737dda4ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "352dffd3-7407-4353-b957-3edad97261e1",
        "cursor": {
          "ref": "e458ab31-749d-41a3-b84a-75e68277102c",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "36bf7522-0b12-4f79-84e5-96806dfe06ca"
        },
        "item": {
          "id": "352dffd3-7407-4353-b957-3edad97261e1",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "08ea8049-2871-4623-a628-ea419ed3256b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ccc342c-4237-4d18-96d7-5db1609fdc59",
        "cursor": {
          "ref": "3da28a5b-fb73-4e48-a5b3-f8bdbec12cd1",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "be37722d-a3ca-41e8-9bf3-a17f9bb41941"
        },
        "item": {
          "id": "1ccc342c-4237-4d18-96d7-5db1609fdc59",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c9ff8b3e-0604-4caa-afa6-e0abfadd4ae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe65ff7c-58b0-4426-830c-87d9ab24626a",
        "cursor": {
          "ref": "7c88a758-aecc-40b2-a433-20ae042c5236",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2a0d42a2-d586-44d2-8abd-dd6c58c2b714"
        },
        "item": {
          "id": "fe65ff7c-58b0-4426-830c-87d9ab24626a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "aa71d17d-32e3-4958-b027-9230c9e4abc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ce5f0b-857b-447e-8476-bddd02580602",
        "cursor": {
          "ref": "cc97ccab-13e0-42a0-b445-c56bec11615d",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "9374ad4a-1fa4-4292-9867-61119576d52a"
        },
        "item": {
          "id": "f8ce5f0b-857b-447e-8476-bddd02580602",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "84502ab1-09cf-4e86-a4b6-64d22582daa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88582cc2-7355-4ef0-9a59-15488ce740b0",
        "cursor": {
          "ref": "107a8df0-c87a-4eec-bb8a-17a66748047a",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "42adca2b-5c8f-4d98-b6ff-78cb7bec4696"
        },
        "item": {
          "id": "88582cc2-7355-4ef0-9a59-15488ce740b0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "97a49ff7-d57e-45f5-b94b-4a699b2b64ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38aaa3c1-1567-49bd-ab85-9cb5c09fa70c",
        "cursor": {
          "ref": "0a5315aa-3643-4da7-8860-fddc61554bb0",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "dbdac72a-314a-416d-9e72-8e8d8e9f9232"
        },
        "item": {
          "id": "38aaa3c1-1567-49bd-ab85-9cb5c09fa70c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2e673e2d-7787-4f95-9c67-912c6ee143cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb78ce1-11b0-4dff-bc55-92e28e56f35f",
        "cursor": {
          "ref": "88d6d90b-9c16-45e0-890a-7464439d7b1a",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "db1c81a5-4d94-4808-8baf-9d64757ee19c"
        },
        "item": {
          "id": "9bb78ce1-11b0-4dff-bc55-92e28e56f35f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "cc9304d7-2190-4464-a822-9dea067bf741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d3b2158-d81b-4534-8d3c-7cbb23963f8e",
        "cursor": {
          "ref": "1a5ae813-f086-491b-a687-015c2a32ff81",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "2432f2fd-4b5c-40e0-9acc-b7e0bb99c8fa"
        },
        "item": {
          "id": "8d3b2158-d81b-4534-8d3c-7cbb23963f8e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f38489c3-ac1b-4105-922e-6bdf3d75d203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b565ae5-f81a-4226-92d6-72b139c2dc6c",
        "cursor": {
          "ref": "55858798-cbd3-4e3a-a2ba-306038dd80b4",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "fd14023e-7ec6-4bc5-ad54-29e7a24a6e2b"
        },
        "item": {
          "id": "6b565ae5-f81a-4226-92d6-72b139c2dc6c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c622f698-0ef4-4afe-8835-bdcce7bf0b6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e657df0-6387-4d13-b4dd-6d2ad6ebbcdb",
        "cursor": {
          "ref": "011c514b-d096-4e6c-9dfd-28190cb824aa",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "9d31ea95-a8be-4372-b6c2-e3cc5ec5a4ee"
        },
        "item": {
          "id": "9e657df0-6387-4d13-b4dd-6d2ad6ebbcdb",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "621bd788-6243-49a1-a5c1-623497f69caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa7f8506-9a86-4892-91f3-54b40c41337a",
        "cursor": {
          "ref": "19995f7f-0b93-4728-9f55-6a1197e534a4",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "8995cdf1-3324-45ac-a3dc-23b850784058"
        },
        "item": {
          "id": "aa7f8506-9a86-4892-91f3-54b40c41337a",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "f3b6641b-153d-46d4-8029-741e56d0a292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b0b17a-370a-4ce2-b5c2-7c028477c008",
        "cursor": {
          "ref": "a70e9476-ee3d-434f-87bb-043f3ec419e1",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "5759fc1e-f35b-4ccf-94fd-54d4c6576657"
        },
        "item": {
          "id": "52b0b17a-370a-4ce2-b5c2-7c028477c008",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f8df463a-6c8e-4919-83bf-63b39c8eb2b2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f568e1-8d22-4215-887f-2dacef9ad2e7",
        "cursor": {
          "ref": "f97c2f05-7fbe-4d68-b0b2-a1618c955319",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "7c963567-3738-46c2-ab78-17e32f0fc701"
        },
        "item": {
          "id": "d0f568e1-8d22-4215-887f-2dacef9ad2e7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b5b4697d-b2f2-4e07-96a5-156f863a1ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8671aa88-a630-4b37-806c-8a811dbf1595",
        "cursor": {
          "ref": "dff6b459-21fb-444b-be52-f782722b0bb5",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "724a0db3-3483-4e6d-9cc3-48ed85d372c4"
        },
        "item": {
          "id": "8671aa88-a630-4b37-806c-8a811dbf1595",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "352ae839-7ff6-407c-beea-503718b01548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d34f052-2a5f-443d-a949-9a1e83225bdc",
        "cursor": {
          "ref": "a00161fc-6aa7-4559-8148-3884718251a8",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "024a97ad-5a68-44a1-bfe6-9e0d136f1479"
        },
        "item": {
          "id": "7d34f052-2a5f-443d-a949-9a1e83225bdc",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f92d601f-7fd4-4207-9180-d263dc7b7d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "839d64e7-c433-4bae-a705-6cf0c368f0a0",
        "cursor": {
          "ref": "ad9068a4-8650-45ab-bf11-b9e566e79779",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "33b68f5a-5f3c-4d56-b426-718ed4c51fc3"
        },
        "item": {
          "id": "839d64e7-c433-4bae-a705-6cf0c368f0a0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5499fd1c-94ad-4074-936d-bc1111c24060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20c047f-e217-43c0-998b-e7ffe08ced55",
        "cursor": {
          "ref": "191c4fb2-109c-406f-bb34-35005eaf9ea2",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d7b2502d-169b-47b4-9470-38bba4e40daf"
        },
        "item": {
          "id": "f20c047f-e217-43c0-998b-e7ffe08ced55",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "361e626b-e3a0-4c48-9301-04fbbbc4187e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a58e425b-bd6b-426e-b32b-a27322dd31c6",
        "cursor": {
          "ref": "5b0de884-766f-47d1-bb14-cfc3d3e3f896",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "60a49d9c-448d-4d75-b51b-ac862b80c14c"
        },
        "item": {
          "id": "a58e425b-bd6b-426e-b32b-a27322dd31c6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1acee6b9-db43-4dda-b206-d211500a8f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "980b44c1-073b-41c0-9eef-ff8c50570758",
        "cursor": {
          "ref": "df4f9797-1634-45d5-887c-03235c0bfe12",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "cc6138a4-17e6-426d-bb0d-b699b0263959"
        },
        "item": {
          "id": "980b44c1-073b-41c0-9eef-ff8c50570758",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4f385492-5de3-414a-af43-0cd1c019316a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c0a4d4-fb9a-45bf-b3ce-5c745e05499e",
        "cursor": {
          "ref": "3b57e0e4-9302-4801-b034-e9192a177ad5",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ad2278d7-84a7-466d-b6b5-530ac09085e3"
        },
        "item": {
          "id": "93c0a4d4-fb9a-45bf-b3ce-5c745e05499e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "65e46c75-720a-4493-beaf-43a2bf895e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8374f24c-cd64-4adf-a49f-0bb2062104a3",
        "cursor": {
          "ref": "422b9fce-2b31-4355-b433-0cc2d9570d2c",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "55cb9adc-0c27-42de-b755-075845af4cc3"
        },
        "item": {
          "id": "8374f24c-cd64-4adf-a49f-0bb2062104a3",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "580ac20c-f8e2-4de9-977d-fbdb0f93bf11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5faabd3-a867-4a87-b05c-34736584da4a",
        "cursor": {
          "ref": "5c59c25a-5a07-4ede-b25b-47a799fbaab7",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "24dd14b6-c918-40c6-9bfa-34b410251420"
        },
        "item": {
          "id": "a5faabd3-a867-4a87-b05c-34736584da4a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "515c7978-e5a8-4eb7-afb5-10d9dc5b49c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a7dab4-c5ff-427d-939a-97d50b3ffe71",
        "cursor": {
          "ref": "2df72f2b-74af-471a-862f-01210b251e90",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f76c3e16-783d-41a1-89e7-469bc8727ddc"
        },
        "item": {
          "id": "73a7dab4-c5ff-427d-939a-97d50b3ffe71",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "dce680cd-5a3e-43c8-9606-50412f0b9f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1095c98a-9b7e-4a16-9df4-87bdc51a898f",
        "cursor": {
          "ref": "ee0b9c41-8065-4148-9e02-c654dd94da74",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "4cdea4ab-a9f9-47f6-856c-4a374a3102c4"
        },
        "item": {
          "id": "1095c98a-9b7e-4a16-9df4-87bdc51a898f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3fd5840c-6537-4462-8b85-a6e719bb435e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f6ece5-93a8-4944-9089-eb5a779032df",
        "cursor": {
          "ref": "68cb8880-a5f6-451a-b97c-765a682ac77b",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "2d101163-0b1e-4325-9797-bcc24a8e1364"
        },
        "item": {
          "id": "28f6ece5-93a8-4944-9089-eb5a779032df",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5c96d71a-02c7-418c-b495-30f7ed7b659f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "198e65b0-7f3c-4cf7-b0cd-c99bcd37a7da",
        "cursor": {
          "ref": "cfcecdc7-b1b1-4261-b72f-019070b55c7b",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "0a26ce19-2059-4dad-a9e4-232d9fac5e3b"
        },
        "item": {
          "id": "198e65b0-7f3c-4cf7-b0cd-c99bcd37a7da",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b7bc3c8d-1e73-491c-890c-527d8d07524d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e8ab812-7692-4ffd-bcf7-12a7c06f0e7c",
        "cursor": {
          "ref": "33ad2da7-66e3-46e0-b6f0-bf5b1f943af7",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "9887012d-99d2-4855-b30a-6e83186ec8af"
        },
        "item": {
          "id": "0e8ab812-7692-4ffd-bcf7-12a7c06f0e7c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5042ae55-acea-4aef-916e-4138663df3c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c598fae-d10f-40c2-bbfd-b68a9502e435",
        "cursor": {
          "ref": "80d97f9d-3e28-467b-aa50-156cb1601e1e",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "822f3438-34be-411e-88da-057b8c95586f"
        },
        "item": {
          "id": "7c598fae-d10f-40c2-bbfd-b68a9502e435",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d64f7dfa-b0e5-4822-b74c-b8716b079d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82112e5-50c0-4015-8769-d95ad1358b1e",
        "cursor": {
          "ref": "5ceb47d9-cb2f-40c2-9a13-6d792c5cb8c6",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b25d1aaa-6635-4bd4-9c1e-3365a73da469"
        },
        "item": {
          "id": "a82112e5-50c0-4015-8769-d95ad1358b1e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "937ef1af-8fe8-45fe-b41b-e5819f1ab555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2bb2f79-b8be-4883-a8d8-14f0f185689d",
        "cursor": {
          "ref": "bdf77d82-262f-4c98-8844-882da21d39fd",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8e7ece76-d586-472e-8436-a7601c8611bf"
        },
        "item": {
          "id": "b2bb2f79-b8be-4883-a8d8-14f0f185689d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "831470e0-acc9-4060-989f-9bd89519173f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a964ac-d92c-4a7a-8249-c6112597d7e2",
        "cursor": {
          "ref": "42e0f553-d6e0-420f-8bd9-1a8b9b4f0384",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "5ef7c874-6f62-4887-8059-871d69e4c940"
        },
        "item": {
          "id": "c9a964ac-d92c-4a7a-8249-c6112597d7e2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "838280ba-8df5-4b7a-b9cf-43549ae35ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c1f7b54-690b-4498-93fa-5dc62a78a4de",
        "cursor": {
          "ref": "6038f3e2-d415-4286-9248-6da04a258fec",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c6950173-4770-4fb9-b26c-e2b6f0d44ac1"
        },
        "item": {
          "id": "8c1f7b54-690b-4498-93fa-5dc62a78a4de",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "005492c9-05ef-4034-93f8-5a400f75b004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd8f9e3d-d4b3-454c-80d8-c2dfc0cde5ab",
        "cursor": {
          "ref": "0327d368-e0f9-473e-8c5b-6cb42e5d299d",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2ee4ac54-8723-4280-b042-2b46e096ca03"
        },
        "item": {
          "id": "dd8f9e3d-d4b3-454c-80d8-c2dfc0cde5ab",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "33b0cf6f-9d6d-4245-82ee-082f4af26994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa450aa8-83b0-4ca4-9651-11b83f891feb",
        "cursor": {
          "ref": "c2841568-ab6e-4d58-8afa-d9d94736e207",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "c24bb11a-c87c-49b0-9663-85f4a0b08ace"
        },
        "item": {
          "id": "fa450aa8-83b0-4ca4-9651-11b83f891feb",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6d1d1a0d-af96-4d2c-a539-54bed97a78c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8368dd8-587b-4143-94d2-66a74735c731",
        "cursor": {
          "ref": "c8db835e-6ed2-46b1-a5a6-f7abc2eb3047",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5f34d938-0e2b-49fb-bdb2-b9c4bfa30b83"
        },
        "item": {
          "id": "d8368dd8-587b-4143-94d2-66a74735c731",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "cf479c1d-e8a4-4067-a309-7714730c6f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc8eef5f-1456-4284-a171-1233483c23e4",
        "cursor": {
          "ref": "f0097a19-3a9a-4eb0-9b45-f471f0ea5359",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c9d9c062-69eb-405b-b8c9-efd19b740f8b"
        },
        "item": {
          "id": "cc8eef5f-1456-4284-a171-1233483c23e4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a63ff540-55f2-4262-920f-4cdcb8fa1062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "634ed7e6-8a38-40bb-b496-761ae4bdc749",
        "cursor": {
          "ref": "7b6feef4-ead0-4216-ab3a-e3fb0b0d41b6",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "8fe087be-21b8-4875-a625-110558045c21"
        },
        "item": {
          "id": "634ed7e6-8a38-40bb-b496-761ae4bdc749",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5c82d091-3c45-4e7d-9dcf-80092db484ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1fc0fd8-2ddc-41f1-99d0-83373565d55c",
        "cursor": {
          "ref": "0529b01a-1ff3-4192-91b5-065e1b25a2ca",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "32ed27ef-6505-4c5e-8372-ad42b926f79d"
        },
        "item": {
          "id": "d1fc0fd8-2ddc-41f1-99d0-83373565d55c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ab6a4f6f-4464-4ef2-bb53-5fbe2ab25390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "013312f1-7557-4bac-8d55-ae57ac79d360",
        "cursor": {
          "ref": "b6d0a140-a59d-4dd8-a058-5b9f25a43b9b",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e3826dec-98d0-4e19-bfe5-c8db1cc18961"
        },
        "item": {
          "id": "013312f1-7557-4bac-8d55-ae57ac79d360",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "999908ed-1244-4e3e-a098-a5da06b7ac13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa486dc4-237f-48cd-b06c-11960be90cac",
        "cursor": {
          "ref": "fc5ce645-66c7-4221-8f76-2d86167da4f7",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f4521607-31f8-43b0-9c69-3eff31840768"
        },
        "item": {
          "id": "fa486dc4-237f-48cd-b06c-11960be90cac",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "bbdf1afa-5e80-48bd-8c92-a5ae129f8606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1a0394-1040-4627-8ff1-75263a2dc146",
        "cursor": {
          "ref": "43a05d0d-f412-4de1-a88c-533dba2c0fe5",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "db62acf0-87cd-4fb1-ba2b-7a05f51760a5"
        },
        "item": {
          "id": "ed1a0394-1040-4627-8ff1-75263a2dc146",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "db4da60f-0d87-4658-9e6a-c1807919dee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dab556b-dd7d-4806-96b3-6d175039ff1d",
        "cursor": {
          "ref": "00e63277-88ec-474b-96ed-e0f56a1c276b",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4d9cee42-4b90-4652-b54b-4903249ff85a"
        },
        "item": {
          "id": "7dab556b-dd7d-4806-96b3-6d175039ff1d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "dcd329a2-5400-4245-8b80-b721bf793ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18300420-32f3-4144-b14b-1e5b669b9100",
        "cursor": {
          "ref": "e5b3bc89-7ac0-4cba-b9b2-eef6be80b0e8",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "bcf7cf56-6b55-44a4-ba1c-66e8671c4a59"
        },
        "item": {
          "id": "18300420-32f3-4144-b14b-1e5b669b9100",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "42cb9b38-c09e-4ddd-96fa-b83731b50c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a70cc348-e4ee-42f1-8a1c-31ab8eb2b1b9",
        "cursor": {
          "ref": "f9cbd931-f2b2-4ffc-a210-d7c20b2a1e34",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "8391fb10-c7e9-43c8-9c9b-80c4bd90fb5f"
        },
        "item": {
          "id": "a70cc348-e4ee-42f1-8a1c-31ab8eb2b1b9",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "4188f297-8f5b-4abd-a841-5be1eab8dcf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a152c41-4a44-418b-a25e-6b06444ce443",
        "cursor": {
          "ref": "0c19673e-2b92-4162-82f2-f1f6a15d4cc8",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "6bb2b152-d35f-4c49-a196-2fa4c17f82c5"
        },
        "item": {
          "id": "2a152c41-4a44-418b-a25e-6b06444ce443",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "76ba43dc-1e1e-4163-9c1c-7858e9ff0eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c05ecdb-fc9a-4c56-bab2-ea328922e1de",
        "cursor": {
          "ref": "c9ba975b-9e09-474e-872d-59da4a6833f5",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "89a862a1-c12f-4f60-bc88-f1b53851d5fd"
        },
        "item": {
          "id": "0c05ecdb-fc9a-4c56-bab2-ea328922e1de",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "9cf822c7-e872-4a71-9465-e37227d7cc08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee3b0c6-d202-4337-8d07-df595aecfd90",
        "cursor": {
          "ref": "4df25c8a-6a81-41eb-974f-52d7f9eccf7c",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d17a8316-7e64-46b2-89a1-c97e344ef181"
        },
        "item": {
          "id": "8ee3b0c6-d202-4337-8d07-df595aecfd90",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "14373af6-3f95-421b-a942-c626dc2fb725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84826862-6d1a-405e-b730-8c7dd4d6c24d",
        "cursor": {
          "ref": "ce9a965f-6e2b-4d01-84bf-27e81236fa62",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "8f4cfb5f-e377-4c12-bdeb-2fe098c42876"
        },
        "item": {
          "id": "84826862-6d1a-405e-b730-8c7dd4d6c24d",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "c63af478-e133-416d-9a00-7ed4781bc0cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb7dfa2-8d07-4c60-85dc-80919caf937d",
        "cursor": {
          "ref": "b7b69bcf-6921-4f11-a1e3-5cb621ae1c3d",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9ae202e1-2b60-4d88-9c17-42a58e0cd3ab"
        },
        "item": {
          "id": "ebb7dfa2-8d07-4c60-85dc-80919caf937d",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "cac5d781-6b23-4ec0-9398-6450dc58734f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9560855f-9bf9-4915-88c1-2f22f82818de",
        "cursor": {
          "ref": "e4337130-cadc-40da-87d0-acc3bc9a91e9",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "0d8d12ec-a31f-4262-ad06-73771b00244c"
        },
        "item": {
          "id": "9560855f-9bf9-4915-88c1-2f22f82818de",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6aa7d84b-1822-49c2-b0c7-b1d695802f7e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be34c800-a98e-4e0b-827a-70c1dfd7b3b7",
        "cursor": {
          "ref": "b1ed1e23-1c75-4d63-9d97-7d4c493108f3",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "c23053bc-857e-45dc-95fb-8443766e7c35"
        },
        "item": {
          "id": "be34c800-a98e-4e0b-827a-70c1dfd7b3b7",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f4fe8a27-6dd2-471b-b9a0-65543fe19c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d4401e-8ee0-4dae-9194-63c021e1738f",
        "cursor": {
          "ref": "fab8cf30-5aff-4a8d-889f-fae2c57d2542",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "5b2da3f6-b191-4f81-ae0f-65462bb055b8"
        },
        "item": {
          "id": "a2d4401e-8ee0-4dae-9194-63c021e1738f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "72d04fb5-ed1c-4a5d-9b1b-2677585df2df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc8f6c51-8e80-4a40-96b9-4540e7f31c65",
        "cursor": {
          "ref": "239e5d12-b7db-401e-921c-006bf271a85f",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b7651445-c5f8-4ec3-ae83-ed825916cff4"
        },
        "item": {
          "id": "fc8f6c51-8e80-4a40-96b9-4540e7f31c65",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3753a8f5-8af7-44fe-bdeb-850e265da40d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e12eb0-fafa-4044-82d4-30245d376958",
        "cursor": {
          "ref": "5dde838e-bbf9-4938-97fc-74a824a1e80c",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "2829931a-162b-428d-9b0e-53f5844cd5e7"
        },
        "item": {
          "id": "b3e12eb0-fafa-4044-82d4-30245d376958",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b287bdef-acdc-4ba4-9d8e-cae385a0b840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "011b2519-da3f-4e8e-866d-9eea5a7840a6",
        "cursor": {
          "ref": "b82aa33b-acd6-41fd-8bce-8053b16fb001",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "02a1f6cb-5c2e-44bd-9e42-4c1cf226762d"
        },
        "item": {
          "id": "011b2519-da3f-4e8e-866d-9eea5a7840a6",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "fbf6277f-3c6d-4a8a-ac45-13bc9483962d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bea9466-766d-490d-b113-e2cd732bb463",
        "cursor": {
          "ref": "1cb35e5f-c5dd-4935-867d-7bc8fc010cc4",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "276c61e5-c559-468c-bf48-e8c14487d745"
        },
        "item": {
          "id": "5bea9466-766d-490d-b113-e2cd732bb463",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "76444d02-9f0a-4942-a91f-c0c8d0cda971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d3d28b3-eca2-4c8c-a97b-397f0113529e",
        "cursor": {
          "ref": "fa88f5ed-c5a0-49a0-a189-18ee891994fd",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "a86b177c-b6b5-408a-a869-94c7f7641cae"
        },
        "item": {
          "id": "0d3d28b3-eca2-4c8c-a97b-397f0113529e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ad784386-2286-449a-9f02-4ea91d193e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41e84c47-047e-4288-ab41-257fe8c03704",
        "cursor": {
          "ref": "698edca2-f4a7-40ca-b04d-0cb472151406",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c087c83e-49a5-4e8e-bdbb-d083379422ab"
        },
        "item": {
          "id": "41e84c47-047e-4288-ab41-257fe8c03704",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "4e9a565d-d4c9-45aa-802b-3b540fa29a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7bebb31-1fd1-4010-9ea4-9cb8a7a40635",
        "cursor": {
          "ref": "c7451278-b192-484e-901c-4c039ce24fa4",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f726fe07-ba35-4625-a433-f95885e87227"
        },
        "item": {
          "id": "e7bebb31-1fd1-4010-9ea4-9cb8a7a40635",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "01255c1b-5785-4ccc-b9e5-f12ace3f4a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df473dca-a585-4f67-b317-4d91cb5a9247",
        "cursor": {
          "ref": "db7da308-8d6c-4513-8d11-293789f629fc",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "18581124-27ed-4c34-b012-db642c21bb78"
        },
        "item": {
          "id": "df473dca-a585-4f67-b317-4d91cb5a9247",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "9417039c-f40d-4df2-ae29-077af46e0475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05163dd1-7bb1-462f-b4dd-7c2fe72c4fcf",
        "cursor": {
          "ref": "a3f14573-6e78-4825-9e62-d1ad0a2276b8",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "22dd1de6-43f4-4eeb-b5d3-251181e03c11"
        },
        "item": {
          "id": "05163dd1-7bb1-462f-b4dd-7c2fe72c4fcf",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d1e7847f-3f89-414b-9bc6-d77ae401e98e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9877bc0-a0e0-43c0-96bd-888ac55f4717",
        "cursor": {
          "ref": "8188d6a1-d733-42c5-ac78-d933fdb22d89",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c6956a41-151e-4a61-8368-cd78c9648c0b"
        },
        "item": {
          "id": "d9877bc0-a0e0-43c0-96bd-888ac55f4717",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ec0e5a4c-424e-4f70-8877-a8e7eb4083ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f02d7a93-5c5e-4806-a156-98760254d180",
        "cursor": {
          "ref": "b2b5fbed-f91f-48ec-b137-744899b19a35",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c2aa3bcd-47a0-4d66-9037-c4c8a30dbfb4"
        },
        "item": {
          "id": "f02d7a93-5c5e-4806-a156-98760254d180",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6b299d32-5990-4e6b-8370-3732ab38281a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc23ed53-93b2-4ccb-be15-c49387f1ca0e",
        "cursor": {
          "ref": "242480e4-aed1-4d2b-be6c-cae8bf82374f",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "5f5b0ae0-8b35-4a6c-87d6-7466846028fe"
        },
        "item": {
          "id": "dc23ed53-93b2-4ccb-be15-c49387f1ca0e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "87224432-8fad-4c30-a654-ead385ef4146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "864305ad-dd52-4d17-8b91-28e91a24f8f4",
        "cursor": {
          "ref": "9300a12c-3d1c-41ad-8a9f-96ce06d27a8e",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "57f2a498-9af2-4b07-9472-36a498c3f62e"
        },
        "item": {
          "id": "864305ad-dd52-4d17-8b91-28e91a24f8f4",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "cfa8d52f-c44b-470b-8334-98c3239e6a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba00d88-d1a4-49e3-997b-2f8bf77f9db2",
        "cursor": {
          "ref": "468db7e8-2fba-440c-a3b3-61ba026d86f9",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "66217311-3dd7-4537-8d80-ec8d9c8d1c42"
        },
        "item": {
          "id": "2ba00d88-d1a4-49e3-997b-2f8bf77f9db2",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f0a2e557-28e5-4ad4-a45c-a8e08607d67e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d80e894-9daf-4c47-be74-e16b04edf4ce",
        "cursor": {
          "ref": "38740fbb-49f9-46b2-ba28-cab7f4b8ca90",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e0f65344-2700-4a23-bcf9-ab51597a5084"
        },
        "item": {
          "id": "9d80e894-9daf-4c47-be74-e16b04edf4ce",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "90ce3a64-a5d2-48c2-bd52-db2f72da4f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62a5a04b-165a-41a4-b4a6-92ee49b02096",
        "cursor": {
          "ref": "c1c1f81d-fa77-41f1-a7f7-a9df55f6f9ec",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "66d5979e-96c0-4472-adad-88a91a4ae7ca"
        },
        "item": {
          "id": "62a5a04b-165a-41a4-b4a6-92ee49b02096",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b076d053-d4c0-4851-b258-49bf3e4b60b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a409ec7f-ec7d-4495-978f-44e70b3dea21",
        "cursor": {
          "ref": "76d8edcc-8b61-41fb-b7a7-92b6af7535e5",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "e23b3338-46d8-42d9-b95f-1e4d230f4acd"
        },
        "item": {
          "id": "a409ec7f-ec7d-4495-978f-44e70b3dea21",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d6c11ea3-c3a7-468d-8763-7484ce0a8f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a7fb5d4-1888-4ecd-89bd-f79ec01a9726",
        "cursor": {
          "ref": "e777da85-7fed-4bd3-a997-4712dd84ed5b",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e87286d4-4851-49e3-9542-01dec3652c9e"
        },
        "item": {
          "id": "2a7fb5d4-1888-4ecd-89bd-f79ec01a9726",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "1f702393-c3cf-4fc5-b064-952ac8269c9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d63eebd-984f-49ce-88f8-1f22e694f1ef",
        "cursor": {
          "ref": "68b4c420-bd17-4fc2-9139-e47454b764ab",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "baf4919c-93a2-4df6-8b98-8757e22d53ac"
        },
        "item": {
          "id": "4d63eebd-984f-49ce-88f8-1f22e694f1ef",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "bda2704d-1c11-48fa-8378-f1fafc75d05c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049cfe1e-7bb6-4121-a7cf-cdb46d36a79d",
        "cursor": {
          "ref": "8e7861cf-b67d-45bd-80f0-48425b4d2b03",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a77457f2-0f11-4b1c-887b-c32777b3f7d8"
        },
        "item": {
          "id": "049cfe1e-7bb6-4121-a7cf-cdb46d36a79d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "76e4ce41-99e9-46a8-a71e-aa3f7d30b5f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87edec56-eafa-4b13-971f-a072574cd863",
        "cursor": {
          "ref": "d2e87c98-74d4-449a-a07d-f4e7f0569e6e",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "48ac2ea2-264b-42dc-b0ba-a01683fcd58d"
        },
        "item": {
          "id": "87edec56-eafa-4b13-971f-a072574cd863",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "46be3c28-3ff3-47ce-ba8a-8eb83a9f0a10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f51b6ea2-8da0-4b61-a410-4c957ec3bc5f",
        "cursor": {
          "ref": "6753ff0c-29ac-48fd-9127-690f2ad2263e",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "0ae546d3-ac42-4c52-9f49-194a447a9b32"
        },
        "item": {
          "id": "f51b6ea2-8da0-4b61-a410-4c957ec3bc5f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "eb1e9768-a13e-41a7-8d89-a53e968c1921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "362ddf9b-7ae8-40cb-b23c-bf31a5e100b3",
        "cursor": {
          "ref": "f1270ad0-2ac4-464d-a839-1b6c26968c36",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "0852aabb-9f66-48e7-a0dd-44598e38ab92"
        },
        "item": {
          "id": "362ddf9b-7ae8-40cb-b23c-bf31a5e100b3",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2fce9643-4c8c-40d9-81c0-c3a289077eed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 198,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41bf4967-9085-4dea-85ee-2e46e932a05a",
        "cursor": {
          "ref": "b164b19e-79ef-4258-8b7e-48114c13688d",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c250960b-92d3-41d6-90d5-d872d3dec88e"
        },
        "item": {
          "id": "41bf4967-9085-4dea-85ee-2e46e932a05a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "9a837f0f-af81-4021-ac12-4061622d8c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f571d12-30f4-4133-bb50-35fd76b1d543",
        "cursor": {
          "ref": "3f195266-7c21-4955-af03-98a7b1288a3d",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b2370204-5efa-49b1-b867-95f35f3ca87f"
        },
        "item": {
          "id": "2f571d12-30f4-4133-bb50-35fd76b1d543",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "0ac85961-22d9-46ad-af4a-e5cea4121ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa9fb45-5356-44dc-b9d8-4b0ba46482c6",
        "cursor": {
          "ref": "af1144c5-5e05-4f6a-b506-cafb505585e4",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "8168a1aa-ca51-4d5e-b863-76ee7f1deba0"
        },
        "item": {
          "id": "5fa9fb45-5356-44dc-b9d8-4b0ba46482c6",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "9119a179-5654-4725-91b8-ed72ec8cb5c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567eb616-e10f-4786-9eae-3a45ac4d6d0a",
        "cursor": {
          "ref": "6c0f539c-b400-46ed-a7e4-4462dd8f6244",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0ad66968-5324-44d4-9c48-6d500d0592df"
        },
        "item": {
          "id": "567eb616-e10f-4786-9eae-3a45ac4d6d0a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ab9e70ae-b1a8-47eb-81a9-13951cdc1881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5aa0fd-62d1-4a5c-b034-832911496c62",
        "cursor": {
          "ref": "37b2b6d5-7032-46f7-a5db-95dc6d05f8b8",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f95302f3-2ad3-4870-988e-87ee0fabe997"
        },
        "item": {
          "id": "4e5aa0fd-62d1-4a5c-b034-832911496c62",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9593f470-6b92-4fca-9975-953f7ff1db3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c0cffc-53b0-472b-8722-bd7913dc557f",
        "cursor": {
          "ref": "721a632a-62ae-49c6-b265-ea11637ab3f6",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "6ce63933-0964-4764-b352-45915b7e0fa9"
        },
        "item": {
          "id": "a7c0cffc-53b0-472b-8722-bd7913dc557f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "97ab9e51-7329-44c2-9289-fefc27fb8ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a7a9457-a5c6-417a-8c55-6abce4deec33",
        "cursor": {
          "ref": "b2c45a25-ee10-4ce3-a0d8-5940685ff1e4",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ac4c3831-1310-420a-b825-09e8184d3aa2"
        },
        "item": {
          "id": "3a7a9457-a5c6-417a-8c55-6abce4deec33",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "6df651db-9b78-4a69-b991-d00c2882d9e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a1ca69-9548-42e8-b6db-df905cba2e54",
        "cursor": {
          "ref": "09963f06-f72a-42d9-9d04-99ace52fa6ae",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b00415cd-62d4-4fac-9e35-f9647d465498"
        },
        "item": {
          "id": "c0a1ca69-9548-42e8-b6db-df905cba2e54",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b4840d34-546d-46fb-b6a2-a4c3a0dfeb7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52eed3fb-379c-48b6-b595-7dbf56853bc6",
        "cursor": {
          "ref": "3a18d4d5-2ba7-4a2e-ab7a-21e015e6b8a1",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "576f4fcd-0dfb-4510-bc0d-d2fe7f183669"
        },
        "item": {
          "id": "52eed3fb-379c-48b6-b595-7dbf56853bc6",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "0222e2c6-59f1-406e-bfb9-9707d0084112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12605f9d-1a21-4eef-8ea8-e058df73e3e6",
        "cursor": {
          "ref": "0a360960-2310-4808-ae26-5be962729241",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d30fd77a-c850-4a30-94a6-ec7e8e9cbaf9"
        },
        "item": {
          "id": "12605f9d-1a21-4eef-8ea8-e058df73e3e6",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b1b38f61-8bf4-4cc0-a9ad-a05168def55e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9545d99b-4c87-416e-9a9b-1a7cc56d8560",
        "cursor": {
          "ref": "569fcb59-2640-40be-8362-5febfa299a73",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "1f608280-64d5-445f-b2d6-b43b1045aff2"
        },
        "item": {
          "id": "9545d99b-4c87-416e-9a9b-1a7cc56d8560",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c3998532-d3e2-49b1-940c-6f44caf9a5ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ca3d76-8683-48bd-b00b-d15a387fc953",
        "cursor": {
          "ref": "3e62c422-bbe8-4e4f-b58a-b59cd44ba8d7",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "670546a6-481f-4374-950a-c1f9736692dc"
        },
        "item": {
          "id": "53ca3d76-8683-48bd-b00b-d15a387fc953",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "34c5faf5-9ccf-4587-9507-f3b42405d18a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8573c530-256e-4274-8798-0b50b8657cdc",
        "cursor": {
          "ref": "7d6629b6-95a6-4774-abca-6a486163ab44",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c8f50fdb-7cb9-44e1-983c-4ac8ce815562"
        },
        "item": {
          "id": "8573c530-256e-4274-8798-0b50b8657cdc",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "7bfee600-71b4-443b-a1ab-720b345140a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd797c99-b22c-4230-90d4-06c06603ec26",
        "cursor": {
          "ref": "800a4801-b043-4468-a8fe-f6cc309e825a",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "1817a9be-7e10-494e-ab5c-9942e1d86387"
        },
        "item": {
          "id": "fd797c99-b22c-4230-90d4-06c06603ec26",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "89881990-de10-49b5-b4c2-85042c07a458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a338a85-63a3-4f73-ac94-3404d6655a55",
        "cursor": {
          "ref": "7cc6ab31-529c-481e-821a-c77bbc43ce60",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "fdab9578-c172-4e82-b5b3-f9b870dd9479"
        },
        "item": {
          "id": "5a338a85-63a3-4f73-ac94-3404d6655a55",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "d7b3df2a-e654-4983-bc99-e0e442ef7d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d4a0b7-d5ee-4cbb-9702-ca222e04746d",
        "cursor": {
          "ref": "6d8c493a-56c0-49a0-8698-a59444ce8b9e",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "79654035-c3ae-41a6-9298-e3a174c1a06b"
        },
        "item": {
          "id": "62d4a0b7-d5ee-4cbb-9702-ca222e04746d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "9dbd3ee9-9c2f-4a53-a5e9-7be9ba972fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5ecee5-8a38-4ff3-9ed7-a23343aa6aa4",
        "cursor": {
          "ref": "a57374b7-f27a-48b1-acfe-10626ae58670",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "88b7daff-a6e0-413f-8320-acec661a0817"
        },
        "item": {
          "id": "3f5ecee5-8a38-4ff3-9ed7-a23343aa6aa4",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "56850182-7535-4a49-820c-e96556bd79eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab7abb7-36de-4c39-a62e-8c5d527a6713",
        "cursor": {
          "ref": "4aa9f181-b495-4ce4-ac24-1788867916ab",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "73a7acfa-05b7-439f-a354-f94f0e4ceb70"
        },
        "item": {
          "id": "3ab7abb7-36de-4c39-a62e-8c5d527a6713",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ab51c25e-5272-4a62-afaa-bee68e0b243a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f06ef0-c50a-4460-9129-8e414dfdf944",
        "cursor": {
          "ref": "97603e1d-14bd-4267-a1c3-6d9af1af499e",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b098379e-a304-4b8b-affa-67c6aca03239"
        },
        "item": {
          "id": "f4f06ef0-c50a-4460-9129-8e414dfdf944",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "45fc56a9-f797-4544-9a8f-57d6021f0a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8a7d5f-bbe7-4d0e-bfdb-229ac7f458e2",
        "cursor": {
          "ref": "04ddf54c-577f-446b-9d13-7a409e461388",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "3fedba67-e93c-4db1-a16e-12a42f56f859"
        },
        "item": {
          "id": "af8a7d5f-bbe7-4d0e-bfdb-229ac7f458e2",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "ae665f3e-2172-4676-85d7-1b49fd515f72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0669e039-c770-4205-afee-f6e60632cef7",
        "cursor": {
          "ref": "9dda7e09-fe82-447b-90ed-60ec0a0c3b44",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "26dda846-e89c-4cae-b366-2349b1632e43"
        },
        "item": {
          "id": "0669e039-c770-4205-afee-f6e60632cef7",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "554bb268-304d-431f-9322-717316eb565f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f8dbcbe-1339-48a4-a719-32003f420504",
        "cursor": {
          "ref": "767a0393-416d-4060-8e17-5bcab99d86a8",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "15c386e2-aebf-4456-a03d-3df329a96ddd"
        },
        "item": {
          "id": "8f8dbcbe-1339-48a4-a719-32003f420504",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "bebaf67f-067b-441c-9c84-e0b543da10e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "112604bc-9a50-481f-b911-ed0ec9f6b13f",
        "cursor": {
          "ref": "9b64aff3-2b03-4d92-a6e0-b11903cb4077",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "184f78e9-ec03-4c7a-94f0-94e53152b567"
        },
        "item": {
          "id": "112604bc-9a50-481f-b911-ed0ec9f6b13f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c43aec7f-e662-4c5d-9850-33dedd320ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d426bd-10a5-429e-8662-672fcdb37dc3",
        "cursor": {
          "ref": "3c3557bf-01ff-4418-ada5-4022d6be2064",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "5709cac3-6cf3-4bc2-9b75-50ea50beb9ff"
        },
        "item": {
          "id": "62d426bd-10a5-429e-8662-672fcdb37dc3",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "75f16ded-c8ec-4519-a888-50725ee6011e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "599bf313-4d8e-4bc5-846f-431b5af6bccc",
        "cursor": {
          "ref": "df749889-8cb7-4e10-8833-f3adfb1885b8",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d2620410-f610-4b33-a4cc-a24144bf03c3"
        },
        "item": {
          "id": "599bf313-4d8e-4bc5-846f-431b5af6bccc",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "8aabb992-141a-4f10-ab14-f89e3a59807c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd56b935-5cfa-4f91-a734-864359d7e6f3",
        "cursor": {
          "ref": "77a2d01f-255e-40b2-b596-9281c9955d2f",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "2a19b60a-164e-493a-b23c-2734c7dacbed"
        },
        "item": {
          "id": "fd56b935-5cfa-4f91-a734-864359d7e6f3",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "6154eab9-016b-4628-917a-664520fd0822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32eaced5-4243-4a06-af27-5a8aa8ed1ca5",
        "cursor": {
          "ref": "822e3835-360f-4db1-b1ee-64033683e4b0",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c29a5baa-4870-4286-98a4-2bfc11d3af0a"
        },
        "item": {
          "id": "32eaced5-4243-4a06-af27-5a8aa8ed1ca5",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "901ce68d-a51a-4a1a-bbda-a133c66d0b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90559106-876e-459c-b0cb-b8be4ffc510d",
        "cursor": {
          "ref": "56fcccc8-9e7a-4be3-8af5-76bdd5d6bc53",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "96ef26a4-a0bc-49f3-aedb-8af213407f92"
        },
        "item": {
          "id": "90559106-876e-459c-b0cb-b8be4ffc510d",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d7713c8b-8240-4958-b5b5-a9b2bf391456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e891e2a1-f6d7-434f-92b9-43f1eb39e3b6",
        "cursor": {
          "ref": "0fe132ae-6676-4e7c-9061-d2450064965c",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "8e7a0aa3-f5fe-41f6-9867-cb3d60831ba1"
        },
        "item": {
          "id": "e891e2a1-f6d7-434f-92b9-43f1eb39e3b6",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "9285ca43-4395-496e-9ee8-d531801f3c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3535b2db-1718-4f83-965b-2cfcd7f0b097",
        "cursor": {
          "ref": "2404a1db-7708-46af-bc81-68da69fe18fc",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "175f02c3-dd35-4c39-b3e8-d6af17631fae"
        },
        "item": {
          "id": "3535b2db-1718-4f83-965b-2cfcd7f0b097",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "cf33d6f1-8ab2-4d3b-b110-36d5b168fc57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48bb4ced-f891-4a05-a7ca-c7825ad37d20",
        "cursor": {
          "ref": "664a4254-40e5-4328-92e0-1f2cda315b6f",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "05ea2039-bff0-43e6-a4a5-db1856fa24b0"
        },
        "item": {
          "id": "48bb4ced-f891-4a05-a7ca-c7825ad37d20",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a62c27c4-3e8b-42b9-8a0f-583ab2bfc31a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2059478d-0893-4f79-a856-42cee40f38b1",
        "cursor": {
          "ref": "7ec8f568-f0a8-46a0-94d9-2633d9c7d907",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c3b13d94-367b-4cb2-b205-95d502445b48"
        },
        "item": {
          "id": "2059478d-0893-4f79-a856-42cee40f38b1",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0ca3a5e2-e40a-43c1-9a92-b856a1544fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b66c12-eec8-40d2-b7a4-d67cbbfcbef2",
        "cursor": {
          "ref": "792ba549-6304-44a7-bc2e-6e9c84bc4e35",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "3818f2c5-28eb-4df8-a286-68d681b0360b"
        },
        "item": {
          "id": "c9b66c12-eec8-40d2-b7a4-d67cbbfcbef2",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "53b9a6b5-204d-4bf0-92c0-1fd07a5b2a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33c9a9c-4dc7-45a1-b89b-2a14c0538138",
        "cursor": {
          "ref": "f8e83bf4-29c6-4954-94ef-c5122c696835",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2986e0c9-a8a0-4e3e-a888-ae84508be98f"
        },
        "item": {
          "id": "c33c9a9c-4dc7-45a1-b89b-2a14c0538138",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "2ed39ea0-0aa2-4fb3-819a-b7b030e987c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb39949-531a-4c0e-a6ee-f5c1e392e3af",
        "cursor": {
          "ref": "5c92a6e1-556c-4e91-9e7c-4afa906db1ce",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "743c5805-6272-4bb6-8eea-63c098e017f8"
        },
        "item": {
          "id": "6eb39949-531a-4c0e-a6ee-f5c1e392e3af",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b4872c72-e3b7-420a-92cc-f7895b6b3773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b2e8012-06f6-4d19-bfb0-be5779859c51",
        "cursor": {
          "ref": "d680ddd3-ad59-4102-9e67-52f080f20dd8",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "32127d83-0fd0-446e-bcd1-194c2bbef4e2"
        },
        "item": {
          "id": "9b2e8012-06f6-4d19-bfb0-be5779859c51",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "03b73f40-38b3-4000-bcb3-62ce12a72531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce995f88-06d5-4c47-85ba-70567e738667",
        "cursor": {
          "ref": "dcaa3fcb-d787-4986-a586-c7109d95b107",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "5eb7d424-cf30-4a15-bd04-a6428d2dd8a7"
        },
        "item": {
          "id": "ce995f88-06d5-4c47-85ba-70567e738667",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "66764765-8947-4e28-adfa-a6952fc253ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45abc4cf-bc56-46a2-ba80-12bafa242611",
        "cursor": {
          "ref": "ac6dcbbf-1674-4211-8107-6f67aedf5aff",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "6f189959-3dfd-453b-b647-ed068fc5067c"
        },
        "item": {
          "id": "45abc4cf-bc56-46a2-ba80-12bafa242611",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "db585e6c-77f1-4269-8fed-b2a36812314a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f72fc5a7-3b57-4eb9-ab19-da1eff5e0842",
        "cursor": {
          "ref": "e7797b8e-94c9-4068-869d-9cde970688b4",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "580e8667-c0a9-41cf-9a0f-4d34637305b3"
        },
        "item": {
          "id": "f72fc5a7-3b57-4eb9-ab19-da1eff5e0842",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "219ffcd4-6f45-44a8-bbbd-b1f0ef083af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b18f27-1866-480a-a14a-76bac7112e7b",
        "cursor": {
          "ref": "c0a21773-819d-44f8-baa3-586a6f3b5401",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "555add5a-dc01-452c-8dda-ae3e2feb4255"
        },
        "item": {
          "id": "10b18f27-1866-480a-a14a-76bac7112e7b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "6e763c6c-3f50-4a5b-951e-3d76d367bb59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c92405-8efb-4b0f-b09c-721314104945",
        "cursor": {
          "ref": "0c1eb510-4f5d-41dd-9a87-9af04d034308",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ab31d63d-30d8-4fdd-b4cf-7a1b07f0de3c"
        },
        "item": {
          "id": "19c92405-8efb-4b0f-b09c-721314104945",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ca9eaef7-a990-48ec-8edb-ad506a6a44cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b2cc18d-f1d2-43bd-b784-388eb82602ae",
        "cursor": {
          "ref": "dae9c184-7db9-4e6b-860d-7d1902c0b8f4",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "8a1d3895-2db5-4227-9153-56709597b7c3"
        },
        "item": {
          "id": "4b2cc18d-f1d2-43bd-b784-388eb82602ae",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f82ab342-f459-4913-8aad-9d56779a90a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d5d11a-c41e-4eb3-97cc-7e57489cd1f2",
        "cursor": {
          "ref": "33e45058-8bff-4318-90ad-4d94bf368bc0",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "57e0cdcc-d7a2-45e4-ab32-bf6d9742fa61"
        },
        "item": {
          "id": "73d5d11a-c41e-4eb3-97cc-7e57489cd1f2",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "89ee981c-a5a5-45eb-8ad1-7acd1456d062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a83a0556-a33b-49fb-ba66-e4a757b6d589",
        "cursor": {
          "ref": "ccdca38b-8d90-47f0-bb61-255db9b4616a",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "896c6c20-650e-4732-a086-28243a1bab6d"
        },
        "item": {
          "id": "a83a0556-a33b-49fb-ba66-e4a757b6d589",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1fa466cc-c918-42af-bb44-90b010eaa982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cb1b505-60c1-40f2-a0e5-4fec036d3158",
        "cursor": {
          "ref": "14850cb1-84fc-4aac-a8c4-d2ebc5629c5c",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "823773b7-6caf-422d-b905-0fd644d4ce5f"
        },
        "item": {
          "id": "7cb1b505-60c1-40f2-a0e5-4fec036d3158",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "254b263f-6b10-4601-8e72-4da79c597e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb2a9807-3102-40e8-a227-736070f605d6",
        "cursor": {
          "ref": "64d99d59-bc52-45de-a966-f9d6119de907",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "79ebd638-3e09-41f8-b077-bf6e2d923c89"
        },
        "item": {
          "id": "fb2a9807-3102-40e8-a227-736070f605d6",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e96604eb-84e4-4cf2-8c51-337d5ba0cd29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3963d184-24ad-474c-b201-e23ad3023f25",
        "cursor": {
          "ref": "7d4410f3-75f6-4bbd-86ef-6f46bab78f64",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6fbe37c1-c405-4a15-a3a5-1914dad84ddf"
        },
        "item": {
          "id": "3963d184-24ad-474c-b201-e23ad3023f25",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "00bef508-3f39-4b4d-a2be-4d6c59033274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2946ff-464e-4241-8755-35e976a24920",
        "cursor": {
          "ref": "c6f249a8-45b6-41a2-b70a-f50d22d6f9d9",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "d8bdf757-14de-47d7-a780-40bae3b5a0ab"
        },
        "item": {
          "id": "9c2946ff-464e-4241-8755-35e976a24920",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d93fbcf9-491b-46b8-a8ad-24ca6b7596c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23986740-3a01-450a-a525-92bae07cc651",
        "cursor": {
          "ref": "3dbbb891-faea-4a9b-8a7a-fc2d9f0e2e88",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "fd74dc4b-cca4-485c-8682-c542ace8344d"
        },
        "item": {
          "id": "23986740-3a01-450a-a525-92bae07cc651",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "cc72cc21-0928-438a-9a79-64b07711beb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b96af92-ce3d-4008-adc0-1d95682b9fba",
        "cursor": {
          "ref": "d350e74f-339d-4844-8c34-c2735eaa16e6",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "94d10c62-88d8-40e7-a909-2712cf6766b6"
        },
        "item": {
          "id": "8b96af92-ce3d-4008-adc0-1d95682b9fba",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c88929a9-556c-4c58-a398-cf0308bc1c63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c36eae-b982-4345-b2bc-11d4df510b70",
        "cursor": {
          "ref": "32fe593d-7dcc-467a-bc58-c79badc775b4",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "27408cfc-038c-459c-b571-289bb4c7c48e"
        },
        "item": {
          "id": "28c36eae-b982-4345-b2bc-11d4df510b70",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "13592c8a-ed9b-48fe-87f3-d675339d5bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32cf823e-ec26-42ed-9778-9824531ba480",
        "cursor": {
          "ref": "48f7ff89-5476-4bd5-af30-52e317168dc3",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "028014ac-2158-4f46-8be0-eccb468726e5"
        },
        "item": {
          "id": "32cf823e-ec26-42ed-9778-9824531ba480",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "3b7b69d0-9c8c-409d-9fb2-1eeb3ca1278c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b4c8ba7-2c94-4e3c-a2f1-a950472164fa",
        "cursor": {
          "ref": "a8bdfa26-a513-431e-854d-e7785107070f",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "2c7f3f76-867b-4429-a72b-f631f525a6e4"
        },
        "item": {
          "id": "5b4c8ba7-2c94-4e3c-a2f1-a950472164fa",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "8b22c1d9-0735-4a3b-b4c0-31c45e9b200b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7516ec6d-e5f1-4ecd-ab33-481bc6d68a5b",
        "cursor": {
          "ref": "12b864fc-e93c-4712-b7ff-0e435a49889f",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "a5ab1f4a-1cff-4d65-8caf-890fded263b0"
        },
        "item": {
          "id": "7516ec6d-e5f1-4ecd-ab33-481bc6d68a5b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "903fa51d-d49c-4b19-a5a3-4fccfefa0ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2c233aa-c0ce-481f-81c9-cb5e72db7cb9",
        "cursor": {
          "ref": "46a81186-4249-4047-9746-736a4de60e57",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "c7b9b162-180d-441d-b42a-624df9716daf"
        },
        "item": {
          "id": "f2c233aa-c0ce-481f-81c9-cb5e72db7cb9",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "40f6cf65-0143-47af-bf86-8ff73c275f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0716ceff-fbd5-4f83-b7ed-b5f20b928691",
        "cursor": {
          "ref": "bcc5e5e9-77e0-4351-a512-c05094842215",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "22b64cac-11b3-47a8-ba41-1099a0a7ca3e"
        },
        "item": {
          "id": "0716ceff-fbd5-4f83-b7ed-b5f20b928691",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "dbfeea71-691d-4995-b29e-9fd024b69572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9bd45ad-2175-4bb9-b3b6-21df156fd2a4",
        "cursor": {
          "ref": "cccb0894-6a0d-4f5f-a923-004686cf04d3",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "2f5e8114-0d2a-42ae-b3bd-2aa12533ecb6"
        },
        "item": {
          "id": "a9bd45ad-2175-4bb9-b3b6-21df156fd2a4",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "daf08f86-b3f1-43e0-aa4a-ea0e95536938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25a1107-db3b-4822-9ac4-8491041df972",
        "cursor": {
          "ref": "c82e2e14-7e34-4b03-8bee-00a53a8201af",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "1e887c72-8eae-4a65-a52a-3d1b2d262274"
        },
        "item": {
          "id": "f25a1107-db3b-4822-9ac4-8491041df972",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a6175605-5940-42cb-8d92-b735e15e3790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "402c2f54-cf09-4f66-9839-ef8e1c497946",
        "cursor": {
          "ref": "897bcd6b-4f29-441c-9cba-9baf65a43049",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "0a34b554-b376-4b94-a830-cd919f50b123"
        },
        "item": {
          "id": "402c2f54-cf09-4f66-9839-ef8e1c497946",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "04750e0e-1103-4336-a98d-4a8f2f66dd64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f918574-afd2-43c6-89e4-905d58cff4e3",
        "cursor": {
          "ref": "5039e39e-f9fa-42bf-b807-a0478dad31e6",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "88236548-ec08-4b23-8f97-4b7e59a0c8a2"
        },
        "item": {
          "id": "9f918574-afd2-43c6-89e4-905d58cff4e3",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "79771152-4328-416b-869b-82b45051825c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a7a671a-6b1b-4017-a1f5-5e132ace2f7f",
        "cursor": {
          "ref": "ceed0510-c4ec-41e9-b8c2-fc168af41a16",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "41c03d7b-ed70-4216-8a6c-1ea10f8e8e7d"
        },
        "item": {
          "id": "9a7a671a-6b1b-4017-a1f5-5e132ace2f7f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "834611f4-3c19-40c7-88f3-551099fe8371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d03d7b0-3f4e-4408-a1a1-d8ca65def9f7",
        "cursor": {
          "ref": "a4dbf052-ac14-414a-b96b-9d5fe3b0d87f",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "833595a1-9613-4922-aaf8-2816dea0e827"
        },
        "item": {
          "id": "3d03d7b0-3f4e-4408-a1a1-d8ca65def9f7",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "fea3828f-232d-4e2c-b222-b687b80d0033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b21b6cba-f9a9-441a-98ea-c3a402417524",
        "cursor": {
          "ref": "280adc7a-9b3e-44e2-8e72-ff9a0d0ea622",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "1f2d06ff-fe34-4793-9643-f2856e8a0dff"
        },
        "item": {
          "id": "b21b6cba-f9a9-441a-98ea-c3a402417524",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "10e83aa2-4dcb-4448-9e10-09a0efe4b2af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b302051e-830d-4f27-9154-09d6931d0be0",
        "cursor": {
          "ref": "878a8d26-6beb-4b33-a570-92beb4dcfbd1",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "9502e305-2718-493e-9035-1dd6a5f5f2be"
        },
        "item": {
          "id": "b302051e-830d-4f27-9154-09d6931d0be0",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c6f7056d-f4ac-4d60-94f7-0b4d3d9e8ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a13b728a-8a59-4c08-9a01-3ed0b4052995",
        "cursor": {
          "ref": "bafe7b92-5a91-4b74-96fe-86d21c51081b",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "2aa43822-93b2-4618-8c3e-0abc05263e10"
        },
        "item": {
          "id": "a13b728a-8a59-4c08-9a01-3ed0b4052995",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d4e80b45-befe-4e06-b3bd-8feb3a044534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae340d83-2e61-4825-841b-78761033b661",
        "cursor": {
          "ref": "17e63d0f-38c7-483a-9a44-14f6c21f8c67",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "73b578c1-df4d-4072-80c3-2a3fbe1d90f1"
        },
        "item": {
          "id": "ae340d83-2e61-4825-841b-78761033b661",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "521a3f77-7ba5-4175-888a-7c0a3339c578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19b43ab8-ba96-4e18-85f1-89ecd5e414d7",
        "cursor": {
          "ref": "119c536b-5dfc-4a27-bbb3-bbb1bdc64ee7",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "72f5abc6-e7f6-452e-9e5e-0ebc80f7052f"
        },
        "item": {
          "id": "19b43ab8-ba96-4e18-85f1-89ecd5e414d7",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8c105b38-c53e-4bfb-ab17-6d11e5588645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad41c697-6682-47f8-b6f1-fbfbaea8a809",
        "cursor": {
          "ref": "3572566c-2252-49cd-88ac-1c0693fcf6b6",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "045ef583-ccfa-4f8a-a8fe-20e625da028d"
        },
        "item": {
          "id": "ad41c697-6682-47f8-b6f1-fbfbaea8a809",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "68756639-fe41-43a7-8e20-fe496b150850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48a754b5-a37d-4994-b41a-968aa1eddc4d",
        "cursor": {
          "ref": "04187e58-88c0-443c-ae61-9caa1507ebe5",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "bba1d1d8-ef3d-4b8f-8156-82b529928dd9"
        },
        "item": {
          "id": "48a754b5-a37d-4994-b41a-968aa1eddc4d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "9fde60de-1e0b-495d-9981-06e875fa3c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ceb0072-8340-490b-affa-555e9ac8c3c4",
        "cursor": {
          "ref": "fefc84ec-26df-4f61-ab9e-d4b22baa8d8d",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "164496d9-859d-4443-a36d-698da6810916"
        },
        "item": {
          "id": "6ceb0072-8340-490b-affa-555e9ac8c3c4",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "23c478ac-7860-4be9-a720-c944b41c5671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e316b316-b2c1-43a6-89b4-8eb673ee3e36",
        "cursor": {
          "ref": "7cf44941-6516-4685-a1db-a41a9788454a",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "d75a321a-75d2-4aaa-a001-81b54d991d44"
        },
        "item": {
          "id": "e316b316-b2c1-43a6-89b4-8eb673ee3e36",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "3694b2d5-6e38-4c60-9e7f-69f9c8e170eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5e9b100-d108-44e0-a1f4-216ce5e4bdde",
        "cursor": {
          "ref": "e939bd26-1c0f-42fc-a04a-d47b7a5a0e88",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "8d5811e3-6052-4984-bbe9-edbb1c54761d"
        },
        "item": {
          "id": "f5e9b100-d108-44e0-a1f4-216ce5e4bdde",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4e824d66-8c69-456e-930d-6784f962582c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d31d55-a64b-439a-9038-f798b93eda5d",
        "cursor": {
          "ref": "98af28bd-9fc4-4572-afa6-f8b51356c9cc",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "400e8c03-e5e9-41d6-abab-cae1d2376246"
        },
        "item": {
          "id": "79d31d55-a64b-439a-9038-f798b93eda5d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "29d8ceb1-89c2-4bb0-ad40-6f203249f4c3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae9c60fe-4eee-49c7-8fd7-960de8296a55",
        "cursor": {
          "ref": "2615ed88-d088-4dff-9fb2-07d896640a07",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "ff26abcb-3867-4398-af01-1e0b218e5065"
        },
        "item": {
          "id": "ae9c60fe-4eee-49c7-8fd7-960de8296a55",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "6414dfbf-2340-4b86-927e-e30adff0bb48",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "da104132-495b-45ae-aecf-3595f1fdfae0",
        "cursor": {
          "ref": "0529e33d-0631-4e5c-8a98-b86a38575127",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "6fcb93f4-6957-4847-9f1e-a2da3bb28b82"
        },
        "item": {
          "id": "da104132-495b-45ae-aecf-3595f1fdfae0",
          "name": "credentials_verify"
        },
        "response": {
          "id": "089e2402-0267-450b-adcc-4d2d9bbcf49e",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a311c4-2755-4e48-a42e-1698c0a4b37d",
        "cursor": {
          "ref": "32db220e-c484-4fc3-9ff6-d231dd8190fb",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "41952118-a812-4b44-9728-d889cc3310c6"
        },
        "item": {
          "id": "88a311c4-2755-4e48-a42e-1698c0a4b37d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e599db85-a167-4442-84bc-12cd4a99ebe2",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8310b41-6d0f-4b6c-ab6f-01eaf2f0af93",
        "cursor": {
          "ref": "1e4464ba-c4a0-4604-956b-0a5e4ea2c55f",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "6a3e72d2-dd07-4262-a8dc-2efcb7b4dd85"
        },
        "item": {
          "id": "c8310b41-6d0f-4b6c-ab6f-01eaf2f0af93",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1689181e-44fe-45cd-b6b0-062bac5e1a76",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8310b41-6d0f-4b6c-ab6f-01eaf2f0af93",
        "cursor": {
          "ref": "1e4464ba-c4a0-4604-956b-0a5e4ea2c55f",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "6a3e72d2-dd07-4262-a8dc-2efcb7b4dd85"
        },
        "item": {
          "id": "c8310b41-6d0f-4b6c-ab6f-01eaf2f0af93",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1689181e-44fe-45cd-b6b0-062bac5e1a76",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae5eadc-1099-4b83-ade5-cd0e89f2e1f5",
        "cursor": {
          "ref": "0644263d-91c2-4359-b235-c826d3130463",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "07113ddd-828d-4c94-bc65-d0fe181f247e"
        },
        "item": {
          "id": "8ae5eadc-1099-4b83-ade5-cd0e89f2e1f5",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0727858c-e89d-4adc-97be-e15c6d6dabbe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd8ade5f-3fd4-4643-b9db-e9fc7c0ba3f3",
        "cursor": {
          "ref": "ec252650-dc74-489e-9a7a-1c83c58a89da",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "4745a09d-43a2-437f-bb27-dab2d26229e2"
        },
        "item": {
          "id": "fd8ade5f-3fd4-4643-b9db-e9fc7c0ba3f3",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c7368ae6-803a-413f-8a19-ed27da4a5aba",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}